import fs from 'fs';

const UNDEFINED_CODE_POINTS = new Set([
    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,
    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,
    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,
    1048575, 1114110, 1114111,
]);
const REPLACEMENT_CHARACTER = '\uFFFD';
var CODE_POINTS;
(function (CODE_POINTS) {
    CODE_POINTS[CODE_POINTS["EOF"] = -1] = "EOF";
    CODE_POINTS[CODE_POINTS["NULL"] = 0] = "NULL";
    CODE_POINTS[CODE_POINTS["TABULATION"] = 9] = "TABULATION";
    CODE_POINTS[CODE_POINTS["CARRIAGE_RETURN"] = 13] = "CARRIAGE_RETURN";
    CODE_POINTS[CODE_POINTS["LINE_FEED"] = 10] = "LINE_FEED";
    CODE_POINTS[CODE_POINTS["FORM_FEED"] = 12] = "FORM_FEED";
    CODE_POINTS[CODE_POINTS["SPACE"] = 32] = "SPACE";
    CODE_POINTS[CODE_POINTS["EXCLAMATION_MARK"] = 33] = "EXCLAMATION_MARK";
    CODE_POINTS[CODE_POINTS["QUOTATION_MARK"] = 34] = "QUOTATION_MARK";
    CODE_POINTS[CODE_POINTS["AMPERSAND"] = 38] = "AMPERSAND";
    CODE_POINTS[CODE_POINTS["APOSTROPHE"] = 39] = "APOSTROPHE";
    CODE_POINTS[CODE_POINTS["HYPHEN_MINUS"] = 45] = "HYPHEN_MINUS";
    CODE_POINTS[CODE_POINTS["SOLIDUS"] = 47] = "SOLIDUS";
    CODE_POINTS[CODE_POINTS["DIGIT_0"] = 48] = "DIGIT_0";
    CODE_POINTS[CODE_POINTS["DIGIT_9"] = 57] = "DIGIT_9";
    CODE_POINTS[CODE_POINTS["SEMICOLON"] = 59] = "SEMICOLON";
    CODE_POINTS[CODE_POINTS["LESS_THAN_SIGN"] = 60] = "LESS_THAN_SIGN";
    CODE_POINTS[CODE_POINTS["EQUALS_SIGN"] = 61] = "EQUALS_SIGN";
    CODE_POINTS[CODE_POINTS["GREATER_THAN_SIGN"] = 62] = "GREATER_THAN_SIGN";
    CODE_POINTS[CODE_POINTS["QUESTION_MARK"] = 63] = "QUESTION_MARK";
    CODE_POINTS[CODE_POINTS["LATIN_CAPITAL_A"] = 65] = "LATIN_CAPITAL_A";
    CODE_POINTS[CODE_POINTS["LATIN_CAPITAL_Z"] = 90] = "LATIN_CAPITAL_Z";
    CODE_POINTS[CODE_POINTS["RIGHT_SQUARE_BRACKET"] = 93] = "RIGHT_SQUARE_BRACKET";
    CODE_POINTS[CODE_POINTS["GRAVE_ACCENT"] = 96] = "GRAVE_ACCENT";
    CODE_POINTS[CODE_POINTS["LATIN_SMALL_A"] = 97] = "LATIN_SMALL_A";
    CODE_POINTS[CODE_POINTS["LATIN_SMALL_Z"] = 122] = "LATIN_SMALL_Z";
})(CODE_POINTS || (CODE_POINTS = {}));
const SEQUENCES = {
    DASH_DASH: '--',
    CDATA_START: '[CDATA[',
    DOCTYPE: 'doctype',
    SCRIPT: 'script',
    PUBLIC: 'public',
    SYSTEM: 'system',
};
//Surrogates
function isSurrogate(cp) {
    return cp >= 55296 && cp <= 57343;
}
function isSurrogatePair(cp) {
    return cp >= 56320 && cp <= 57343;
}
function getSurrogatePairCodePoint(cp1, cp2) {
    return (cp1 - 55296) * 1024 + 9216 + cp2;
}
//NOTE: excluding NULL and ASCII whitespace
function isControlCodePoint(cp) {
    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||
        (cp >= 0x7f && cp <= 0x9f));
}
function isUndefinedCodePoint(cp) {
    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);
}

var ERR;
(function (ERR) {
    ERR["controlCharacterInInputStream"] = "control-character-in-input-stream";
    ERR["noncharacterInInputStream"] = "noncharacter-in-input-stream";
    ERR["surrogateInInputStream"] = "surrogate-in-input-stream";
    ERR["nonVoidHtmlElementStartTagWithTrailingSolidus"] = "non-void-html-element-start-tag-with-trailing-solidus";
    ERR["endTagWithAttributes"] = "end-tag-with-attributes";
    ERR["endTagWithTrailingSolidus"] = "end-tag-with-trailing-solidus";
    ERR["unexpectedSolidusInTag"] = "unexpected-solidus-in-tag";
    ERR["unexpectedNullCharacter"] = "unexpected-null-character";
    ERR["unexpectedQuestionMarkInsteadOfTagName"] = "unexpected-question-mark-instead-of-tag-name";
    ERR["invalidFirstCharacterOfTagName"] = "invalid-first-character-of-tag-name";
    ERR["unexpectedEqualsSignBeforeAttributeName"] = "unexpected-equals-sign-before-attribute-name";
    ERR["missingEndTagName"] = "missing-end-tag-name";
    ERR["unexpectedCharacterInAttributeName"] = "unexpected-character-in-attribute-name";
    ERR["unknownNamedCharacterReference"] = "unknown-named-character-reference";
    ERR["missingSemicolonAfterCharacterReference"] = "missing-semicolon-after-character-reference";
    ERR["unexpectedCharacterAfterDoctypeSystemIdentifier"] = "unexpected-character-after-doctype-system-identifier";
    ERR["unexpectedCharacterInUnquotedAttributeValue"] = "unexpected-character-in-unquoted-attribute-value";
    ERR["eofBeforeTagName"] = "eof-before-tag-name";
    ERR["eofInTag"] = "eof-in-tag";
    ERR["missingAttributeValue"] = "missing-attribute-value";
    ERR["missingWhitespaceBetweenAttributes"] = "missing-whitespace-between-attributes";
    ERR["missingWhitespaceAfterDoctypePublicKeyword"] = "missing-whitespace-after-doctype-public-keyword";
    ERR["missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers"] = "missing-whitespace-between-doctype-public-and-system-identifiers";
    ERR["missingWhitespaceAfterDoctypeSystemKeyword"] = "missing-whitespace-after-doctype-system-keyword";
    ERR["missingQuoteBeforeDoctypePublicIdentifier"] = "missing-quote-before-doctype-public-identifier";
    ERR["missingQuoteBeforeDoctypeSystemIdentifier"] = "missing-quote-before-doctype-system-identifier";
    ERR["missingDoctypePublicIdentifier"] = "missing-doctype-public-identifier";
    ERR["missingDoctypeSystemIdentifier"] = "missing-doctype-system-identifier";
    ERR["abruptDoctypePublicIdentifier"] = "abrupt-doctype-public-identifier";
    ERR["abruptDoctypeSystemIdentifier"] = "abrupt-doctype-system-identifier";
    ERR["cdataInHtmlContent"] = "cdata-in-html-content";
    ERR["incorrectlyOpenedComment"] = "incorrectly-opened-comment";
    ERR["eofInScriptHtmlCommentLikeText"] = "eof-in-script-html-comment-like-text";
    ERR["eofInDoctype"] = "eof-in-doctype";
    ERR["nestedComment"] = "nested-comment";
    ERR["abruptClosingOfEmptyComment"] = "abrupt-closing-of-empty-comment";
    ERR["eofInComment"] = "eof-in-comment";
    ERR["incorrectlyClosedComment"] = "incorrectly-closed-comment";
    ERR["eofInCdata"] = "eof-in-cdata";
    ERR["absenceOfDigitsInNumericCharacterReference"] = "absence-of-digits-in-numeric-character-reference";
    ERR["nullCharacterReference"] = "null-character-reference";
    ERR["surrogateCharacterReference"] = "surrogate-character-reference";
    ERR["characterReferenceOutsideUnicodeRange"] = "character-reference-outside-unicode-range";
    ERR["controlCharacterReference"] = "control-character-reference";
    ERR["noncharacterCharacterReference"] = "noncharacter-character-reference";
    ERR["missingWhitespaceBeforeDoctypeName"] = "missing-whitespace-before-doctype-name";
    ERR["missingDoctypeName"] = "missing-doctype-name";
    ERR["invalidCharacterSequenceAfterDoctypeName"] = "invalid-character-sequence-after-doctype-name";
    ERR["duplicateAttribute"] = "duplicate-attribute";
    ERR["nonConformingDoctype"] = "non-conforming-doctype";
    ERR["missingDoctype"] = "missing-doctype";
    ERR["misplacedDoctype"] = "misplaced-doctype";
    ERR["endTagWithoutMatchingOpenElement"] = "end-tag-without-matching-open-element";
    ERR["closingOfElementWithOpenChildElements"] = "closing-of-element-with-open-child-elements";
    ERR["disallowedContentInNoscriptInHead"] = "disallowed-content-in-noscript-in-head";
    ERR["openElementsLeftAfterEof"] = "open-elements-left-after-eof";
    ERR["abandonedHeadElementChild"] = "abandoned-head-element-child";
    ERR["misplacedStartTagForHeadElement"] = "misplaced-start-tag-for-head-element";
    ERR["nestedNoscriptInHead"] = "nested-noscript-in-head";
    ERR["eofInElementThatCanContainOnlyText"] = "eof-in-element-that-can-contain-only-text";
})(ERR || (ERR = {}));

//Const
const DEFAULT_BUFFER_WATERLINE = 1 << 16;
//Preprocessor
//NOTE: HTML input preprocessing
//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)
class Preprocessor {
    constructor(handler) {
        this.handler = handler;
        this.html = '';
        this.pos = -1;
        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0
        this.lastGapPos = -2;
        this.gapStack = [];
        this.skipNextNewLine = false;
        this.lastChunkWritten = false;
        this.endOfChunkHit = false;
        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;
        this.isEol = false;
        this.lineStartPos = 0;
        this.droppedBufferSize = 0;
        this.line = 1;
        //NOTE: avoid reporting errors twice on advance/retreat
        this.lastErrOffset = -1;
    }
    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */
    get col() {
        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);
    }
    get offset() {
        return this.droppedBufferSize + this.pos;
    }
    getError(code, cpOffset) {
        const { line, col, offset } = this;
        const startCol = col + cpOffset;
        const startOffset = offset + cpOffset;
        return {
            code,
            startLine: line,
            endLine: line,
            startCol,
            endCol: startCol,
            startOffset,
            endOffset: startOffset,
        };
    }
    _err(code) {
        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {
            this.lastErrOffset = this.offset;
            this.handler.onParseError(this.getError(code, 0));
        }
    }
    _addGap() {
        this.gapStack.push(this.lastGapPos);
        this.lastGapPos = this.pos;
    }
    _processSurrogate(cp) {
        //NOTE: try to peek a surrogate pair
        if (this.pos !== this.html.length - 1) {
            const nextCp = this.html.charCodeAt(this.pos + 1);
            if (isSurrogatePair(nextCp)) {
                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.
                this.pos++;
                //NOTE: add a gap that should be avoided during retreat
                this._addGap();
                return getSurrogatePairCodePoint(cp, nextCp);
            }
        }
        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.
        else if (!this.lastChunkWritten) {
            this.endOfChunkHit = true;
            return CODE_POINTS.EOF;
        }
        //NOTE: isolated surrogate
        this._err(ERR.surrogateInInputStream);
        return cp;
    }
    willDropParsedChunk() {
        return this.pos > this.bufferWaterline;
    }
    dropParsedChunk() {
        if (this.willDropParsedChunk()) {
            this.html = this.html.substring(this.pos);
            this.lineStartPos -= this.pos;
            this.droppedBufferSize += this.pos;
            this.pos = 0;
            this.lastGapPos = -2;
            this.gapStack.length = 0;
        }
    }
    write(chunk, isLastChunk) {
        if (this.html.length > 0) {
            this.html += chunk;
        }
        else {
            this.html = chunk;
        }
        this.endOfChunkHit = false;
        this.lastChunkWritten = isLastChunk;
    }
    insertHtmlAtCurrentPos(chunk) {
        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);
        this.endOfChunkHit = false;
    }
    startsWith(pattern, caseSensitive) {
        // Check if our buffer has enough characters
        if (this.pos + pattern.length > this.html.length) {
            this.endOfChunkHit = !this.lastChunkWritten;
            return false;
        }
        if (caseSensitive) {
            return this.html.startsWith(pattern, this.pos);
        }
        for (let i = 0; i < pattern.length; i++) {
            const cp = this.html.charCodeAt(this.pos + i) | 0x20;
            if (cp !== pattern.charCodeAt(i)) {
                return false;
            }
        }
        return true;
    }
    peek(offset) {
        const pos = this.pos + offset;
        if (pos >= this.html.length) {
            this.endOfChunkHit = !this.lastChunkWritten;
            return CODE_POINTS.EOF;
        }
        const code = this.html.charCodeAt(pos);
        return code === CODE_POINTS.CARRIAGE_RETURN ? CODE_POINTS.LINE_FEED : code;
    }
    advance() {
        this.pos++;
        //NOTE: LF should be in the last column of the line
        if (this.isEol) {
            this.isEol = false;
            this.line++;
            this.lineStartPos = this.pos;
        }
        if (this.pos >= this.html.length) {
            this.endOfChunkHit = !this.lastChunkWritten;
            return CODE_POINTS.EOF;
        }
        let cp = this.html.charCodeAt(this.pos);
        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters
        if (cp === CODE_POINTS.CARRIAGE_RETURN) {
            this.isEol = true;
            this.skipNextNewLine = true;
            return CODE_POINTS.LINE_FEED;
        }
        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character
        //must be ignored.
        if (cp === CODE_POINTS.LINE_FEED) {
            this.isEol = true;
            if (this.skipNextNewLine) {
                // `line` will be bumped again in the recursive call.
                this.line--;
                this.skipNextNewLine = false;
                this._addGap();
                return this.advance();
            }
        }
        this.skipNextNewLine = false;
        if (isSurrogate(cp)) {
            cp = this._processSurrogate(cp);
        }
        //OPTIMIZATION: first check if code point is in the common allowed
        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)
        //before going into detailed performance cost validation.
        const isCommonValidRange = this.handler.onParseError === null ||
            (cp > 0x1f && cp < 0x7f) ||
            cp === CODE_POINTS.LINE_FEED ||
            cp === CODE_POINTS.CARRIAGE_RETURN ||
            (cp > 0x9f && cp < 64976);
        if (!isCommonValidRange) {
            this._checkForProblematicCharacters(cp);
        }
        return cp;
    }
    _checkForProblematicCharacters(cp) {
        if (isControlCodePoint(cp)) {
            this._err(ERR.controlCharacterInInputStream);
        }
        else if (isUndefinedCodePoint(cp)) {
            this._err(ERR.noncharacterInInputStream);
        }
    }
    retreat(count) {
        this.pos -= count;
        while (this.pos < this.lastGapPos) {
            this.lastGapPos = this.gapStack.pop();
            this.pos--;
        }
        this.isEol = false;
    }
}

var TokenType$2;
(function (TokenType) {
    TokenType[TokenType["CHARACTER"] = 0] = "CHARACTER";
    TokenType[TokenType["NULL_CHARACTER"] = 1] = "NULL_CHARACTER";
    TokenType[TokenType["WHITESPACE_CHARACTER"] = 2] = "WHITESPACE_CHARACTER";
    TokenType[TokenType["START_TAG"] = 3] = "START_TAG";
    TokenType[TokenType["END_TAG"] = 4] = "END_TAG";
    TokenType[TokenType["COMMENT"] = 5] = "COMMENT";
    TokenType[TokenType["DOCTYPE"] = 6] = "DOCTYPE";
    TokenType[TokenType["EOF"] = 7] = "EOF";
    TokenType[TokenType["HIBERNATION"] = 8] = "HIBERNATION";
})(TokenType$2 || (TokenType$2 = {}));
function getTokenAttr(token, attrName) {
    for (let i = token.attrs.length - 1; i >= 0; i--) {
        if (token.attrs[i].name === attrName) {
            return token.attrs[i].value;
        }
    }
    return null;
}

// Generated using scripts/write-decode-map.ts
var htmlDecodeTree = new Uint16Array(
// prettier-ignore
"\u1d41<\xd5\u0131\u028a\u049d\u057b\u05d0\u0675\u06de\u07a2\u07d6\u080f\u0a4a\u0a91\u0da1\u0e6d\u0f09\u0f26\u10ca\u1228\u12e1\u1415\u149d\u14c3\u14df\u1525\0\0\0\0\0\0\u156b\u16cd\u198d\u1c12\u1ddd\u1f7e\u2060\u21b0\u228d\u23c0\u23fb\u2442\u2824\u2912\u2d08\u2e48\u2fce\u3016\u32ba\u3639\u37ac\u38fe\u3a28\u3a71\u3ae0\u3b2e\u0800EMabcfglmnoprstu\\bfms\x7f\x84\x8b\x90\x95\x98\xa6\xb3\xb9\xc8\xcflig\u803b\xc6\u40c6P\u803b&\u4026cute\u803b\xc1\u40c1reve;\u4102\u0100iyx}rc\u803b\xc2\u40c2;\u4410r;\uc000\ud835\udd04rave\u803b\xc0\u40c0pha;\u4391acr;\u4100d;\u6a53\u0100gp\x9d\xa1on;\u4104f;\uc000\ud835\udd38plyFunction;\u6061ing\u803b\xc5\u40c5\u0100cs\xbe\xc3r;\uc000\ud835\udc9cign;\u6254ilde\u803b\xc3\u40c3ml\u803b\xc4\u40c4\u0400aceforsu\xe5\xfb\xfe\u0117\u011c\u0122\u0127\u012a\u0100cr\xea\xf2kslash;\u6216\u0176\xf6\xf8;\u6ae7ed;\u6306y;\u4411\u0180crt\u0105\u010b\u0114ause;\u6235noullis;\u612ca;\u4392r;\uc000\ud835\udd05pf;\uc000\ud835\udd39eve;\u42d8c\xf2\u0113mpeq;\u624e\u0700HOacdefhilorsu\u014d\u0151\u0156\u0180\u019e\u01a2\u01b5\u01b7\u01ba\u01dc\u0215\u0273\u0278\u027ecy;\u4427PY\u803b\xa9\u40a9\u0180cpy\u015d\u0162\u017aute;\u4106\u0100;i\u0167\u0168\u62d2talDifferentialD;\u6145leys;\u612d\u0200aeio\u0189\u018e\u0194\u0198ron;\u410cdil\u803b\xc7\u40c7rc;\u4108nint;\u6230ot;\u410a\u0100dn\u01a7\u01adilla;\u40b8terDot;\u40b7\xf2\u017fi;\u43a7rcle\u0200DMPT\u01c7\u01cb\u01d1\u01d6ot;\u6299inus;\u6296lus;\u6295imes;\u6297o\u0100cs\u01e2\u01f8kwiseContourIntegral;\u6232eCurly\u0100DQ\u0203\u020foubleQuote;\u601duote;\u6019\u0200lnpu\u021e\u0228\u0247\u0255on\u0100;e\u0225\u0226\u6237;\u6a74\u0180git\u022f\u0236\u023aruent;\u6261nt;\u622fourIntegral;\u622e\u0100fr\u024c\u024e;\u6102oduct;\u6210nterClockwiseContourIntegral;\u6233oss;\u6a2fcr;\uc000\ud835\udc9ep\u0100;C\u0284\u0285\u62d3ap;\u624d\u0580DJSZacefios\u02a0\u02ac\u02b0\u02b4\u02b8\u02cb\u02d7\u02e1\u02e6\u0333\u048d\u0100;o\u0179\u02a5trahd;\u6911cy;\u4402cy;\u4405cy;\u440f\u0180grs\u02bf\u02c4\u02c7ger;\u6021r;\u61a1hv;\u6ae4\u0100ay\u02d0\u02d5ron;\u410e;\u4414l\u0100;t\u02dd\u02de\u6207a;\u4394r;\uc000\ud835\udd07\u0100af\u02eb\u0327\u0100cm\u02f0\u0322ritical\u0200ADGT\u0300\u0306\u0316\u031ccute;\u40b4o\u0174\u030b\u030d;\u42d9bleAcute;\u42ddrave;\u4060ilde;\u42dcond;\u62c4ferentialD;\u6146\u0470\u033d\0\0\0\u0342\u0354\0\u0405f;\uc000\ud835\udd3b\u0180;DE\u0348\u0349\u034d\u40a8ot;\u60dcqual;\u6250ble\u0300CDLRUV\u0363\u0372\u0382\u03cf\u03e2\u03f8ontourIntegra\xec\u0239o\u0274\u0379\0\0\u037b\xbb\u0349nArrow;\u61d3\u0100eo\u0387\u03a4ft\u0180ART\u0390\u0396\u03a1rrow;\u61d0ightArrow;\u61d4e\xe5\u02cang\u0100LR\u03ab\u03c4eft\u0100AR\u03b3\u03b9rrow;\u67f8ightArrow;\u67faightArrow;\u67f9ight\u0100AT\u03d8\u03derrow;\u61d2ee;\u62a8p\u0241\u03e9\0\0\u03efrrow;\u61d1ownArrow;\u61d5erticalBar;\u6225n\u0300ABLRTa\u0412\u042a\u0430\u045e\u047f\u037crrow\u0180;BU\u041d\u041e\u0422\u6193ar;\u6913pArrow;\u61f5reve;\u4311eft\u02d2\u043a\0\u0446\0\u0450ightVector;\u6950eeVector;\u695eector\u0100;B\u0459\u045a\u61bdar;\u6956ight\u01d4\u0467\0\u0471eeVector;\u695fector\u0100;B\u047a\u047b\u61c1ar;\u6957ee\u0100;A\u0486\u0487\u62a4rrow;\u61a7\u0100ct\u0492\u0497r;\uc000\ud835\udc9frok;\u4110\u0800NTacdfglmopqstux\u04bd\u04c0\u04c4\u04cb\u04de\u04e2\u04e7\u04ee\u04f5\u0521\u052f\u0536\u0552\u055d\u0560\u0565G;\u414aH\u803b\xd0\u40d0cute\u803b\xc9\u40c9\u0180aiy\u04d2\u04d7\u04dcron;\u411arc\u803b\xca\u40ca;\u442dot;\u4116r;\uc000\ud835\udd08rave\u803b\xc8\u40c8ement;\u6208\u0100ap\u04fa\u04fecr;\u4112ty\u0253\u0506\0\0\u0512mallSquare;\u65fberySmallSquare;\u65ab\u0100gp\u0526\u052aon;\u4118f;\uc000\ud835\udd3csilon;\u4395u\u0100ai\u053c\u0549l\u0100;T\u0542\u0543\u6a75ilde;\u6242librium;\u61cc\u0100ci\u0557\u055ar;\u6130m;\u6a73a;\u4397ml\u803b\xcb\u40cb\u0100ip\u056a\u056fsts;\u6203onentialE;\u6147\u0280cfios\u0585\u0588\u058d\u05b2\u05ccy;\u4424r;\uc000\ud835\udd09lled\u0253\u0597\0\0\u05a3mallSquare;\u65fcerySmallSquare;\u65aa\u0370\u05ba\0\u05bf\0\0\u05c4f;\uc000\ud835\udd3dAll;\u6200riertrf;\u6131c\xf2\u05cb\u0600JTabcdfgorst\u05e8\u05ec\u05ef\u05fa\u0600\u0612\u0616\u061b\u061d\u0623\u066c\u0672cy;\u4403\u803b>\u403emma\u0100;d\u05f7\u05f8\u4393;\u43dcreve;\u411e\u0180eiy\u0607\u060c\u0610dil;\u4122rc;\u411c;\u4413ot;\u4120r;\uc000\ud835\udd0a;\u62d9pf;\uc000\ud835\udd3eeater\u0300EFGLST\u0635\u0644\u064e\u0656\u065b\u0666qual\u0100;L\u063e\u063f\u6265ess;\u62dbullEqual;\u6267reater;\u6aa2ess;\u6277lantEqual;\u6a7eilde;\u6273cr;\uc000\ud835\udca2;\u626b\u0400Aacfiosu\u0685\u068b\u0696\u069b\u069e\u06aa\u06be\u06caRDcy;\u442a\u0100ct\u0690\u0694ek;\u42c7;\u405eirc;\u4124r;\u610clbertSpace;\u610b\u01f0\u06af\0\u06b2f;\u610dizontalLine;\u6500\u0100ct\u06c3\u06c5\xf2\u06a9rok;\u4126mp\u0144\u06d0\u06d8ownHum\xf0\u012fqual;\u624f\u0700EJOacdfgmnostu\u06fa\u06fe\u0703\u0707\u070e\u071a\u071e\u0721\u0728\u0744\u0778\u078b\u078f\u0795cy;\u4415lig;\u4132cy;\u4401cute\u803b\xcd\u40cd\u0100iy\u0713\u0718rc\u803b\xce\u40ce;\u4418ot;\u4130r;\u6111rave\u803b\xcc\u40cc\u0180;ap\u0720\u072f\u073f\u0100cg\u0734\u0737r;\u412ainaryI;\u6148lie\xf3\u03dd\u01f4\u0749\0\u0762\u0100;e\u074d\u074e\u622c\u0100gr\u0753\u0758ral;\u622bsection;\u62c2isible\u0100CT\u076c\u0772omma;\u6063imes;\u6062\u0180gpt\u077f\u0783\u0788on;\u412ef;\uc000\ud835\udd40a;\u4399cr;\u6110ilde;\u4128\u01eb\u079a\0\u079ecy;\u4406l\u803b\xcf\u40cf\u0280cfosu\u07ac\u07b7\u07bc\u07c2\u07d0\u0100iy\u07b1\u07b5rc;\u4134;\u4419r;\uc000\ud835\udd0dpf;\uc000\ud835\udd41\u01e3\u07c7\0\u07ccr;\uc000\ud835\udca5rcy;\u4408kcy;\u4404\u0380HJacfos\u07e4\u07e8\u07ec\u07f1\u07fd\u0802\u0808cy;\u4425cy;\u440cppa;\u439a\u0100ey\u07f6\u07fbdil;\u4136;\u441ar;\uc000\ud835\udd0epf;\uc000\ud835\udd42cr;\uc000\ud835\udca6\u0580JTaceflmost\u0825\u0829\u082c\u0850\u0863\u09b3\u09b8\u09c7\u09cd\u0a37\u0a47cy;\u4409\u803b<\u403c\u0280cmnpr\u0837\u083c\u0841\u0844\u084dute;\u4139bda;\u439bg;\u67ealacetrf;\u6112r;\u619e\u0180aey\u0857\u085c\u0861ron;\u413ddil;\u413b;\u441b\u0100fs\u0868\u0970t\u0500ACDFRTUVar\u087e\u08a9\u08b1\u08e0\u08e6\u08fc\u092f\u095b\u0390\u096a\u0100nr\u0883\u088fgleBracket;\u67e8row\u0180;BR\u0899\u089a\u089e\u6190ar;\u61e4ightArrow;\u61c6eiling;\u6308o\u01f5\u08b7\0\u08c3bleBracket;\u67e6n\u01d4\u08c8\0\u08d2eeVector;\u6961ector\u0100;B\u08db\u08dc\u61c3ar;\u6959loor;\u630aight\u0100AV\u08ef\u08f5rrow;\u6194ector;\u694e\u0100er\u0901\u0917e\u0180;AV\u0909\u090a\u0910\u62a3rrow;\u61a4ector;\u695aiangle\u0180;BE\u0924\u0925\u0929\u62b2ar;\u69cfqual;\u62b4p\u0180DTV\u0937\u0942\u094cownVector;\u6951eeVector;\u6960ector\u0100;B\u0956\u0957\u61bfar;\u6958ector\u0100;B\u0965\u0966\u61bcar;\u6952ight\xe1\u039cs\u0300EFGLST\u097e\u098b\u0995\u099d\u09a2\u09adqualGreater;\u62daullEqual;\u6266reater;\u6276ess;\u6aa1lantEqual;\u6a7dilde;\u6272r;\uc000\ud835\udd0f\u0100;e\u09bd\u09be\u62d8ftarrow;\u61daidot;\u413f\u0180npw\u09d4\u0a16\u0a1bg\u0200LRlr\u09de\u09f7\u0a02\u0a10eft\u0100AR\u09e6\u09ecrrow;\u67f5ightArrow;\u67f7ightArrow;\u67f6eft\u0100ar\u03b3\u0a0aight\xe1\u03bfight\xe1\u03caf;\uc000\ud835\udd43er\u0100LR\u0a22\u0a2ceftArrow;\u6199ightArrow;\u6198\u0180cht\u0a3e\u0a40\u0a42\xf2\u084c;\u61b0rok;\u4141;\u626a\u0400acefiosu\u0a5a\u0a5d\u0a60\u0a77\u0a7c\u0a85\u0a8b\u0a8ep;\u6905y;\u441c\u0100dl\u0a65\u0a6fiumSpace;\u605flintrf;\u6133r;\uc000\ud835\udd10nusPlus;\u6213pf;\uc000\ud835\udd44c\xf2\u0a76;\u439c\u0480Jacefostu\u0aa3\u0aa7\u0aad\u0ac0\u0b14\u0b19\u0d91\u0d97\u0d9ecy;\u440acute;\u4143\u0180aey\u0ab4\u0ab9\u0aberon;\u4147dil;\u4145;\u441d\u0180gsw\u0ac7\u0af0\u0b0eative\u0180MTV\u0ad3\u0adf\u0ae8ediumSpace;\u600bhi\u0100cn\u0ae6\u0ad8\xeb\u0ad9eryThi\xee\u0ad9ted\u0100GL\u0af8\u0b06reaterGreate\xf2\u0673essLes\xf3\u0a48Line;\u400ar;\uc000\ud835\udd11\u0200Bnpt\u0b22\u0b28\u0b37\u0b3areak;\u6060BreakingSpace;\u40a0f;\u6115\u0680;CDEGHLNPRSTV\u0b55\u0b56\u0b6a\u0b7c\u0ba1\u0beb\u0c04\u0c5e\u0c84\u0ca6\u0cd8\u0d61\u0d85\u6aec\u0100ou\u0b5b\u0b64ngruent;\u6262pCap;\u626doubleVerticalBar;\u6226\u0180lqx\u0b83\u0b8a\u0b9bement;\u6209ual\u0100;T\u0b92\u0b93\u6260ilde;\uc000\u2242\u0338ists;\u6204reater\u0380;EFGLST\u0bb6\u0bb7\u0bbd\u0bc9\u0bd3\u0bd8\u0be5\u626fqual;\u6271ullEqual;\uc000\u2267\u0338reater;\uc000\u226b\u0338ess;\u6279lantEqual;\uc000\u2a7e\u0338ilde;\u6275ump\u0144\u0bf2\u0bfdownHump;\uc000\u224e\u0338qual;\uc000\u224f\u0338e\u0100fs\u0c0a\u0c27tTriangle\u0180;BE\u0c1a\u0c1b\u0c21\u62eaar;\uc000\u29cf\u0338qual;\u62ecs\u0300;EGLST\u0c35\u0c36\u0c3c\u0c44\u0c4b\u0c58\u626equal;\u6270reater;\u6278ess;\uc000\u226a\u0338lantEqual;\uc000\u2a7d\u0338ilde;\u6274ested\u0100GL\u0c68\u0c79reaterGreater;\uc000\u2aa2\u0338essLess;\uc000\u2aa1\u0338recedes\u0180;ES\u0c92\u0c93\u0c9b\u6280qual;\uc000\u2aaf\u0338lantEqual;\u62e0\u0100ei\u0cab\u0cb9verseElement;\u620cghtTriangle\u0180;BE\u0ccb\u0ccc\u0cd2\u62ebar;\uc000\u29d0\u0338qual;\u62ed\u0100qu\u0cdd\u0d0cuareSu\u0100bp\u0ce8\u0cf9set\u0100;E\u0cf0\u0cf3\uc000\u228f\u0338qual;\u62e2erset\u0100;E\u0d03\u0d06\uc000\u2290\u0338qual;\u62e3\u0180bcp\u0d13\u0d24\u0d4eset\u0100;E\u0d1b\u0d1e\uc000\u2282\u20d2qual;\u6288ceeds\u0200;EST\u0d32\u0d33\u0d3b\u0d46\u6281qual;\uc000\u2ab0\u0338lantEqual;\u62e1ilde;\uc000\u227f\u0338erset\u0100;E\u0d58\u0d5b\uc000\u2283\u20d2qual;\u6289ilde\u0200;EFT\u0d6e\u0d6f\u0d75\u0d7f\u6241qual;\u6244ullEqual;\u6247ilde;\u6249erticalBar;\u6224cr;\uc000\ud835\udca9ilde\u803b\xd1\u40d1;\u439d\u0700Eacdfgmoprstuv\u0dbd\u0dc2\u0dc9\u0dd5\u0ddb\u0de0\u0de7\u0dfc\u0e02\u0e20\u0e22\u0e32\u0e3f\u0e44lig;\u4152cute\u803b\xd3\u40d3\u0100iy\u0dce\u0dd3rc\u803b\xd4\u40d4;\u441eblac;\u4150r;\uc000\ud835\udd12rave\u803b\xd2\u40d2\u0180aei\u0dee\u0df2\u0df6cr;\u414cga;\u43a9cron;\u439fpf;\uc000\ud835\udd46enCurly\u0100DQ\u0e0e\u0e1aoubleQuote;\u601cuote;\u6018;\u6a54\u0100cl\u0e27\u0e2cr;\uc000\ud835\udcaaash\u803b\xd8\u40d8i\u016c\u0e37\u0e3cde\u803b\xd5\u40d5es;\u6a37ml\u803b\xd6\u40d6er\u0100BP\u0e4b\u0e60\u0100ar\u0e50\u0e53r;\u603eac\u0100ek\u0e5a\u0e5c;\u63deet;\u63b4arenthesis;\u63dc\u0480acfhilors\u0e7f\u0e87\u0e8a\u0e8f\u0e92\u0e94\u0e9d\u0eb0\u0efcrtialD;\u6202y;\u441fr;\uc000\ud835\udd13i;\u43a6;\u43a0usMinus;\u40b1\u0100ip\u0ea2\u0eadncareplan\xe5\u069df;\u6119\u0200;eio\u0eb9\u0eba\u0ee0\u0ee4\u6abbcedes\u0200;EST\u0ec8\u0ec9\u0ecf\u0eda\u627aqual;\u6aaflantEqual;\u627cilde;\u627eme;\u6033\u0100dp\u0ee9\u0eeeuct;\u620fortion\u0100;a\u0225\u0ef9l;\u621d\u0100ci\u0f01\u0f06r;\uc000\ud835\udcab;\u43a8\u0200Ufos\u0f11\u0f16\u0f1b\u0f1fOT\u803b\"\u4022r;\uc000\ud835\udd14pf;\u611acr;\uc000\ud835\udcac\u0600BEacefhiorsu\u0f3e\u0f43\u0f47\u0f60\u0f73\u0fa7\u0faa\u0fad\u1096\u10a9\u10b4\u10bearr;\u6910G\u803b\xae\u40ae\u0180cnr\u0f4e\u0f53\u0f56ute;\u4154g;\u67ebr\u0100;t\u0f5c\u0f5d\u61a0l;\u6916\u0180aey\u0f67\u0f6c\u0f71ron;\u4158dil;\u4156;\u4420\u0100;v\u0f78\u0f79\u611cerse\u0100EU\u0f82\u0f99\u0100lq\u0f87\u0f8eement;\u620builibrium;\u61cbpEquilibrium;\u696fr\xbb\u0f79o;\u43a1ght\u0400ACDFTUVa\u0fc1\u0feb\u0ff3\u1022\u1028\u105b\u1087\u03d8\u0100nr\u0fc6\u0fd2gleBracket;\u67e9row\u0180;BL\u0fdc\u0fdd\u0fe1\u6192ar;\u61e5eftArrow;\u61c4eiling;\u6309o\u01f5\u0ff9\0\u1005bleBracket;\u67e7n\u01d4\u100a\0\u1014eeVector;\u695dector\u0100;B\u101d\u101e\u61c2ar;\u6955loor;\u630b\u0100er\u102d\u1043e\u0180;AV\u1035\u1036\u103c\u62a2rrow;\u61a6ector;\u695biangle\u0180;BE\u1050\u1051\u1055\u62b3ar;\u69d0qual;\u62b5p\u0180DTV\u1063\u106e\u1078ownVector;\u694feeVector;\u695cector\u0100;B\u1082\u1083\u61bear;\u6954ector\u0100;B\u1091\u1092\u61c0ar;\u6953\u0100pu\u109b\u109ef;\u611dndImplies;\u6970ightarrow;\u61db\u0100ch\u10b9\u10bcr;\u611b;\u61b1leDelayed;\u69f4\u0680HOacfhimoqstu\u10e4\u10f1\u10f7\u10fd\u1119\u111e\u1151\u1156\u1161\u1167\u11b5\u11bb\u11bf\u0100Cc\u10e9\u10eeHcy;\u4429y;\u4428FTcy;\u442ccute;\u415a\u0280;aeiy\u1108\u1109\u110e\u1113\u1117\u6abcron;\u4160dil;\u415erc;\u415c;\u4421r;\uc000\ud835\udd16ort\u0200DLRU\u112a\u1134\u113e\u1149ownArrow\xbb\u041eeftArrow\xbb\u089aightArrow\xbb\u0fddpArrow;\u6191gma;\u43a3allCircle;\u6218pf;\uc000\ud835\udd4a\u0272\u116d\0\0\u1170t;\u621aare\u0200;ISU\u117b\u117c\u1189\u11af\u65a1ntersection;\u6293u\u0100bp\u118f\u119eset\u0100;E\u1197\u1198\u628fqual;\u6291erset\u0100;E\u11a8\u11a9\u6290qual;\u6292nion;\u6294cr;\uc000\ud835\udcaear;\u62c6\u0200bcmp\u11c8\u11db\u1209\u120b\u0100;s\u11cd\u11ce\u62d0et\u0100;E\u11cd\u11d5qual;\u6286\u0100ch\u11e0\u1205eeds\u0200;EST\u11ed\u11ee\u11f4\u11ff\u627bqual;\u6ab0lantEqual;\u627dilde;\u627fTh\xe1\u0f8c;\u6211\u0180;es\u1212\u1213\u1223\u62d1rset\u0100;E\u121c\u121d\u6283qual;\u6287et\xbb\u1213\u0580HRSacfhiors\u123e\u1244\u1249\u1255\u125e\u1271\u1276\u129f\u12c2\u12c8\u12d1ORN\u803b\xde\u40deADE;\u6122\u0100Hc\u124e\u1252cy;\u440by;\u4426\u0100bu\u125a\u125c;\u4009;\u43a4\u0180aey\u1265\u126a\u126fron;\u4164dil;\u4162;\u4422r;\uc000\ud835\udd17\u0100ei\u127b\u1289\u01f2\u1280\0\u1287efore;\u6234a;\u4398\u0100cn\u128e\u1298kSpace;\uc000\u205f\u200aSpace;\u6009lde\u0200;EFT\u12ab\u12ac\u12b2\u12bc\u623cqual;\u6243ullEqual;\u6245ilde;\u6248pf;\uc000\ud835\udd4bipleDot;\u60db\u0100ct\u12d6\u12dbr;\uc000\ud835\udcafrok;\u4166\u0ae1\u12f7\u130e\u131a\u1326\0\u132c\u1331\0\0\0\0\0\u1338\u133d\u1377\u1385\0\u13ff\u1404\u140a\u1410\u0100cr\u12fb\u1301ute\u803b\xda\u40dar\u0100;o\u1307\u1308\u619fcir;\u6949r\u01e3\u1313\0\u1316y;\u440eve;\u416c\u0100iy\u131e\u1323rc\u803b\xdb\u40db;\u4423blac;\u4170r;\uc000\ud835\udd18rave\u803b\xd9\u40d9acr;\u416a\u0100di\u1341\u1369er\u0100BP\u1348\u135d\u0100ar\u134d\u1350r;\u405fac\u0100ek\u1357\u1359;\u63dfet;\u63b5arenthesis;\u63ddon\u0100;P\u1370\u1371\u62c3lus;\u628e\u0100gp\u137b\u137fon;\u4172f;\uc000\ud835\udd4c\u0400ADETadps\u1395\u13ae\u13b8\u13c4\u03e8\u13d2\u13d7\u13f3rrow\u0180;BD\u1150\u13a0\u13a4ar;\u6912ownArrow;\u61c5ownArrow;\u6195quilibrium;\u696eee\u0100;A\u13cb\u13cc\u62a5rrow;\u61a5own\xe1\u03f3er\u0100LR\u13de\u13e8eftArrow;\u6196ightArrow;\u6197i\u0100;l\u13f9\u13fa\u43d2on;\u43a5ing;\u416ecr;\uc000\ud835\udcb0ilde;\u4168ml\u803b\xdc\u40dc\u0480Dbcdefosv\u1427\u142c\u1430\u1433\u143e\u1485\u148a\u1490\u1496ash;\u62abar;\u6aeby;\u4412ash\u0100;l\u143b\u143c\u62a9;\u6ae6\u0100er\u1443\u1445;\u62c1\u0180bty\u144c\u1450\u147aar;\u6016\u0100;i\u144f\u1455cal\u0200BLST\u1461\u1465\u146a\u1474ar;\u6223ine;\u407ceparator;\u6758ilde;\u6240ThinSpace;\u600ar;\uc000\ud835\udd19pf;\uc000\ud835\udd4dcr;\uc000\ud835\udcb1dash;\u62aa\u0280cefos\u14a7\u14ac\u14b1\u14b6\u14bcirc;\u4174dge;\u62c0r;\uc000\ud835\udd1apf;\uc000\ud835\udd4ecr;\uc000\ud835\udcb2\u0200fios\u14cb\u14d0\u14d2\u14d8r;\uc000\ud835\udd1b;\u439epf;\uc000\ud835\udd4fcr;\uc000\ud835\udcb3\u0480AIUacfosu\u14f1\u14f5\u14f9\u14fd\u1504\u150f\u1514\u151a\u1520cy;\u442fcy;\u4407cy;\u442ecute\u803b\xdd\u40dd\u0100iy\u1509\u150drc;\u4176;\u442br;\uc000\ud835\udd1cpf;\uc000\ud835\udd50cr;\uc000\ud835\udcb4ml;\u4178\u0400Hacdefos\u1535\u1539\u153f\u154b\u154f\u155d\u1560\u1564cy;\u4416cute;\u4179\u0100ay\u1544\u1549ron;\u417d;\u4417ot;\u417b\u01f2\u1554\0\u155boWidt\xe8\u0ad9a;\u4396r;\u6128pf;\u6124cr;\uc000\ud835\udcb5\u0be1\u1583\u158a\u1590\0\u15b0\u15b6\u15bf\0\0\0\0\u15c6\u15db\u15eb\u165f\u166d\0\u1695\u169b\u16b2\u16b9\0\u16becute\u803b\xe1\u40e1reve;\u4103\u0300;Ediuy\u159c\u159d\u15a1\u15a3\u15a8\u15ad\u623e;\uc000\u223e\u0333;\u623frc\u803b\xe2\u40e2te\u80bb\xb4\u0306;\u4430lig\u803b\xe6\u40e6\u0100;r\xb2\u15ba;\uc000\ud835\udd1erave\u803b\xe0\u40e0\u0100ep\u15ca\u15d6\u0100fp\u15cf\u15d4sym;\u6135\xe8\u15d3ha;\u43b1\u0100ap\u15dfc\u0100cl\u15e4\u15e7r;\u4101g;\u6a3f\u0264\u15f0\0\0\u160a\u0280;adsv\u15fa\u15fb\u15ff\u1601\u1607\u6227nd;\u6a55;\u6a5clope;\u6a58;\u6a5a\u0380;elmrsz\u1618\u1619\u161b\u161e\u163f\u164f\u1659\u6220;\u69a4e\xbb\u1619sd\u0100;a\u1625\u1626\u6221\u0461\u1630\u1632\u1634\u1636\u1638\u163a\u163c\u163e;\u69a8;\u69a9;\u69aa;\u69ab;\u69ac;\u69ad;\u69ae;\u69aft\u0100;v\u1645\u1646\u621fb\u0100;d\u164c\u164d\u62be;\u699d\u0100pt\u1654\u1657h;\u6222\xbb\xb9arr;\u637c\u0100gp\u1663\u1667on;\u4105f;\uc000\ud835\udd52\u0380;Eaeiop\u12c1\u167b\u167d\u1682\u1684\u1687\u168a;\u6a70cir;\u6a6f;\u624ad;\u624bs;\u4027rox\u0100;e\u12c1\u1692\xf1\u1683ing\u803b\xe5\u40e5\u0180cty\u16a1\u16a6\u16a8r;\uc000\ud835\udcb6;\u402amp\u0100;e\u12c1\u16af\xf1\u0288ilde\u803b\xe3\u40e3ml\u803b\xe4\u40e4\u0100ci\u16c2\u16c8onin\xf4\u0272nt;\u6a11\u0800Nabcdefiklnoprsu\u16ed\u16f1\u1730\u173c\u1743\u1748\u1778\u177d\u17e0\u17e6\u1839\u1850\u170d\u193d\u1948\u1970ot;\u6aed\u0100cr\u16f6\u171ek\u0200ceps\u1700\u1705\u170d\u1713ong;\u624cpsilon;\u43f6rime;\u6035im\u0100;e\u171a\u171b\u623dq;\u62cd\u0176\u1722\u1726ee;\u62bded\u0100;g\u172c\u172d\u6305e\xbb\u172drk\u0100;t\u135c\u1737brk;\u63b6\u0100oy\u1701\u1741;\u4431quo;\u601e\u0280cmprt\u1753\u175b\u1761\u1764\u1768aus\u0100;e\u010a\u0109ptyv;\u69b0s\xe9\u170cno\xf5\u0113\u0180ahw\u176f\u1771\u1773;\u43b2;\u6136een;\u626cr;\uc000\ud835\udd1fg\u0380costuvw\u178d\u179d\u17b3\u17c1\u17d5\u17db\u17de\u0180aiu\u1794\u1796\u179a\xf0\u0760rc;\u65efp\xbb\u1371\u0180dpt\u17a4\u17a8\u17adot;\u6a00lus;\u6a01imes;\u6a02\u0271\u17b9\0\0\u17becup;\u6a06ar;\u6605riangle\u0100du\u17cd\u17d2own;\u65bdp;\u65b3plus;\u6a04e\xe5\u1444\xe5\u14adarow;\u690d\u0180ako\u17ed\u1826\u1835\u0100cn\u17f2\u1823k\u0180lst\u17fa\u05ab\u1802ozenge;\u69ebriangle\u0200;dlr\u1812\u1813\u1818\u181d\u65b4own;\u65beeft;\u65c2ight;\u65b8k;\u6423\u01b1\u182b\0\u1833\u01b2\u182f\0\u1831;\u6592;\u65914;\u6593ck;\u6588\u0100eo\u183e\u184d\u0100;q\u1843\u1846\uc000=\u20e5uiv;\uc000\u2261\u20e5t;\u6310\u0200ptwx\u1859\u185e\u1867\u186cf;\uc000\ud835\udd53\u0100;t\u13cb\u1863om\xbb\u13cctie;\u62c8\u0600DHUVbdhmptuv\u1885\u1896\u18aa\u18bb\u18d7\u18db\u18ec\u18ff\u1905\u190a\u1910\u1921\u0200LRlr\u188e\u1890\u1892\u1894;\u6557;\u6554;\u6556;\u6553\u0280;DUdu\u18a1\u18a2\u18a4\u18a6\u18a8\u6550;\u6566;\u6569;\u6564;\u6567\u0200LRlr\u18b3\u18b5\u18b7\u18b9;\u655d;\u655a;\u655c;\u6559\u0380;HLRhlr\u18ca\u18cb\u18cd\u18cf\u18d1\u18d3\u18d5\u6551;\u656c;\u6563;\u6560;\u656b;\u6562;\u655fox;\u69c9\u0200LRlr\u18e4\u18e6\u18e8\u18ea;\u6555;\u6552;\u6510;\u650c\u0280;DUdu\u06bd\u18f7\u18f9\u18fb\u18fd;\u6565;\u6568;\u652c;\u6534inus;\u629flus;\u629eimes;\u62a0\u0200LRlr\u1919\u191b\u191d\u191f;\u655b;\u6558;\u6518;\u6514\u0380;HLRhlr\u1930\u1931\u1933\u1935\u1937\u1939\u193b\u6502;\u656a;\u6561;\u655e;\u653c;\u6524;\u651c\u0100ev\u0123\u1942bar\u803b\xa6\u40a6\u0200ceio\u1951\u1956\u195a\u1960r;\uc000\ud835\udcb7mi;\u604fm\u0100;e\u171a\u171cl\u0180;bh\u1968\u1969\u196b\u405c;\u69c5sub;\u67c8\u016c\u1974\u197el\u0100;e\u1979\u197a\u6022t\xbb\u197ap\u0180;Ee\u012f\u1985\u1987;\u6aae\u0100;q\u06dc\u06db\u0ce1\u19a7\0\u19e8\u1a11\u1a15\u1a32\0\u1a37\u1a50\0\0\u1ab4\0\0\u1ac1\0\0\u1b21\u1b2e\u1b4d\u1b52\0\u1bfd\0\u1c0c\u0180cpr\u19ad\u19b2\u19ddute;\u4107\u0300;abcds\u19bf\u19c0\u19c4\u19ca\u19d5\u19d9\u6229nd;\u6a44rcup;\u6a49\u0100au\u19cf\u19d2p;\u6a4bp;\u6a47ot;\u6a40;\uc000\u2229\ufe00\u0100eo\u19e2\u19e5t;\u6041\xee\u0693\u0200aeiu\u19f0\u19fb\u1a01\u1a05\u01f0\u19f5\0\u19f8s;\u6a4don;\u410ddil\u803b\xe7\u40e7rc;\u4109ps\u0100;s\u1a0c\u1a0d\u6a4cm;\u6a50ot;\u410b\u0180dmn\u1a1b\u1a20\u1a26il\u80bb\xb8\u01adptyv;\u69b2t\u8100\xa2;e\u1a2d\u1a2e\u40a2r\xe4\u01b2r;\uc000\ud835\udd20\u0180cei\u1a3d\u1a40\u1a4dy;\u4447ck\u0100;m\u1a47\u1a48\u6713ark\xbb\u1a48;\u43c7r\u0380;Ecefms\u1a5f\u1a60\u1a62\u1a6b\u1aa4\u1aaa\u1aae\u65cb;\u69c3\u0180;el\u1a69\u1a6a\u1a6d\u42c6q;\u6257e\u0261\u1a74\0\0\u1a88rrow\u0100lr\u1a7c\u1a81eft;\u61baight;\u61bb\u0280RSacd\u1a92\u1a94\u1a96\u1a9a\u1a9f\xbb\u0f47;\u64c8st;\u629birc;\u629aash;\u629dnint;\u6a10id;\u6aefcir;\u69c2ubs\u0100;u\u1abb\u1abc\u6663it\xbb\u1abc\u02ec\u1ac7\u1ad4\u1afa\0\u1b0aon\u0100;e\u1acd\u1ace\u403a\u0100;q\xc7\xc6\u026d\u1ad9\0\0\u1ae2a\u0100;t\u1ade\u1adf\u402c;\u4040\u0180;fl\u1ae8\u1ae9\u1aeb\u6201\xee\u1160e\u0100mx\u1af1\u1af6ent\xbb\u1ae9e\xf3\u024d\u01e7\u1afe\0\u1b07\u0100;d\u12bb\u1b02ot;\u6a6dn\xf4\u0246\u0180fry\u1b10\u1b14\u1b17;\uc000\ud835\udd54o\xe4\u0254\u8100\xa9;s\u0155\u1b1dr;\u6117\u0100ao\u1b25\u1b29rr;\u61b5ss;\u6717\u0100cu\u1b32\u1b37r;\uc000\ud835\udcb8\u0100bp\u1b3c\u1b44\u0100;e\u1b41\u1b42\u6acf;\u6ad1\u0100;e\u1b49\u1b4a\u6ad0;\u6ad2dot;\u62ef\u0380delprvw\u1b60\u1b6c\u1b77\u1b82\u1bac\u1bd4\u1bf9arr\u0100lr\u1b68\u1b6a;\u6938;\u6935\u0270\u1b72\0\0\u1b75r;\u62dec;\u62dfarr\u0100;p\u1b7f\u1b80\u61b6;\u693d\u0300;bcdos\u1b8f\u1b90\u1b96\u1ba1\u1ba5\u1ba8\u622arcap;\u6a48\u0100au\u1b9b\u1b9ep;\u6a46p;\u6a4aot;\u628dr;\u6a45;\uc000\u222a\ufe00\u0200alrv\u1bb5\u1bbf\u1bde\u1be3rr\u0100;m\u1bbc\u1bbd\u61b7;\u693cy\u0180evw\u1bc7\u1bd4\u1bd8q\u0270\u1bce\0\0\u1bd2re\xe3\u1b73u\xe3\u1b75ee;\u62ceedge;\u62cfen\u803b\xa4\u40a4earrow\u0100lr\u1bee\u1bf3eft\xbb\u1b80ight\xbb\u1bbde\xe4\u1bdd\u0100ci\u1c01\u1c07onin\xf4\u01f7nt;\u6231lcty;\u632d\u0980AHabcdefhijlorstuwz\u1c38\u1c3b\u1c3f\u1c5d\u1c69\u1c75\u1c8a\u1c9e\u1cac\u1cb7\u1cfb\u1cff\u1d0d\u1d7b\u1d91\u1dab\u1dbb\u1dc6\u1dcdr\xf2\u0381ar;\u6965\u0200glrs\u1c48\u1c4d\u1c52\u1c54ger;\u6020eth;\u6138\xf2\u1133h\u0100;v\u1c5a\u1c5b\u6010\xbb\u090a\u016b\u1c61\u1c67arow;\u690fa\xe3\u0315\u0100ay\u1c6e\u1c73ron;\u410f;\u4434\u0180;ao\u0332\u1c7c\u1c84\u0100gr\u02bf\u1c81r;\u61catseq;\u6a77\u0180glm\u1c91\u1c94\u1c98\u803b\xb0\u40b0ta;\u43b4ptyv;\u69b1\u0100ir\u1ca3\u1ca8sht;\u697f;\uc000\ud835\udd21ar\u0100lr\u1cb3\u1cb5\xbb\u08dc\xbb\u101e\u0280aegsv\u1cc2\u0378\u1cd6\u1cdc\u1ce0m\u0180;os\u0326\u1cca\u1cd4nd\u0100;s\u0326\u1cd1uit;\u6666amma;\u43ddin;\u62f2\u0180;io\u1ce7\u1ce8\u1cf8\u40f7de\u8100\xf7;o\u1ce7\u1cf0ntimes;\u62c7n\xf8\u1cf7cy;\u4452c\u026f\u1d06\0\0\u1d0arn;\u631eop;\u630d\u0280lptuw\u1d18\u1d1d\u1d22\u1d49\u1d55lar;\u4024f;\uc000\ud835\udd55\u0280;emps\u030b\u1d2d\u1d37\u1d3d\u1d42q\u0100;d\u0352\u1d33ot;\u6251inus;\u6238lus;\u6214quare;\u62a1blebarwedg\xe5\xfan\u0180adh\u112e\u1d5d\u1d67ownarrow\xf3\u1c83arpoon\u0100lr\u1d72\u1d76ef\xf4\u1cb4igh\xf4\u1cb6\u0162\u1d7f\u1d85karo\xf7\u0f42\u026f\u1d8a\0\0\u1d8ern;\u631fop;\u630c\u0180cot\u1d98\u1da3\u1da6\u0100ry\u1d9d\u1da1;\uc000\ud835\udcb9;\u4455l;\u69f6rok;\u4111\u0100dr\u1db0\u1db4ot;\u62f1i\u0100;f\u1dba\u1816\u65bf\u0100ah\u1dc0\u1dc3r\xf2\u0429a\xf2\u0fa6angle;\u69a6\u0100ci\u1dd2\u1dd5y;\u445fgrarr;\u67ff\u0900Dacdefglmnopqrstux\u1e01\u1e09\u1e19\u1e38\u0578\u1e3c\u1e49\u1e61\u1e7e\u1ea5\u1eaf\u1ebd\u1ee1\u1f2a\u1f37\u1f44\u1f4e\u1f5a\u0100Do\u1e06\u1d34o\xf4\u1c89\u0100cs\u1e0e\u1e14ute\u803b\xe9\u40e9ter;\u6a6e\u0200aioy\u1e22\u1e27\u1e31\u1e36ron;\u411br\u0100;c\u1e2d\u1e2e\u6256\u803b\xea\u40ealon;\u6255;\u444dot;\u4117\u0100Dr\u1e41\u1e45ot;\u6252;\uc000\ud835\udd22\u0180;rs\u1e50\u1e51\u1e57\u6a9aave\u803b\xe8\u40e8\u0100;d\u1e5c\u1e5d\u6a96ot;\u6a98\u0200;ils\u1e6a\u1e6b\u1e72\u1e74\u6a99nters;\u63e7;\u6113\u0100;d\u1e79\u1e7a\u6a95ot;\u6a97\u0180aps\u1e85\u1e89\u1e97cr;\u4113ty\u0180;sv\u1e92\u1e93\u1e95\u6205et\xbb\u1e93p\u01001;\u1e9d\u1ea4\u0133\u1ea1\u1ea3;\u6004;\u6005\u6003\u0100gs\u1eaa\u1eac;\u414bp;\u6002\u0100gp\u1eb4\u1eb8on;\u4119f;\uc000\ud835\udd56\u0180als\u1ec4\u1ece\u1ed2r\u0100;s\u1eca\u1ecb\u62d5l;\u69e3us;\u6a71i\u0180;lv\u1eda\u1edb\u1edf\u43b5on\xbb\u1edb;\u43f5\u0200csuv\u1eea\u1ef3\u1f0b\u1f23\u0100io\u1eef\u1e31rc\xbb\u1e2e\u0269\u1ef9\0\0\u1efb\xed\u0548ant\u0100gl\u1f02\u1f06tr\xbb\u1e5dess\xbb\u1e7a\u0180aei\u1f12\u1f16\u1f1als;\u403dst;\u625fv\u0100;D\u0235\u1f20D;\u6a78parsl;\u69e5\u0100Da\u1f2f\u1f33ot;\u6253rr;\u6971\u0180cdi\u1f3e\u1f41\u1ef8r;\u612fo\xf4\u0352\u0100ah\u1f49\u1f4b;\u43b7\u803b\xf0\u40f0\u0100mr\u1f53\u1f57l\u803b\xeb\u40ebo;\u60ac\u0180cip\u1f61\u1f64\u1f67l;\u4021s\xf4\u056e\u0100eo\u1f6c\u1f74ctatio\xee\u0559nential\xe5\u0579\u09e1\u1f92\0\u1f9e\0\u1fa1\u1fa7\0\0\u1fc6\u1fcc\0\u1fd3\0\u1fe6\u1fea\u2000\0\u2008\u205allingdotse\xf1\u1e44y;\u4444male;\u6640\u0180ilr\u1fad\u1fb3\u1fc1lig;\u8000\ufb03\u0269\u1fb9\0\0\u1fbdg;\u8000\ufb00ig;\u8000\ufb04;\uc000\ud835\udd23lig;\u8000\ufb01lig;\uc000fj\u0180alt\u1fd9\u1fdc\u1fe1t;\u666dig;\u8000\ufb02ns;\u65b1of;\u4192\u01f0\u1fee\0\u1ff3f;\uc000\ud835\udd57\u0100ak\u05bf\u1ff7\u0100;v\u1ffc\u1ffd\u62d4;\u6ad9artint;\u6a0d\u0100ao\u200c\u2055\u0100cs\u2011\u2052\u03b1\u201a\u2030\u2038\u2045\u2048\0\u2050\u03b2\u2022\u2025\u2027\u202a\u202c\0\u202e\u803b\xbd\u40bd;\u6153\u803b\xbc\u40bc;\u6155;\u6159;\u615b\u01b3\u2034\0\u2036;\u6154;\u6156\u02b4\u203e\u2041\0\0\u2043\u803b\xbe\u40be;\u6157;\u615c5;\u6158\u01b6\u204c\0\u204e;\u615a;\u615d8;\u615el;\u6044wn;\u6322cr;\uc000\ud835\udcbb\u0880Eabcdefgijlnorstv\u2082\u2089\u209f\u20a5\u20b0\u20b4\u20f0\u20f5\u20fa\u20ff\u2103\u2112\u2138\u0317\u213e\u2152\u219e\u0100;l\u064d\u2087;\u6a8c\u0180cmp\u2090\u2095\u209dute;\u41f5ma\u0100;d\u209c\u1cda\u43b3;\u6a86reve;\u411f\u0100iy\u20aa\u20aerc;\u411d;\u4433ot;\u4121\u0200;lqs\u063e\u0642\u20bd\u20c9\u0180;qs\u063e\u064c\u20c4lan\xf4\u0665\u0200;cdl\u0665\u20d2\u20d5\u20e5c;\u6aa9ot\u0100;o\u20dc\u20dd\u6a80\u0100;l\u20e2\u20e3\u6a82;\u6a84\u0100;e\u20ea\u20ed\uc000\u22db\ufe00s;\u6a94r;\uc000\ud835\udd24\u0100;g\u0673\u061bmel;\u6137cy;\u4453\u0200;Eaj\u065a\u210c\u210e\u2110;\u6a92;\u6aa5;\u6aa4\u0200Eaes\u211b\u211d\u2129\u2134;\u6269p\u0100;p\u2123\u2124\u6a8arox\xbb\u2124\u0100;q\u212e\u212f\u6a88\u0100;q\u212e\u211bim;\u62e7pf;\uc000\ud835\udd58\u0100ci\u2143\u2146r;\u610am\u0180;el\u066b\u214e\u2150;\u6a8e;\u6a90\u8300>;cdlqr\u05ee\u2160\u216a\u216e\u2173\u2179\u0100ci\u2165\u2167;\u6aa7r;\u6a7aot;\u62d7Par;\u6995uest;\u6a7c\u0280adels\u2184\u216a\u2190\u0656\u219b\u01f0\u2189\0\u218epro\xf8\u209er;\u6978q\u0100lq\u063f\u2196les\xf3\u2088i\xed\u066b\u0100en\u21a3\u21adrtneqq;\uc000\u2269\ufe00\xc5\u21aa\u0500Aabcefkosy\u21c4\u21c7\u21f1\u21f5\u21fa\u2218\u221d\u222f\u2268\u227dr\xf2\u03a0\u0200ilmr\u21d0\u21d4\u21d7\u21dbrs\xf0\u1484f\xbb\u2024il\xf4\u06a9\u0100dr\u21e0\u21e4cy;\u444a\u0180;cw\u08f4\u21eb\u21efir;\u6948;\u61adar;\u610firc;\u4125\u0180alr\u2201\u220e\u2213rts\u0100;u\u2209\u220a\u6665it\xbb\u220alip;\u6026con;\u62b9r;\uc000\ud835\udd25s\u0100ew\u2223\u2229arow;\u6925arow;\u6926\u0280amopr\u223a\u223e\u2243\u225e\u2263rr;\u61fftht;\u623bk\u0100lr\u2249\u2253eftarrow;\u61a9ightarrow;\u61aaf;\uc000\ud835\udd59bar;\u6015\u0180clt\u226f\u2274\u2278r;\uc000\ud835\udcbdas\xe8\u21f4rok;\u4127\u0100bp\u2282\u2287ull;\u6043hen\xbb\u1c5b\u0ae1\u22a3\0\u22aa\0\u22b8\u22c5\u22ce\0\u22d5\u22f3\0\0\u22f8\u2322\u2367\u2362\u237f\0\u2386\u23aa\u23b4cute\u803b\xed\u40ed\u0180;iy\u0771\u22b0\u22b5rc\u803b\xee\u40ee;\u4438\u0100cx\u22bc\u22bfy;\u4435cl\u803b\xa1\u40a1\u0100fr\u039f\u22c9;\uc000\ud835\udd26rave\u803b\xec\u40ec\u0200;ino\u073e\u22dd\u22e9\u22ee\u0100in\u22e2\u22e6nt;\u6a0ct;\u622dfin;\u69dcta;\u6129lig;\u4133\u0180aop\u22fe\u231a\u231d\u0180cgt\u2305\u2308\u2317r;\u412b\u0180elp\u071f\u230f\u2313in\xe5\u078ear\xf4\u0720h;\u4131f;\u62b7ed;\u41b5\u0280;cfot\u04f4\u232c\u2331\u233d\u2341are;\u6105in\u0100;t\u2338\u2339\u621eie;\u69dddo\xf4\u2319\u0280;celp\u0757\u234c\u2350\u235b\u2361al;\u62ba\u0100gr\u2355\u2359er\xf3\u1563\xe3\u234darhk;\u6a17rod;\u6a3c\u0200cgpt\u236f\u2372\u2376\u237by;\u4451on;\u412ff;\uc000\ud835\udd5aa;\u43b9uest\u803b\xbf\u40bf\u0100ci\u238a\u238fr;\uc000\ud835\udcben\u0280;Edsv\u04f4\u239b\u239d\u23a1\u04f3;\u62f9ot;\u62f5\u0100;v\u23a6\u23a7\u62f4;\u62f3\u0100;i\u0777\u23aelde;\u4129\u01eb\u23b8\0\u23bccy;\u4456l\u803b\xef\u40ef\u0300cfmosu\u23cc\u23d7\u23dc\u23e1\u23e7\u23f5\u0100iy\u23d1\u23d5rc;\u4135;\u4439r;\uc000\ud835\udd27ath;\u4237pf;\uc000\ud835\udd5b\u01e3\u23ec\0\u23f1r;\uc000\ud835\udcbfrcy;\u4458kcy;\u4454\u0400acfghjos\u240b\u2416\u2422\u2427\u242d\u2431\u2435\u243bppa\u0100;v\u2413\u2414\u43ba;\u43f0\u0100ey\u241b\u2420dil;\u4137;\u443ar;\uc000\ud835\udd28reen;\u4138cy;\u4445cy;\u445cpf;\uc000\ud835\udd5ccr;\uc000\ud835\udcc0\u0b80ABEHabcdefghjlmnoprstuv\u2470\u2481\u2486\u248d\u2491\u250e\u253d\u255a\u2580\u264e\u265e\u2665\u2679\u267d\u269a\u26b2\u26d8\u275d\u2768\u278b\u27c0\u2801\u2812\u0180art\u2477\u247a\u247cr\xf2\u09c6\xf2\u0395ail;\u691barr;\u690e\u0100;g\u0994\u248b;\u6a8bar;\u6962\u0963\u24a5\0\u24aa\0\u24b1\0\0\0\0\0\u24b5\u24ba\0\u24c6\u24c8\u24cd\0\u24f9ute;\u413amptyv;\u69b4ra\xee\u084cbda;\u43bbg\u0180;dl\u088e\u24c1\u24c3;\u6991\xe5\u088e;\u6a85uo\u803b\xab\u40abr\u0400;bfhlpst\u0899\u24de\u24e6\u24e9\u24eb\u24ee\u24f1\u24f5\u0100;f\u089d\u24e3s;\u691fs;\u691d\xeb\u2252p;\u61abl;\u6939im;\u6973l;\u61a2\u0180;ae\u24ff\u2500\u2504\u6aabil;\u6919\u0100;s\u2509\u250a\u6aad;\uc000\u2aad\ufe00\u0180abr\u2515\u2519\u251drr;\u690crk;\u6772\u0100ak\u2522\u252cc\u0100ek\u2528\u252a;\u407b;\u405b\u0100es\u2531\u2533;\u698bl\u0100du\u2539\u253b;\u698f;\u698d\u0200aeuy\u2546\u254b\u2556\u2558ron;\u413e\u0100di\u2550\u2554il;\u413c\xec\u08b0\xe2\u2529;\u443b\u0200cqrs\u2563\u2566\u256d\u257da;\u6936uo\u0100;r\u0e19\u1746\u0100du\u2572\u2577har;\u6967shar;\u694bh;\u61b2\u0280;fgqs\u258b\u258c\u0989\u25f3\u25ff\u6264t\u0280ahlrt\u2598\u25a4\u25b7\u25c2\u25e8rrow\u0100;t\u0899\u25a1a\xe9\u24f6arpoon\u0100du\u25af\u25b4own\xbb\u045ap\xbb\u0966eftarrows;\u61c7ight\u0180ahs\u25cd\u25d6\u25derrow\u0100;s\u08f4\u08a7arpoon\xf3\u0f98quigarro\xf7\u21f0hreetimes;\u62cb\u0180;qs\u258b\u0993\u25falan\xf4\u09ac\u0280;cdgs\u09ac\u260a\u260d\u261d\u2628c;\u6aa8ot\u0100;o\u2614\u2615\u6a7f\u0100;r\u261a\u261b\u6a81;\u6a83\u0100;e\u2622\u2625\uc000\u22da\ufe00s;\u6a93\u0280adegs\u2633\u2639\u263d\u2649\u264bppro\xf8\u24c6ot;\u62d6q\u0100gq\u2643\u2645\xf4\u0989gt\xf2\u248c\xf4\u099bi\xed\u09b2\u0180ilr\u2655\u08e1\u265asht;\u697c;\uc000\ud835\udd29\u0100;E\u099c\u2663;\u6a91\u0161\u2669\u2676r\u0100du\u25b2\u266e\u0100;l\u0965\u2673;\u696alk;\u6584cy;\u4459\u0280;acht\u0a48\u2688\u268b\u2691\u2696r\xf2\u25c1orne\xf2\u1d08ard;\u696bri;\u65fa\u0100io\u269f\u26a4dot;\u4140ust\u0100;a\u26ac\u26ad\u63b0che\xbb\u26ad\u0200Eaes\u26bb\u26bd\u26c9\u26d4;\u6268p\u0100;p\u26c3\u26c4\u6a89rox\xbb\u26c4\u0100;q\u26ce\u26cf\u6a87\u0100;q\u26ce\u26bbim;\u62e6\u0400abnoptwz\u26e9\u26f4\u26f7\u271a\u272f\u2741\u2747\u2750\u0100nr\u26ee\u26f1g;\u67ecr;\u61fdr\xeb\u08c1g\u0180lmr\u26ff\u270d\u2714eft\u0100ar\u09e6\u2707ight\xe1\u09f2apsto;\u67fcight\xe1\u09fdparrow\u0100lr\u2725\u2729ef\xf4\u24edight;\u61ac\u0180afl\u2736\u2739\u273dr;\u6985;\uc000\ud835\udd5dus;\u6a2dimes;\u6a34\u0161\u274b\u274fst;\u6217\xe1\u134e\u0180;ef\u2757\u2758\u1800\u65cange\xbb\u2758ar\u0100;l\u2764\u2765\u4028t;\u6993\u0280achmt\u2773\u2776\u277c\u2785\u2787r\xf2\u08a8orne\xf2\u1d8car\u0100;d\u0f98\u2783;\u696d;\u600eri;\u62bf\u0300achiqt\u2798\u279d\u0a40\u27a2\u27ae\u27bbquo;\u6039r;\uc000\ud835\udcc1m\u0180;eg\u09b2\u27aa\u27ac;\u6a8d;\u6a8f\u0100bu\u252a\u27b3o\u0100;r\u0e1f\u27b9;\u601arok;\u4142\u8400<;cdhilqr\u082b\u27d2\u2639\u27dc\u27e0\u27e5\u27ea\u27f0\u0100ci\u27d7\u27d9;\u6aa6r;\u6a79re\xe5\u25f2mes;\u62c9arr;\u6976uest;\u6a7b\u0100Pi\u27f5\u27f9ar;\u6996\u0180;ef\u2800\u092d\u181b\u65c3r\u0100du\u2807\u280dshar;\u694ahar;\u6966\u0100en\u2817\u2821rtneqq;\uc000\u2268\ufe00\xc5\u281e\u0700Dacdefhilnopsu\u2840\u2845\u2882\u288e\u2893\u28a0\u28a5\u28a8\u28da\u28e2\u28e4\u0a83\u28f3\u2902Dot;\u623a\u0200clpr\u284e\u2852\u2863\u287dr\u803b\xaf\u40af\u0100et\u2857\u2859;\u6642\u0100;e\u285e\u285f\u6720se\xbb\u285f\u0100;s\u103b\u2868to\u0200;dlu\u103b\u2873\u2877\u287bow\xee\u048cef\xf4\u090f\xf0\u13d1ker;\u65ae\u0100oy\u2887\u288cmma;\u6a29;\u443cash;\u6014asuredangle\xbb\u1626r;\uc000\ud835\udd2ao;\u6127\u0180cdn\u28af\u28b4\u28c9ro\u803b\xb5\u40b5\u0200;acd\u1464\u28bd\u28c0\u28c4s\xf4\u16a7ir;\u6af0ot\u80bb\xb7\u01b5us\u0180;bd\u28d2\u1903\u28d3\u6212\u0100;u\u1d3c\u28d8;\u6a2a\u0163\u28de\u28e1p;\u6adb\xf2\u2212\xf0\u0a81\u0100dp\u28e9\u28eeels;\u62a7f;\uc000\ud835\udd5e\u0100ct\u28f8\u28fdr;\uc000\ud835\udcc2pos\xbb\u159d\u0180;lm\u2909\u290a\u290d\u43bctimap;\u62b8\u0c00GLRVabcdefghijlmoprstuvw\u2942\u2953\u297e\u2989\u2998\u29da\u29e9\u2a15\u2a1a\u2a58\u2a5d\u2a83\u2a95\u2aa4\u2aa8\u2b04\u2b07\u2b44\u2b7f\u2bae\u2c34\u2c67\u2c7c\u2ce9\u0100gt\u2947\u294b;\uc000\u22d9\u0338\u0100;v\u2950\u0bcf\uc000\u226b\u20d2\u0180elt\u295a\u2972\u2976ft\u0100ar\u2961\u2967rrow;\u61cdightarrow;\u61ce;\uc000\u22d8\u0338\u0100;v\u297b\u0c47\uc000\u226a\u20d2ightarrow;\u61cf\u0100Dd\u298e\u2993ash;\u62afash;\u62ae\u0280bcnpt\u29a3\u29a7\u29ac\u29b1\u29ccla\xbb\u02deute;\u4144g;\uc000\u2220\u20d2\u0280;Eiop\u0d84\u29bc\u29c0\u29c5\u29c8;\uc000\u2a70\u0338d;\uc000\u224b\u0338s;\u4149ro\xf8\u0d84ur\u0100;a\u29d3\u29d4\u666el\u0100;s\u29d3\u0b38\u01f3\u29df\0\u29e3p\u80bb\xa0\u0b37mp\u0100;e\u0bf9\u0c00\u0280aeouy\u29f4\u29fe\u2a03\u2a10\u2a13\u01f0\u29f9\0\u29fb;\u6a43on;\u4148dil;\u4146ng\u0100;d\u0d7e\u2a0aot;\uc000\u2a6d\u0338p;\u6a42;\u443dash;\u6013\u0380;Aadqsx\u0b92\u2a29\u2a2d\u2a3b\u2a41\u2a45\u2a50rr;\u61d7r\u0100hr\u2a33\u2a36k;\u6924\u0100;o\u13f2\u13f0ot;\uc000\u2250\u0338ui\xf6\u0b63\u0100ei\u2a4a\u2a4ear;\u6928\xed\u0b98ist\u0100;s\u0ba0\u0b9fr;\uc000\ud835\udd2b\u0200Eest\u0bc5\u2a66\u2a79\u2a7c\u0180;qs\u0bbc\u2a6d\u0be1\u0180;qs\u0bbc\u0bc5\u2a74lan\xf4\u0be2i\xed\u0bea\u0100;r\u0bb6\u2a81\xbb\u0bb7\u0180Aap\u2a8a\u2a8d\u2a91r\xf2\u2971rr;\u61aear;\u6af2\u0180;sv\u0f8d\u2a9c\u0f8c\u0100;d\u2aa1\u2aa2\u62fc;\u62facy;\u445a\u0380AEadest\u2ab7\u2aba\u2abe\u2ac2\u2ac5\u2af6\u2af9r\xf2\u2966;\uc000\u2266\u0338rr;\u619ar;\u6025\u0200;fqs\u0c3b\u2ace\u2ae3\u2aeft\u0100ar\u2ad4\u2ad9rro\xf7\u2ac1ightarro\xf7\u2a90\u0180;qs\u0c3b\u2aba\u2aealan\xf4\u0c55\u0100;s\u0c55\u2af4\xbb\u0c36i\xed\u0c5d\u0100;r\u0c35\u2afei\u0100;e\u0c1a\u0c25i\xe4\u0d90\u0100pt\u2b0c\u2b11f;\uc000\ud835\udd5f\u8180\xac;in\u2b19\u2b1a\u2b36\u40acn\u0200;Edv\u0b89\u2b24\u2b28\u2b2e;\uc000\u22f9\u0338ot;\uc000\u22f5\u0338\u01e1\u0b89\u2b33\u2b35;\u62f7;\u62f6i\u0100;v\u0cb8\u2b3c\u01e1\u0cb8\u2b41\u2b43;\u62fe;\u62fd\u0180aor\u2b4b\u2b63\u2b69r\u0200;ast\u0b7b\u2b55\u2b5a\u2b5flle\xec\u0b7bl;\uc000\u2afd\u20e5;\uc000\u2202\u0338lint;\u6a14\u0180;ce\u0c92\u2b70\u2b73u\xe5\u0ca5\u0100;c\u0c98\u2b78\u0100;e\u0c92\u2b7d\xf1\u0c98\u0200Aait\u2b88\u2b8b\u2b9d\u2ba7r\xf2\u2988rr\u0180;cw\u2b94\u2b95\u2b99\u619b;\uc000\u2933\u0338;\uc000\u219d\u0338ghtarrow\xbb\u2b95ri\u0100;e\u0ccb\u0cd6\u0380chimpqu\u2bbd\u2bcd\u2bd9\u2b04\u0b78\u2be4\u2bef\u0200;cer\u0d32\u2bc6\u0d37\u2bc9u\xe5\u0d45;\uc000\ud835\udcc3ort\u026d\u2b05\0\0\u2bd6ar\xe1\u2b56m\u0100;e\u0d6e\u2bdf\u0100;q\u0d74\u0d73su\u0100bp\u2beb\u2bed\xe5\u0cf8\xe5\u0d0b\u0180bcp\u2bf6\u2c11\u2c19\u0200;Ees\u2bff\u2c00\u0d22\u2c04\u6284;\uc000\u2ac5\u0338et\u0100;e\u0d1b\u2c0bq\u0100;q\u0d23\u2c00c\u0100;e\u0d32\u2c17\xf1\u0d38\u0200;Ees\u2c22\u2c23\u0d5f\u2c27\u6285;\uc000\u2ac6\u0338et\u0100;e\u0d58\u2c2eq\u0100;q\u0d60\u2c23\u0200gilr\u2c3d\u2c3f\u2c45\u2c47\xec\u0bd7lde\u803b\xf1\u40f1\xe7\u0c43iangle\u0100lr\u2c52\u2c5ceft\u0100;e\u0c1a\u2c5a\xf1\u0c26ight\u0100;e\u0ccb\u2c65\xf1\u0cd7\u0100;m\u2c6c\u2c6d\u43bd\u0180;es\u2c74\u2c75\u2c79\u4023ro;\u6116p;\u6007\u0480DHadgilrs\u2c8f\u2c94\u2c99\u2c9e\u2ca3\u2cb0\u2cb6\u2cd3\u2ce3ash;\u62adarr;\u6904p;\uc000\u224d\u20d2ash;\u62ac\u0100et\u2ca8\u2cac;\uc000\u2265\u20d2;\uc000>\u20d2nfin;\u69de\u0180Aet\u2cbd\u2cc1\u2cc5rr;\u6902;\uc000\u2264\u20d2\u0100;r\u2cca\u2ccd\uc000<\u20d2ie;\uc000\u22b4\u20d2\u0100At\u2cd8\u2cdcrr;\u6903rie;\uc000\u22b5\u20d2im;\uc000\u223c\u20d2\u0180Aan\u2cf0\u2cf4\u2d02rr;\u61d6r\u0100hr\u2cfa\u2cfdk;\u6923\u0100;o\u13e7\u13e5ear;\u6927\u1253\u1a95\0\0\0\0\0\0\0\0\0\0\0\0\0\u2d2d\0\u2d38\u2d48\u2d60\u2d65\u2d72\u2d84\u1b07\0\0\u2d8d\u2dab\0\u2dc8\u2dce\0\u2ddc\u2e19\u2e2b\u2e3e\u2e43\u0100cs\u2d31\u1a97ute\u803b\xf3\u40f3\u0100iy\u2d3c\u2d45r\u0100;c\u1a9e\u2d42\u803b\xf4\u40f4;\u443e\u0280abios\u1aa0\u2d52\u2d57\u01c8\u2d5alac;\u4151v;\u6a38old;\u69bclig;\u4153\u0100cr\u2d69\u2d6dir;\u69bf;\uc000\ud835\udd2c\u036f\u2d79\0\0\u2d7c\0\u2d82n;\u42dbave\u803b\xf2\u40f2;\u69c1\u0100bm\u2d88\u0df4ar;\u69b5\u0200acit\u2d95\u2d98\u2da5\u2da8r\xf2\u1a80\u0100ir\u2d9d\u2da0r;\u69beoss;\u69bbn\xe5\u0e52;\u69c0\u0180aei\u2db1\u2db5\u2db9cr;\u414dga;\u43c9\u0180cdn\u2dc0\u2dc5\u01cdron;\u43bf;\u69b6pf;\uc000\ud835\udd60\u0180ael\u2dd4\u2dd7\u01d2r;\u69b7rp;\u69b9\u0380;adiosv\u2dea\u2deb\u2dee\u2e08\u2e0d\u2e10\u2e16\u6228r\xf2\u1a86\u0200;efm\u2df7\u2df8\u2e02\u2e05\u6a5dr\u0100;o\u2dfe\u2dff\u6134f\xbb\u2dff\u803b\xaa\u40aa\u803b\xba\u40bagof;\u62b6r;\u6a56lope;\u6a57;\u6a5b\u0180clo\u2e1f\u2e21\u2e27\xf2\u2e01ash\u803b\xf8\u40f8l;\u6298i\u016c\u2e2f\u2e34de\u803b\xf5\u40f5es\u0100;a\u01db\u2e3as;\u6a36ml\u803b\xf6\u40f6bar;\u633d\u0ae1\u2e5e\0\u2e7d\0\u2e80\u2e9d\0\u2ea2\u2eb9\0\0\u2ecb\u0e9c\0\u2f13\0\0\u2f2b\u2fbc\0\u2fc8r\u0200;ast\u0403\u2e67\u2e72\u0e85\u8100\xb6;l\u2e6d\u2e6e\u40b6le\xec\u0403\u0269\u2e78\0\0\u2e7bm;\u6af3;\u6afdy;\u443fr\u0280cimpt\u2e8b\u2e8f\u2e93\u1865\u2e97nt;\u4025od;\u402eil;\u6030enk;\u6031r;\uc000\ud835\udd2d\u0180imo\u2ea8\u2eb0\u2eb4\u0100;v\u2ead\u2eae\u43c6;\u43d5ma\xf4\u0a76ne;\u660e\u0180;tv\u2ebf\u2ec0\u2ec8\u43c0chfork\xbb\u1ffd;\u43d6\u0100au\u2ecf\u2edfn\u0100ck\u2ed5\u2eddk\u0100;h\u21f4\u2edb;\u610e\xf6\u21f4s\u0480;abcdemst\u2ef3\u2ef4\u1908\u2ef9\u2efd\u2f04\u2f06\u2f0a\u2f0e\u402bcir;\u6a23ir;\u6a22\u0100ou\u1d40\u2f02;\u6a25;\u6a72n\u80bb\xb1\u0e9dim;\u6a26wo;\u6a27\u0180ipu\u2f19\u2f20\u2f25ntint;\u6a15f;\uc000\ud835\udd61nd\u803b\xa3\u40a3\u0500;Eaceinosu\u0ec8\u2f3f\u2f41\u2f44\u2f47\u2f81\u2f89\u2f92\u2f7e\u2fb6;\u6ab3p;\u6ab7u\xe5\u0ed9\u0100;c\u0ece\u2f4c\u0300;acens\u0ec8\u2f59\u2f5f\u2f66\u2f68\u2f7eppro\xf8\u2f43urlye\xf1\u0ed9\xf1\u0ece\u0180aes\u2f6f\u2f76\u2f7approx;\u6ab9qq;\u6ab5im;\u62e8i\xed\u0edfme\u0100;s\u2f88\u0eae\u6032\u0180Eas\u2f78\u2f90\u2f7a\xf0\u2f75\u0180dfp\u0eec\u2f99\u2faf\u0180als\u2fa0\u2fa5\u2faalar;\u632eine;\u6312urf;\u6313\u0100;t\u0efb\u2fb4\xef\u0efbrel;\u62b0\u0100ci\u2fc0\u2fc5r;\uc000\ud835\udcc5;\u43c8ncsp;\u6008\u0300fiopsu\u2fda\u22e2\u2fdf\u2fe5\u2feb\u2ff1r;\uc000\ud835\udd2epf;\uc000\ud835\udd62rime;\u6057cr;\uc000\ud835\udcc6\u0180aeo\u2ff8\u3009\u3013t\u0100ei\u2ffe\u3005rnion\xf3\u06b0nt;\u6a16st\u0100;e\u3010\u3011\u403f\xf1\u1f19\xf4\u0f14\u0a80ABHabcdefhilmnoprstux\u3040\u3051\u3055\u3059\u30e0\u310e\u312b\u3147\u3162\u3172\u318e\u3206\u3215\u3224\u3229\u3258\u326e\u3272\u3290\u32b0\u32b7\u0180art\u3047\u304a\u304cr\xf2\u10b3\xf2\u03ddail;\u691car\xf2\u1c65ar;\u6964\u0380cdenqrt\u3068\u3075\u3078\u307f\u308f\u3094\u30cc\u0100eu\u306d\u3071;\uc000\u223d\u0331te;\u4155i\xe3\u116emptyv;\u69b3g\u0200;del\u0fd1\u3089\u308b\u308d;\u6992;\u69a5\xe5\u0fd1uo\u803b\xbb\u40bbr\u0580;abcfhlpstw\u0fdc\u30ac\u30af\u30b7\u30b9\u30bc\u30be\u30c0\u30c3\u30c7\u30cap;\u6975\u0100;f\u0fe0\u30b4s;\u6920;\u6933s;\u691e\xeb\u225d\xf0\u272el;\u6945im;\u6974l;\u61a3;\u619d\u0100ai\u30d1\u30d5il;\u691ao\u0100;n\u30db\u30dc\u6236al\xf3\u0f1e\u0180abr\u30e7\u30ea\u30eer\xf2\u17e5rk;\u6773\u0100ak\u30f3\u30fdc\u0100ek\u30f9\u30fb;\u407d;\u405d\u0100es\u3102\u3104;\u698cl\u0100du\u310a\u310c;\u698e;\u6990\u0200aeuy\u3117\u311c\u3127\u3129ron;\u4159\u0100di\u3121\u3125il;\u4157\xec\u0ff2\xe2\u30fa;\u4440\u0200clqs\u3134\u3137\u313d\u3144a;\u6937dhar;\u6969uo\u0100;r\u020e\u020dh;\u61b3\u0180acg\u314e\u315f\u0f44l\u0200;ips\u0f78\u3158\u315b\u109cn\xe5\u10bbar\xf4\u0fa9t;\u65ad\u0180ilr\u3169\u1023\u316esht;\u697d;\uc000\ud835\udd2f\u0100ao\u3177\u3186r\u0100du\u317d\u317f\xbb\u047b\u0100;l\u1091\u3184;\u696c\u0100;v\u318b\u318c\u43c1;\u43f1\u0180gns\u3195\u31f9\u31fcht\u0300ahlrst\u31a4\u31b0\u31c2\u31d8\u31e4\u31eerrow\u0100;t\u0fdc\u31ada\xe9\u30c8arpoon\u0100du\u31bb\u31bfow\xee\u317ep\xbb\u1092eft\u0100ah\u31ca\u31d0rrow\xf3\u0feaarpoon\xf3\u0551ightarrows;\u61c9quigarro\xf7\u30cbhreetimes;\u62ccg;\u42daingdotse\xf1\u1f32\u0180ahm\u320d\u3210\u3213r\xf2\u0feaa\xf2\u0551;\u600foust\u0100;a\u321e\u321f\u63b1che\xbb\u321fmid;\u6aee\u0200abpt\u3232\u323d\u3240\u3252\u0100nr\u3237\u323ag;\u67edr;\u61fer\xeb\u1003\u0180afl\u3247\u324a\u324er;\u6986;\uc000\ud835\udd63us;\u6a2eimes;\u6a35\u0100ap\u325d\u3267r\u0100;g\u3263\u3264\u4029t;\u6994olint;\u6a12ar\xf2\u31e3\u0200achq\u327b\u3280\u10bc\u3285quo;\u603ar;\uc000\ud835\udcc7\u0100bu\u30fb\u328ao\u0100;r\u0214\u0213\u0180hir\u3297\u329b\u32a0re\xe5\u31f8mes;\u62cai\u0200;efl\u32aa\u1059\u1821\u32ab\u65b9tri;\u69celuhar;\u6968;\u611e\u0d61\u32d5\u32db\u32df\u332c\u3338\u3371\0\u337a\u33a4\0\0\u33ec\u33f0\0\u3428\u3448\u345a\u34ad\u34b1\u34ca\u34f1\0\u3616\0\0\u3633cute;\u415bqu\xef\u27ba\u0500;Eaceinpsy\u11ed\u32f3\u32f5\u32ff\u3302\u330b\u330f\u331f\u3326\u3329;\u6ab4\u01f0\u32fa\0\u32fc;\u6ab8on;\u4161u\xe5\u11fe\u0100;d\u11f3\u3307il;\u415frc;\u415d\u0180Eas\u3316\u3318\u331b;\u6ab6p;\u6abaim;\u62e9olint;\u6a13i\xed\u1204;\u4441ot\u0180;be\u3334\u1d47\u3335\u62c5;\u6a66\u0380Aacmstx\u3346\u334a\u3357\u335b\u335e\u3363\u336drr;\u61d8r\u0100hr\u3350\u3352\xeb\u2228\u0100;o\u0a36\u0a34t\u803b\xa7\u40a7i;\u403bwar;\u6929m\u0100in\u3369\xf0nu\xf3\xf1t;\u6736r\u0100;o\u3376\u2055\uc000\ud835\udd30\u0200acoy\u3382\u3386\u3391\u33a0rp;\u666f\u0100hy\u338b\u338fcy;\u4449;\u4448rt\u026d\u3399\0\0\u339ci\xe4\u1464ara\xec\u2e6f\u803b\xad\u40ad\u0100gm\u33a8\u33b4ma\u0180;fv\u33b1\u33b2\u33b2\u43c3;\u43c2\u0400;deglnpr\u12ab\u33c5\u33c9\u33ce\u33d6\u33de\u33e1\u33e6ot;\u6a6a\u0100;q\u12b1\u12b0\u0100;E\u33d3\u33d4\u6a9e;\u6aa0\u0100;E\u33db\u33dc\u6a9d;\u6a9fe;\u6246lus;\u6a24arr;\u6972ar\xf2\u113d\u0200aeit\u33f8\u3408\u340f\u3417\u0100ls\u33fd\u3404lsetm\xe9\u336ahp;\u6a33parsl;\u69e4\u0100dl\u1463\u3414e;\u6323\u0100;e\u341c\u341d\u6aaa\u0100;s\u3422\u3423\u6aac;\uc000\u2aac\ufe00\u0180flp\u342e\u3433\u3442tcy;\u444c\u0100;b\u3438\u3439\u402f\u0100;a\u343e\u343f\u69c4r;\u633ff;\uc000\ud835\udd64a\u0100dr\u344d\u0402es\u0100;u\u3454\u3455\u6660it\xbb\u3455\u0180csu\u3460\u3479\u349f\u0100au\u3465\u346fp\u0100;s\u1188\u346b;\uc000\u2293\ufe00p\u0100;s\u11b4\u3475;\uc000\u2294\ufe00u\u0100bp\u347f\u348f\u0180;es\u1197\u119c\u3486et\u0100;e\u1197\u348d\xf1\u119d\u0180;es\u11a8\u11ad\u3496et\u0100;e\u11a8\u349d\xf1\u11ae\u0180;af\u117b\u34a6\u05b0r\u0165\u34ab\u05b1\xbb\u117car\xf2\u1148\u0200cemt\u34b9\u34be\u34c2\u34c5r;\uc000\ud835\udcc8tm\xee\xf1i\xec\u3415ar\xe6\u11be\u0100ar\u34ce\u34d5r\u0100;f\u34d4\u17bf\u6606\u0100an\u34da\u34edight\u0100ep\u34e3\u34eapsilo\xee\u1ee0h\xe9\u2eafs\xbb\u2852\u0280bcmnp\u34fb\u355e\u1209\u358b\u358e\u0480;Edemnprs\u350e\u350f\u3511\u3515\u351e\u3523\u352c\u3531\u3536\u6282;\u6ac5ot;\u6abd\u0100;d\u11da\u351aot;\u6ac3ult;\u6ac1\u0100Ee\u3528\u352a;\u6acb;\u628alus;\u6abfarr;\u6979\u0180eiu\u353d\u3552\u3555t\u0180;en\u350e\u3545\u354bq\u0100;q\u11da\u350feq\u0100;q\u352b\u3528m;\u6ac7\u0100bp\u355a\u355c;\u6ad5;\u6ad3c\u0300;acens\u11ed\u356c\u3572\u3579\u357b\u3326ppro\xf8\u32faurlye\xf1\u11fe\xf1\u11f3\u0180aes\u3582\u3588\u331bppro\xf8\u331aq\xf1\u3317g;\u666a\u0680123;Edehlmnps\u35a9\u35ac\u35af\u121c\u35b2\u35b4\u35c0\u35c9\u35d5\u35da\u35df\u35e8\u35ed\u803b\xb9\u40b9\u803b\xb2\u40b2\u803b\xb3\u40b3;\u6ac6\u0100os\u35b9\u35bct;\u6abeub;\u6ad8\u0100;d\u1222\u35c5ot;\u6ac4s\u0100ou\u35cf\u35d2l;\u67c9b;\u6ad7arr;\u697bult;\u6ac2\u0100Ee\u35e4\u35e6;\u6acc;\u628blus;\u6ac0\u0180eiu\u35f4\u3609\u360ct\u0180;en\u121c\u35fc\u3602q\u0100;q\u1222\u35b2eq\u0100;q\u35e7\u35e4m;\u6ac8\u0100bp\u3611\u3613;\u6ad4;\u6ad6\u0180Aan\u361c\u3620\u362drr;\u61d9r\u0100hr\u3626\u3628\xeb\u222e\u0100;o\u0a2b\u0a29war;\u692alig\u803b\xdf\u40df\u0be1\u3651\u365d\u3660\u12ce\u3673\u3679\0\u367e\u36c2\0\0\0\0\0\u36db\u3703\0\u3709\u376c\0\0\0\u3787\u0272\u3656\0\0\u365bget;\u6316;\u43c4r\xeb\u0e5f\u0180aey\u3666\u366b\u3670ron;\u4165dil;\u4163;\u4442lrec;\u6315r;\uc000\ud835\udd31\u0200eiko\u3686\u369d\u36b5\u36bc\u01f2\u368b\0\u3691e\u01004f\u1284\u1281a\u0180;sv\u3698\u3699\u369b\u43b8ym;\u43d1\u0100cn\u36a2\u36b2k\u0100as\u36a8\u36aeppro\xf8\u12c1im\xbb\u12acs\xf0\u129e\u0100as\u36ba\u36ae\xf0\u12c1rn\u803b\xfe\u40fe\u01ec\u031f\u36c6\u22e7es\u8180\xd7;bd\u36cf\u36d0\u36d8\u40d7\u0100;a\u190f\u36d5r;\u6a31;\u6a30\u0180eps\u36e1\u36e3\u3700\xe1\u2a4d\u0200;bcf\u0486\u36ec\u36f0\u36f4ot;\u6336ir;\u6af1\u0100;o\u36f9\u36fc\uc000\ud835\udd65rk;\u6ada\xe1\u3362rime;\u6034\u0180aip\u370f\u3712\u3764d\xe5\u1248\u0380adempst\u3721\u374d\u3740\u3751\u3757\u375c\u375fngle\u0280;dlqr\u3730\u3731\u3736\u3740\u3742\u65b5own\xbb\u1dbbeft\u0100;e\u2800\u373e\xf1\u092e;\u625cight\u0100;e\u32aa\u374b\xf1\u105aot;\u65ecinus;\u6a3alus;\u6a39b;\u69cdime;\u6a3bezium;\u63e2\u0180cht\u3772\u377d\u3781\u0100ry\u3777\u377b;\uc000\ud835\udcc9;\u4446cy;\u445brok;\u4167\u0100io\u378b\u378ex\xf4\u1777head\u0100lr\u3797\u37a0eftarro\xf7\u084fightarrow\xbb\u0f5d\u0900AHabcdfghlmoprstuw\u37d0\u37d3\u37d7\u37e4\u37f0\u37fc\u380e\u381c\u3823\u3834\u3851\u385d\u386b\u38a9\u38cc\u38d2\u38ea\u38f6r\xf2\u03edar;\u6963\u0100cr\u37dc\u37e2ute\u803b\xfa\u40fa\xf2\u1150r\u01e3\u37ea\0\u37edy;\u445eve;\u416d\u0100iy\u37f5\u37farc\u803b\xfb\u40fb;\u4443\u0180abh\u3803\u3806\u380br\xf2\u13adlac;\u4171a\xf2\u13c3\u0100ir\u3813\u3818sht;\u697e;\uc000\ud835\udd32rave\u803b\xf9\u40f9\u0161\u3827\u3831r\u0100lr\u382c\u382e\xbb\u0957\xbb\u1083lk;\u6580\u0100ct\u3839\u384d\u026f\u383f\0\0\u384arn\u0100;e\u3845\u3846\u631cr\xbb\u3846op;\u630fri;\u65f8\u0100al\u3856\u385acr;\u416b\u80bb\xa8\u0349\u0100gp\u3862\u3866on;\u4173f;\uc000\ud835\udd66\u0300adhlsu\u114b\u3878\u387d\u1372\u3891\u38a0own\xe1\u13b3arpoon\u0100lr\u3888\u388cef\xf4\u382digh\xf4\u382fi\u0180;hl\u3899\u389a\u389c\u43c5\xbb\u13faon\xbb\u389aparrows;\u61c8\u0180cit\u38b0\u38c4\u38c8\u026f\u38b6\0\0\u38c1rn\u0100;e\u38bc\u38bd\u631dr\xbb\u38bdop;\u630eng;\u416fri;\u65f9cr;\uc000\ud835\udcca\u0180dir\u38d9\u38dd\u38e2ot;\u62f0lde;\u4169i\u0100;f\u3730\u38e8\xbb\u1813\u0100am\u38ef\u38f2r\xf2\u38a8l\u803b\xfc\u40fcangle;\u69a7\u0780ABDacdeflnoprsz\u391c\u391f\u3929\u392d\u39b5\u39b8\u39bd\u39df\u39e4\u39e8\u39f3\u39f9\u39fd\u3a01\u3a20r\xf2\u03f7ar\u0100;v\u3926\u3927\u6ae8;\u6ae9as\xe8\u03e1\u0100nr\u3932\u3937grt;\u699c\u0380eknprst\u34e3\u3946\u394b\u3952\u395d\u3964\u3996app\xe1\u2415othin\xe7\u1e96\u0180hir\u34eb\u2ec8\u3959op\xf4\u2fb5\u0100;h\u13b7\u3962\xef\u318d\u0100iu\u3969\u396dgm\xe1\u33b3\u0100bp\u3972\u3984setneq\u0100;q\u397d\u3980\uc000\u228a\ufe00;\uc000\u2acb\ufe00setneq\u0100;q\u398f\u3992\uc000\u228b\ufe00;\uc000\u2acc\ufe00\u0100hr\u399b\u399fet\xe1\u369ciangle\u0100lr\u39aa\u39afeft\xbb\u0925ight\xbb\u1051y;\u4432ash\xbb\u1036\u0180elr\u39c4\u39d2\u39d7\u0180;be\u2dea\u39cb\u39cfar;\u62bbq;\u625alip;\u62ee\u0100bt\u39dc\u1468a\xf2\u1469r;\uc000\ud835\udd33tr\xe9\u39aesu\u0100bp\u39ef\u39f1\xbb\u0d1c\xbb\u0d59pf;\uc000\ud835\udd67ro\xf0\u0efbtr\xe9\u39b4\u0100cu\u3a06\u3a0br;\uc000\ud835\udccb\u0100bp\u3a10\u3a18n\u0100Ee\u3980\u3a16\xbb\u397en\u0100Ee\u3992\u3a1e\xbb\u3990igzag;\u699a\u0380cefoprs\u3a36\u3a3b\u3a56\u3a5b\u3a54\u3a61\u3a6airc;\u4175\u0100di\u3a40\u3a51\u0100bg\u3a45\u3a49ar;\u6a5fe\u0100;q\u15fa\u3a4f;\u6259erp;\u6118r;\uc000\ud835\udd34pf;\uc000\ud835\udd68\u0100;e\u1479\u3a66at\xe8\u1479cr;\uc000\ud835\udccc\u0ae3\u178e\u3a87\0\u3a8b\0\u3a90\u3a9b\0\0\u3a9d\u3aa8\u3aab\u3aaf\0\0\u3ac3\u3ace\0\u3ad8\u17dc\u17dftr\xe9\u17d1r;\uc000\ud835\udd35\u0100Aa\u3a94\u3a97r\xf2\u03c3r\xf2\u09f6;\u43be\u0100Aa\u3aa1\u3aa4r\xf2\u03b8r\xf2\u09eba\xf0\u2713is;\u62fb\u0180dpt\u17a4\u3ab5\u3abe\u0100fl\u3aba\u17a9;\uc000\ud835\udd69im\xe5\u17b2\u0100Aa\u3ac7\u3acar\xf2\u03cer\xf2\u0a01\u0100cq\u3ad2\u17b8r;\uc000\ud835\udccd\u0100pt\u17d6\u3adcr\xe9\u17d4\u0400acefiosu\u3af0\u3afd\u3b08\u3b0c\u3b11\u3b15\u3b1b\u3b21c\u0100uy\u3af6\u3afbte\u803b\xfd\u40fd;\u444f\u0100iy\u3b02\u3b06rc;\u4177;\u444bn\u803b\xa5\u40a5r;\uc000\ud835\udd36cy;\u4457pf;\uc000\ud835\udd6acr;\uc000\ud835\udcce\u0100cm\u3b26\u3b29y;\u444el\u803b\xff\u40ff\u0500acdefhiosw\u3b42\u3b48\u3b54\u3b58\u3b64\u3b69\u3b6d\u3b74\u3b7a\u3b80cute;\u417a\u0100ay\u3b4d\u3b52ron;\u417e;\u4437ot;\u417c\u0100et\u3b5d\u3b61tr\xe6\u155fa;\u43b6r;\uc000\ud835\udd37cy;\u4436grarr;\u61ddpf;\uc000\ud835\udd6bcr;\uc000\ud835\udccf\u0100jn\u3b85\u3b87;\u600dj;\u600c"
    .split("")
    .map((c) => c.charCodeAt(0)));

// Generated using scripts/write-decode-map.ts
var xmlDecodeTree = new Uint16Array(
// prettier-ignore
"\u0200aglq\t\x15\x18\x1b\u026d\x0f\0\0\x12p;\u4026os;\u4027t;\u403et;\u403cuot;\u4022"
    .split("")
    .map((c) => c.charCodeAt(0)));

// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134
var _a;
const decodeMap = new Map([
    [0, 65533],
    // C1 Unicode control character reference replacements
    [128, 8364],
    [130, 8218],
    [131, 402],
    [132, 8222],
    [133, 8230],
    [134, 8224],
    [135, 8225],
    [136, 710],
    [137, 8240],
    [138, 352],
    [139, 8249],
    [140, 338],
    [142, 381],
    [145, 8216],
    [146, 8217],
    [147, 8220],
    [148, 8221],
    [149, 8226],
    [150, 8211],
    [151, 8212],
    [152, 732],
    [153, 8482],
    [154, 353],
    [155, 8250],
    [156, 339],
    [158, 382],
    [159, 376],
]);
/**
 * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.
 */
const fromCodePoint = 
// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins
(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {
    let output = "";
    if (codePoint > 0xffff) {
        codePoint -= 0x10000;
        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);
        codePoint = 0xdc00 | (codePoint & 0x3ff);
    }
    output += String.fromCharCode(codePoint);
    return output;
};
/**
 * Replace the given code point with a replacement character if it is a
 * surrogate or is outside the valid range. Otherwise return the code
 * point unchanged.
 */
function replaceCodePoint(codePoint) {
    var _a;
    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {
        return 0xfffd;
    }
    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;
}

var CharCodes;
(function (CharCodes) {
    CharCodes[CharCodes["NUM"] = 35] = "NUM";
    CharCodes[CharCodes["SEMI"] = 59] = "SEMI";
    CharCodes[CharCodes["EQUALS"] = 61] = "EQUALS";
    CharCodes[CharCodes["ZERO"] = 48] = "ZERO";
    CharCodes[CharCodes["NINE"] = 57] = "NINE";
    CharCodes[CharCodes["LOWER_A"] = 97] = "LOWER_A";
    CharCodes[CharCodes["LOWER_F"] = 102] = "LOWER_F";
    CharCodes[CharCodes["LOWER_X"] = 120] = "LOWER_X";
    CharCodes[CharCodes["LOWER_Z"] = 122] = "LOWER_Z";
    CharCodes[CharCodes["UPPER_A"] = 65] = "UPPER_A";
    CharCodes[CharCodes["UPPER_F"] = 70] = "UPPER_F";
    CharCodes[CharCodes["UPPER_Z"] = 90] = "UPPER_Z";
})(CharCodes || (CharCodes = {}));
/** Bit that needs to be set to convert an upper case ASCII character to lower case */
const TO_LOWER_BIT = 0b100000;
var BinTrieFlags;
(function (BinTrieFlags) {
    BinTrieFlags[BinTrieFlags["VALUE_LENGTH"] = 49152] = "VALUE_LENGTH";
    BinTrieFlags[BinTrieFlags["BRANCH_LENGTH"] = 16256] = "BRANCH_LENGTH";
    BinTrieFlags[BinTrieFlags["JUMP_TABLE"] = 127] = "JUMP_TABLE";
})(BinTrieFlags || (BinTrieFlags = {}));
function isNumber(code) {
    return code >= CharCodes.ZERO && code <= CharCodes.NINE;
}
function isHexadecimalCharacter(code) {
    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||
        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));
}
function isAsciiAlphaNumeric$1(code) {
    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||
        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||
        isNumber(code));
}
/**
 * Checks if the given character is a valid end character for an entity in an attribute.
 *
 * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.
 * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state
 */
function isEntityInAttributeInvalidEnd(code) {
    return code === CharCodes.EQUALS || isAsciiAlphaNumeric$1(code);
}
var EntityDecoderState;
(function (EntityDecoderState) {
    EntityDecoderState[EntityDecoderState["EntityStart"] = 0] = "EntityStart";
    EntityDecoderState[EntityDecoderState["NumericStart"] = 1] = "NumericStart";
    EntityDecoderState[EntityDecoderState["NumericDecimal"] = 2] = "NumericDecimal";
    EntityDecoderState[EntityDecoderState["NumericHex"] = 3] = "NumericHex";
    EntityDecoderState[EntityDecoderState["NamedEntity"] = 4] = "NamedEntity";
})(EntityDecoderState || (EntityDecoderState = {}));
var DecodingMode;
(function (DecodingMode) {
    /** Entities in text nodes that can end with any character. */
    DecodingMode[DecodingMode["Legacy"] = 0] = "Legacy";
    /** Only allow entities terminated with a semicolon. */
    DecodingMode[DecodingMode["Strict"] = 1] = "Strict";
    /** Entities in attributes have limitations on ending characters. */
    DecodingMode[DecodingMode["Attribute"] = 2] = "Attribute";
})(DecodingMode || (DecodingMode = {}));
/**
 * Token decoder with support of writing partial entities.
 */
class EntityDecoder {
    constructor(
    /** The tree used to decode entities. */
    decodeTree, 
    /**
     * The function that is called when a codepoint is decoded.
     *
     * For multi-byte named entities, this will be called multiple times,
     * with the second codepoint, and the same `consumed` value.
     *
     * @param codepoint The decoded codepoint.
     * @param consumed The number of bytes consumed by the decoder.
     */
    emitCodePoint, 
    /** An object that is used to produce errors. */
    errors) {
        this.decodeTree = decodeTree;
        this.emitCodePoint = emitCodePoint;
        this.errors = errors;
        /** The current state of the decoder. */
        this.state = EntityDecoderState.EntityStart;
        /** Characters that were consumed while parsing an entity. */
        this.consumed = 1;
        /**
         * The result of the entity.
         *
         * Either the result index of a numeric entity, or the codepoint of a
         * numeric entity.
         */
        this.result = 0;
        /** The current index in the decode tree. */
        this.treeIndex = 0;
        /** The number of characters that were consumed in excess. */
        this.excess = 1;
        /** The mode in which the decoder is operating. */
        this.decodeMode = DecodingMode.Strict;
    }
    /** Resets the instance to make it reusable. */
    startEntity(decodeMode) {
        this.decodeMode = decodeMode;
        this.state = EntityDecoderState.EntityStart;
        this.result = 0;
        this.treeIndex = 0;
        this.excess = 1;
        this.consumed = 1;
    }
    /**
     * Write an entity to the decoder. This can be called multiple times with partial entities.
     * If the entity is incomplete, the decoder will return -1.
     *
     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the
     * entity is incomplete, and resume when the next string is written.
     *
     * @param string The string containing the entity (or a continuation of the entity).
     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.
     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
     */
    write(str, offset) {
        switch (this.state) {
            case EntityDecoderState.EntityStart: {
                if (str.charCodeAt(offset) === CharCodes.NUM) {
                    this.state = EntityDecoderState.NumericStart;
                    this.consumed += 1;
                    return this.stateNumericStart(str, offset + 1);
                }
                this.state = EntityDecoderState.NamedEntity;
                return this.stateNamedEntity(str, offset);
            }
            case EntityDecoderState.NumericStart: {
                return this.stateNumericStart(str, offset);
            }
            case EntityDecoderState.NumericDecimal: {
                return this.stateNumericDecimal(str, offset);
            }
            case EntityDecoderState.NumericHex: {
                return this.stateNumericHex(str, offset);
            }
            case EntityDecoderState.NamedEntity: {
                return this.stateNamedEntity(str, offset);
            }
        }
    }
    /**
     * Switches between the numeric decimal and hexadecimal states.
     *
     * Equivalent to the `Numeric character reference state` in the HTML spec.
     *
     * @param str The string containing the entity (or a continuation of the entity).
     * @param offset The current offset.
     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
     */
    stateNumericStart(str, offset) {
        if (offset >= str.length) {
            return -1;
        }
        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {
            this.state = EntityDecoderState.NumericHex;
            this.consumed += 1;
            return this.stateNumericHex(str, offset + 1);
        }
        this.state = EntityDecoderState.NumericDecimal;
        return this.stateNumericDecimal(str, offset);
    }
    addToNumericResult(str, start, end, base) {
        if (start !== end) {
            const digitCount = end - start;
            this.result =
                this.result * Math.pow(base, digitCount) +
                    parseInt(str.substr(start, digitCount), base);
            this.consumed += digitCount;
        }
    }
    /**
     * Parses a hexadecimal numeric entity.
     *
     * Equivalent to the `Hexademical character reference state` in the HTML spec.
     *
     * @param str The string containing the entity (or a continuation of the entity).
     * @param offset The current offset.
     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
     */
    stateNumericHex(str, offset) {
        const startIdx = offset;
        while (offset < str.length) {
            const char = str.charCodeAt(offset);
            if (isNumber(char) || isHexadecimalCharacter(char)) {
                offset += 1;
            }
            else {
                this.addToNumericResult(str, startIdx, offset, 16);
                return this.emitNumericEntity(char, 3);
            }
        }
        this.addToNumericResult(str, startIdx, offset, 16);
        return -1;
    }
    /**
     * Parses a decimal numeric entity.
     *
     * Equivalent to the `Decimal character reference state` in the HTML spec.
     *
     * @param str The string containing the entity (or a continuation of the entity).
     * @param offset The current offset.
     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
     */
    stateNumericDecimal(str, offset) {
        const startIdx = offset;
        while (offset < str.length) {
            const char = str.charCodeAt(offset);
            if (isNumber(char)) {
                offset += 1;
            }
            else {
                this.addToNumericResult(str, startIdx, offset, 10);
                return this.emitNumericEntity(char, 2);
            }
        }
        this.addToNumericResult(str, startIdx, offset, 10);
        return -1;
    }
    /**
     * Validate and emit a numeric entity.
     *
     * Implements the logic from the `Hexademical character reference start
     * state` and `Numeric character reference end state` in the HTML spec.
     *
     * @param lastCp The last code point of the entity. Used to see if the
     *               entity was terminated with a semicolon.
     * @param expectedLength The minimum number of characters that should be
     *                       consumed. Used to validate that at least one digit
     *                       was consumed.
     * @returns The number of characters that were consumed.
     */
    emitNumericEntity(lastCp, expectedLength) {
        var _a;
        // Ensure we consumed at least one digit.
        if (this.consumed <= expectedLength) {
            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);
            return 0;
        }
        // Figure out if this is a legit end of the entity
        if (lastCp === CharCodes.SEMI) {
            this.consumed += 1;
        }
        else if (this.decodeMode === DecodingMode.Strict) {
            return 0;
        }
        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);
        if (this.errors) {
            if (lastCp !== CharCodes.SEMI) {
                this.errors.missingSemicolonAfterCharacterReference();
            }
            this.errors.validateNumericCharacterReference(this.result);
        }
        return this.consumed;
    }
    /**
     * Parses a named entity.
     *
     * Equivalent to the `Named character reference state` in the HTML spec.
     *
     * @param str The string containing the entity (or a continuation of the entity).
     * @param offset The current offset.
     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
     */
    stateNamedEntity(str, offset) {
        const { decodeTree } = this;
        let current = decodeTree[this.treeIndex];
        // The mask is the number of bytes of the value, including the current byte.
        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;
        for (; offset < str.length; offset++, this.excess++) {
            const char = str.charCodeAt(offset);
            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);
            if (this.treeIndex < 0) {
                return this.result === 0 ||
                    // If we are parsing an attribute
                    (this.decodeMode === DecodingMode.Attribute &&
                        // We shouldn't have consumed any characters after the entity,
                        (valueLength === 0 ||
                            // And there should be no invalid characters.
                            isEntityInAttributeInvalidEnd(char)))
                    ? 0
                    : this.emitNotTerminatedNamedEntity();
            }
            current = decodeTree[this.treeIndex];
            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;
            // If the branch is a value, store it and continue
            if (valueLength !== 0) {
                // If the entity is terminated by a semicolon, we are done.
                if (char === CharCodes.SEMI) {
                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);
                }
                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.
                if (this.decodeMode !== DecodingMode.Strict) {
                    this.result = this.treeIndex;
                    this.consumed += this.excess;
                    this.excess = 0;
                }
            }
        }
        return -1;
    }
    /**
     * Emit a named entity that was not terminated with a semicolon.
     *
     * @returns The number of characters consumed.
     */
    emitNotTerminatedNamedEntity() {
        var _a;
        const { result, decodeTree } = this;
        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;
        this.emitNamedEntityData(result, valueLength, this.consumed);
        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();
        return this.consumed;
    }
    /**
     * Emit a named entity.
     *
     * @param result The index of the entity in the decode tree.
     * @param valueLength The number of bytes in the entity.
     * @param consumed The number of characters consumed.
     *
     * @returns The number of characters consumed.
     */
    emitNamedEntityData(result, valueLength, consumed) {
        const { decodeTree } = this;
        this.emitCodePoint(valueLength === 1
            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH
            : decodeTree[result + 1], consumed);
        if (valueLength === 3) {
            // For multi-byte values, we need to emit the second byte.
            this.emitCodePoint(decodeTree[result + 2], consumed);
        }
        return consumed;
    }
    /**
     * Signal to the parser that the end of the input was reached.
     *
     * Remaining data will be emitted and relevant errors will be produced.
     *
     * @returns The number of characters consumed.
     */
    end() {
        var _a;
        switch (this.state) {
            case EntityDecoderState.NamedEntity: {
                // Emit a named entity if we have one.
                return this.result !== 0 &&
                    (this.decodeMode !== DecodingMode.Attribute ||
                        this.result === this.treeIndex)
                    ? this.emitNotTerminatedNamedEntity()
                    : 0;
            }
            // Otherwise, emit a numeric entity if we have one.
            case EntityDecoderState.NumericDecimal: {
                return this.emitNumericEntity(0, 2);
            }
            case EntityDecoderState.NumericHex: {
                return this.emitNumericEntity(0, 3);
            }
            case EntityDecoderState.NumericStart: {
                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);
                return 0;
            }
            case EntityDecoderState.EntityStart: {
                // Return 0 if we have no entity.
                return 0;
            }
        }
    }
}
/**
 * Creates a function that decodes entities in a string.
 *
 * @param decodeTree The decode tree.
 * @returns A function that decodes entities in a string.
 */
function getDecoder(decodeTree) {
    let ret = "";
    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));
    return function decodeWithTrie(str, decodeMode) {
        let lastIndex = 0;
        let offset = 0;
        while ((offset = str.indexOf("&", offset)) >= 0) {
            ret += str.slice(lastIndex, offset);
            decoder.startEntity(decodeMode);
            const len = decoder.write(str, 
            // Skip the "&"
            offset + 1);
            if (len < 0) {
                lastIndex = offset + decoder.end();
                break;
            }
            lastIndex = offset + len;
            // If `len` is 0, skip the current `&` and continue.
            offset = len === 0 ? lastIndex + 1 : lastIndex;
        }
        const result = ret + str.slice(lastIndex);
        // Make sure we don't keep a reference to the final string.
        ret = "";
        return result;
    };
}
/**
 * Determines the branch of the current node that is taken given the current
 * character. This function is used to traverse the trie.
 *
 * @param decodeTree The trie.
 * @param current The current node.
 * @param nodeIdx The index right after the current node and its value.
 * @param char The current character.
 * @returns The index of the next node, or -1 if no branch is taken.
 */
function determineBranch(decodeTree, current, nodeIdx, char) {
    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;
    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;
    // Case 1: Single branch encoded in jump offset
    if (branchCount === 0) {
        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;
    }
    // Case 2: Multiple branches encoded in jump table
    if (jumpOffset) {
        const value = char - jumpOffset;
        return value < 0 || value >= branchCount
            ? -1
            : decodeTree[nodeIdx + value] - 1;
    }
    // Case 3: Multiple branches encoded in dictionary
    // Binary search for the character.
    let lo = nodeIdx;
    let hi = lo + branchCount - 1;
    while (lo <= hi) {
        const mid = (lo + hi) >>> 1;
        const midVal = decodeTree[mid];
        if (midVal < char) {
            lo = mid + 1;
        }
        else if (midVal > char) {
            hi = mid - 1;
        }
        else {
            return decodeTree[mid + branchCount];
        }
    }
    return -1;
}
getDecoder(htmlDecodeTree);
getDecoder(xmlDecodeTree);

/** All valid namespaces in HTML. */
var NS;
(function (NS) {
    NS["HTML"] = "http://www.w3.org/1999/xhtml";
    NS["MATHML"] = "http://www.w3.org/1998/Math/MathML";
    NS["SVG"] = "http://www.w3.org/2000/svg";
    NS["XLINK"] = "http://www.w3.org/1999/xlink";
    NS["XML"] = "http://www.w3.org/XML/1998/namespace";
    NS["XMLNS"] = "http://www.w3.org/2000/xmlns/";
})(NS || (NS = {}));
var ATTRS;
(function (ATTRS) {
    ATTRS["TYPE"] = "type";
    ATTRS["ACTION"] = "action";
    ATTRS["ENCODING"] = "encoding";
    ATTRS["PROMPT"] = "prompt";
    ATTRS["NAME"] = "name";
    ATTRS["COLOR"] = "color";
    ATTRS["FACE"] = "face";
    ATTRS["SIZE"] = "size";
})(ATTRS || (ATTRS = {}));
/**
 * The mode of the document.
 *
 * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}
 */
var DOCUMENT_MODE;
(function (DOCUMENT_MODE) {
    DOCUMENT_MODE["NO_QUIRKS"] = "no-quirks";
    DOCUMENT_MODE["QUIRKS"] = "quirks";
    DOCUMENT_MODE["LIMITED_QUIRKS"] = "limited-quirks";
})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));
var TAG_NAMES;
(function (TAG_NAMES) {
    TAG_NAMES["A"] = "a";
    TAG_NAMES["ADDRESS"] = "address";
    TAG_NAMES["ANNOTATION_XML"] = "annotation-xml";
    TAG_NAMES["APPLET"] = "applet";
    TAG_NAMES["AREA"] = "area";
    TAG_NAMES["ARTICLE"] = "article";
    TAG_NAMES["ASIDE"] = "aside";
    TAG_NAMES["B"] = "b";
    TAG_NAMES["BASE"] = "base";
    TAG_NAMES["BASEFONT"] = "basefont";
    TAG_NAMES["BGSOUND"] = "bgsound";
    TAG_NAMES["BIG"] = "big";
    TAG_NAMES["BLOCKQUOTE"] = "blockquote";
    TAG_NAMES["BODY"] = "body";
    TAG_NAMES["BR"] = "br";
    TAG_NAMES["BUTTON"] = "button";
    TAG_NAMES["CAPTION"] = "caption";
    TAG_NAMES["CENTER"] = "center";
    TAG_NAMES["CODE"] = "code";
    TAG_NAMES["COL"] = "col";
    TAG_NAMES["COLGROUP"] = "colgroup";
    TAG_NAMES["DD"] = "dd";
    TAG_NAMES["DESC"] = "desc";
    TAG_NAMES["DETAILS"] = "details";
    TAG_NAMES["DIALOG"] = "dialog";
    TAG_NAMES["DIR"] = "dir";
    TAG_NAMES["DIV"] = "div";
    TAG_NAMES["DL"] = "dl";
    TAG_NAMES["DT"] = "dt";
    TAG_NAMES["EM"] = "em";
    TAG_NAMES["EMBED"] = "embed";
    TAG_NAMES["FIELDSET"] = "fieldset";
    TAG_NAMES["FIGCAPTION"] = "figcaption";
    TAG_NAMES["FIGURE"] = "figure";
    TAG_NAMES["FONT"] = "font";
    TAG_NAMES["FOOTER"] = "footer";
    TAG_NAMES["FOREIGN_OBJECT"] = "foreignObject";
    TAG_NAMES["FORM"] = "form";
    TAG_NAMES["FRAME"] = "frame";
    TAG_NAMES["FRAMESET"] = "frameset";
    TAG_NAMES["H1"] = "h1";
    TAG_NAMES["H2"] = "h2";
    TAG_NAMES["H3"] = "h3";
    TAG_NAMES["H4"] = "h4";
    TAG_NAMES["H5"] = "h5";
    TAG_NAMES["H6"] = "h6";
    TAG_NAMES["HEAD"] = "head";
    TAG_NAMES["HEADER"] = "header";
    TAG_NAMES["HGROUP"] = "hgroup";
    TAG_NAMES["HR"] = "hr";
    TAG_NAMES["HTML"] = "html";
    TAG_NAMES["I"] = "i";
    TAG_NAMES["IMG"] = "img";
    TAG_NAMES["IMAGE"] = "image";
    TAG_NAMES["INPUT"] = "input";
    TAG_NAMES["IFRAME"] = "iframe";
    TAG_NAMES["KEYGEN"] = "keygen";
    TAG_NAMES["LABEL"] = "label";
    TAG_NAMES["LI"] = "li";
    TAG_NAMES["LINK"] = "link";
    TAG_NAMES["LISTING"] = "listing";
    TAG_NAMES["MAIN"] = "main";
    TAG_NAMES["MALIGNMARK"] = "malignmark";
    TAG_NAMES["MARQUEE"] = "marquee";
    TAG_NAMES["MATH"] = "math";
    TAG_NAMES["MENU"] = "menu";
    TAG_NAMES["META"] = "meta";
    TAG_NAMES["MGLYPH"] = "mglyph";
    TAG_NAMES["MI"] = "mi";
    TAG_NAMES["MO"] = "mo";
    TAG_NAMES["MN"] = "mn";
    TAG_NAMES["MS"] = "ms";
    TAG_NAMES["MTEXT"] = "mtext";
    TAG_NAMES["NAV"] = "nav";
    TAG_NAMES["NOBR"] = "nobr";
    TAG_NAMES["NOFRAMES"] = "noframes";
    TAG_NAMES["NOEMBED"] = "noembed";
    TAG_NAMES["NOSCRIPT"] = "noscript";
    TAG_NAMES["OBJECT"] = "object";
    TAG_NAMES["OL"] = "ol";
    TAG_NAMES["OPTGROUP"] = "optgroup";
    TAG_NAMES["OPTION"] = "option";
    TAG_NAMES["P"] = "p";
    TAG_NAMES["PARAM"] = "param";
    TAG_NAMES["PLAINTEXT"] = "plaintext";
    TAG_NAMES["PRE"] = "pre";
    TAG_NAMES["RB"] = "rb";
    TAG_NAMES["RP"] = "rp";
    TAG_NAMES["RT"] = "rt";
    TAG_NAMES["RTC"] = "rtc";
    TAG_NAMES["RUBY"] = "ruby";
    TAG_NAMES["S"] = "s";
    TAG_NAMES["SCRIPT"] = "script";
    TAG_NAMES["SEARCH"] = "search";
    TAG_NAMES["SECTION"] = "section";
    TAG_NAMES["SELECT"] = "select";
    TAG_NAMES["SOURCE"] = "source";
    TAG_NAMES["SMALL"] = "small";
    TAG_NAMES["SPAN"] = "span";
    TAG_NAMES["STRIKE"] = "strike";
    TAG_NAMES["STRONG"] = "strong";
    TAG_NAMES["STYLE"] = "style";
    TAG_NAMES["SUB"] = "sub";
    TAG_NAMES["SUMMARY"] = "summary";
    TAG_NAMES["SUP"] = "sup";
    TAG_NAMES["TABLE"] = "table";
    TAG_NAMES["TBODY"] = "tbody";
    TAG_NAMES["TEMPLATE"] = "template";
    TAG_NAMES["TEXTAREA"] = "textarea";
    TAG_NAMES["TFOOT"] = "tfoot";
    TAG_NAMES["TD"] = "td";
    TAG_NAMES["TH"] = "th";
    TAG_NAMES["THEAD"] = "thead";
    TAG_NAMES["TITLE"] = "title";
    TAG_NAMES["TR"] = "tr";
    TAG_NAMES["TRACK"] = "track";
    TAG_NAMES["TT"] = "tt";
    TAG_NAMES["U"] = "u";
    TAG_NAMES["UL"] = "ul";
    TAG_NAMES["SVG"] = "svg";
    TAG_NAMES["VAR"] = "var";
    TAG_NAMES["WBR"] = "wbr";
    TAG_NAMES["XMP"] = "xmp";
})(TAG_NAMES || (TAG_NAMES = {}));
/**
 * Tag IDs are numeric IDs for known tag names.
 *
 * We use tag IDs to improve the performance of tag name comparisons.
 */
var TAG_ID;
(function (TAG_ID) {
    TAG_ID[TAG_ID["UNKNOWN"] = 0] = "UNKNOWN";
    TAG_ID[TAG_ID["A"] = 1] = "A";
    TAG_ID[TAG_ID["ADDRESS"] = 2] = "ADDRESS";
    TAG_ID[TAG_ID["ANNOTATION_XML"] = 3] = "ANNOTATION_XML";
    TAG_ID[TAG_ID["APPLET"] = 4] = "APPLET";
    TAG_ID[TAG_ID["AREA"] = 5] = "AREA";
    TAG_ID[TAG_ID["ARTICLE"] = 6] = "ARTICLE";
    TAG_ID[TAG_ID["ASIDE"] = 7] = "ASIDE";
    TAG_ID[TAG_ID["B"] = 8] = "B";
    TAG_ID[TAG_ID["BASE"] = 9] = "BASE";
    TAG_ID[TAG_ID["BASEFONT"] = 10] = "BASEFONT";
    TAG_ID[TAG_ID["BGSOUND"] = 11] = "BGSOUND";
    TAG_ID[TAG_ID["BIG"] = 12] = "BIG";
    TAG_ID[TAG_ID["BLOCKQUOTE"] = 13] = "BLOCKQUOTE";
    TAG_ID[TAG_ID["BODY"] = 14] = "BODY";
    TAG_ID[TAG_ID["BR"] = 15] = "BR";
    TAG_ID[TAG_ID["BUTTON"] = 16] = "BUTTON";
    TAG_ID[TAG_ID["CAPTION"] = 17] = "CAPTION";
    TAG_ID[TAG_ID["CENTER"] = 18] = "CENTER";
    TAG_ID[TAG_ID["CODE"] = 19] = "CODE";
    TAG_ID[TAG_ID["COL"] = 20] = "COL";
    TAG_ID[TAG_ID["COLGROUP"] = 21] = "COLGROUP";
    TAG_ID[TAG_ID["DD"] = 22] = "DD";
    TAG_ID[TAG_ID["DESC"] = 23] = "DESC";
    TAG_ID[TAG_ID["DETAILS"] = 24] = "DETAILS";
    TAG_ID[TAG_ID["DIALOG"] = 25] = "DIALOG";
    TAG_ID[TAG_ID["DIR"] = 26] = "DIR";
    TAG_ID[TAG_ID["DIV"] = 27] = "DIV";
    TAG_ID[TAG_ID["DL"] = 28] = "DL";
    TAG_ID[TAG_ID["DT"] = 29] = "DT";
    TAG_ID[TAG_ID["EM"] = 30] = "EM";
    TAG_ID[TAG_ID["EMBED"] = 31] = "EMBED";
    TAG_ID[TAG_ID["FIELDSET"] = 32] = "FIELDSET";
    TAG_ID[TAG_ID["FIGCAPTION"] = 33] = "FIGCAPTION";
    TAG_ID[TAG_ID["FIGURE"] = 34] = "FIGURE";
    TAG_ID[TAG_ID["FONT"] = 35] = "FONT";
    TAG_ID[TAG_ID["FOOTER"] = 36] = "FOOTER";
    TAG_ID[TAG_ID["FOREIGN_OBJECT"] = 37] = "FOREIGN_OBJECT";
    TAG_ID[TAG_ID["FORM"] = 38] = "FORM";
    TAG_ID[TAG_ID["FRAME"] = 39] = "FRAME";
    TAG_ID[TAG_ID["FRAMESET"] = 40] = "FRAMESET";
    TAG_ID[TAG_ID["H1"] = 41] = "H1";
    TAG_ID[TAG_ID["H2"] = 42] = "H2";
    TAG_ID[TAG_ID["H3"] = 43] = "H3";
    TAG_ID[TAG_ID["H4"] = 44] = "H4";
    TAG_ID[TAG_ID["H5"] = 45] = "H5";
    TAG_ID[TAG_ID["H6"] = 46] = "H6";
    TAG_ID[TAG_ID["HEAD"] = 47] = "HEAD";
    TAG_ID[TAG_ID["HEADER"] = 48] = "HEADER";
    TAG_ID[TAG_ID["HGROUP"] = 49] = "HGROUP";
    TAG_ID[TAG_ID["HR"] = 50] = "HR";
    TAG_ID[TAG_ID["HTML"] = 51] = "HTML";
    TAG_ID[TAG_ID["I"] = 52] = "I";
    TAG_ID[TAG_ID["IMG"] = 53] = "IMG";
    TAG_ID[TAG_ID["IMAGE"] = 54] = "IMAGE";
    TAG_ID[TAG_ID["INPUT"] = 55] = "INPUT";
    TAG_ID[TAG_ID["IFRAME"] = 56] = "IFRAME";
    TAG_ID[TAG_ID["KEYGEN"] = 57] = "KEYGEN";
    TAG_ID[TAG_ID["LABEL"] = 58] = "LABEL";
    TAG_ID[TAG_ID["LI"] = 59] = "LI";
    TAG_ID[TAG_ID["LINK"] = 60] = "LINK";
    TAG_ID[TAG_ID["LISTING"] = 61] = "LISTING";
    TAG_ID[TAG_ID["MAIN"] = 62] = "MAIN";
    TAG_ID[TAG_ID["MALIGNMARK"] = 63] = "MALIGNMARK";
    TAG_ID[TAG_ID["MARQUEE"] = 64] = "MARQUEE";
    TAG_ID[TAG_ID["MATH"] = 65] = "MATH";
    TAG_ID[TAG_ID["MENU"] = 66] = "MENU";
    TAG_ID[TAG_ID["META"] = 67] = "META";
    TAG_ID[TAG_ID["MGLYPH"] = 68] = "MGLYPH";
    TAG_ID[TAG_ID["MI"] = 69] = "MI";
    TAG_ID[TAG_ID["MO"] = 70] = "MO";
    TAG_ID[TAG_ID["MN"] = 71] = "MN";
    TAG_ID[TAG_ID["MS"] = 72] = "MS";
    TAG_ID[TAG_ID["MTEXT"] = 73] = "MTEXT";
    TAG_ID[TAG_ID["NAV"] = 74] = "NAV";
    TAG_ID[TAG_ID["NOBR"] = 75] = "NOBR";
    TAG_ID[TAG_ID["NOFRAMES"] = 76] = "NOFRAMES";
    TAG_ID[TAG_ID["NOEMBED"] = 77] = "NOEMBED";
    TAG_ID[TAG_ID["NOSCRIPT"] = 78] = "NOSCRIPT";
    TAG_ID[TAG_ID["OBJECT"] = 79] = "OBJECT";
    TAG_ID[TAG_ID["OL"] = 80] = "OL";
    TAG_ID[TAG_ID["OPTGROUP"] = 81] = "OPTGROUP";
    TAG_ID[TAG_ID["OPTION"] = 82] = "OPTION";
    TAG_ID[TAG_ID["P"] = 83] = "P";
    TAG_ID[TAG_ID["PARAM"] = 84] = "PARAM";
    TAG_ID[TAG_ID["PLAINTEXT"] = 85] = "PLAINTEXT";
    TAG_ID[TAG_ID["PRE"] = 86] = "PRE";
    TAG_ID[TAG_ID["RB"] = 87] = "RB";
    TAG_ID[TAG_ID["RP"] = 88] = "RP";
    TAG_ID[TAG_ID["RT"] = 89] = "RT";
    TAG_ID[TAG_ID["RTC"] = 90] = "RTC";
    TAG_ID[TAG_ID["RUBY"] = 91] = "RUBY";
    TAG_ID[TAG_ID["S"] = 92] = "S";
    TAG_ID[TAG_ID["SCRIPT"] = 93] = "SCRIPT";
    TAG_ID[TAG_ID["SEARCH"] = 94] = "SEARCH";
    TAG_ID[TAG_ID["SECTION"] = 95] = "SECTION";
    TAG_ID[TAG_ID["SELECT"] = 96] = "SELECT";
    TAG_ID[TAG_ID["SOURCE"] = 97] = "SOURCE";
    TAG_ID[TAG_ID["SMALL"] = 98] = "SMALL";
    TAG_ID[TAG_ID["SPAN"] = 99] = "SPAN";
    TAG_ID[TAG_ID["STRIKE"] = 100] = "STRIKE";
    TAG_ID[TAG_ID["STRONG"] = 101] = "STRONG";
    TAG_ID[TAG_ID["STYLE"] = 102] = "STYLE";
    TAG_ID[TAG_ID["SUB"] = 103] = "SUB";
    TAG_ID[TAG_ID["SUMMARY"] = 104] = "SUMMARY";
    TAG_ID[TAG_ID["SUP"] = 105] = "SUP";
    TAG_ID[TAG_ID["TABLE"] = 106] = "TABLE";
    TAG_ID[TAG_ID["TBODY"] = 107] = "TBODY";
    TAG_ID[TAG_ID["TEMPLATE"] = 108] = "TEMPLATE";
    TAG_ID[TAG_ID["TEXTAREA"] = 109] = "TEXTAREA";
    TAG_ID[TAG_ID["TFOOT"] = 110] = "TFOOT";
    TAG_ID[TAG_ID["TD"] = 111] = "TD";
    TAG_ID[TAG_ID["TH"] = 112] = "TH";
    TAG_ID[TAG_ID["THEAD"] = 113] = "THEAD";
    TAG_ID[TAG_ID["TITLE"] = 114] = "TITLE";
    TAG_ID[TAG_ID["TR"] = 115] = "TR";
    TAG_ID[TAG_ID["TRACK"] = 116] = "TRACK";
    TAG_ID[TAG_ID["TT"] = 117] = "TT";
    TAG_ID[TAG_ID["U"] = 118] = "U";
    TAG_ID[TAG_ID["UL"] = 119] = "UL";
    TAG_ID[TAG_ID["SVG"] = 120] = "SVG";
    TAG_ID[TAG_ID["VAR"] = 121] = "VAR";
    TAG_ID[TAG_ID["WBR"] = 122] = "WBR";
    TAG_ID[TAG_ID["XMP"] = 123] = "XMP";
})(TAG_ID || (TAG_ID = {}));
const TAG_NAME_TO_ID = new Map([
    [TAG_NAMES.A, TAG_ID.A],
    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],
    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],
    [TAG_NAMES.APPLET, TAG_ID.APPLET],
    [TAG_NAMES.AREA, TAG_ID.AREA],
    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],
    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],
    [TAG_NAMES.B, TAG_ID.B],
    [TAG_NAMES.BASE, TAG_ID.BASE],
    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],
    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],
    [TAG_NAMES.BIG, TAG_ID.BIG],
    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],
    [TAG_NAMES.BODY, TAG_ID.BODY],
    [TAG_NAMES.BR, TAG_ID.BR],
    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],
    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],
    [TAG_NAMES.CENTER, TAG_ID.CENTER],
    [TAG_NAMES.CODE, TAG_ID.CODE],
    [TAG_NAMES.COL, TAG_ID.COL],
    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],
    [TAG_NAMES.DD, TAG_ID.DD],
    [TAG_NAMES.DESC, TAG_ID.DESC],
    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],
    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],
    [TAG_NAMES.DIR, TAG_ID.DIR],
    [TAG_NAMES.DIV, TAG_ID.DIV],
    [TAG_NAMES.DL, TAG_ID.DL],
    [TAG_NAMES.DT, TAG_ID.DT],
    [TAG_NAMES.EM, TAG_ID.EM],
    [TAG_NAMES.EMBED, TAG_ID.EMBED],
    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],
    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],
    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],
    [TAG_NAMES.FONT, TAG_ID.FONT],
    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],
    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],
    [TAG_NAMES.FORM, TAG_ID.FORM],
    [TAG_NAMES.FRAME, TAG_ID.FRAME],
    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],
    [TAG_NAMES.H1, TAG_ID.H1],
    [TAG_NAMES.H2, TAG_ID.H2],
    [TAG_NAMES.H3, TAG_ID.H3],
    [TAG_NAMES.H4, TAG_ID.H4],
    [TAG_NAMES.H5, TAG_ID.H5],
    [TAG_NAMES.H6, TAG_ID.H6],
    [TAG_NAMES.HEAD, TAG_ID.HEAD],
    [TAG_NAMES.HEADER, TAG_ID.HEADER],
    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],
    [TAG_NAMES.HR, TAG_ID.HR],
    [TAG_NAMES.HTML, TAG_ID.HTML],
    [TAG_NAMES.I, TAG_ID.I],
    [TAG_NAMES.IMG, TAG_ID.IMG],
    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],
    [TAG_NAMES.INPUT, TAG_ID.INPUT],
    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],
    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],
    [TAG_NAMES.LABEL, TAG_ID.LABEL],
    [TAG_NAMES.LI, TAG_ID.LI],
    [TAG_NAMES.LINK, TAG_ID.LINK],
    [TAG_NAMES.LISTING, TAG_ID.LISTING],
    [TAG_NAMES.MAIN, TAG_ID.MAIN],
    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],
    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],
    [TAG_NAMES.MATH, TAG_ID.MATH],
    [TAG_NAMES.MENU, TAG_ID.MENU],
    [TAG_NAMES.META, TAG_ID.META],
    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],
    [TAG_NAMES.MI, TAG_ID.MI],
    [TAG_NAMES.MO, TAG_ID.MO],
    [TAG_NAMES.MN, TAG_ID.MN],
    [TAG_NAMES.MS, TAG_ID.MS],
    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],
    [TAG_NAMES.NAV, TAG_ID.NAV],
    [TAG_NAMES.NOBR, TAG_ID.NOBR],
    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],
    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],
    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],
    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],
    [TAG_NAMES.OL, TAG_ID.OL],
    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],
    [TAG_NAMES.OPTION, TAG_ID.OPTION],
    [TAG_NAMES.P, TAG_ID.P],
    [TAG_NAMES.PARAM, TAG_ID.PARAM],
    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],
    [TAG_NAMES.PRE, TAG_ID.PRE],
    [TAG_NAMES.RB, TAG_ID.RB],
    [TAG_NAMES.RP, TAG_ID.RP],
    [TAG_NAMES.RT, TAG_ID.RT],
    [TAG_NAMES.RTC, TAG_ID.RTC],
    [TAG_NAMES.RUBY, TAG_ID.RUBY],
    [TAG_NAMES.S, TAG_ID.S],
    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],
    [TAG_NAMES.SEARCH, TAG_ID.SEARCH],
    [TAG_NAMES.SECTION, TAG_ID.SECTION],
    [TAG_NAMES.SELECT, TAG_ID.SELECT],
    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],
    [TAG_NAMES.SMALL, TAG_ID.SMALL],
    [TAG_NAMES.SPAN, TAG_ID.SPAN],
    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],
    [TAG_NAMES.STRONG, TAG_ID.STRONG],
    [TAG_NAMES.STYLE, TAG_ID.STYLE],
    [TAG_NAMES.SUB, TAG_ID.SUB],
    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],
    [TAG_NAMES.SUP, TAG_ID.SUP],
    [TAG_NAMES.TABLE, TAG_ID.TABLE],
    [TAG_NAMES.TBODY, TAG_ID.TBODY],
    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],
    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],
    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],
    [TAG_NAMES.TD, TAG_ID.TD],
    [TAG_NAMES.TH, TAG_ID.TH],
    [TAG_NAMES.THEAD, TAG_ID.THEAD],
    [TAG_NAMES.TITLE, TAG_ID.TITLE],
    [TAG_NAMES.TR, TAG_ID.TR],
    [TAG_NAMES.TRACK, TAG_ID.TRACK],
    [TAG_NAMES.TT, TAG_ID.TT],
    [TAG_NAMES.U, TAG_ID.U],
    [TAG_NAMES.UL, TAG_ID.UL],
    [TAG_NAMES.SVG, TAG_ID.SVG],
    [TAG_NAMES.VAR, TAG_ID.VAR],
    [TAG_NAMES.WBR, TAG_ID.WBR],
    [TAG_NAMES.XMP, TAG_ID.XMP],
]);
function getTagID(tagName) {
    var _a;
    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;
}
const $ = TAG_ID;
const SPECIAL_ELEMENTS = {
    [NS.HTML]: new Set([
        $.ADDRESS,
        $.APPLET,
        $.AREA,
        $.ARTICLE,
        $.ASIDE,
        $.BASE,
        $.BASEFONT,
        $.BGSOUND,
        $.BLOCKQUOTE,
        $.BODY,
        $.BR,
        $.BUTTON,
        $.CAPTION,
        $.CENTER,
        $.COL,
        $.COLGROUP,
        $.DD,
        $.DETAILS,
        $.DIR,
        $.DIV,
        $.DL,
        $.DT,
        $.EMBED,
        $.FIELDSET,
        $.FIGCAPTION,
        $.FIGURE,
        $.FOOTER,
        $.FORM,
        $.FRAME,
        $.FRAMESET,
        $.H1,
        $.H2,
        $.H3,
        $.H4,
        $.H5,
        $.H6,
        $.HEAD,
        $.HEADER,
        $.HGROUP,
        $.HR,
        $.HTML,
        $.IFRAME,
        $.IMG,
        $.INPUT,
        $.LI,
        $.LINK,
        $.LISTING,
        $.MAIN,
        $.MARQUEE,
        $.MENU,
        $.META,
        $.NAV,
        $.NOEMBED,
        $.NOFRAMES,
        $.NOSCRIPT,
        $.OBJECT,
        $.OL,
        $.P,
        $.PARAM,
        $.PLAINTEXT,
        $.PRE,
        $.SCRIPT,
        $.SECTION,
        $.SELECT,
        $.SOURCE,
        $.STYLE,
        $.SUMMARY,
        $.TABLE,
        $.TBODY,
        $.TD,
        $.TEMPLATE,
        $.TEXTAREA,
        $.TFOOT,
        $.TH,
        $.THEAD,
        $.TITLE,
        $.TR,
        $.TRACK,
        $.UL,
        $.WBR,
        $.XMP,
    ]),
    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),
    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),
    [NS.XLINK]: new Set(),
    [NS.XML]: new Set(),
    [NS.XMLNS]: new Set(),
};
const NUMBERED_HEADERS = new Set([$.H1, $.H2, $.H3, $.H4, $.H5, $.H6]);
const UNESCAPED_TEXT = new Set([
    TAG_NAMES.STYLE,
    TAG_NAMES.SCRIPT,
    TAG_NAMES.XMP,
    TAG_NAMES.IFRAME,
    TAG_NAMES.NOEMBED,
    TAG_NAMES.NOFRAMES,
    TAG_NAMES.PLAINTEXT,
]);
function hasUnescapedText(tn, scriptingEnabled) {
    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);
}

//States
var State$2;
(function (State) {
    State[State["DATA"] = 0] = "DATA";
    State[State["RCDATA"] = 1] = "RCDATA";
    State[State["RAWTEXT"] = 2] = "RAWTEXT";
    State[State["SCRIPT_DATA"] = 3] = "SCRIPT_DATA";
    State[State["PLAINTEXT"] = 4] = "PLAINTEXT";
    State[State["TAG_OPEN"] = 5] = "TAG_OPEN";
    State[State["END_TAG_OPEN"] = 6] = "END_TAG_OPEN";
    State[State["TAG_NAME"] = 7] = "TAG_NAME";
    State[State["RCDATA_LESS_THAN_SIGN"] = 8] = "RCDATA_LESS_THAN_SIGN";
    State[State["RCDATA_END_TAG_OPEN"] = 9] = "RCDATA_END_TAG_OPEN";
    State[State["RCDATA_END_TAG_NAME"] = 10] = "RCDATA_END_TAG_NAME";
    State[State["RAWTEXT_LESS_THAN_SIGN"] = 11] = "RAWTEXT_LESS_THAN_SIGN";
    State[State["RAWTEXT_END_TAG_OPEN"] = 12] = "RAWTEXT_END_TAG_OPEN";
    State[State["RAWTEXT_END_TAG_NAME"] = 13] = "RAWTEXT_END_TAG_NAME";
    State[State["SCRIPT_DATA_LESS_THAN_SIGN"] = 14] = "SCRIPT_DATA_LESS_THAN_SIGN";
    State[State["SCRIPT_DATA_END_TAG_OPEN"] = 15] = "SCRIPT_DATA_END_TAG_OPEN";
    State[State["SCRIPT_DATA_END_TAG_NAME"] = 16] = "SCRIPT_DATA_END_TAG_NAME";
    State[State["SCRIPT_DATA_ESCAPE_START"] = 17] = "SCRIPT_DATA_ESCAPE_START";
    State[State["SCRIPT_DATA_ESCAPE_START_DASH"] = 18] = "SCRIPT_DATA_ESCAPE_START_DASH";
    State[State["SCRIPT_DATA_ESCAPED"] = 19] = "SCRIPT_DATA_ESCAPED";
    State[State["SCRIPT_DATA_ESCAPED_DASH"] = 20] = "SCRIPT_DATA_ESCAPED_DASH";
    State[State["SCRIPT_DATA_ESCAPED_DASH_DASH"] = 21] = "SCRIPT_DATA_ESCAPED_DASH_DASH";
    State[State["SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN"] = 22] = "SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN";
    State[State["SCRIPT_DATA_ESCAPED_END_TAG_OPEN"] = 23] = "SCRIPT_DATA_ESCAPED_END_TAG_OPEN";
    State[State["SCRIPT_DATA_ESCAPED_END_TAG_NAME"] = 24] = "SCRIPT_DATA_ESCAPED_END_TAG_NAME";
    State[State["SCRIPT_DATA_DOUBLE_ESCAPE_START"] = 25] = "SCRIPT_DATA_DOUBLE_ESCAPE_START";
    State[State["SCRIPT_DATA_DOUBLE_ESCAPED"] = 26] = "SCRIPT_DATA_DOUBLE_ESCAPED";
    State[State["SCRIPT_DATA_DOUBLE_ESCAPED_DASH"] = 27] = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH";
    State[State["SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH"] = 28] = "SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH";
    State[State["SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN"] = 29] = "SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN";
    State[State["SCRIPT_DATA_DOUBLE_ESCAPE_END"] = 30] = "SCRIPT_DATA_DOUBLE_ESCAPE_END";
    State[State["BEFORE_ATTRIBUTE_NAME"] = 31] = "BEFORE_ATTRIBUTE_NAME";
    State[State["ATTRIBUTE_NAME"] = 32] = "ATTRIBUTE_NAME";
    State[State["AFTER_ATTRIBUTE_NAME"] = 33] = "AFTER_ATTRIBUTE_NAME";
    State[State["BEFORE_ATTRIBUTE_VALUE"] = 34] = "BEFORE_ATTRIBUTE_VALUE";
    State[State["ATTRIBUTE_VALUE_DOUBLE_QUOTED"] = 35] = "ATTRIBUTE_VALUE_DOUBLE_QUOTED";
    State[State["ATTRIBUTE_VALUE_SINGLE_QUOTED"] = 36] = "ATTRIBUTE_VALUE_SINGLE_QUOTED";
    State[State["ATTRIBUTE_VALUE_UNQUOTED"] = 37] = "ATTRIBUTE_VALUE_UNQUOTED";
    State[State["AFTER_ATTRIBUTE_VALUE_QUOTED"] = 38] = "AFTER_ATTRIBUTE_VALUE_QUOTED";
    State[State["SELF_CLOSING_START_TAG"] = 39] = "SELF_CLOSING_START_TAG";
    State[State["BOGUS_COMMENT"] = 40] = "BOGUS_COMMENT";
    State[State["MARKUP_DECLARATION_OPEN"] = 41] = "MARKUP_DECLARATION_OPEN";
    State[State["COMMENT_START"] = 42] = "COMMENT_START";
    State[State["COMMENT_START_DASH"] = 43] = "COMMENT_START_DASH";
    State[State["COMMENT"] = 44] = "COMMENT";
    State[State["COMMENT_LESS_THAN_SIGN"] = 45] = "COMMENT_LESS_THAN_SIGN";
    State[State["COMMENT_LESS_THAN_SIGN_BANG"] = 46] = "COMMENT_LESS_THAN_SIGN_BANG";
    State[State["COMMENT_LESS_THAN_SIGN_BANG_DASH"] = 47] = "COMMENT_LESS_THAN_SIGN_BANG_DASH";
    State[State["COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH"] = 48] = "COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH";
    State[State["COMMENT_END_DASH"] = 49] = "COMMENT_END_DASH";
    State[State["COMMENT_END"] = 50] = "COMMENT_END";
    State[State["COMMENT_END_BANG"] = 51] = "COMMENT_END_BANG";
    State[State["DOCTYPE"] = 52] = "DOCTYPE";
    State[State["BEFORE_DOCTYPE_NAME"] = 53] = "BEFORE_DOCTYPE_NAME";
    State[State["DOCTYPE_NAME"] = 54] = "DOCTYPE_NAME";
    State[State["AFTER_DOCTYPE_NAME"] = 55] = "AFTER_DOCTYPE_NAME";
    State[State["AFTER_DOCTYPE_PUBLIC_KEYWORD"] = 56] = "AFTER_DOCTYPE_PUBLIC_KEYWORD";
    State[State["BEFORE_DOCTYPE_PUBLIC_IDENTIFIER"] = 57] = "BEFORE_DOCTYPE_PUBLIC_IDENTIFIER";
    State[State["DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED"] = 58] = "DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED";
    State[State["DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED"] = 59] = "DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED";
    State[State["AFTER_DOCTYPE_PUBLIC_IDENTIFIER"] = 60] = "AFTER_DOCTYPE_PUBLIC_IDENTIFIER";
    State[State["BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS"] = 61] = "BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS";
    State[State["AFTER_DOCTYPE_SYSTEM_KEYWORD"] = 62] = "AFTER_DOCTYPE_SYSTEM_KEYWORD";
    State[State["BEFORE_DOCTYPE_SYSTEM_IDENTIFIER"] = 63] = "BEFORE_DOCTYPE_SYSTEM_IDENTIFIER";
    State[State["DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED"] = 64] = "DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED";
    State[State["DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED"] = 65] = "DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED";
    State[State["AFTER_DOCTYPE_SYSTEM_IDENTIFIER"] = 66] = "AFTER_DOCTYPE_SYSTEM_IDENTIFIER";
    State[State["BOGUS_DOCTYPE"] = 67] = "BOGUS_DOCTYPE";
    State[State["CDATA_SECTION"] = 68] = "CDATA_SECTION";
    State[State["CDATA_SECTION_BRACKET"] = 69] = "CDATA_SECTION_BRACKET";
    State[State["CDATA_SECTION_END"] = 70] = "CDATA_SECTION_END";
    State[State["CHARACTER_REFERENCE"] = 71] = "CHARACTER_REFERENCE";
    State[State["AMBIGUOUS_AMPERSAND"] = 72] = "AMBIGUOUS_AMPERSAND";
})(State$2 || (State$2 = {}));
//Tokenizer initial states for different modes
const TokenizerMode = {
    DATA: State$2.DATA,
    RCDATA: State$2.RCDATA,
    RAWTEXT: State$2.RAWTEXT,
    SCRIPT_DATA: State$2.SCRIPT_DATA,
    PLAINTEXT: State$2.PLAINTEXT,
    CDATA_SECTION: State$2.CDATA_SECTION,
};
//Utils
//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline
//this functions if they will be situated in another module due to context switch.
//Always perform inlining check before modifying this functions ('node --trace-inlining').
function isAsciiDigit(cp) {
    return cp >= CODE_POINTS.DIGIT_0 && cp <= CODE_POINTS.DIGIT_9;
}
function isAsciiUpper(cp) {
    return cp >= CODE_POINTS.LATIN_CAPITAL_A && cp <= CODE_POINTS.LATIN_CAPITAL_Z;
}
function isAsciiLower(cp) {
    return cp >= CODE_POINTS.LATIN_SMALL_A && cp <= CODE_POINTS.LATIN_SMALL_Z;
}
function isAsciiLetter(cp) {
    return isAsciiLower(cp) || isAsciiUpper(cp);
}
function isAsciiAlphaNumeric(cp) {
    return isAsciiLetter(cp) || isAsciiDigit(cp);
}
function toAsciiLower(cp) {
    return cp + 32;
}
function isWhitespace(cp) {
    return cp === CODE_POINTS.SPACE || cp === CODE_POINTS.LINE_FEED || cp === CODE_POINTS.TABULATION || cp === CODE_POINTS.FORM_FEED;
}
function isScriptDataDoubleEscapeSequenceEnd(cp) {
    return isWhitespace(cp) || cp === CODE_POINTS.SOLIDUS || cp === CODE_POINTS.GREATER_THAN_SIGN;
}
function getErrorForNumericCharacterReference(code) {
    if (code === CODE_POINTS.NULL) {
        return ERR.nullCharacterReference;
    }
    else if (code > 1114111) {
        return ERR.characterReferenceOutsideUnicodeRange;
    }
    else if (isSurrogate(code)) {
        return ERR.surrogateCharacterReference;
    }
    else if (isUndefinedCodePoint(code)) {
        return ERR.noncharacterCharacterReference;
    }
    else if (isControlCodePoint(code) || code === CODE_POINTS.CARRIAGE_RETURN) {
        return ERR.controlCharacterReference;
    }
    return null;
}
//Tokenizer
class Tokenizer {
    constructor(options, handler) {
        this.options = options;
        this.handler = handler;
        this.paused = false;
        /** Ensures that the parsing loop isn't run multiple times at once. */
        this.inLoop = false;
        /**
         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,
         * and that it is not an integration point for either MathML or HTML.
         *
         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}
         */
        this.inForeignNode = false;
        this.lastStartTagName = '';
        this.active = false;
        this.state = State$2.DATA;
        this.returnState = State$2.DATA;
        this.entityStartPos = 0;
        this.consumedAfterSnapshot = -1;
        this.currentCharacterToken = null;
        this.currentToken = null;
        this.currentAttr = { name: '', value: '' };
        this.preprocessor = new Preprocessor(handler);
        this.currentLocation = this.getCurrentLocation(-1);
        this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) => {
            // Note: Set `pos` _before_ flushing, as flushing might drop
            // the current chunk and invalidate `entityStartPos`.
            this.preprocessor.pos = this.entityStartPos + consumed - 1;
            this._flushCodePointConsumedAsCharacterReference(cp);
        }, handler.onParseError
            ? {
                missingSemicolonAfterCharacterReference: () => {
                    this._err(ERR.missingSemicolonAfterCharacterReference, 1);
                },
                absenceOfDigitsInNumericCharacterReference: (consumed) => {
                    this._err(ERR.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + consumed);
                },
                validateNumericCharacterReference: (code) => {
                    const error = getErrorForNumericCharacterReference(code);
                    if (error)
                        this._err(error, 1);
                },
            }
            : undefined);
    }
    //Errors
    _err(code, cpOffset = 0) {
        var _a, _b;
        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code, cpOffset));
    }
    // NOTE: `offset` may never run across line boundaries.
    getCurrentLocation(offset) {
        if (!this.options.sourceCodeLocationInfo) {
            return null;
        }
        return {
            startLine: this.preprocessor.line,
            startCol: this.preprocessor.col - offset,
            startOffset: this.preprocessor.offset - offset,
            endLine: -1,
            endCol: -1,
            endOffset: -1,
        };
    }
    _runParsingLoop() {
        if (this.inLoop)
            return;
        this.inLoop = true;
        while (this.active && !this.paused) {
            this.consumedAfterSnapshot = 0;
            const cp = this._consume();
            if (!this._ensureHibernation()) {
                this._callState(cp);
            }
        }
        this.inLoop = false;
    }
    //API
    pause() {
        this.paused = true;
    }
    resume(writeCallback) {
        if (!this.paused) {
            throw new Error('Parser was already resumed');
        }
        this.paused = false;
        // Necessary for synchronous resume.
        if (this.inLoop)
            return;
        this._runParsingLoop();
        if (!this.paused) {
            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();
        }
    }
    write(chunk, isLastChunk, writeCallback) {
        this.active = true;
        this.preprocessor.write(chunk, isLastChunk);
        this._runParsingLoop();
        if (!this.paused) {
            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();
        }
    }
    insertHtmlAtCurrentPos(chunk) {
        this.active = true;
        this.preprocessor.insertHtmlAtCurrentPos(chunk);
        this._runParsingLoop();
    }
    //Hibernation
    _ensureHibernation() {
        if (this.preprocessor.endOfChunkHit) {
            this.preprocessor.retreat(this.consumedAfterSnapshot);
            this.consumedAfterSnapshot = 0;
            this.active = false;
            return true;
        }
        return false;
    }
    //Consumption
    _consume() {
        this.consumedAfterSnapshot++;
        return this.preprocessor.advance();
    }
    _advanceBy(count) {
        this.consumedAfterSnapshot += count;
        for (let i = 0; i < count; i++) {
            this.preprocessor.advance();
        }
    }
    _consumeSequenceIfMatch(pattern, caseSensitive) {
        if (this.preprocessor.startsWith(pattern, caseSensitive)) {
            // We will already have consumed one character before calling this method.
            this._advanceBy(pattern.length - 1);
            return true;
        }
        return false;
    }
    //Token creation
    _createStartTagToken() {
        this.currentToken = {
            type: TokenType$2.START_TAG,
            tagName: '',
            tagID: TAG_ID.UNKNOWN,
            selfClosing: false,
            ackSelfClosing: false,
            attrs: [],
            location: this.getCurrentLocation(1),
        };
    }
    _createEndTagToken() {
        this.currentToken = {
            type: TokenType$2.END_TAG,
            tagName: '',
            tagID: TAG_ID.UNKNOWN,
            selfClosing: false,
            ackSelfClosing: false,
            attrs: [],
            location: this.getCurrentLocation(2),
        };
    }
    _createCommentToken(offset) {
        this.currentToken = {
            type: TokenType$2.COMMENT,
            data: '',
            location: this.getCurrentLocation(offset),
        };
    }
    _createDoctypeToken(initialName) {
        this.currentToken = {
            type: TokenType$2.DOCTYPE,
            name: initialName,
            forceQuirks: false,
            publicId: null,
            systemId: null,
            location: this.currentLocation,
        };
    }
    _createCharacterToken(type, chars) {
        this.currentCharacterToken = {
            type,
            chars,
            location: this.currentLocation,
        };
    }
    //Tag attributes
    _createAttr(attrNameFirstCh) {
        this.currentAttr = {
            name: attrNameFirstCh,
            value: '',
        };
        this.currentLocation = this.getCurrentLocation(0);
    }
    _leaveAttrName() {
        var _a;
        var _b;
        const token = this.currentToken;
        if (getTokenAttr(token, this.currentAttr.name) === null) {
            token.attrs.push(this.currentAttr);
            if (token.location && this.currentLocation) {
                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));
                attrLocations[this.currentAttr.name] = this.currentLocation;
                // Set end location
                this._leaveAttrValue();
            }
        }
        else {
            this._err(ERR.duplicateAttribute);
        }
    }
    _leaveAttrValue() {
        if (this.currentLocation) {
            this.currentLocation.endLine = this.preprocessor.line;
            this.currentLocation.endCol = this.preprocessor.col;
            this.currentLocation.endOffset = this.preprocessor.offset;
        }
    }
    //Token emission
    prepareToken(ct) {
        this._emitCurrentCharacterToken(ct.location);
        this.currentToken = null;
        if (ct.location) {
            ct.location.endLine = this.preprocessor.line;
            ct.location.endCol = this.preprocessor.col + 1;
            ct.location.endOffset = this.preprocessor.offset + 1;
        }
        this.currentLocation = this.getCurrentLocation(-1);
    }
    emitCurrentTagToken() {
        const ct = this.currentToken;
        this.prepareToken(ct);
        ct.tagID = getTagID(ct.tagName);
        if (ct.type === TokenType$2.START_TAG) {
            this.lastStartTagName = ct.tagName;
            this.handler.onStartTag(ct);
        }
        else {
            if (ct.attrs.length > 0) {
                this._err(ERR.endTagWithAttributes);
            }
            if (ct.selfClosing) {
                this._err(ERR.endTagWithTrailingSolidus);
            }
            this.handler.onEndTag(ct);
        }
        this.preprocessor.dropParsedChunk();
    }
    emitCurrentComment(ct) {
        this.prepareToken(ct);
        this.handler.onComment(ct);
        this.preprocessor.dropParsedChunk();
    }
    emitCurrentDoctype(ct) {
        this.prepareToken(ct);
        this.handler.onDoctype(ct);
        this.preprocessor.dropParsedChunk();
    }
    _emitCurrentCharacterToken(nextLocation) {
        if (this.currentCharacterToken) {
            //NOTE: if we have a pending character token, make it's end location equal to the
            //current token's start location.
            if (nextLocation && this.currentCharacterToken.location) {
                this.currentCharacterToken.location.endLine = nextLocation.startLine;
                this.currentCharacterToken.location.endCol = nextLocation.startCol;
                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;
            }
            switch (this.currentCharacterToken.type) {
                case TokenType$2.CHARACTER: {
                    this.handler.onCharacter(this.currentCharacterToken);
                    break;
                }
                case TokenType$2.NULL_CHARACTER: {
                    this.handler.onNullCharacter(this.currentCharacterToken);
                    break;
                }
                case TokenType$2.WHITESPACE_CHARACTER: {
                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);
                    break;
                }
            }
            this.currentCharacterToken = null;
        }
    }
    _emitEOFToken() {
        const location = this.getCurrentLocation(0);
        if (location) {
            location.endLine = location.startLine;
            location.endCol = location.startCol;
            location.endOffset = location.startOffset;
        }
        this._emitCurrentCharacterToken(location);
        this.handler.onEof({ type: TokenType$2.EOF, location });
        this.active = false;
    }
    //Characters emission
    //OPTIMIZATION: The specification uses only one type of character token (one token per character).
    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.
    //If we have a sequence of characters that belong to the same group, the parser can process it
    //as a single solid character token.
    //So, there are 3 types of character tokens in parse5:
    //1)TokenType.NULL_CHARACTER - \u0000-character sequences (e.g. '\u0000\u0000\u0000')
    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\n  \r\t   \f')
    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')
    _appendCharToCurrentCharacterToken(type, ch) {
        if (this.currentCharacterToken) {
            if (this.currentCharacterToken.type === type) {
                this.currentCharacterToken.chars += ch;
                return;
            }
            else {
                this.currentLocation = this.getCurrentLocation(0);
                this._emitCurrentCharacterToken(this.currentLocation);
                this.preprocessor.dropParsedChunk();
            }
        }
        this._createCharacterToken(type, ch);
    }
    _emitCodePoint(cp) {
        const type = isWhitespace(cp)
            ? TokenType$2.WHITESPACE_CHARACTER
            : cp === CODE_POINTS.NULL
                ? TokenType$2.NULL_CHARACTER
                : TokenType$2.CHARACTER;
        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));
    }
    //NOTE: used when we emit characters explicitly.
    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.
    _emitChars(ch) {
        this._appendCharToCurrentCharacterToken(TokenType$2.CHARACTER, ch);
    }
    // Character reference helpers
    _startCharacterReference() {
        this.returnState = this.state;
        this.state = State$2.CHARACTER_REFERENCE;
        this.entityStartPos = this.preprocessor.pos;
        this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? DecodingMode.Attribute : DecodingMode.Legacy);
    }
    _isCharacterReferenceInAttribute() {
        return (this.returnState === State$2.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||
            this.returnState === State$2.ATTRIBUTE_VALUE_SINGLE_QUOTED ||
            this.returnState === State$2.ATTRIBUTE_VALUE_UNQUOTED);
    }
    _flushCodePointConsumedAsCharacterReference(cp) {
        if (this._isCharacterReferenceInAttribute()) {
            this.currentAttr.value += String.fromCodePoint(cp);
        }
        else {
            this._emitCodePoint(cp);
        }
    }
    // Calling states this way turns out to be much faster than any other approach.
    _callState(cp) {
        switch (this.state) {
            case State$2.DATA: {
                this._stateData(cp);
                break;
            }
            case State$2.RCDATA: {
                this._stateRcdata(cp);
                break;
            }
            case State$2.RAWTEXT: {
                this._stateRawtext(cp);
                break;
            }
            case State$2.SCRIPT_DATA: {
                this._stateScriptData(cp);
                break;
            }
            case State$2.PLAINTEXT: {
                this._statePlaintext(cp);
                break;
            }
            case State$2.TAG_OPEN: {
                this._stateTagOpen(cp);
                break;
            }
            case State$2.END_TAG_OPEN: {
                this._stateEndTagOpen(cp);
                break;
            }
            case State$2.TAG_NAME: {
                this._stateTagName(cp);
                break;
            }
            case State$2.RCDATA_LESS_THAN_SIGN: {
                this._stateRcdataLessThanSign(cp);
                break;
            }
            case State$2.RCDATA_END_TAG_OPEN: {
                this._stateRcdataEndTagOpen(cp);
                break;
            }
            case State$2.RCDATA_END_TAG_NAME: {
                this._stateRcdataEndTagName(cp);
                break;
            }
            case State$2.RAWTEXT_LESS_THAN_SIGN: {
                this._stateRawtextLessThanSign(cp);
                break;
            }
            case State$2.RAWTEXT_END_TAG_OPEN: {
                this._stateRawtextEndTagOpen(cp);
                break;
            }
            case State$2.RAWTEXT_END_TAG_NAME: {
                this._stateRawtextEndTagName(cp);
                break;
            }
            case State$2.SCRIPT_DATA_LESS_THAN_SIGN: {
                this._stateScriptDataLessThanSign(cp);
                break;
            }
            case State$2.SCRIPT_DATA_END_TAG_OPEN: {
                this._stateScriptDataEndTagOpen(cp);
                break;
            }
            case State$2.SCRIPT_DATA_END_TAG_NAME: {
                this._stateScriptDataEndTagName(cp);
                break;
            }
            case State$2.SCRIPT_DATA_ESCAPE_START: {
                this._stateScriptDataEscapeStart(cp);
                break;
            }
            case State$2.SCRIPT_DATA_ESCAPE_START_DASH: {
                this._stateScriptDataEscapeStartDash(cp);
                break;
            }
            case State$2.SCRIPT_DATA_ESCAPED: {
                this._stateScriptDataEscaped(cp);
                break;
            }
            case State$2.SCRIPT_DATA_ESCAPED_DASH: {
                this._stateScriptDataEscapedDash(cp);
                break;
            }
            case State$2.SCRIPT_DATA_ESCAPED_DASH_DASH: {
                this._stateScriptDataEscapedDashDash(cp);
                break;
            }
            case State$2.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {
                this._stateScriptDataEscapedLessThanSign(cp);
                break;
            }
            case State$2.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {
                this._stateScriptDataEscapedEndTagOpen(cp);
                break;
            }
            case State$2.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {
                this._stateScriptDataEscapedEndTagName(cp);
                break;
            }
            case State$2.SCRIPT_DATA_DOUBLE_ESCAPE_START: {
                this._stateScriptDataDoubleEscapeStart(cp);
                break;
            }
            case State$2.SCRIPT_DATA_DOUBLE_ESCAPED: {
                this._stateScriptDataDoubleEscaped(cp);
                break;
            }
            case State$2.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {
                this._stateScriptDataDoubleEscapedDash(cp);
                break;
            }
            case State$2.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {
                this._stateScriptDataDoubleEscapedDashDash(cp);
                break;
            }
            case State$2.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {
                this._stateScriptDataDoubleEscapedLessThanSign(cp);
                break;
            }
            case State$2.SCRIPT_DATA_DOUBLE_ESCAPE_END: {
                this._stateScriptDataDoubleEscapeEnd(cp);
                break;
            }
            case State$2.BEFORE_ATTRIBUTE_NAME: {
                this._stateBeforeAttributeName(cp);
                break;
            }
            case State$2.ATTRIBUTE_NAME: {
                this._stateAttributeName(cp);
                break;
            }
            case State$2.AFTER_ATTRIBUTE_NAME: {
                this._stateAfterAttributeName(cp);
                break;
            }
            case State$2.BEFORE_ATTRIBUTE_VALUE: {
                this._stateBeforeAttributeValue(cp);
                break;
            }
            case State$2.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {
                this._stateAttributeValueDoubleQuoted(cp);
                break;
            }
            case State$2.ATTRIBUTE_VALUE_SINGLE_QUOTED: {
                this._stateAttributeValueSingleQuoted(cp);
                break;
            }
            case State$2.ATTRIBUTE_VALUE_UNQUOTED: {
                this._stateAttributeValueUnquoted(cp);
                break;
            }
            case State$2.AFTER_ATTRIBUTE_VALUE_QUOTED: {
                this._stateAfterAttributeValueQuoted(cp);
                break;
            }
            case State$2.SELF_CLOSING_START_TAG: {
                this._stateSelfClosingStartTag(cp);
                break;
            }
            case State$2.BOGUS_COMMENT: {
                this._stateBogusComment(cp);
                break;
            }
            case State$2.MARKUP_DECLARATION_OPEN: {
                this._stateMarkupDeclarationOpen(cp);
                break;
            }
            case State$2.COMMENT_START: {
                this._stateCommentStart(cp);
                break;
            }
            case State$2.COMMENT_START_DASH: {
                this._stateCommentStartDash(cp);
                break;
            }
            case State$2.COMMENT: {
                this._stateComment(cp);
                break;
            }
            case State$2.COMMENT_LESS_THAN_SIGN: {
                this._stateCommentLessThanSign(cp);
                break;
            }
            case State$2.COMMENT_LESS_THAN_SIGN_BANG: {
                this._stateCommentLessThanSignBang(cp);
                break;
            }
            case State$2.COMMENT_LESS_THAN_SIGN_BANG_DASH: {
                this._stateCommentLessThanSignBangDash(cp);
                break;
            }
            case State$2.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {
                this._stateCommentLessThanSignBangDashDash(cp);
                break;
            }
            case State$2.COMMENT_END_DASH: {
                this._stateCommentEndDash(cp);
                break;
            }
            case State$2.COMMENT_END: {
                this._stateCommentEnd(cp);
                break;
            }
            case State$2.COMMENT_END_BANG: {
                this._stateCommentEndBang(cp);
                break;
            }
            case State$2.DOCTYPE: {
                this._stateDoctype(cp);
                break;
            }
            case State$2.BEFORE_DOCTYPE_NAME: {
                this._stateBeforeDoctypeName(cp);
                break;
            }
            case State$2.DOCTYPE_NAME: {
                this._stateDoctypeName(cp);
                break;
            }
            case State$2.AFTER_DOCTYPE_NAME: {
                this._stateAfterDoctypeName(cp);
                break;
            }
            case State$2.AFTER_DOCTYPE_PUBLIC_KEYWORD: {
                this._stateAfterDoctypePublicKeyword(cp);
                break;
            }
            case State$2.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {
                this._stateBeforeDoctypePublicIdentifier(cp);
                break;
            }
            case State$2.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {
                this._stateDoctypePublicIdentifierDoubleQuoted(cp);
                break;
            }
            case State$2.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {
                this._stateDoctypePublicIdentifierSingleQuoted(cp);
                break;
            }
            case State$2.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {
                this._stateAfterDoctypePublicIdentifier(cp);
                break;
            }
            case State$2.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {
                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);
                break;
            }
            case State$2.AFTER_DOCTYPE_SYSTEM_KEYWORD: {
                this._stateAfterDoctypeSystemKeyword(cp);
                break;
            }
            case State$2.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {
                this._stateBeforeDoctypeSystemIdentifier(cp);
                break;
            }
            case State$2.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {
                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);
                break;
            }
            case State$2.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {
                this._stateDoctypeSystemIdentifierSingleQuoted(cp);
                break;
            }
            case State$2.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {
                this._stateAfterDoctypeSystemIdentifier(cp);
                break;
            }
            case State$2.BOGUS_DOCTYPE: {
                this._stateBogusDoctype(cp);
                break;
            }
            case State$2.CDATA_SECTION: {
                this._stateCdataSection(cp);
                break;
            }
            case State$2.CDATA_SECTION_BRACKET: {
                this._stateCdataSectionBracket(cp);
                break;
            }
            case State$2.CDATA_SECTION_END: {
                this._stateCdataSectionEnd(cp);
                break;
            }
            case State$2.CHARACTER_REFERENCE: {
                this._stateCharacterReference();
                break;
            }
            case State$2.AMBIGUOUS_AMPERSAND: {
                this._stateAmbiguousAmpersand(cp);
                break;
            }
            default: {
                throw new Error('Unknown state');
            }
        }
    }
    // State machine
    // Data state
    //------------------------------------------------------------------
    _stateData(cp) {
        switch (cp) {
            case CODE_POINTS.LESS_THAN_SIGN: {
                this.state = State$2.TAG_OPEN;
                break;
            }
            case CODE_POINTS.AMPERSAND: {
                this._startCharacterReference();
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                this._emitCodePoint(cp);
                break;
            }
            case CODE_POINTS.EOF: {
                this._emitEOFToken();
                break;
            }
            default: {
                this._emitCodePoint(cp);
            }
        }
    }
    //  RCDATA state
    //------------------------------------------------------------------
    _stateRcdata(cp) {
        switch (cp) {
            case CODE_POINTS.AMPERSAND: {
                this._startCharacterReference();
                break;
            }
            case CODE_POINTS.LESS_THAN_SIGN: {
                this.state = State$2.RCDATA_LESS_THAN_SIGN;
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                this._emitChars(REPLACEMENT_CHARACTER);
                break;
            }
            case CODE_POINTS.EOF: {
                this._emitEOFToken();
                break;
            }
            default: {
                this._emitCodePoint(cp);
            }
        }
    }
    // RAWTEXT state
    //------------------------------------------------------------------
    _stateRawtext(cp) {
        switch (cp) {
            case CODE_POINTS.LESS_THAN_SIGN: {
                this.state = State$2.RAWTEXT_LESS_THAN_SIGN;
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                this._emitChars(REPLACEMENT_CHARACTER);
                break;
            }
            case CODE_POINTS.EOF: {
                this._emitEOFToken();
                break;
            }
            default: {
                this._emitCodePoint(cp);
            }
        }
    }
    // Script data state
    //------------------------------------------------------------------
    _stateScriptData(cp) {
        switch (cp) {
            case CODE_POINTS.LESS_THAN_SIGN: {
                this.state = State$2.SCRIPT_DATA_LESS_THAN_SIGN;
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                this._emitChars(REPLACEMENT_CHARACTER);
                break;
            }
            case CODE_POINTS.EOF: {
                this._emitEOFToken();
                break;
            }
            default: {
                this._emitCodePoint(cp);
            }
        }
    }
    // PLAINTEXT state
    //------------------------------------------------------------------
    _statePlaintext(cp) {
        switch (cp) {
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                this._emitChars(REPLACEMENT_CHARACTER);
                break;
            }
            case CODE_POINTS.EOF: {
                this._emitEOFToken();
                break;
            }
            default: {
                this._emitCodePoint(cp);
            }
        }
    }
    // Tag open state
    //------------------------------------------------------------------
    _stateTagOpen(cp) {
        if (isAsciiLetter(cp)) {
            this._createStartTagToken();
            this.state = State$2.TAG_NAME;
            this._stateTagName(cp);
        }
        else
            switch (cp) {
                case CODE_POINTS.EXCLAMATION_MARK: {
                    this.state = State$2.MARKUP_DECLARATION_OPEN;
                    break;
                }
                case CODE_POINTS.SOLIDUS: {
                    this.state = State$2.END_TAG_OPEN;
                    break;
                }
                case CODE_POINTS.QUESTION_MARK: {
                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);
                    this._createCommentToken(1);
                    this.state = State$2.BOGUS_COMMENT;
                    this._stateBogusComment(cp);
                    break;
                }
                case CODE_POINTS.EOF: {
                    this._err(ERR.eofBeforeTagName);
                    this._emitChars('<');
                    this._emitEOFToken();
                    break;
                }
                default: {
                    this._err(ERR.invalidFirstCharacterOfTagName);
                    this._emitChars('<');
                    this.state = State$2.DATA;
                    this._stateData(cp);
                }
            }
    }
    // End tag open state
    //------------------------------------------------------------------
    _stateEndTagOpen(cp) {
        if (isAsciiLetter(cp)) {
            this._createEndTagToken();
            this.state = State$2.TAG_NAME;
            this._stateTagName(cp);
        }
        else
            switch (cp) {
                case CODE_POINTS.GREATER_THAN_SIGN: {
                    this._err(ERR.missingEndTagName);
                    this.state = State$2.DATA;
                    break;
                }
                case CODE_POINTS.EOF: {
                    this._err(ERR.eofBeforeTagName);
                    this._emitChars('</');
                    this._emitEOFToken();
                    break;
                }
                default: {
                    this._err(ERR.invalidFirstCharacterOfTagName);
                    this._createCommentToken(2);
                    this.state = State$2.BOGUS_COMMENT;
                    this._stateBogusComment(cp);
                }
            }
    }
    // Tag name state
    //------------------------------------------------------------------
    _stateTagName(cp) {
        const token = this.currentToken;
        switch (cp) {
            case CODE_POINTS.SPACE:
            case CODE_POINTS.LINE_FEED:
            case CODE_POINTS.TABULATION:
            case CODE_POINTS.FORM_FEED: {
                this.state = State$2.BEFORE_ATTRIBUTE_NAME;
                break;
            }
            case CODE_POINTS.SOLIDUS: {
                this.state = State$2.SELF_CLOSING_START_TAG;
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this.state = State$2.DATA;
                this.emitCurrentTagToken();
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                token.tagName += REPLACEMENT_CHARACTER;
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInTag);
                this._emitEOFToken();
                break;
            }
            default: {
                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);
            }
        }
    }
    // RCDATA less-than sign state
    //------------------------------------------------------------------
    _stateRcdataLessThanSign(cp) {
        if (cp === CODE_POINTS.SOLIDUS) {
            this.state = State$2.RCDATA_END_TAG_OPEN;
        }
        else {
            this._emitChars('<');
            this.state = State$2.RCDATA;
            this._stateRcdata(cp);
        }
    }
    // RCDATA end tag open state
    //------------------------------------------------------------------
    _stateRcdataEndTagOpen(cp) {
        if (isAsciiLetter(cp)) {
            this.state = State$2.RCDATA_END_TAG_NAME;
            this._stateRcdataEndTagName(cp);
        }
        else {
            this._emitChars('</');
            this.state = State$2.RCDATA;
            this._stateRcdata(cp);
        }
    }
    handleSpecialEndTag(_cp) {
        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {
            return !this._ensureHibernation();
        }
        this._createEndTagToken();
        const token = this.currentToken;
        token.tagName = this.lastStartTagName;
        const cp = this.preprocessor.peek(this.lastStartTagName.length);
        switch (cp) {
            case CODE_POINTS.SPACE:
            case CODE_POINTS.LINE_FEED:
            case CODE_POINTS.TABULATION:
            case CODE_POINTS.FORM_FEED: {
                this._advanceBy(this.lastStartTagName.length);
                this.state = State$2.BEFORE_ATTRIBUTE_NAME;
                return false;
            }
            case CODE_POINTS.SOLIDUS: {
                this._advanceBy(this.lastStartTagName.length);
                this.state = State$2.SELF_CLOSING_START_TAG;
                return false;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this._advanceBy(this.lastStartTagName.length);
                this.emitCurrentTagToken();
                this.state = State$2.DATA;
                return false;
            }
            default: {
                return !this._ensureHibernation();
            }
        }
    }
    // RCDATA end tag name state
    //------------------------------------------------------------------
    _stateRcdataEndTagName(cp) {
        if (this.handleSpecialEndTag(cp)) {
            this._emitChars('</');
            this.state = State$2.RCDATA;
            this._stateRcdata(cp);
        }
    }
    // RAWTEXT less-than sign state
    //------------------------------------------------------------------
    _stateRawtextLessThanSign(cp) {
        if (cp === CODE_POINTS.SOLIDUS) {
            this.state = State$2.RAWTEXT_END_TAG_OPEN;
        }
        else {
            this._emitChars('<');
            this.state = State$2.RAWTEXT;
            this._stateRawtext(cp);
        }
    }
    // RAWTEXT end tag open state
    //------------------------------------------------------------------
    _stateRawtextEndTagOpen(cp) {
        if (isAsciiLetter(cp)) {
            this.state = State$2.RAWTEXT_END_TAG_NAME;
            this._stateRawtextEndTagName(cp);
        }
        else {
            this._emitChars('</');
            this.state = State$2.RAWTEXT;
            this._stateRawtext(cp);
        }
    }
    // RAWTEXT end tag name state
    //------------------------------------------------------------------
    _stateRawtextEndTagName(cp) {
        if (this.handleSpecialEndTag(cp)) {
            this._emitChars('</');
            this.state = State$2.RAWTEXT;
            this._stateRawtext(cp);
        }
    }
    // Script data less-than sign state
    //------------------------------------------------------------------
    _stateScriptDataLessThanSign(cp) {
        switch (cp) {
            case CODE_POINTS.SOLIDUS: {
                this.state = State$2.SCRIPT_DATA_END_TAG_OPEN;
                break;
            }
            case CODE_POINTS.EXCLAMATION_MARK: {
                this.state = State$2.SCRIPT_DATA_ESCAPE_START;
                this._emitChars('<!');
                break;
            }
            default: {
                this._emitChars('<');
                this.state = State$2.SCRIPT_DATA;
                this._stateScriptData(cp);
            }
        }
    }
    // Script data end tag open state
    //------------------------------------------------------------------
    _stateScriptDataEndTagOpen(cp) {
        if (isAsciiLetter(cp)) {
            this.state = State$2.SCRIPT_DATA_END_TAG_NAME;
            this._stateScriptDataEndTagName(cp);
        }
        else {
            this._emitChars('</');
            this.state = State$2.SCRIPT_DATA;
            this._stateScriptData(cp);
        }
    }
    // Script data end tag name state
    //------------------------------------------------------------------
    _stateScriptDataEndTagName(cp) {
        if (this.handleSpecialEndTag(cp)) {
            this._emitChars('</');
            this.state = State$2.SCRIPT_DATA;
            this._stateScriptData(cp);
        }
    }
    // Script data escape start state
    //------------------------------------------------------------------
    _stateScriptDataEscapeStart(cp) {
        if (cp === CODE_POINTS.HYPHEN_MINUS) {
            this.state = State$2.SCRIPT_DATA_ESCAPE_START_DASH;
            this._emitChars('-');
        }
        else {
            this.state = State$2.SCRIPT_DATA;
            this._stateScriptData(cp);
        }
    }
    // Script data escape start dash state
    //------------------------------------------------------------------
    _stateScriptDataEscapeStartDash(cp) {
        if (cp === CODE_POINTS.HYPHEN_MINUS) {
            this.state = State$2.SCRIPT_DATA_ESCAPED_DASH_DASH;
            this._emitChars('-');
        }
        else {
            this.state = State$2.SCRIPT_DATA;
            this._stateScriptData(cp);
        }
    }
    // Script data escaped state
    //------------------------------------------------------------------
    _stateScriptDataEscaped(cp) {
        switch (cp) {
            case CODE_POINTS.HYPHEN_MINUS: {
                this.state = State$2.SCRIPT_DATA_ESCAPED_DASH;
                this._emitChars('-');
                break;
            }
            case CODE_POINTS.LESS_THAN_SIGN: {
                this.state = State$2.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                this._emitChars(REPLACEMENT_CHARACTER);
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInScriptHtmlCommentLikeText);
                this._emitEOFToken();
                break;
            }
            default: {
                this._emitCodePoint(cp);
            }
        }
    }
    // Script data escaped dash state
    //------------------------------------------------------------------
    _stateScriptDataEscapedDash(cp) {
        switch (cp) {
            case CODE_POINTS.HYPHEN_MINUS: {
                this.state = State$2.SCRIPT_DATA_ESCAPED_DASH_DASH;
                this._emitChars('-');
                break;
            }
            case CODE_POINTS.LESS_THAN_SIGN: {
                this.state = State$2.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                this.state = State$2.SCRIPT_DATA_ESCAPED;
                this._emitChars(REPLACEMENT_CHARACTER);
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInScriptHtmlCommentLikeText);
                this._emitEOFToken();
                break;
            }
            default: {
                this.state = State$2.SCRIPT_DATA_ESCAPED;
                this._emitCodePoint(cp);
            }
        }
    }
    // Script data escaped dash dash state
    //------------------------------------------------------------------
    _stateScriptDataEscapedDashDash(cp) {
        switch (cp) {
            case CODE_POINTS.HYPHEN_MINUS: {
                this._emitChars('-');
                break;
            }
            case CODE_POINTS.LESS_THAN_SIGN: {
                this.state = State$2.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this.state = State$2.SCRIPT_DATA;
                this._emitChars('>');
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                this.state = State$2.SCRIPT_DATA_ESCAPED;
                this._emitChars(REPLACEMENT_CHARACTER);
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInScriptHtmlCommentLikeText);
                this._emitEOFToken();
                break;
            }
            default: {
                this.state = State$2.SCRIPT_DATA_ESCAPED;
                this._emitCodePoint(cp);
            }
        }
    }
    // Script data escaped less-than sign state
    //------------------------------------------------------------------
    _stateScriptDataEscapedLessThanSign(cp) {
        if (cp === CODE_POINTS.SOLIDUS) {
            this.state = State$2.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;
        }
        else if (isAsciiLetter(cp)) {
            this._emitChars('<');
            this.state = State$2.SCRIPT_DATA_DOUBLE_ESCAPE_START;
            this._stateScriptDataDoubleEscapeStart(cp);
        }
        else {
            this._emitChars('<');
            this.state = State$2.SCRIPT_DATA_ESCAPED;
            this._stateScriptDataEscaped(cp);
        }
    }
    // Script data escaped end tag open state
    //------------------------------------------------------------------
    _stateScriptDataEscapedEndTagOpen(cp) {
        if (isAsciiLetter(cp)) {
            this.state = State$2.SCRIPT_DATA_ESCAPED_END_TAG_NAME;
            this._stateScriptDataEscapedEndTagName(cp);
        }
        else {
            this._emitChars('</');
            this.state = State$2.SCRIPT_DATA_ESCAPED;
            this._stateScriptDataEscaped(cp);
        }
    }
    // Script data escaped end tag name state
    //------------------------------------------------------------------
    _stateScriptDataEscapedEndTagName(cp) {
        if (this.handleSpecialEndTag(cp)) {
            this._emitChars('</');
            this.state = State$2.SCRIPT_DATA_ESCAPED;
            this._stateScriptDataEscaped(cp);
        }
    }
    // Script data double escape start state
    //------------------------------------------------------------------
    _stateScriptDataDoubleEscapeStart(cp) {
        if (this.preprocessor.startsWith(SEQUENCES.SCRIPT, false) &&
            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(SEQUENCES.SCRIPT.length))) {
            this._emitCodePoint(cp);
            for (let i = 0; i < SEQUENCES.SCRIPT.length; i++) {
                this._emitCodePoint(this._consume());
            }
            this.state = State$2.SCRIPT_DATA_DOUBLE_ESCAPED;
        }
        else if (!this._ensureHibernation()) {
            this.state = State$2.SCRIPT_DATA_ESCAPED;
            this._stateScriptDataEscaped(cp);
        }
    }
    // Script data double escaped state
    //------------------------------------------------------------------
    _stateScriptDataDoubleEscaped(cp) {
        switch (cp) {
            case CODE_POINTS.HYPHEN_MINUS: {
                this.state = State$2.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;
                this._emitChars('-');
                break;
            }
            case CODE_POINTS.LESS_THAN_SIGN: {
                this.state = State$2.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;
                this._emitChars('<');
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                this._emitChars(REPLACEMENT_CHARACTER);
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInScriptHtmlCommentLikeText);
                this._emitEOFToken();
                break;
            }
            default: {
                this._emitCodePoint(cp);
            }
        }
    }
    // Script data double escaped dash state
    //------------------------------------------------------------------
    _stateScriptDataDoubleEscapedDash(cp) {
        switch (cp) {
            case CODE_POINTS.HYPHEN_MINUS: {
                this.state = State$2.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;
                this._emitChars('-');
                break;
            }
            case CODE_POINTS.LESS_THAN_SIGN: {
                this.state = State$2.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;
                this._emitChars('<');
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                this.state = State$2.SCRIPT_DATA_DOUBLE_ESCAPED;
                this._emitChars(REPLACEMENT_CHARACTER);
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInScriptHtmlCommentLikeText);
                this._emitEOFToken();
                break;
            }
            default: {
                this.state = State$2.SCRIPT_DATA_DOUBLE_ESCAPED;
                this._emitCodePoint(cp);
            }
        }
    }
    // Script data double escaped dash dash state
    //------------------------------------------------------------------
    _stateScriptDataDoubleEscapedDashDash(cp) {
        switch (cp) {
            case CODE_POINTS.HYPHEN_MINUS: {
                this._emitChars('-');
                break;
            }
            case CODE_POINTS.LESS_THAN_SIGN: {
                this.state = State$2.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;
                this._emitChars('<');
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this.state = State$2.SCRIPT_DATA;
                this._emitChars('>');
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                this.state = State$2.SCRIPT_DATA_DOUBLE_ESCAPED;
                this._emitChars(REPLACEMENT_CHARACTER);
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInScriptHtmlCommentLikeText);
                this._emitEOFToken();
                break;
            }
            default: {
                this.state = State$2.SCRIPT_DATA_DOUBLE_ESCAPED;
                this._emitCodePoint(cp);
            }
        }
    }
    // Script data double escaped less-than sign state
    //------------------------------------------------------------------
    _stateScriptDataDoubleEscapedLessThanSign(cp) {
        if (cp === CODE_POINTS.SOLIDUS) {
            this.state = State$2.SCRIPT_DATA_DOUBLE_ESCAPE_END;
            this._emitChars('/');
        }
        else {
            this.state = State$2.SCRIPT_DATA_DOUBLE_ESCAPED;
            this._stateScriptDataDoubleEscaped(cp);
        }
    }
    // Script data double escape end state
    //------------------------------------------------------------------
    _stateScriptDataDoubleEscapeEnd(cp) {
        if (this.preprocessor.startsWith(SEQUENCES.SCRIPT, false) &&
            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(SEQUENCES.SCRIPT.length))) {
            this._emitCodePoint(cp);
            for (let i = 0; i < SEQUENCES.SCRIPT.length; i++) {
                this._emitCodePoint(this._consume());
            }
            this.state = State$2.SCRIPT_DATA_ESCAPED;
        }
        else if (!this._ensureHibernation()) {
            this.state = State$2.SCRIPT_DATA_DOUBLE_ESCAPED;
            this._stateScriptDataDoubleEscaped(cp);
        }
    }
    // Before attribute name state
    //------------------------------------------------------------------
    _stateBeforeAttributeName(cp) {
        switch (cp) {
            case CODE_POINTS.SPACE:
            case CODE_POINTS.LINE_FEED:
            case CODE_POINTS.TABULATION:
            case CODE_POINTS.FORM_FEED: {
                // Ignore whitespace
                break;
            }
            case CODE_POINTS.SOLIDUS:
            case CODE_POINTS.GREATER_THAN_SIGN:
            case CODE_POINTS.EOF: {
                this.state = State$2.AFTER_ATTRIBUTE_NAME;
                this._stateAfterAttributeName(cp);
                break;
            }
            case CODE_POINTS.EQUALS_SIGN: {
                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);
                this._createAttr('=');
                this.state = State$2.ATTRIBUTE_NAME;
                break;
            }
            default: {
                this._createAttr('');
                this.state = State$2.ATTRIBUTE_NAME;
                this._stateAttributeName(cp);
            }
        }
    }
    // Attribute name state
    //------------------------------------------------------------------
    _stateAttributeName(cp) {
        switch (cp) {
            case CODE_POINTS.SPACE:
            case CODE_POINTS.LINE_FEED:
            case CODE_POINTS.TABULATION:
            case CODE_POINTS.FORM_FEED:
            case CODE_POINTS.SOLIDUS:
            case CODE_POINTS.GREATER_THAN_SIGN:
            case CODE_POINTS.EOF: {
                this._leaveAttrName();
                this.state = State$2.AFTER_ATTRIBUTE_NAME;
                this._stateAfterAttributeName(cp);
                break;
            }
            case CODE_POINTS.EQUALS_SIGN: {
                this._leaveAttrName();
                this.state = State$2.BEFORE_ATTRIBUTE_VALUE;
                break;
            }
            case CODE_POINTS.QUOTATION_MARK:
            case CODE_POINTS.APOSTROPHE:
            case CODE_POINTS.LESS_THAN_SIGN: {
                this._err(ERR.unexpectedCharacterInAttributeName);
                this.currentAttr.name += String.fromCodePoint(cp);
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                this.currentAttr.name += REPLACEMENT_CHARACTER;
                break;
            }
            default: {
                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);
            }
        }
    }
    // After attribute name state
    //------------------------------------------------------------------
    _stateAfterAttributeName(cp) {
        switch (cp) {
            case CODE_POINTS.SPACE:
            case CODE_POINTS.LINE_FEED:
            case CODE_POINTS.TABULATION:
            case CODE_POINTS.FORM_FEED: {
                // Ignore whitespace
                break;
            }
            case CODE_POINTS.SOLIDUS: {
                this.state = State$2.SELF_CLOSING_START_TAG;
                break;
            }
            case CODE_POINTS.EQUALS_SIGN: {
                this.state = State$2.BEFORE_ATTRIBUTE_VALUE;
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this.state = State$2.DATA;
                this.emitCurrentTagToken();
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInTag);
                this._emitEOFToken();
                break;
            }
            default: {
                this._createAttr('');
                this.state = State$2.ATTRIBUTE_NAME;
                this._stateAttributeName(cp);
            }
        }
    }
    // Before attribute value state
    //------------------------------------------------------------------
    _stateBeforeAttributeValue(cp) {
        switch (cp) {
            case CODE_POINTS.SPACE:
            case CODE_POINTS.LINE_FEED:
            case CODE_POINTS.TABULATION:
            case CODE_POINTS.FORM_FEED: {
                // Ignore whitespace
                break;
            }
            case CODE_POINTS.QUOTATION_MARK: {
                this.state = State$2.ATTRIBUTE_VALUE_DOUBLE_QUOTED;
                break;
            }
            case CODE_POINTS.APOSTROPHE: {
                this.state = State$2.ATTRIBUTE_VALUE_SINGLE_QUOTED;
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this._err(ERR.missingAttributeValue);
                this.state = State$2.DATA;
                this.emitCurrentTagToken();
                break;
            }
            default: {
                this.state = State$2.ATTRIBUTE_VALUE_UNQUOTED;
                this._stateAttributeValueUnquoted(cp);
            }
        }
    }
    // Attribute value (double-quoted) state
    //------------------------------------------------------------------
    _stateAttributeValueDoubleQuoted(cp) {
        switch (cp) {
            case CODE_POINTS.QUOTATION_MARK: {
                this.state = State$2.AFTER_ATTRIBUTE_VALUE_QUOTED;
                break;
            }
            case CODE_POINTS.AMPERSAND: {
                this._startCharacterReference();
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                this.currentAttr.value += REPLACEMENT_CHARACTER;
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInTag);
                this._emitEOFToken();
                break;
            }
            default: {
                this.currentAttr.value += String.fromCodePoint(cp);
            }
        }
    }
    // Attribute value (single-quoted) state
    //------------------------------------------------------------------
    _stateAttributeValueSingleQuoted(cp) {
        switch (cp) {
            case CODE_POINTS.APOSTROPHE: {
                this.state = State$2.AFTER_ATTRIBUTE_VALUE_QUOTED;
                break;
            }
            case CODE_POINTS.AMPERSAND: {
                this._startCharacterReference();
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                this.currentAttr.value += REPLACEMENT_CHARACTER;
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInTag);
                this._emitEOFToken();
                break;
            }
            default: {
                this.currentAttr.value += String.fromCodePoint(cp);
            }
        }
    }
    // Attribute value (unquoted) state
    //------------------------------------------------------------------
    _stateAttributeValueUnquoted(cp) {
        switch (cp) {
            case CODE_POINTS.SPACE:
            case CODE_POINTS.LINE_FEED:
            case CODE_POINTS.TABULATION:
            case CODE_POINTS.FORM_FEED: {
                this._leaveAttrValue();
                this.state = State$2.BEFORE_ATTRIBUTE_NAME;
                break;
            }
            case CODE_POINTS.AMPERSAND: {
                this._startCharacterReference();
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this._leaveAttrValue();
                this.state = State$2.DATA;
                this.emitCurrentTagToken();
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                this.currentAttr.value += REPLACEMENT_CHARACTER;
                break;
            }
            case CODE_POINTS.QUOTATION_MARK:
            case CODE_POINTS.APOSTROPHE:
            case CODE_POINTS.LESS_THAN_SIGN:
            case CODE_POINTS.EQUALS_SIGN:
            case CODE_POINTS.GRAVE_ACCENT: {
                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);
                this.currentAttr.value += String.fromCodePoint(cp);
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInTag);
                this._emitEOFToken();
                break;
            }
            default: {
                this.currentAttr.value += String.fromCodePoint(cp);
            }
        }
    }
    // After attribute value (quoted) state
    //------------------------------------------------------------------
    _stateAfterAttributeValueQuoted(cp) {
        switch (cp) {
            case CODE_POINTS.SPACE:
            case CODE_POINTS.LINE_FEED:
            case CODE_POINTS.TABULATION:
            case CODE_POINTS.FORM_FEED: {
                this._leaveAttrValue();
                this.state = State$2.BEFORE_ATTRIBUTE_NAME;
                break;
            }
            case CODE_POINTS.SOLIDUS: {
                this._leaveAttrValue();
                this.state = State$2.SELF_CLOSING_START_TAG;
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this._leaveAttrValue();
                this.state = State$2.DATA;
                this.emitCurrentTagToken();
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInTag);
                this._emitEOFToken();
                break;
            }
            default: {
                this._err(ERR.missingWhitespaceBetweenAttributes);
                this.state = State$2.BEFORE_ATTRIBUTE_NAME;
                this._stateBeforeAttributeName(cp);
            }
        }
    }
    // Self-closing start tag state
    //------------------------------------------------------------------
    _stateSelfClosingStartTag(cp) {
        switch (cp) {
            case CODE_POINTS.GREATER_THAN_SIGN: {
                const token = this.currentToken;
                token.selfClosing = true;
                this.state = State$2.DATA;
                this.emitCurrentTagToken();
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInTag);
                this._emitEOFToken();
                break;
            }
            default: {
                this._err(ERR.unexpectedSolidusInTag);
                this.state = State$2.BEFORE_ATTRIBUTE_NAME;
                this._stateBeforeAttributeName(cp);
            }
        }
    }
    // Bogus comment state
    //------------------------------------------------------------------
    _stateBogusComment(cp) {
        const token = this.currentToken;
        switch (cp) {
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this.state = State$2.DATA;
                this.emitCurrentComment(token);
                break;
            }
            case CODE_POINTS.EOF: {
                this.emitCurrentComment(token);
                this._emitEOFToken();
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                token.data += REPLACEMENT_CHARACTER;
                break;
            }
            default: {
                token.data += String.fromCodePoint(cp);
            }
        }
    }
    // Markup declaration open state
    //------------------------------------------------------------------
    _stateMarkupDeclarationOpen(cp) {
        if (this._consumeSequenceIfMatch(SEQUENCES.DASH_DASH, true)) {
            this._createCommentToken(SEQUENCES.DASH_DASH.length + 1);
            this.state = State$2.COMMENT_START;
        }
        else if (this._consumeSequenceIfMatch(SEQUENCES.DOCTYPE, false)) {
            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.
            this.currentLocation = this.getCurrentLocation(SEQUENCES.DOCTYPE.length + 1);
            this.state = State$2.DOCTYPE;
        }
        else if (this._consumeSequenceIfMatch(SEQUENCES.CDATA_START, true)) {
            if (this.inForeignNode) {
                this.state = State$2.CDATA_SECTION;
            }
            else {
                this._err(ERR.cdataInHtmlContent);
                this._createCommentToken(SEQUENCES.CDATA_START.length + 1);
                this.currentToken.data = '[CDATA[';
                this.state = State$2.BOGUS_COMMENT;
            }
        }
        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup
        //results are no longer valid and we will need to start over.
        else if (!this._ensureHibernation()) {
            this._err(ERR.incorrectlyOpenedComment);
            this._createCommentToken(2);
            this.state = State$2.BOGUS_COMMENT;
            this._stateBogusComment(cp);
        }
    }
    // Comment start state
    //------------------------------------------------------------------
    _stateCommentStart(cp) {
        switch (cp) {
            case CODE_POINTS.HYPHEN_MINUS: {
                this.state = State$2.COMMENT_START_DASH;
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this._err(ERR.abruptClosingOfEmptyComment);
                this.state = State$2.DATA;
                const token = this.currentToken;
                this.emitCurrentComment(token);
                break;
            }
            default: {
                this.state = State$2.COMMENT;
                this._stateComment(cp);
            }
        }
    }
    // Comment start dash state
    //------------------------------------------------------------------
    _stateCommentStartDash(cp) {
        const token = this.currentToken;
        switch (cp) {
            case CODE_POINTS.HYPHEN_MINUS: {
                this.state = State$2.COMMENT_END;
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this._err(ERR.abruptClosingOfEmptyComment);
                this.state = State$2.DATA;
                this.emitCurrentComment(token);
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInComment);
                this.emitCurrentComment(token);
                this._emitEOFToken();
                break;
            }
            default: {
                token.data += '-';
                this.state = State$2.COMMENT;
                this._stateComment(cp);
            }
        }
    }
    // Comment state
    //------------------------------------------------------------------
    _stateComment(cp) {
        const token = this.currentToken;
        switch (cp) {
            case CODE_POINTS.HYPHEN_MINUS: {
                this.state = State$2.COMMENT_END_DASH;
                break;
            }
            case CODE_POINTS.LESS_THAN_SIGN: {
                token.data += '<';
                this.state = State$2.COMMENT_LESS_THAN_SIGN;
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                token.data += REPLACEMENT_CHARACTER;
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInComment);
                this.emitCurrentComment(token);
                this._emitEOFToken();
                break;
            }
            default: {
                token.data += String.fromCodePoint(cp);
            }
        }
    }
    // Comment less-than sign state
    //------------------------------------------------------------------
    _stateCommentLessThanSign(cp) {
        const token = this.currentToken;
        switch (cp) {
            case CODE_POINTS.EXCLAMATION_MARK: {
                token.data += '!';
                this.state = State$2.COMMENT_LESS_THAN_SIGN_BANG;
                break;
            }
            case CODE_POINTS.LESS_THAN_SIGN: {
                token.data += '<';
                break;
            }
            default: {
                this.state = State$2.COMMENT;
                this._stateComment(cp);
            }
        }
    }
    // Comment less-than sign bang state
    //------------------------------------------------------------------
    _stateCommentLessThanSignBang(cp) {
        if (cp === CODE_POINTS.HYPHEN_MINUS) {
            this.state = State$2.COMMENT_LESS_THAN_SIGN_BANG_DASH;
        }
        else {
            this.state = State$2.COMMENT;
            this._stateComment(cp);
        }
    }
    // Comment less-than sign bang dash state
    //------------------------------------------------------------------
    _stateCommentLessThanSignBangDash(cp) {
        if (cp === CODE_POINTS.HYPHEN_MINUS) {
            this.state = State$2.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;
        }
        else {
            this.state = State$2.COMMENT_END_DASH;
            this._stateCommentEndDash(cp);
        }
    }
    // Comment less-than sign bang dash dash state
    //------------------------------------------------------------------
    _stateCommentLessThanSignBangDashDash(cp) {
        if (cp !== CODE_POINTS.GREATER_THAN_SIGN && cp !== CODE_POINTS.EOF) {
            this._err(ERR.nestedComment);
        }
        this.state = State$2.COMMENT_END;
        this._stateCommentEnd(cp);
    }
    // Comment end dash state
    //------------------------------------------------------------------
    _stateCommentEndDash(cp) {
        const token = this.currentToken;
        switch (cp) {
            case CODE_POINTS.HYPHEN_MINUS: {
                this.state = State$2.COMMENT_END;
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInComment);
                this.emitCurrentComment(token);
                this._emitEOFToken();
                break;
            }
            default: {
                token.data += '-';
                this.state = State$2.COMMENT;
                this._stateComment(cp);
            }
        }
    }
    // Comment end state
    //------------------------------------------------------------------
    _stateCommentEnd(cp) {
        const token = this.currentToken;
        switch (cp) {
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this.state = State$2.DATA;
                this.emitCurrentComment(token);
                break;
            }
            case CODE_POINTS.EXCLAMATION_MARK: {
                this.state = State$2.COMMENT_END_BANG;
                break;
            }
            case CODE_POINTS.HYPHEN_MINUS: {
                token.data += '-';
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInComment);
                this.emitCurrentComment(token);
                this._emitEOFToken();
                break;
            }
            default: {
                token.data += '--';
                this.state = State$2.COMMENT;
                this._stateComment(cp);
            }
        }
    }
    // Comment end bang state
    //------------------------------------------------------------------
    _stateCommentEndBang(cp) {
        const token = this.currentToken;
        switch (cp) {
            case CODE_POINTS.HYPHEN_MINUS: {
                token.data += '--!';
                this.state = State$2.COMMENT_END_DASH;
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this._err(ERR.incorrectlyClosedComment);
                this.state = State$2.DATA;
                this.emitCurrentComment(token);
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInComment);
                this.emitCurrentComment(token);
                this._emitEOFToken();
                break;
            }
            default: {
                token.data += '--!';
                this.state = State$2.COMMENT;
                this._stateComment(cp);
            }
        }
    }
    // DOCTYPE state
    //------------------------------------------------------------------
    _stateDoctype(cp) {
        switch (cp) {
            case CODE_POINTS.SPACE:
            case CODE_POINTS.LINE_FEED:
            case CODE_POINTS.TABULATION:
            case CODE_POINTS.FORM_FEED: {
                this.state = State$2.BEFORE_DOCTYPE_NAME;
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this.state = State$2.BEFORE_DOCTYPE_NAME;
                this._stateBeforeDoctypeName(cp);
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInDoctype);
                this._createDoctypeToken(null);
                const token = this.currentToken;
                token.forceQuirks = true;
                this.emitCurrentDoctype(token);
                this._emitEOFToken();
                break;
            }
            default: {
                this._err(ERR.missingWhitespaceBeforeDoctypeName);
                this.state = State$2.BEFORE_DOCTYPE_NAME;
                this._stateBeforeDoctypeName(cp);
            }
        }
    }
    // Before DOCTYPE name state
    //------------------------------------------------------------------
    _stateBeforeDoctypeName(cp) {
        if (isAsciiUpper(cp)) {
            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));
            this.state = State$2.DOCTYPE_NAME;
        }
        else
            switch (cp) {
                case CODE_POINTS.SPACE:
                case CODE_POINTS.LINE_FEED:
                case CODE_POINTS.TABULATION:
                case CODE_POINTS.FORM_FEED: {
                    // Ignore whitespace
                    break;
                }
                case CODE_POINTS.NULL: {
                    this._err(ERR.unexpectedNullCharacter);
                    this._createDoctypeToken(REPLACEMENT_CHARACTER);
                    this.state = State$2.DOCTYPE_NAME;
                    break;
                }
                case CODE_POINTS.GREATER_THAN_SIGN: {
                    this._err(ERR.missingDoctypeName);
                    this._createDoctypeToken(null);
                    const token = this.currentToken;
                    token.forceQuirks = true;
                    this.emitCurrentDoctype(token);
                    this.state = State$2.DATA;
                    break;
                }
                case CODE_POINTS.EOF: {
                    this._err(ERR.eofInDoctype);
                    this._createDoctypeToken(null);
                    const token = this.currentToken;
                    token.forceQuirks = true;
                    this.emitCurrentDoctype(token);
                    this._emitEOFToken();
                    break;
                }
                default: {
                    this._createDoctypeToken(String.fromCodePoint(cp));
                    this.state = State$2.DOCTYPE_NAME;
                }
            }
    }
    // DOCTYPE name state
    //------------------------------------------------------------------
    _stateDoctypeName(cp) {
        const token = this.currentToken;
        switch (cp) {
            case CODE_POINTS.SPACE:
            case CODE_POINTS.LINE_FEED:
            case CODE_POINTS.TABULATION:
            case CODE_POINTS.FORM_FEED: {
                this.state = State$2.AFTER_DOCTYPE_NAME;
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this.state = State$2.DATA;
                this.emitCurrentDoctype(token);
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                token.name += REPLACEMENT_CHARACTER;
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInDoctype);
                token.forceQuirks = true;
                this.emitCurrentDoctype(token);
                this._emitEOFToken();
                break;
            }
            default: {
                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);
            }
        }
    }
    // After DOCTYPE name state
    //------------------------------------------------------------------
    _stateAfterDoctypeName(cp) {
        const token = this.currentToken;
        switch (cp) {
            case CODE_POINTS.SPACE:
            case CODE_POINTS.LINE_FEED:
            case CODE_POINTS.TABULATION:
            case CODE_POINTS.FORM_FEED: {
                // Ignore whitespace
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this.state = State$2.DATA;
                this.emitCurrentDoctype(token);
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInDoctype);
                token.forceQuirks = true;
                this.emitCurrentDoctype(token);
                this._emitEOFToken();
                break;
            }
            default: {
                if (this._consumeSequenceIfMatch(SEQUENCES.PUBLIC, false)) {
                    this.state = State$2.AFTER_DOCTYPE_PUBLIC_KEYWORD;
                }
                else if (this._consumeSequenceIfMatch(SEQUENCES.SYSTEM, false)) {
                    this.state = State$2.AFTER_DOCTYPE_SYSTEM_KEYWORD;
                }
                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup
                //results are no longer valid and we will need to start over.
                else if (!this._ensureHibernation()) {
                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);
                    token.forceQuirks = true;
                    this.state = State$2.BOGUS_DOCTYPE;
                    this._stateBogusDoctype(cp);
                }
            }
        }
    }
    // After DOCTYPE public keyword state
    //------------------------------------------------------------------
    _stateAfterDoctypePublicKeyword(cp) {
        const token = this.currentToken;
        switch (cp) {
            case CODE_POINTS.SPACE:
            case CODE_POINTS.LINE_FEED:
            case CODE_POINTS.TABULATION:
            case CODE_POINTS.FORM_FEED: {
                this.state = State$2.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;
                break;
            }
            case CODE_POINTS.QUOTATION_MARK: {
                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);
                token.publicId = '';
                this.state = State$2.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;
                break;
            }
            case CODE_POINTS.APOSTROPHE: {
                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);
                token.publicId = '';
                this.state = State$2.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this._err(ERR.missingDoctypePublicIdentifier);
                token.forceQuirks = true;
                this.state = State$2.DATA;
                this.emitCurrentDoctype(token);
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInDoctype);
                token.forceQuirks = true;
                this.emitCurrentDoctype(token);
                this._emitEOFToken();
                break;
            }
            default: {
                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);
                token.forceQuirks = true;
                this.state = State$2.BOGUS_DOCTYPE;
                this._stateBogusDoctype(cp);
            }
        }
    }
    // Before DOCTYPE public identifier state
    //------------------------------------------------------------------
    _stateBeforeDoctypePublicIdentifier(cp) {
        const token = this.currentToken;
        switch (cp) {
            case CODE_POINTS.SPACE:
            case CODE_POINTS.LINE_FEED:
            case CODE_POINTS.TABULATION:
            case CODE_POINTS.FORM_FEED: {
                // Ignore whitespace
                break;
            }
            case CODE_POINTS.QUOTATION_MARK: {
                token.publicId = '';
                this.state = State$2.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;
                break;
            }
            case CODE_POINTS.APOSTROPHE: {
                token.publicId = '';
                this.state = State$2.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this._err(ERR.missingDoctypePublicIdentifier);
                token.forceQuirks = true;
                this.state = State$2.DATA;
                this.emitCurrentDoctype(token);
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInDoctype);
                token.forceQuirks = true;
                this.emitCurrentDoctype(token);
                this._emitEOFToken();
                break;
            }
            default: {
                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);
                token.forceQuirks = true;
                this.state = State$2.BOGUS_DOCTYPE;
                this._stateBogusDoctype(cp);
            }
        }
    }
    // DOCTYPE public identifier (double-quoted) state
    //------------------------------------------------------------------
    _stateDoctypePublicIdentifierDoubleQuoted(cp) {
        const token = this.currentToken;
        switch (cp) {
            case CODE_POINTS.QUOTATION_MARK: {
                this.state = State$2.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                token.publicId += REPLACEMENT_CHARACTER;
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this._err(ERR.abruptDoctypePublicIdentifier);
                token.forceQuirks = true;
                this.emitCurrentDoctype(token);
                this.state = State$2.DATA;
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInDoctype);
                token.forceQuirks = true;
                this.emitCurrentDoctype(token);
                this._emitEOFToken();
                break;
            }
            default: {
                token.publicId += String.fromCodePoint(cp);
            }
        }
    }
    // DOCTYPE public identifier (single-quoted) state
    //------------------------------------------------------------------
    _stateDoctypePublicIdentifierSingleQuoted(cp) {
        const token = this.currentToken;
        switch (cp) {
            case CODE_POINTS.APOSTROPHE: {
                this.state = State$2.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                token.publicId += REPLACEMENT_CHARACTER;
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this._err(ERR.abruptDoctypePublicIdentifier);
                token.forceQuirks = true;
                this.emitCurrentDoctype(token);
                this.state = State$2.DATA;
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInDoctype);
                token.forceQuirks = true;
                this.emitCurrentDoctype(token);
                this._emitEOFToken();
                break;
            }
            default: {
                token.publicId += String.fromCodePoint(cp);
            }
        }
    }
    // After DOCTYPE public identifier state
    //------------------------------------------------------------------
    _stateAfterDoctypePublicIdentifier(cp) {
        const token = this.currentToken;
        switch (cp) {
            case CODE_POINTS.SPACE:
            case CODE_POINTS.LINE_FEED:
            case CODE_POINTS.TABULATION:
            case CODE_POINTS.FORM_FEED: {
                this.state = State$2.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this.state = State$2.DATA;
                this.emitCurrentDoctype(token);
                break;
            }
            case CODE_POINTS.QUOTATION_MARK: {
                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);
                token.systemId = '';
                this.state = State$2.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
                break;
            }
            case CODE_POINTS.APOSTROPHE: {
                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);
                token.systemId = '';
                this.state = State$2.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInDoctype);
                token.forceQuirks = true;
                this.emitCurrentDoctype(token);
                this._emitEOFToken();
                break;
            }
            default: {
                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);
                token.forceQuirks = true;
                this.state = State$2.BOGUS_DOCTYPE;
                this._stateBogusDoctype(cp);
            }
        }
    }
    // Between DOCTYPE public and system identifiers state
    //------------------------------------------------------------------
    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {
        const token = this.currentToken;
        switch (cp) {
            case CODE_POINTS.SPACE:
            case CODE_POINTS.LINE_FEED:
            case CODE_POINTS.TABULATION:
            case CODE_POINTS.FORM_FEED: {
                // Ignore whitespace
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this.emitCurrentDoctype(token);
                this.state = State$2.DATA;
                break;
            }
            case CODE_POINTS.QUOTATION_MARK: {
                token.systemId = '';
                this.state = State$2.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
                break;
            }
            case CODE_POINTS.APOSTROPHE: {
                token.systemId = '';
                this.state = State$2.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInDoctype);
                token.forceQuirks = true;
                this.emitCurrentDoctype(token);
                this._emitEOFToken();
                break;
            }
            default: {
                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);
                token.forceQuirks = true;
                this.state = State$2.BOGUS_DOCTYPE;
                this._stateBogusDoctype(cp);
            }
        }
    }
    // After DOCTYPE system keyword state
    //------------------------------------------------------------------
    _stateAfterDoctypeSystemKeyword(cp) {
        const token = this.currentToken;
        switch (cp) {
            case CODE_POINTS.SPACE:
            case CODE_POINTS.LINE_FEED:
            case CODE_POINTS.TABULATION:
            case CODE_POINTS.FORM_FEED: {
                this.state = State$2.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;
                break;
            }
            case CODE_POINTS.QUOTATION_MARK: {
                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);
                token.systemId = '';
                this.state = State$2.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
                break;
            }
            case CODE_POINTS.APOSTROPHE: {
                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);
                token.systemId = '';
                this.state = State$2.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this._err(ERR.missingDoctypeSystemIdentifier);
                token.forceQuirks = true;
                this.state = State$2.DATA;
                this.emitCurrentDoctype(token);
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInDoctype);
                token.forceQuirks = true;
                this.emitCurrentDoctype(token);
                this._emitEOFToken();
                break;
            }
            default: {
                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);
                token.forceQuirks = true;
                this.state = State$2.BOGUS_DOCTYPE;
                this._stateBogusDoctype(cp);
            }
        }
    }
    // Before DOCTYPE system identifier state
    //------------------------------------------------------------------
    _stateBeforeDoctypeSystemIdentifier(cp) {
        const token = this.currentToken;
        switch (cp) {
            case CODE_POINTS.SPACE:
            case CODE_POINTS.LINE_FEED:
            case CODE_POINTS.TABULATION:
            case CODE_POINTS.FORM_FEED: {
                // Ignore whitespace
                break;
            }
            case CODE_POINTS.QUOTATION_MARK: {
                token.systemId = '';
                this.state = State$2.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;
                break;
            }
            case CODE_POINTS.APOSTROPHE: {
                token.systemId = '';
                this.state = State$2.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this._err(ERR.missingDoctypeSystemIdentifier);
                token.forceQuirks = true;
                this.state = State$2.DATA;
                this.emitCurrentDoctype(token);
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInDoctype);
                token.forceQuirks = true;
                this.emitCurrentDoctype(token);
                this._emitEOFToken();
                break;
            }
            default: {
                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);
                token.forceQuirks = true;
                this.state = State$2.BOGUS_DOCTYPE;
                this._stateBogusDoctype(cp);
            }
        }
    }
    // DOCTYPE system identifier (double-quoted) state
    //------------------------------------------------------------------
    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {
        const token = this.currentToken;
        switch (cp) {
            case CODE_POINTS.QUOTATION_MARK: {
                this.state = State$2.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                token.systemId += REPLACEMENT_CHARACTER;
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this._err(ERR.abruptDoctypeSystemIdentifier);
                token.forceQuirks = true;
                this.emitCurrentDoctype(token);
                this.state = State$2.DATA;
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInDoctype);
                token.forceQuirks = true;
                this.emitCurrentDoctype(token);
                this._emitEOFToken();
                break;
            }
            default: {
                token.systemId += String.fromCodePoint(cp);
            }
        }
    }
    // DOCTYPE system identifier (single-quoted) state
    //------------------------------------------------------------------
    _stateDoctypeSystemIdentifierSingleQuoted(cp) {
        const token = this.currentToken;
        switch (cp) {
            case CODE_POINTS.APOSTROPHE: {
                this.state = State$2.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                token.systemId += REPLACEMENT_CHARACTER;
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this._err(ERR.abruptDoctypeSystemIdentifier);
                token.forceQuirks = true;
                this.emitCurrentDoctype(token);
                this.state = State$2.DATA;
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInDoctype);
                token.forceQuirks = true;
                this.emitCurrentDoctype(token);
                this._emitEOFToken();
                break;
            }
            default: {
                token.systemId += String.fromCodePoint(cp);
            }
        }
    }
    // After DOCTYPE system identifier state
    //------------------------------------------------------------------
    _stateAfterDoctypeSystemIdentifier(cp) {
        const token = this.currentToken;
        switch (cp) {
            case CODE_POINTS.SPACE:
            case CODE_POINTS.LINE_FEED:
            case CODE_POINTS.TABULATION:
            case CODE_POINTS.FORM_FEED: {
                // Ignore whitespace
                break;
            }
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this.emitCurrentDoctype(token);
                this.state = State$2.DATA;
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInDoctype);
                token.forceQuirks = true;
                this.emitCurrentDoctype(token);
                this._emitEOFToken();
                break;
            }
            default: {
                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);
                this.state = State$2.BOGUS_DOCTYPE;
                this._stateBogusDoctype(cp);
            }
        }
    }
    // Bogus DOCTYPE state
    //------------------------------------------------------------------
    _stateBogusDoctype(cp) {
        const token = this.currentToken;
        switch (cp) {
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this.emitCurrentDoctype(token);
                this.state = State$2.DATA;
                break;
            }
            case CODE_POINTS.NULL: {
                this._err(ERR.unexpectedNullCharacter);
                break;
            }
            case CODE_POINTS.EOF: {
                this.emitCurrentDoctype(token);
                this._emitEOFToken();
                break;
            }
            // Do nothing
        }
    }
    // CDATA section state
    //------------------------------------------------------------------
    _stateCdataSection(cp) {
        switch (cp) {
            case CODE_POINTS.RIGHT_SQUARE_BRACKET: {
                this.state = State$2.CDATA_SECTION_BRACKET;
                break;
            }
            case CODE_POINTS.EOF: {
                this._err(ERR.eofInCdata);
                this._emitEOFToken();
                break;
            }
            default: {
                this._emitCodePoint(cp);
            }
        }
    }
    // CDATA section bracket state
    //------------------------------------------------------------------
    _stateCdataSectionBracket(cp) {
        if (cp === CODE_POINTS.RIGHT_SQUARE_BRACKET) {
            this.state = State$2.CDATA_SECTION_END;
        }
        else {
            this._emitChars(']');
            this.state = State$2.CDATA_SECTION;
            this._stateCdataSection(cp);
        }
    }
    // CDATA section end state
    //------------------------------------------------------------------
    _stateCdataSectionEnd(cp) {
        switch (cp) {
            case CODE_POINTS.GREATER_THAN_SIGN: {
                this.state = State$2.DATA;
                break;
            }
            case CODE_POINTS.RIGHT_SQUARE_BRACKET: {
                this._emitChars(']');
                break;
            }
            default: {
                this._emitChars(']]');
                this.state = State$2.CDATA_SECTION;
                this._stateCdataSection(cp);
            }
        }
    }
    // Character reference state
    //------------------------------------------------------------------
    _stateCharacterReference() {
        let length = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);
        if (length < 0) {
            if (this.preprocessor.lastChunkWritten) {
                length = this.entityDecoder.end();
            }
            else {
                // Wait for the rest of the entity.
                this.active = false;
                // Mark the entire buffer as read.
                this.preprocessor.pos = this.preprocessor.html.length - 1;
                this.consumedAfterSnapshot = 0;
                this.preprocessor.endOfChunkHit = true;
                return;
            }
        }
        if (length === 0) {
            // This was not a valid entity. Go back to the beginning, and
            // figure out what to do.
            this.preprocessor.pos = this.entityStartPos;
            this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND);
            this.state =
                !this._isCharacterReferenceInAttribute() && isAsciiAlphaNumeric(this.preprocessor.peek(1))
                    ? State$2.AMBIGUOUS_AMPERSAND
                    : this.returnState;
        }
        else {
            // We successfully parsed an entity. Switch to the return state.
            this.state = this.returnState;
        }
    }
    // Ambiguos ampersand state
    //------------------------------------------------------------------
    _stateAmbiguousAmpersand(cp) {
        if (isAsciiAlphaNumeric(cp)) {
            this._flushCodePointConsumedAsCharacterReference(cp);
        }
        else {
            if (cp === CODE_POINTS.SEMICOLON) {
                this._err(ERR.unknownNamedCharacterReference);
            }
            this.state = this.returnState;
            this._callState(cp);
        }
    }
}

//Element utils
const IMPLICIT_END_TAG_REQUIRED = new Set([TAG_ID.DD, TAG_ID.DT, TAG_ID.LI, TAG_ID.OPTGROUP, TAG_ID.OPTION, TAG_ID.P, TAG_ID.RB, TAG_ID.RP, TAG_ID.RT, TAG_ID.RTC]);
const IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([
    ...IMPLICIT_END_TAG_REQUIRED,
    TAG_ID.CAPTION,
    TAG_ID.COLGROUP,
    TAG_ID.TBODY,
    TAG_ID.TD,
    TAG_ID.TFOOT,
    TAG_ID.TH,
    TAG_ID.THEAD,
    TAG_ID.TR,
]);
const SCOPING_ELEMENTS_HTML = new Set([
    TAG_ID.APPLET,
    TAG_ID.CAPTION,
    TAG_ID.HTML,
    TAG_ID.MARQUEE,
    TAG_ID.OBJECT,
    TAG_ID.TABLE,
    TAG_ID.TD,
    TAG_ID.TEMPLATE,
    TAG_ID.TH,
]);
const SCOPING_ELEMENTS_HTML_LIST = new Set([...SCOPING_ELEMENTS_HTML, TAG_ID.OL, TAG_ID.UL]);
const SCOPING_ELEMENTS_HTML_BUTTON = new Set([...SCOPING_ELEMENTS_HTML, TAG_ID.BUTTON]);
const SCOPING_ELEMENTS_MATHML = new Set([TAG_ID.ANNOTATION_XML, TAG_ID.MI, TAG_ID.MN, TAG_ID.MO, TAG_ID.MS, TAG_ID.MTEXT]);
const SCOPING_ELEMENTS_SVG = new Set([TAG_ID.DESC, TAG_ID.FOREIGN_OBJECT, TAG_ID.TITLE]);
const TABLE_ROW_CONTEXT = new Set([TAG_ID.TR, TAG_ID.TEMPLATE, TAG_ID.HTML]);
const TABLE_BODY_CONTEXT = new Set([TAG_ID.TBODY, TAG_ID.TFOOT, TAG_ID.THEAD, TAG_ID.TEMPLATE, TAG_ID.HTML]);
const TABLE_CONTEXT = new Set([TAG_ID.TABLE, TAG_ID.TEMPLATE, TAG_ID.HTML]);
const TABLE_CELLS = new Set([TAG_ID.TD, TAG_ID.TH]);
//Stack of open elements
class OpenElementStack {
    get currentTmplContentOrNode() {
        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;
    }
    constructor(document, treeAdapter, handler) {
        this.treeAdapter = treeAdapter;
        this.handler = handler;
        this.items = [];
        this.tagIDs = [];
        this.stackTop = -1;
        this.tmplCount = 0;
        this.currentTagId = TAG_ID.UNKNOWN;
        this.current = document;
    }
    //Index of element
    _indexOf(element) {
        return this.items.lastIndexOf(element, this.stackTop);
    }
    //Update current element
    _isInTemplate() {
        return this.currentTagId === TAG_ID.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;
    }
    _updateCurrentElement() {
        this.current = this.items[this.stackTop];
        this.currentTagId = this.tagIDs[this.stackTop];
    }
    //Mutations
    push(element, tagID) {
        this.stackTop++;
        this.items[this.stackTop] = element;
        this.current = element;
        this.tagIDs[this.stackTop] = tagID;
        this.currentTagId = tagID;
        if (this._isInTemplate()) {
            this.tmplCount++;
        }
        this.handler.onItemPush(element, tagID, true);
    }
    pop() {
        const popped = this.current;
        if (this.tmplCount > 0 && this._isInTemplate()) {
            this.tmplCount--;
        }
        this.stackTop--;
        this._updateCurrentElement();
        this.handler.onItemPop(popped, true);
    }
    replace(oldElement, newElement) {
        const idx = this._indexOf(oldElement);
        this.items[idx] = newElement;
        if (idx === this.stackTop) {
            this.current = newElement;
        }
    }
    insertAfter(referenceElement, newElement, newElementID) {
        const insertionIdx = this._indexOf(referenceElement) + 1;
        this.items.splice(insertionIdx, 0, newElement);
        this.tagIDs.splice(insertionIdx, 0, newElementID);
        this.stackTop++;
        if (insertionIdx === this.stackTop) {
            this._updateCurrentElement();
        }
        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);
    }
    popUntilTagNamePopped(tagName) {
        let targetIdx = this.stackTop + 1;
        do {
            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);
        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);
        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);
    }
    shortenToLength(idx) {
        while (this.stackTop >= idx) {
            const popped = this.current;
            if (this.tmplCount > 0 && this._isInTemplate()) {
                this.tmplCount -= 1;
            }
            this.stackTop--;
            this._updateCurrentElement();
            this.handler.onItemPop(popped, this.stackTop < idx);
        }
    }
    popUntilElementPopped(element) {
        const idx = this._indexOf(element);
        this.shortenToLength(idx < 0 ? 0 : idx);
    }
    popUntilPopped(tagNames, targetNS) {
        const idx = this._indexOfTagNames(tagNames, targetNS);
        this.shortenToLength(idx < 0 ? 0 : idx);
    }
    popUntilNumberedHeaderPopped() {
        this.popUntilPopped(NUMBERED_HEADERS, NS.HTML);
    }
    popUntilTableCellPopped() {
        this.popUntilPopped(TABLE_CELLS, NS.HTML);
    }
    popAllUpToHtmlElement() {
        //NOTE: here we assume that the root <html> element is always first in the open element stack, so
        //we perform this fast stack clean up.
        this.tmplCount = 0;
        this.shortenToLength(1);
    }
    _indexOfTagNames(tagNames, namespace) {
        for (let i = this.stackTop; i >= 0; i--) {
            if (tagNames.has(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {
                return i;
            }
        }
        return -1;
    }
    clearBackTo(tagNames, targetNS) {
        const idx = this._indexOfTagNames(tagNames, targetNS);
        this.shortenToLength(idx + 1);
    }
    clearBackToTableContext() {
        this.clearBackTo(TABLE_CONTEXT, NS.HTML);
    }
    clearBackToTableBodyContext() {
        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);
    }
    clearBackToTableRowContext() {
        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);
    }
    remove(element) {
        const idx = this._indexOf(element);
        if (idx >= 0) {
            if (idx === this.stackTop) {
                this.pop();
            }
            else {
                this.items.splice(idx, 1);
                this.tagIDs.splice(idx, 1);
                this.stackTop--;
                this._updateCurrentElement();
                this.handler.onItemPop(element, false);
            }
        }
    }
    //Search
    tryPeekProperlyNestedBodyElement() {
        //Properly nested <body> element (should be second element in stack).
        return this.stackTop >= 1 && this.tagIDs[1] === TAG_ID.BODY ? this.items[1] : null;
    }
    contains(element) {
        return this._indexOf(element) > -1;
    }
    getCommonAncestor(element) {
        const elementIdx = this._indexOf(element) - 1;
        return elementIdx >= 0 ? this.items[elementIdx] : null;
    }
    isRootHtmlElementCurrent() {
        return this.stackTop === 0 && this.tagIDs[0] === TAG_ID.HTML;
    }
    //Element in scope
    hasInDynamicScope(tagName, htmlScope) {
        for (let i = this.stackTop; i >= 0; i--) {
            const tn = this.tagIDs[i];
            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {
                case NS.HTML: {
                    if (tn === tagName)
                        return true;
                    if (htmlScope.has(tn))
                        return false;
                    break;
                }
                case NS.SVG: {
                    if (SCOPING_ELEMENTS_SVG.has(tn))
                        return false;
                    break;
                }
                case NS.MATHML: {
                    if (SCOPING_ELEMENTS_MATHML.has(tn))
                        return false;
                    break;
                }
            }
        }
        return true;
    }
    hasInScope(tagName) {
        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML);
    }
    hasInListItemScope(tagName) {
        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_LIST);
    }
    hasInButtonScope(tagName) {
        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_BUTTON);
    }
    hasNumberedHeaderInScope() {
        for (let i = this.stackTop; i >= 0; i--) {
            const tn = this.tagIDs[i];
            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {
                case NS.HTML: {
                    if (NUMBERED_HEADERS.has(tn))
                        return true;
                    if (SCOPING_ELEMENTS_HTML.has(tn))
                        return false;
                    break;
                }
                case NS.SVG: {
                    if (SCOPING_ELEMENTS_SVG.has(tn))
                        return false;
                    break;
                }
                case NS.MATHML: {
                    if (SCOPING_ELEMENTS_MATHML.has(tn))
                        return false;
                    break;
                }
            }
        }
        return true;
    }
    hasInTableScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {
                continue;
            }
            switch (this.tagIDs[i]) {
                case tagName: {
                    return true;
                }
                case TAG_ID.TABLE:
                case TAG_ID.HTML: {
                    return false;
                }
            }
        }
        return true;
    }
    hasTableBodyContextInTableScope() {
        for (let i = this.stackTop; i >= 0; i--) {
            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {
                continue;
            }
            switch (this.tagIDs[i]) {
                case TAG_ID.TBODY:
                case TAG_ID.THEAD:
                case TAG_ID.TFOOT: {
                    return true;
                }
                case TAG_ID.TABLE:
                case TAG_ID.HTML: {
                    return false;
                }
            }
        }
        return true;
    }
    hasInSelectScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {
                continue;
            }
            switch (this.tagIDs[i]) {
                case tagName: {
                    return true;
                }
                case TAG_ID.OPTION:
                case TAG_ID.OPTGROUP: {
                    break;
                }
                default: {
                    return false;
                }
            }
        }
        return true;
    }
    //Implied end tags
    generateImpliedEndTags() {
        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {
            this.pop();
        }
    }
    generateImpliedEndTagsThoroughly() {
        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {
            this.pop();
        }
    }
    generateImpliedEndTagsWithExclusion(exclusionId) {
        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {
            this.pop();
        }
    }
}

//Const
const NOAH_ARK_CAPACITY = 3;
var EntryType;
(function (EntryType) {
    EntryType[EntryType["Marker"] = 0] = "Marker";
    EntryType[EntryType["Element"] = 1] = "Element";
})(EntryType || (EntryType = {}));
const MARKER = { type: EntryType.Marker };
//List of formatting elements
class FormattingElementList {
    constructor(treeAdapter) {
        this.treeAdapter = treeAdapter;
        this.entries = [];
        this.bookmark = null;
    }
    //Noah Ark's condition
    //OPTIMIZATION: at first we try to find possible candidates for exclusion using
    //lightweight heuristics without thorough attributes check.
    _getNoahArkConditionCandidates(newElement, neAttrs) {
        const candidates = [];
        const neAttrsLength = neAttrs.length;
        const neTagName = this.treeAdapter.getTagName(newElement);
        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);
        for (let i = 0; i < this.entries.length; i++) {
            const entry = this.entries[i];
            if (entry.type === EntryType.Marker) {
                break;
            }
            const { element } = entry;
            if (this.treeAdapter.getTagName(element) === neTagName &&
                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {
                const elementAttrs = this.treeAdapter.getAttrList(element);
                if (elementAttrs.length === neAttrsLength) {
                    candidates.push({ idx: i, attrs: elementAttrs });
                }
            }
        }
        return candidates;
    }
    _ensureNoahArkCondition(newElement) {
        if (this.entries.length < NOAH_ARK_CAPACITY)
            return;
        const neAttrs = this.treeAdapter.getAttrList(newElement);
        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);
        if (candidates.length < NOAH_ARK_CAPACITY)
            return;
        //NOTE: build attrs map for the new element, so we can perform fast lookups
        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));
        let validCandidates = 0;
        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met
        for (let i = 0; i < candidates.length; i++) {
            const candidate = candidates[i];
            // We know that `candidate.attrs.length === neAttrs.length`
            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {
                validCandidates += 1;
                if (validCandidates >= NOAH_ARK_CAPACITY) {
                    this.entries.splice(candidate.idx, 1);
                }
            }
        }
    }
    //Mutations
    insertMarker() {
        this.entries.unshift(MARKER);
    }
    pushElement(element, token) {
        this._ensureNoahArkCondition(element);
        this.entries.unshift({
            type: EntryType.Element,
            element,
            token,
        });
    }
    insertElementAfterBookmark(element, token) {
        const bookmarkIdx = this.entries.indexOf(this.bookmark);
        this.entries.splice(bookmarkIdx, 0, {
            type: EntryType.Element,
            element,
            token,
        });
    }
    removeEntry(entry) {
        const entryIndex = this.entries.indexOf(entry);
        if (entryIndex >= 0) {
            this.entries.splice(entryIndex, 1);
        }
    }
    /**
     * Clears the list of formatting elements up to the last marker.
     *
     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker
     */
    clearToLastMarker() {
        const markerIdx = this.entries.indexOf(MARKER);
        if (markerIdx >= 0) {
            this.entries.splice(0, markerIdx + 1);
        }
        else {
            this.entries.length = 0;
        }
    }
    //Search
    getElementEntryInScopeWithTagName(tagName) {
        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);
        return entry && entry.type === EntryType.Element ? entry : null;
    }
    getElementEntry(element) {
        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);
    }
}

const defaultTreeAdapter = {
    //Node construction
    createDocument() {
        return {
            nodeName: '#document',
            mode: DOCUMENT_MODE.NO_QUIRKS,
            childNodes: [],
        };
    },
    createDocumentFragment() {
        return {
            nodeName: '#document-fragment',
            childNodes: [],
        };
    },
    createElement(tagName, namespaceURI, attrs) {
        return {
            nodeName: tagName,
            tagName,
            attrs,
            namespaceURI,
            childNodes: [],
            parentNode: null,
        };
    },
    createCommentNode(data) {
        return {
            nodeName: '#comment',
            data,
            parentNode: null,
        };
    },
    createTextNode(value) {
        return {
            nodeName: '#text',
            value,
            parentNode: null,
        };
    },
    //Tree mutation
    appendChild(parentNode, newNode) {
        parentNode.childNodes.push(newNode);
        newNode.parentNode = parentNode;
    },
    insertBefore(parentNode, newNode, referenceNode) {
        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);
        parentNode.childNodes.splice(insertionIdx, 0, newNode);
        newNode.parentNode = parentNode;
    },
    setTemplateContent(templateElement, contentElement) {
        templateElement.content = contentElement;
    },
    getTemplateContent(templateElement) {
        return templateElement.content;
    },
    setDocumentType(document, name, publicId, systemId) {
        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');
        if (doctypeNode) {
            doctypeNode.name = name;
            doctypeNode.publicId = publicId;
            doctypeNode.systemId = systemId;
        }
        else {
            const node = {
                nodeName: '#documentType',
                name,
                publicId,
                systemId,
                parentNode: null,
            };
            defaultTreeAdapter.appendChild(document, node);
        }
    },
    setDocumentMode(document, mode) {
        document.mode = mode;
    },
    getDocumentMode(document) {
        return document.mode;
    },
    detachNode(node) {
        if (node.parentNode) {
            const idx = node.parentNode.childNodes.indexOf(node);
            node.parentNode.childNodes.splice(idx, 1);
            node.parentNode = null;
        }
    },
    insertText(parentNode, text) {
        if (parentNode.childNodes.length > 0) {
            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];
            if (defaultTreeAdapter.isTextNode(prevNode)) {
                prevNode.value += text;
                return;
            }
        }
        defaultTreeAdapter.appendChild(parentNode, defaultTreeAdapter.createTextNode(text));
    },
    insertTextBefore(parentNode, text, referenceNode) {
        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];
        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {
            prevNode.value += text;
        }
        else {
            defaultTreeAdapter.insertBefore(parentNode, defaultTreeAdapter.createTextNode(text), referenceNode);
        }
    },
    adoptAttributes(recipient, attrs) {
        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));
        for (let j = 0; j < attrs.length; j++) {
            if (!recipientAttrsMap.has(attrs[j].name)) {
                recipient.attrs.push(attrs[j]);
            }
        }
    },
    //Tree traversing
    getFirstChild(node) {
        return node.childNodes[0];
    },
    getChildNodes(node) {
        return node.childNodes;
    },
    getParentNode(node) {
        return node.parentNode;
    },
    getAttrList(element) {
        return element.attrs;
    },
    //Node data
    getTagName(element) {
        return element.tagName;
    },
    getNamespaceURI(element) {
        return element.namespaceURI;
    },
    getTextNodeContent(textNode) {
        return textNode.value;
    },
    getCommentNodeContent(commentNode) {
        return commentNode.data;
    },
    getDocumentTypeNodeName(doctypeNode) {
        return doctypeNode.name;
    },
    getDocumentTypeNodePublicId(doctypeNode) {
        return doctypeNode.publicId;
    },
    getDocumentTypeNodeSystemId(doctypeNode) {
        return doctypeNode.systemId;
    },
    //Node types
    isTextNode(node) {
        return node.nodeName === '#text';
    },
    isCommentNode(node) {
        return node.nodeName === '#comment';
    },
    isDocumentTypeNode(node) {
        return node.nodeName === '#documentType';
    },
    isElementNode(node) {
        return Object.prototype.hasOwnProperty.call(node, 'tagName');
    },
    // Source code location
    setNodeSourceCodeLocation(node, location) {
        node.sourceCodeLocation = location;
    },
    getNodeSourceCodeLocation(node) {
        return node.sourceCodeLocation;
    },
    updateNodeSourceCodeLocation(node, endLocation) {
        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };
    },
};

//Const
const VALID_DOCTYPE_NAME = 'html';
const VALID_SYSTEM_ID = 'about:legacy-compat';
const QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';
const QUIRKS_MODE_PUBLIC_ID_PREFIXES = [
    '+//silmaril//dtd html pro v0r11 19970101//',
    '-//as//dtd html 3.0 aswedit + extensions//',
    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',
    '-//ietf//dtd html 2.0 level 1//',
    '-//ietf//dtd html 2.0 level 2//',
    '-//ietf//dtd html 2.0 strict level 1//',
    '-//ietf//dtd html 2.0 strict level 2//',
    '-//ietf//dtd html 2.0 strict//',
    '-//ietf//dtd html 2.0//',
    '-//ietf//dtd html 2.1e//',
    '-//ietf//dtd html 3.0//',
    '-//ietf//dtd html 3.2 final//',
    '-//ietf//dtd html 3.2//',
    '-//ietf//dtd html 3//',
    '-//ietf//dtd html level 0//',
    '-//ietf//dtd html level 1//',
    '-//ietf//dtd html level 2//',
    '-//ietf//dtd html level 3//',
    '-//ietf//dtd html strict level 0//',
    '-//ietf//dtd html strict level 1//',
    '-//ietf//dtd html strict level 2//',
    '-//ietf//dtd html strict level 3//',
    '-//ietf//dtd html strict//',
    '-//ietf//dtd html//',
    '-//metrius//dtd metrius presentational//',
    '-//microsoft//dtd internet explorer 2.0 html strict//',
    '-//microsoft//dtd internet explorer 2.0 html//',
    '-//microsoft//dtd internet explorer 2.0 tables//',
    '-//microsoft//dtd internet explorer 3.0 html strict//',
    '-//microsoft//dtd internet explorer 3.0 html//',
    '-//microsoft//dtd internet explorer 3.0 tables//',
    '-//netscape comm. corp.//dtd html//',
    '-//netscape comm. corp.//dtd strict html//',
    "-//o'reilly and associates//dtd html 2.0//",
    "-//o'reilly and associates//dtd html extended 1.0//",
    "-//o'reilly and associates//dtd html extended relaxed 1.0//",
    '-//sq//dtd html 2.0 hotmetal + extensions//',
    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',
    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',
    '-//spyglass//dtd html 2.0 extended//',
    '-//sun microsystems corp.//dtd hotjava html//',
    '-//sun microsystems corp.//dtd hotjava strict html//',
    '-//w3c//dtd html 3 1995-03-24//',
    '-//w3c//dtd html 3.2 draft//',
    '-//w3c//dtd html 3.2 final//',
    '-//w3c//dtd html 3.2//',
    '-//w3c//dtd html 3.2s draft//',
    '-//w3c//dtd html 4.0 frameset//',
    '-//w3c//dtd html 4.0 transitional//',
    '-//w3c//dtd html experimental 19960712//',
    '-//w3c//dtd html experimental 970421//',
    '-//w3c//dtd w3 html//',
    '-//w3o//dtd w3 html 3.0//',
    '-//webtechs//dtd mozilla html 2.0//',
    '-//webtechs//dtd mozilla html//',
];
const QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [
    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,
    '-//w3c//dtd html 4.01 frameset//',
    '-//w3c//dtd html 4.01 transitional//',
];
const QUIRKS_MODE_PUBLIC_IDS = new Set([
    '-//w3o//dtd w3 html strict 3.0//en//',
    '-/w3c/dtd html 4.0 transitional/en',
    'html',
]);
const LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];
const LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [
    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,
    '-//w3c//dtd html 4.01 frameset//',
    '-//w3c//dtd html 4.01 transitional//',
];
//Utils
function hasPrefix(publicId, prefixes) {
    return prefixes.some((prefix) => publicId.startsWith(prefix));
}
//API
function isConforming(token) {
    return (token.name === VALID_DOCTYPE_NAME &&
        token.publicId === null &&
        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));
}
function getDocumentMode(token) {
    if (token.name !== VALID_DOCTYPE_NAME) {
        return DOCUMENT_MODE.QUIRKS;
    }
    const { systemId } = token;
    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {
        return DOCUMENT_MODE.QUIRKS;
    }
    let { publicId } = token;
    if (publicId !== null) {
        publicId = publicId.toLowerCase();
        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {
            return DOCUMENT_MODE.QUIRKS;
        }
        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;
        if (hasPrefix(publicId, prefixes)) {
            return DOCUMENT_MODE.QUIRKS;
        }
        prefixes =
            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;
        if (hasPrefix(publicId, prefixes)) {
            return DOCUMENT_MODE.LIMITED_QUIRKS;
        }
    }
    return DOCUMENT_MODE.NO_QUIRKS;
}

//MIME types
const MIME_TYPES = {
    TEXT_HTML: 'text/html',
    APPLICATION_XML: 'application/xhtml+xml',
};
//Attributes
const DEFINITION_URL_ATTR = 'definitionurl';
const ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';
const SVG_ATTRS_ADJUSTMENT_MAP = new Map([
    'attributeName',
    'attributeType',
    'baseFrequency',
    'baseProfile',
    'calcMode',
    'clipPathUnits',
    'diffuseConstant',
    'edgeMode',
    'filterUnits',
    'glyphRef',
    'gradientTransform',
    'gradientUnits',
    'kernelMatrix',
    'kernelUnitLength',
    'keyPoints',
    'keySplines',
    'keyTimes',
    'lengthAdjust',
    'limitingConeAngle',
    'markerHeight',
    'markerUnits',
    'markerWidth',
    'maskContentUnits',
    'maskUnits',
    'numOctaves',
    'pathLength',
    'patternContentUnits',
    'patternTransform',
    'patternUnits',
    'pointsAtX',
    'pointsAtY',
    'pointsAtZ',
    'preserveAlpha',
    'preserveAspectRatio',
    'primitiveUnits',
    'refX',
    'refY',
    'repeatCount',
    'repeatDur',
    'requiredExtensions',
    'requiredFeatures',
    'specularConstant',
    'specularExponent',
    'spreadMethod',
    'startOffset',
    'stdDeviation',
    'stitchTiles',
    'surfaceScale',
    'systemLanguage',
    'tableValues',
    'targetX',
    'targetY',
    'textLength',
    'viewBox',
    'viewTarget',
    'xChannelSelector',
    'yChannelSelector',
    'zoomAndPan',
].map((attr) => [attr.toLowerCase(), attr]));
const XML_ATTRS_ADJUSTMENT_MAP = new Map([
    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],
    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],
    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],
    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],
    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],
    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],
    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],
    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],
    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],
    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],
    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],
]);
//SVG tag names adjustment map
const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([
    'altGlyph',
    'altGlyphDef',
    'altGlyphItem',
    'animateColor',
    'animateMotion',
    'animateTransform',
    'clipPath',
    'feBlend',
    'feColorMatrix',
    'feComponentTransfer',
    'feComposite',
    'feConvolveMatrix',
    'feDiffuseLighting',
    'feDisplacementMap',
    'feDistantLight',
    'feFlood',
    'feFuncA',
    'feFuncB',
    'feFuncG',
    'feFuncR',
    'feGaussianBlur',
    'feImage',
    'feMerge',
    'feMergeNode',
    'feMorphology',
    'feOffset',
    'fePointLight',
    'feSpecularLighting',
    'feSpotLight',
    'feTile',
    'feTurbulence',
    'foreignObject',
    'glyphRef',
    'linearGradient',
    'radialGradient',
    'textPath',
].map((tn) => [tn.toLowerCase(), tn]));
//Tags that causes exit from foreign content
const EXITS_FOREIGN_CONTENT = new Set([
    TAG_ID.B,
    TAG_ID.BIG,
    TAG_ID.BLOCKQUOTE,
    TAG_ID.BODY,
    TAG_ID.BR,
    TAG_ID.CENTER,
    TAG_ID.CODE,
    TAG_ID.DD,
    TAG_ID.DIV,
    TAG_ID.DL,
    TAG_ID.DT,
    TAG_ID.EM,
    TAG_ID.EMBED,
    TAG_ID.H1,
    TAG_ID.H2,
    TAG_ID.H3,
    TAG_ID.H4,
    TAG_ID.H5,
    TAG_ID.H6,
    TAG_ID.HEAD,
    TAG_ID.HR,
    TAG_ID.I,
    TAG_ID.IMG,
    TAG_ID.LI,
    TAG_ID.LISTING,
    TAG_ID.MENU,
    TAG_ID.META,
    TAG_ID.NOBR,
    TAG_ID.OL,
    TAG_ID.P,
    TAG_ID.PRE,
    TAG_ID.RUBY,
    TAG_ID.S,
    TAG_ID.SMALL,
    TAG_ID.SPAN,
    TAG_ID.STRONG,
    TAG_ID.STRIKE,
    TAG_ID.SUB,
    TAG_ID.SUP,
    TAG_ID.TABLE,
    TAG_ID.TT,
    TAG_ID.U,
    TAG_ID.UL,
    TAG_ID.VAR,
]);
//Check exit from foreign content
function causesExit(startTagToken) {
    const tn = startTagToken.tagID;
    const isFontWithAttrs = tn === TAG_ID.FONT &&
        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);
    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);
}
//Token adjustments
function adjustTokenMathMLAttrs(token) {
    for (let i = 0; i < token.attrs.length; i++) {
        if (token.attrs[i].name === DEFINITION_URL_ATTR) {
            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;
            break;
        }
    }
}
function adjustTokenSVGAttrs(token) {
    for (let i = 0; i < token.attrs.length; i++) {
        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);
        if (adjustedAttrName != null) {
            token.attrs[i].name = adjustedAttrName;
        }
    }
}
function adjustTokenXMLAttrs(token) {
    for (let i = 0; i < token.attrs.length; i++) {
        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);
        if (adjustedAttrEntry) {
            token.attrs[i].prefix = adjustedAttrEntry.prefix;
            token.attrs[i].name = adjustedAttrEntry.name;
            token.attrs[i].namespace = adjustedAttrEntry.namespace;
        }
    }
}
function adjustTokenSVGTagName(token) {
    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);
    if (adjustedTagName != null) {
        token.tagName = adjustedTagName;
        token.tagID = getTagID(token.tagName);
    }
}
//Integration points
function isMathMLTextIntegrationPoint(tn, ns) {
    return ns === NS.MATHML && (tn === TAG_ID.MI || tn === TAG_ID.MO || tn === TAG_ID.MN || tn === TAG_ID.MS || tn === TAG_ID.MTEXT);
}
function isHtmlIntegrationPoint(tn, ns, attrs) {
    if (ns === NS.MATHML && tn === TAG_ID.ANNOTATION_XML) {
        for (let i = 0; i < attrs.length; i++) {
            if (attrs[i].name === ATTRS.ENCODING) {
                const value = attrs[i].value.toLowerCase();
                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;
            }
        }
    }
    return ns === NS.SVG && (tn === TAG_ID.FOREIGN_OBJECT || tn === TAG_ID.DESC || tn === TAG_ID.TITLE);
}
function isIntegrationPoint(tn, ns, attrs, foreignNS) {
    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||
        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));
}

//Misc constants
const HIDDEN_INPUT_TYPE = 'hidden';
//Adoption agency loops iteration count
const AA_OUTER_LOOP_ITER = 8;
const AA_INNER_LOOP_ITER = 3;
//Insertion modes
var InsertionMode;
(function (InsertionMode) {
    InsertionMode[InsertionMode["INITIAL"] = 0] = "INITIAL";
    InsertionMode[InsertionMode["BEFORE_HTML"] = 1] = "BEFORE_HTML";
    InsertionMode[InsertionMode["BEFORE_HEAD"] = 2] = "BEFORE_HEAD";
    InsertionMode[InsertionMode["IN_HEAD"] = 3] = "IN_HEAD";
    InsertionMode[InsertionMode["IN_HEAD_NO_SCRIPT"] = 4] = "IN_HEAD_NO_SCRIPT";
    InsertionMode[InsertionMode["AFTER_HEAD"] = 5] = "AFTER_HEAD";
    InsertionMode[InsertionMode["IN_BODY"] = 6] = "IN_BODY";
    InsertionMode[InsertionMode["TEXT"] = 7] = "TEXT";
    InsertionMode[InsertionMode["IN_TABLE"] = 8] = "IN_TABLE";
    InsertionMode[InsertionMode["IN_TABLE_TEXT"] = 9] = "IN_TABLE_TEXT";
    InsertionMode[InsertionMode["IN_CAPTION"] = 10] = "IN_CAPTION";
    InsertionMode[InsertionMode["IN_COLUMN_GROUP"] = 11] = "IN_COLUMN_GROUP";
    InsertionMode[InsertionMode["IN_TABLE_BODY"] = 12] = "IN_TABLE_BODY";
    InsertionMode[InsertionMode["IN_ROW"] = 13] = "IN_ROW";
    InsertionMode[InsertionMode["IN_CELL"] = 14] = "IN_CELL";
    InsertionMode[InsertionMode["IN_SELECT"] = 15] = "IN_SELECT";
    InsertionMode[InsertionMode["IN_SELECT_IN_TABLE"] = 16] = "IN_SELECT_IN_TABLE";
    InsertionMode[InsertionMode["IN_TEMPLATE"] = 17] = "IN_TEMPLATE";
    InsertionMode[InsertionMode["AFTER_BODY"] = 18] = "AFTER_BODY";
    InsertionMode[InsertionMode["IN_FRAMESET"] = 19] = "IN_FRAMESET";
    InsertionMode[InsertionMode["AFTER_FRAMESET"] = 20] = "AFTER_FRAMESET";
    InsertionMode[InsertionMode["AFTER_AFTER_BODY"] = 21] = "AFTER_AFTER_BODY";
    InsertionMode[InsertionMode["AFTER_AFTER_FRAMESET"] = 22] = "AFTER_AFTER_FRAMESET";
})(InsertionMode || (InsertionMode = {}));
const BASE_LOC = {
    startLine: -1,
    startCol: -1,
    startOffset: -1,
    endLine: -1,
    endCol: -1,
    endOffset: -1,
};
const TABLE_STRUCTURE_TAGS = new Set([TAG_ID.TABLE, TAG_ID.TBODY, TAG_ID.TFOOT, TAG_ID.THEAD, TAG_ID.TR]);
const defaultParserOptions = {
    scriptingEnabled: true,
    sourceCodeLocationInfo: false,
    treeAdapter: defaultTreeAdapter,
    onParseError: null,
};
//Parser
let Parser$1 = class Parser {
    constructor(options, document, 
    /** @internal */
    fragmentContext = null, 
    /** @internal */
    scriptHandler = null) {
        this.fragmentContext = fragmentContext;
        this.scriptHandler = scriptHandler;
        this.currentToken = null;
        this.stopped = false;
        /** @internal */
        this.insertionMode = InsertionMode.INITIAL;
        /** @internal */
        this.originalInsertionMode = InsertionMode.INITIAL;
        /** @internal */
        this.headElement = null;
        /** @internal */
        this.formElement = null;
        /** Indicates that the current node is not an element in the HTML namespace */
        this.currentNotInHTML = false;
        /**
         * The template insertion mode stack is maintained from the left.
         * Ie. the topmost element will always have index 0.
         *
         * @internal
         */
        this.tmplInsertionModeStack = [];
        /** @internal */
        this.pendingCharacterTokens = [];
        /** @internal */
        this.hasNonWhitespacePendingCharacterToken = false;
        /** @internal */
        this.framesetOk = true;
        /** @internal */
        this.skipNextNewLine = false;
        /** @internal */
        this.fosterParentingEnabled = false;
        this.options = {
            ...defaultParserOptions,
            ...options,
        };
        this.treeAdapter = this.options.treeAdapter;
        this.onParseError = this.options.onParseError;
        // Always enable location info if we report parse errors.
        if (this.onParseError) {
            this.options.sourceCodeLocationInfo = true;
        }
        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();
        this.tokenizer = new Tokenizer(this.options, this);
        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);
        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : TAG_ID.UNKNOWN;
        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);
        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);
    }
    // API
    static parse(html, options) {
        const parser = new this(options);
        parser.tokenizer.write(html, true);
        return parser.document;
    }
    static getFragmentParser(fragmentContext, options) {
        const opts = {
            ...defaultParserOptions,
            ...options,
        };
        //NOTE: use a <template> element as the fragment context if no context element was provided,
        //so we will parse in a "forgiving" manner
        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TAG_NAMES.TEMPLATE, NS.HTML, []));
        //NOTE: create a fake element which will be used as the `document` for fragment parsing.
        //This is important for jsdom, where a new `document` cannot be created. This led to
        //fragment parsing messing with the main `document`.
        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);
        const parser = new this(opts, documentMock, fragmentContext);
        if (parser.fragmentContextID === TAG_ID.TEMPLATE) {
            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);
        }
        parser._initTokenizerForFragmentParsing();
        parser._insertFakeRootElement();
        parser._resetInsertionMode();
        parser._findFormInFragmentContext();
        return parser;
    }
    getFragment() {
        const rootElement = this.treeAdapter.getFirstChild(this.document);
        const fragment = this.treeAdapter.createDocumentFragment();
        this._adoptNodes(rootElement, fragment);
        return fragment;
    }
    //Errors
    /** @internal */
    _err(token, code, beforeToken) {
        var _a;
        if (!this.onParseError)
            return;
        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;
        const err = {
            code,
            startLine: loc.startLine,
            startCol: loc.startCol,
            startOffset: loc.startOffset,
            endLine: beforeToken ? loc.startLine : loc.endLine,
            endCol: beforeToken ? loc.startCol : loc.endCol,
            endOffset: beforeToken ? loc.startOffset : loc.endOffset,
        };
        this.onParseError(err);
    }
    //Stack events
    /** @internal */
    onItemPush(node, tid, isTop) {
        var _a, _b;
        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);
        if (isTop && this.openElements.stackTop > 0)
            this._setContextModes(node, tid);
    }
    /** @internal */
    onItemPop(node, isTop) {
        var _a, _b;
        if (this.options.sourceCodeLocationInfo) {
            this._setEndLocation(node, this.currentToken);
        }
        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);
        if (isTop) {
            let current;
            let currentTagId;
            if (this.openElements.stackTop === 0 && this.fragmentContext) {
                current = this.fragmentContext;
                currentTagId = this.fragmentContextID;
            }
            else {
                ({ current, currentTagId } = this.openElements);
            }
            this._setContextModes(current, currentTagId);
        }
    }
    _setContextModes(current, tid) {
        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;
        this.currentNotInHTML = !isHTML;
        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);
    }
    /** @protected */
    _switchToTextParsing(currentToken, nextTokenizerState) {
        this._insertElement(currentToken, NS.HTML);
        this.tokenizer.state = nextTokenizerState;
        this.originalInsertionMode = this.insertionMode;
        this.insertionMode = InsertionMode.TEXT;
    }
    switchToPlaintextParsing() {
        this.insertionMode = InsertionMode.TEXT;
        this.originalInsertionMode = InsertionMode.IN_BODY;
        this.tokenizer.state = TokenizerMode.PLAINTEXT;
    }
    //Fragment parsing
    /** @protected */
    _getAdjustedCurrentElement() {
        return this.openElements.stackTop === 0 && this.fragmentContext
            ? this.fragmentContext
            : this.openElements.current;
    }
    /** @protected */
    _findFormInFragmentContext() {
        let node = this.fragmentContext;
        while (node) {
            if (this.treeAdapter.getTagName(node) === TAG_NAMES.FORM) {
                this.formElement = node;
                break;
            }
            node = this.treeAdapter.getParentNode(node);
        }
    }
    _initTokenizerForFragmentParsing() {
        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {
            return;
        }
        switch (this.fragmentContextID) {
            case TAG_ID.TITLE:
            case TAG_ID.TEXTAREA: {
                this.tokenizer.state = TokenizerMode.RCDATA;
                break;
            }
            case TAG_ID.STYLE:
            case TAG_ID.XMP:
            case TAG_ID.IFRAME:
            case TAG_ID.NOEMBED:
            case TAG_ID.NOFRAMES:
            case TAG_ID.NOSCRIPT: {
                this.tokenizer.state = TokenizerMode.RAWTEXT;
                break;
            }
            case TAG_ID.SCRIPT: {
                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;
                break;
            }
            case TAG_ID.PLAINTEXT: {
                this.tokenizer.state = TokenizerMode.PLAINTEXT;
                break;
            }
            // Do nothing
        }
    }
    //Tree mutation
    /** @protected */
    _setDocumentType(token) {
        const name = token.name || '';
        const publicId = token.publicId || '';
        const systemId = token.systemId || '';
        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);
        if (token.location) {
            const documentChildren = this.treeAdapter.getChildNodes(this.document);
            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));
            if (docTypeNode) {
                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);
            }
        }
    }
    /** @protected */
    _attachElementToTree(element, location) {
        if (this.options.sourceCodeLocationInfo) {
            const loc = location && {
                ...location,
                startTag: location,
            };
            this.treeAdapter.setNodeSourceCodeLocation(element, loc);
        }
        if (this._shouldFosterParentOnInsertion()) {
            this._fosterParentElement(element);
        }
        else {
            const parent = this.openElements.currentTmplContentOrNode;
            this.treeAdapter.appendChild(parent, element);
        }
    }
    /**
     * For self-closing tags. Add an element to the tree, but skip adding it
     * to the stack.
     */
    /** @protected */
    _appendElement(token, namespaceURI) {
        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);
        this._attachElementToTree(element, token.location);
    }
    /** @protected */
    _insertElement(token, namespaceURI) {
        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);
        this._attachElementToTree(element, token.location);
        this.openElements.push(element, token.tagID);
    }
    /** @protected */
    _insertFakeElement(tagName, tagID) {
        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);
        this._attachElementToTree(element, null);
        this.openElements.push(element, tagID);
    }
    /** @protected */
    _insertTemplate(token) {
        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);
        const content = this.treeAdapter.createDocumentFragment();
        this.treeAdapter.setTemplateContent(tmpl, content);
        this._attachElementToTree(tmpl, token.location);
        this.openElements.push(tmpl, token.tagID);
        if (this.options.sourceCodeLocationInfo)
            this.treeAdapter.setNodeSourceCodeLocation(content, null);
    }
    /** @protected */
    _insertFakeRootElement() {
        const element = this.treeAdapter.createElement(TAG_NAMES.HTML, NS.HTML, []);
        if (this.options.sourceCodeLocationInfo)
            this.treeAdapter.setNodeSourceCodeLocation(element, null);
        this.treeAdapter.appendChild(this.openElements.current, element);
        this.openElements.push(element, TAG_ID.HTML);
    }
    /** @protected */
    _appendCommentNode(token, parent) {
        const commentNode = this.treeAdapter.createCommentNode(token.data);
        this.treeAdapter.appendChild(parent, commentNode);
        if (this.options.sourceCodeLocationInfo) {
            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);
        }
    }
    /** @protected */
    _insertCharacters(token) {
        let parent;
        let beforeElement;
        if (this._shouldFosterParentOnInsertion()) {
            ({ parent, beforeElement } = this._findFosterParentingLocation());
            if (beforeElement) {
                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);
            }
            else {
                this.treeAdapter.insertText(parent, token.chars);
            }
        }
        else {
            parent = this.openElements.currentTmplContentOrNode;
            this.treeAdapter.insertText(parent, token.chars);
        }
        if (!token.location)
            return;
        const siblings = this.treeAdapter.getChildNodes(parent);
        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;
        const textNode = siblings[textNodeIdx - 1];
        //NOTE: if we have a location assigned by another token, then just update the end position
        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);
        if (tnLoc) {
            const { endLine, endCol, endOffset } = token.location;
            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });
        }
        else if (this.options.sourceCodeLocationInfo) {
            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);
        }
    }
    /** @protected */
    _adoptNodes(donor, recipient) {
        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {
            this.treeAdapter.detachNode(child);
            this.treeAdapter.appendChild(recipient, child);
        }
    }
    /** @protected */
    _setEndLocation(element, closingToken) {
        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {
            const ctLoc = closingToken.location;
            const tn = this.treeAdapter.getTagName(element);
            const endLoc = 
            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing
            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.
            closingToken.type === TokenType$2.END_TAG && tn === closingToken.tagName
                ? {
                    endTag: { ...ctLoc },
                    endLine: ctLoc.endLine,
                    endCol: ctLoc.endCol,
                    endOffset: ctLoc.endOffset,
                }
                : {
                    endLine: ctLoc.startLine,
                    endCol: ctLoc.startCol,
                    endOffset: ctLoc.startOffset,
                };
            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);
        }
    }
    //Token processing
    shouldProcessStartTagTokenInForeignContent(token) {
        // Check that neither current === document, or ns === NS.HTML
        if (!this.currentNotInHTML)
            return false;
        let current;
        let currentTagId;
        if (this.openElements.stackTop === 0 && this.fragmentContext) {
            current = this.fragmentContext;
            currentTagId = this.fragmentContextID;
        }
        else {
            ({ current, currentTagId } = this.openElements);
        }
        if (token.tagID === TAG_ID.SVG &&
            this.treeAdapter.getTagName(current) === TAG_NAMES.ANNOTATION_XML &&
            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {
            return false;
        }
        return (
        // Check that `current` is not an integration point for HTML or MathML elements.
        this.tokenizer.inForeignNode ||
            // If it _is_ an integration point, then we might have to check that it is not an HTML
            // integration point.
            ((token.tagID === TAG_ID.MGLYPH || token.tagID === TAG_ID.MALIGNMARK) &&
                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));
    }
    /** @protected */
    _processToken(token) {
        switch (token.type) {
            case TokenType$2.CHARACTER: {
                this.onCharacter(token);
                break;
            }
            case TokenType$2.NULL_CHARACTER: {
                this.onNullCharacter(token);
                break;
            }
            case TokenType$2.COMMENT: {
                this.onComment(token);
                break;
            }
            case TokenType$2.DOCTYPE: {
                this.onDoctype(token);
                break;
            }
            case TokenType$2.START_TAG: {
                this._processStartTag(token);
                break;
            }
            case TokenType$2.END_TAG: {
                this.onEndTag(token);
                break;
            }
            case TokenType$2.EOF: {
                this.onEof(token);
                break;
            }
            case TokenType$2.WHITESPACE_CHARACTER: {
                this.onWhitespaceCharacter(token);
                break;
            }
        }
    }
    //Integration points
    /** @protected */
    _isIntegrationPoint(tid, element, foreignNS) {
        const ns = this.treeAdapter.getNamespaceURI(element);
        const attrs = this.treeAdapter.getAttrList(element);
        return isIntegrationPoint(tid, ns, attrs, foreignNS);
    }
    //Active formatting elements reconstruction
    /** @protected */
    _reconstructActiveFormattingElements() {
        const listLength = this.activeFormattingElements.entries.length;
        if (listLength) {
            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));
            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;
            for (let i = unopenIdx; i >= 0; i--) {
                const entry = this.activeFormattingElements.entries[i];
                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));
                entry.element = this.openElements.current;
            }
        }
    }
    //Close elements
    /** @protected */
    _closeTableCell() {
        this.openElements.generateImpliedEndTags();
        this.openElements.popUntilTableCellPopped();
        this.activeFormattingElements.clearToLastMarker();
        this.insertionMode = InsertionMode.IN_ROW;
    }
    /** @protected */
    _closePElement() {
        this.openElements.generateImpliedEndTagsWithExclusion(TAG_ID.P);
        this.openElements.popUntilTagNamePopped(TAG_ID.P);
    }
    //Insertion modes
    /** @protected */
    _resetInsertionMode() {
        for (let i = this.openElements.stackTop; i >= 0; i--) {
            //Insertion mode reset map
            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {
                case TAG_ID.TR: {
                    this.insertionMode = InsertionMode.IN_ROW;
                    return;
                }
                case TAG_ID.TBODY:
                case TAG_ID.THEAD:
                case TAG_ID.TFOOT: {
                    this.insertionMode = InsertionMode.IN_TABLE_BODY;
                    return;
                }
                case TAG_ID.CAPTION: {
                    this.insertionMode = InsertionMode.IN_CAPTION;
                    return;
                }
                case TAG_ID.COLGROUP: {
                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;
                    return;
                }
                case TAG_ID.TABLE: {
                    this.insertionMode = InsertionMode.IN_TABLE;
                    return;
                }
                case TAG_ID.BODY: {
                    this.insertionMode = InsertionMode.IN_BODY;
                    return;
                }
                case TAG_ID.FRAMESET: {
                    this.insertionMode = InsertionMode.IN_FRAMESET;
                    return;
                }
                case TAG_ID.SELECT: {
                    this._resetInsertionModeForSelect(i);
                    return;
                }
                case TAG_ID.TEMPLATE: {
                    this.insertionMode = this.tmplInsertionModeStack[0];
                    return;
                }
                case TAG_ID.HTML: {
                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;
                    return;
                }
                case TAG_ID.TD:
                case TAG_ID.TH: {
                    if (i > 0) {
                        this.insertionMode = InsertionMode.IN_CELL;
                        return;
                    }
                    break;
                }
                case TAG_ID.HEAD: {
                    if (i > 0) {
                        this.insertionMode = InsertionMode.IN_HEAD;
                        return;
                    }
                    break;
                }
            }
        }
        this.insertionMode = InsertionMode.IN_BODY;
    }
    /** @protected */
    _resetInsertionModeForSelect(selectIdx) {
        if (selectIdx > 0) {
            for (let i = selectIdx - 1; i > 0; i--) {
                const tn = this.openElements.tagIDs[i];
                if (tn === TAG_ID.TEMPLATE) {
                    break;
                }
                else if (tn === TAG_ID.TABLE) {
                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;
                    return;
                }
            }
        }
        this.insertionMode = InsertionMode.IN_SELECT;
    }
    //Foster parenting
    /** @protected */
    _isElementCausesFosterParenting(tn) {
        return TABLE_STRUCTURE_TAGS.has(tn);
    }
    /** @protected */
    _shouldFosterParentOnInsertion() {
        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);
    }
    /** @protected */
    _findFosterParentingLocation() {
        for (let i = this.openElements.stackTop; i >= 0; i--) {
            const openElement = this.openElements.items[i];
            switch (this.openElements.tagIDs[i]) {
                case TAG_ID.TEMPLATE: {
                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {
                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };
                    }
                    break;
                }
                case TAG_ID.TABLE: {
                    const parent = this.treeAdapter.getParentNode(openElement);
                    if (parent) {
                        return { parent, beforeElement: openElement };
                    }
                    return { parent: this.openElements.items[i - 1], beforeElement: null };
                }
                // Do nothing
            }
        }
        return { parent: this.openElements.items[0], beforeElement: null };
    }
    /** @protected */
    _fosterParentElement(element) {
        const location = this._findFosterParentingLocation();
        if (location.beforeElement) {
            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);
        }
        else {
            this.treeAdapter.appendChild(location.parent, element);
        }
    }
    //Special elements
    /** @protected */
    _isSpecialElement(element, id) {
        const ns = this.treeAdapter.getNamespaceURI(element);
        return SPECIAL_ELEMENTS[ns].has(id);
    }
    /** @internal */
    onCharacter(token) {
        this.skipNextNewLine = false;
        if (this.tokenizer.inForeignNode) {
            characterInForeignContent(this, token);
            return;
        }
        switch (this.insertionMode) {
            case InsertionMode.INITIAL: {
                tokenInInitialMode(this, token);
                break;
            }
            case InsertionMode.BEFORE_HTML: {
                tokenBeforeHtml(this, token);
                break;
            }
            case InsertionMode.BEFORE_HEAD: {
                tokenBeforeHead(this, token);
                break;
            }
            case InsertionMode.IN_HEAD: {
                tokenInHead(this, token);
                break;
            }
            case InsertionMode.IN_HEAD_NO_SCRIPT: {
                tokenInHeadNoScript(this, token);
                break;
            }
            case InsertionMode.AFTER_HEAD: {
                tokenAfterHead(this, token);
                break;
            }
            case InsertionMode.IN_BODY:
            case InsertionMode.IN_CAPTION:
            case InsertionMode.IN_CELL:
            case InsertionMode.IN_TEMPLATE: {
                characterInBody(this, token);
                break;
            }
            case InsertionMode.TEXT:
            case InsertionMode.IN_SELECT:
            case InsertionMode.IN_SELECT_IN_TABLE: {
                this._insertCharacters(token);
                break;
            }
            case InsertionMode.IN_TABLE:
            case InsertionMode.IN_TABLE_BODY:
            case InsertionMode.IN_ROW: {
                characterInTable(this, token);
                break;
            }
            case InsertionMode.IN_TABLE_TEXT: {
                characterInTableText(this, token);
                break;
            }
            case InsertionMode.IN_COLUMN_GROUP: {
                tokenInColumnGroup(this, token);
                break;
            }
            case InsertionMode.AFTER_BODY: {
                tokenAfterBody(this, token);
                break;
            }
            case InsertionMode.AFTER_AFTER_BODY: {
                tokenAfterAfterBody(this, token);
                break;
            }
            // Do nothing
        }
    }
    /** @internal */
    onNullCharacter(token) {
        this.skipNextNewLine = false;
        if (this.tokenizer.inForeignNode) {
            nullCharacterInForeignContent(this, token);
            return;
        }
        switch (this.insertionMode) {
            case InsertionMode.INITIAL: {
                tokenInInitialMode(this, token);
                break;
            }
            case InsertionMode.BEFORE_HTML: {
                tokenBeforeHtml(this, token);
                break;
            }
            case InsertionMode.BEFORE_HEAD: {
                tokenBeforeHead(this, token);
                break;
            }
            case InsertionMode.IN_HEAD: {
                tokenInHead(this, token);
                break;
            }
            case InsertionMode.IN_HEAD_NO_SCRIPT: {
                tokenInHeadNoScript(this, token);
                break;
            }
            case InsertionMode.AFTER_HEAD: {
                tokenAfterHead(this, token);
                break;
            }
            case InsertionMode.TEXT: {
                this._insertCharacters(token);
                break;
            }
            case InsertionMode.IN_TABLE:
            case InsertionMode.IN_TABLE_BODY:
            case InsertionMode.IN_ROW: {
                characterInTable(this, token);
                break;
            }
            case InsertionMode.IN_COLUMN_GROUP: {
                tokenInColumnGroup(this, token);
                break;
            }
            case InsertionMode.AFTER_BODY: {
                tokenAfterBody(this, token);
                break;
            }
            case InsertionMode.AFTER_AFTER_BODY: {
                tokenAfterAfterBody(this, token);
                break;
            }
            // Do nothing
        }
    }
    /** @internal */
    onComment(token) {
        this.skipNextNewLine = false;
        if (this.currentNotInHTML) {
            appendComment(this, token);
            return;
        }
        switch (this.insertionMode) {
            case InsertionMode.INITIAL:
            case InsertionMode.BEFORE_HTML:
            case InsertionMode.BEFORE_HEAD:
            case InsertionMode.IN_HEAD:
            case InsertionMode.IN_HEAD_NO_SCRIPT:
            case InsertionMode.AFTER_HEAD:
            case InsertionMode.IN_BODY:
            case InsertionMode.IN_TABLE:
            case InsertionMode.IN_CAPTION:
            case InsertionMode.IN_COLUMN_GROUP:
            case InsertionMode.IN_TABLE_BODY:
            case InsertionMode.IN_ROW:
            case InsertionMode.IN_CELL:
            case InsertionMode.IN_SELECT:
            case InsertionMode.IN_SELECT_IN_TABLE:
            case InsertionMode.IN_TEMPLATE:
            case InsertionMode.IN_FRAMESET:
            case InsertionMode.AFTER_FRAMESET: {
                appendComment(this, token);
                break;
            }
            case InsertionMode.IN_TABLE_TEXT: {
                tokenInTableText(this, token);
                break;
            }
            case InsertionMode.AFTER_BODY: {
                appendCommentToRootHtmlElement(this, token);
                break;
            }
            case InsertionMode.AFTER_AFTER_BODY:
            case InsertionMode.AFTER_AFTER_FRAMESET: {
                appendCommentToDocument(this, token);
                break;
            }
            // Do nothing
        }
    }
    /** @internal */
    onDoctype(token) {
        this.skipNextNewLine = false;
        switch (this.insertionMode) {
            case InsertionMode.INITIAL: {
                doctypeInInitialMode(this, token);
                break;
            }
            case InsertionMode.BEFORE_HEAD:
            case InsertionMode.IN_HEAD:
            case InsertionMode.IN_HEAD_NO_SCRIPT:
            case InsertionMode.AFTER_HEAD: {
                this._err(token, ERR.misplacedDoctype);
                break;
            }
            case InsertionMode.IN_TABLE_TEXT: {
                tokenInTableText(this, token);
                break;
            }
            // Do nothing
        }
    }
    /** @internal */
    onStartTag(token) {
        this.skipNextNewLine = false;
        this.currentToken = token;
        this._processStartTag(token);
        if (token.selfClosing && !token.ackSelfClosing) {
            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);
        }
    }
    /**
     * Processes a given start tag.
     *
     * `onStartTag` checks if a self-closing tag was recognized. When a token
     * is moved inbetween multiple insertion modes, this check for self-closing
     * could lead to false positives. To avoid this, `_processStartTag` is used
     * for nested calls.
     *
     * @param token The token to process.
     * @protected
     */
    _processStartTag(token) {
        if (this.shouldProcessStartTagTokenInForeignContent(token)) {
            startTagInForeignContent(this, token);
        }
        else {
            this._startTagOutsideForeignContent(token);
        }
    }
    /** @protected */
    _startTagOutsideForeignContent(token) {
        switch (this.insertionMode) {
            case InsertionMode.INITIAL: {
                tokenInInitialMode(this, token);
                break;
            }
            case InsertionMode.BEFORE_HTML: {
                startTagBeforeHtml(this, token);
                break;
            }
            case InsertionMode.BEFORE_HEAD: {
                startTagBeforeHead(this, token);
                break;
            }
            case InsertionMode.IN_HEAD: {
                startTagInHead(this, token);
                break;
            }
            case InsertionMode.IN_HEAD_NO_SCRIPT: {
                startTagInHeadNoScript(this, token);
                break;
            }
            case InsertionMode.AFTER_HEAD: {
                startTagAfterHead(this, token);
                break;
            }
            case InsertionMode.IN_BODY: {
                startTagInBody(this, token);
                break;
            }
            case InsertionMode.IN_TABLE: {
                startTagInTable(this, token);
                break;
            }
            case InsertionMode.IN_TABLE_TEXT: {
                tokenInTableText(this, token);
                break;
            }
            case InsertionMode.IN_CAPTION: {
                startTagInCaption(this, token);
                break;
            }
            case InsertionMode.IN_COLUMN_GROUP: {
                startTagInColumnGroup(this, token);
                break;
            }
            case InsertionMode.IN_TABLE_BODY: {
                startTagInTableBody(this, token);
                break;
            }
            case InsertionMode.IN_ROW: {
                startTagInRow(this, token);
                break;
            }
            case InsertionMode.IN_CELL: {
                startTagInCell(this, token);
                break;
            }
            case InsertionMode.IN_SELECT: {
                startTagInSelect(this, token);
                break;
            }
            case InsertionMode.IN_SELECT_IN_TABLE: {
                startTagInSelectInTable(this, token);
                break;
            }
            case InsertionMode.IN_TEMPLATE: {
                startTagInTemplate(this, token);
                break;
            }
            case InsertionMode.AFTER_BODY: {
                startTagAfterBody(this, token);
                break;
            }
            case InsertionMode.IN_FRAMESET: {
                startTagInFrameset(this, token);
                break;
            }
            case InsertionMode.AFTER_FRAMESET: {
                startTagAfterFrameset(this, token);
                break;
            }
            case InsertionMode.AFTER_AFTER_BODY: {
                startTagAfterAfterBody(this, token);
                break;
            }
            case InsertionMode.AFTER_AFTER_FRAMESET: {
                startTagAfterAfterFrameset(this, token);
                break;
            }
            // Do nothing
        }
    }
    /** @internal */
    onEndTag(token) {
        this.skipNextNewLine = false;
        this.currentToken = token;
        if (this.currentNotInHTML) {
            endTagInForeignContent(this, token);
        }
        else {
            this._endTagOutsideForeignContent(token);
        }
    }
    /** @protected */
    _endTagOutsideForeignContent(token) {
        switch (this.insertionMode) {
            case InsertionMode.INITIAL: {
                tokenInInitialMode(this, token);
                break;
            }
            case InsertionMode.BEFORE_HTML: {
                endTagBeforeHtml(this, token);
                break;
            }
            case InsertionMode.BEFORE_HEAD: {
                endTagBeforeHead(this, token);
                break;
            }
            case InsertionMode.IN_HEAD: {
                endTagInHead(this, token);
                break;
            }
            case InsertionMode.IN_HEAD_NO_SCRIPT: {
                endTagInHeadNoScript(this, token);
                break;
            }
            case InsertionMode.AFTER_HEAD: {
                endTagAfterHead(this, token);
                break;
            }
            case InsertionMode.IN_BODY: {
                endTagInBody(this, token);
                break;
            }
            case InsertionMode.TEXT: {
                endTagInText(this, token);
                break;
            }
            case InsertionMode.IN_TABLE: {
                endTagInTable(this, token);
                break;
            }
            case InsertionMode.IN_TABLE_TEXT: {
                tokenInTableText(this, token);
                break;
            }
            case InsertionMode.IN_CAPTION: {
                endTagInCaption(this, token);
                break;
            }
            case InsertionMode.IN_COLUMN_GROUP: {
                endTagInColumnGroup(this, token);
                break;
            }
            case InsertionMode.IN_TABLE_BODY: {
                endTagInTableBody(this, token);
                break;
            }
            case InsertionMode.IN_ROW: {
                endTagInRow(this, token);
                break;
            }
            case InsertionMode.IN_CELL: {
                endTagInCell(this, token);
                break;
            }
            case InsertionMode.IN_SELECT: {
                endTagInSelect(this, token);
                break;
            }
            case InsertionMode.IN_SELECT_IN_TABLE: {
                endTagInSelectInTable(this, token);
                break;
            }
            case InsertionMode.IN_TEMPLATE: {
                endTagInTemplate(this, token);
                break;
            }
            case InsertionMode.AFTER_BODY: {
                endTagAfterBody(this, token);
                break;
            }
            case InsertionMode.IN_FRAMESET: {
                endTagInFrameset(this, token);
                break;
            }
            case InsertionMode.AFTER_FRAMESET: {
                endTagAfterFrameset(this, token);
                break;
            }
            case InsertionMode.AFTER_AFTER_BODY: {
                tokenAfterAfterBody(this, token);
                break;
            }
            // Do nothing
        }
    }
    /** @internal */
    onEof(token) {
        switch (this.insertionMode) {
            case InsertionMode.INITIAL: {
                tokenInInitialMode(this, token);
                break;
            }
            case InsertionMode.BEFORE_HTML: {
                tokenBeforeHtml(this, token);
                break;
            }
            case InsertionMode.BEFORE_HEAD: {
                tokenBeforeHead(this, token);
                break;
            }
            case InsertionMode.IN_HEAD: {
                tokenInHead(this, token);
                break;
            }
            case InsertionMode.IN_HEAD_NO_SCRIPT: {
                tokenInHeadNoScript(this, token);
                break;
            }
            case InsertionMode.AFTER_HEAD: {
                tokenAfterHead(this, token);
                break;
            }
            case InsertionMode.IN_BODY:
            case InsertionMode.IN_TABLE:
            case InsertionMode.IN_CAPTION:
            case InsertionMode.IN_COLUMN_GROUP:
            case InsertionMode.IN_TABLE_BODY:
            case InsertionMode.IN_ROW:
            case InsertionMode.IN_CELL:
            case InsertionMode.IN_SELECT:
            case InsertionMode.IN_SELECT_IN_TABLE: {
                eofInBody(this, token);
                break;
            }
            case InsertionMode.TEXT: {
                eofInText(this, token);
                break;
            }
            case InsertionMode.IN_TABLE_TEXT: {
                tokenInTableText(this, token);
                break;
            }
            case InsertionMode.IN_TEMPLATE: {
                eofInTemplate(this, token);
                break;
            }
            case InsertionMode.AFTER_BODY:
            case InsertionMode.IN_FRAMESET:
            case InsertionMode.AFTER_FRAMESET:
            case InsertionMode.AFTER_AFTER_BODY:
            case InsertionMode.AFTER_AFTER_FRAMESET: {
                stopParsing(this, token);
                break;
            }
            // Do nothing
        }
    }
    /** @internal */
    onWhitespaceCharacter(token) {
        if (this.skipNextNewLine) {
            this.skipNextNewLine = false;
            if (token.chars.charCodeAt(0) === CODE_POINTS.LINE_FEED) {
                if (token.chars.length === 1) {
                    return;
                }
                token.chars = token.chars.substr(1);
            }
        }
        if (this.tokenizer.inForeignNode) {
            this._insertCharacters(token);
            return;
        }
        switch (this.insertionMode) {
            case InsertionMode.IN_HEAD:
            case InsertionMode.IN_HEAD_NO_SCRIPT:
            case InsertionMode.AFTER_HEAD:
            case InsertionMode.TEXT:
            case InsertionMode.IN_COLUMN_GROUP:
            case InsertionMode.IN_SELECT:
            case InsertionMode.IN_SELECT_IN_TABLE:
            case InsertionMode.IN_FRAMESET:
            case InsertionMode.AFTER_FRAMESET: {
                this._insertCharacters(token);
                break;
            }
            case InsertionMode.IN_BODY:
            case InsertionMode.IN_CAPTION:
            case InsertionMode.IN_CELL:
            case InsertionMode.IN_TEMPLATE:
            case InsertionMode.AFTER_BODY:
            case InsertionMode.AFTER_AFTER_BODY:
            case InsertionMode.AFTER_AFTER_FRAMESET: {
                whitespaceCharacterInBody(this, token);
                break;
            }
            case InsertionMode.IN_TABLE:
            case InsertionMode.IN_TABLE_BODY:
            case InsertionMode.IN_ROW: {
                characterInTable(this, token);
                break;
            }
            case InsertionMode.IN_TABLE_TEXT: {
                whitespaceCharacterInTableText(this, token);
                break;
            }
            // Do nothing
        }
    }
};
//Adoption agency algorithm
//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)
//------------------------------------------------------------------
//Steps 5-8 of the algorithm
function aaObtainFormattingElementEntry(p, token) {
    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);
    if (formattingElementEntry) {
        if (!p.openElements.contains(formattingElementEntry.element)) {
            p.activeFormattingElements.removeEntry(formattingElementEntry);
            formattingElementEntry = null;
        }
        else if (!p.openElements.hasInScope(token.tagID)) {
            formattingElementEntry = null;
        }
    }
    else {
        genericEndTagInBody(p, token);
    }
    return formattingElementEntry;
}
//Steps 9 and 10 of the algorithm
function aaObtainFurthestBlock(p, formattingElementEntry) {
    let furthestBlock = null;
    let idx = p.openElements.stackTop;
    for (; idx >= 0; idx--) {
        const element = p.openElements.items[idx];
        if (element === formattingElementEntry.element) {
            break;
        }
        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {
            furthestBlock = element;
        }
    }
    if (!furthestBlock) {
        p.openElements.shortenToLength(idx < 0 ? 0 : idx);
        p.activeFormattingElements.removeEntry(formattingElementEntry);
    }
    return furthestBlock;
}
//Step 13 of the algorithm
function aaInnerLoop(p, furthestBlock, formattingElement) {
    let lastElement = furthestBlock;
    let nextElement = p.openElements.getCommonAncestor(furthestBlock);
    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {
        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)
        nextElement = p.openElements.getCommonAncestor(element);
        const elementEntry = p.activeFormattingElements.getElementEntry(element);
        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;
        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;
        if (shouldRemoveFromOpenElements) {
            if (counterOverflow) {
                p.activeFormattingElements.removeEntry(elementEntry);
            }
            p.openElements.remove(element);
        }
        else {
            element = aaRecreateElementFromEntry(p, elementEntry);
            if (lastElement === furthestBlock) {
                p.activeFormattingElements.bookmark = elementEntry;
            }
            p.treeAdapter.detachNode(lastElement);
            p.treeAdapter.appendChild(element, lastElement);
            lastElement = element;
        }
    }
    return lastElement;
}
//Step 13.7 of the algorithm
function aaRecreateElementFromEntry(p, elementEntry) {
    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);
    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);
    p.openElements.replace(elementEntry.element, newElement);
    elementEntry.element = newElement;
    return newElement;
}
//Step 14 of the algorithm
function aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {
    const tn = p.treeAdapter.getTagName(commonAncestor);
    const tid = getTagID(tn);
    if (p._isElementCausesFosterParenting(tid)) {
        p._fosterParentElement(lastElement);
    }
    else {
        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);
        if (tid === TAG_ID.TEMPLATE && ns === NS.HTML) {
            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);
        }
        p.treeAdapter.appendChild(commonAncestor, lastElement);
    }
}
//Steps 15-19 of the algorithm
function aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {
    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);
    const { token } = formattingElementEntry;
    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);
    p._adoptNodes(furthestBlock, newElement);
    p.treeAdapter.appendChild(furthestBlock, newElement);
    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);
    p.activeFormattingElements.removeEntry(formattingElementEntry);
    p.openElements.remove(formattingElementEntry.element);
    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);
}
//Algorithm entry point
function callAdoptionAgency(p, token) {
    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {
        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);
        if (!formattingElementEntry) {
            break;
        }
        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);
        if (!furthestBlock) {
            break;
        }
        p.activeFormattingElements.bookmark = formattingElementEntry;
        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);
        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);
        p.treeAdapter.detachNode(lastElement);
        if (commonAncestor)
            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);
        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);
    }
}
//Generic token handlers
//------------------------------------------------------------------
function appendComment(p, token) {
    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);
}
function appendCommentToRootHtmlElement(p, token) {
    p._appendCommentNode(token, p.openElements.items[0]);
}
function appendCommentToDocument(p, token) {
    p._appendCommentNode(token, p.document);
}
function stopParsing(p, token) {
    p.stopped = true;
    // NOTE: Set end locations for elements that remain on the open element stack.
    if (token.location) {
        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.
        // This is a problem, as we might overwrite their end position here.
        const target = p.fragmentContext ? 0 : 2;
        for (let i = p.openElements.stackTop; i >= target; i--) {
            p._setEndLocation(p.openElements.items[i], token);
        }
        // Handle `html` and `body`
        if (!p.fragmentContext && p.openElements.stackTop >= 0) {
            const htmlElement = p.openElements.items[0];
            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);
            if (htmlLocation && !htmlLocation.endTag) {
                p._setEndLocation(htmlElement, token);
                if (p.openElements.stackTop >= 1) {
                    const bodyElement = p.openElements.items[1];
                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);
                    if (bodyLocation && !bodyLocation.endTag) {
                        p._setEndLocation(bodyElement, token);
                    }
                }
            }
        }
    }
}
// The "initial" insertion mode
//------------------------------------------------------------------
function doctypeInInitialMode(p, token) {
    p._setDocumentType(token);
    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : getDocumentMode(token);
    if (!isConforming(token)) {
        p._err(token, ERR.nonConformingDoctype);
    }
    p.treeAdapter.setDocumentMode(p.document, mode);
    p.insertionMode = InsertionMode.BEFORE_HTML;
}
function tokenInInitialMode(p, token) {
    p._err(token, ERR.missingDoctype, true);
    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);
    p.insertionMode = InsertionMode.BEFORE_HTML;
    p._processToken(token);
}
// The "before html" insertion mode
//------------------------------------------------------------------
function startTagBeforeHtml(p, token) {
    if (token.tagID === TAG_ID.HTML) {
        p._insertElement(token, NS.HTML);
        p.insertionMode = InsertionMode.BEFORE_HEAD;
    }
    else {
        tokenBeforeHtml(p, token);
    }
}
function endTagBeforeHtml(p, token) {
    const tn = token.tagID;
    if (tn === TAG_ID.HTML || tn === TAG_ID.HEAD || tn === TAG_ID.BODY || tn === TAG_ID.BR) {
        tokenBeforeHtml(p, token);
    }
}
function tokenBeforeHtml(p, token) {
    p._insertFakeRootElement();
    p.insertionMode = InsertionMode.BEFORE_HEAD;
    p._processToken(token);
}
// The "before head" insertion mode
//------------------------------------------------------------------
function startTagBeforeHead(p, token) {
    switch (token.tagID) {
        case TAG_ID.HTML: {
            startTagInBody(p, token);
            break;
        }
        case TAG_ID.HEAD: {
            p._insertElement(token, NS.HTML);
            p.headElement = p.openElements.current;
            p.insertionMode = InsertionMode.IN_HEAD;
            break;
        }
        default: {
            tokenBeforeHead(p, token);
        }
    }
}
function endTagBeforeHead(p, token) {
    const tn = token.tagID;
    if (tn === TAG_ID.HEAD || tn === TAG_ID.BODY || tn === TAG_ID.HTML || tn === TAG_ID.BR) {
        tokenBeforeHead(p, token);
    }
    else {
        p._err(token, ERR.endTagWithoutMatchingOpenElement);
    }
}
function tokenBeforeHead(p, token) {
    p._insertFakeElement(TAG_NAMES.HEAD, TAG_ID.HEAD);
    p.headElement = p.openElements.current;
    p.insertionMode = InsertionMode.IN_HEAD;
    p._processToken(token);
}
// The "in head" insertion mode
//------------------------------------------------------------------
function startTagInHead(p, token) {
    switch (token.tagID) {
        case TAG_ID.HTML: {
            startTagInBody(p, token);
            break;
        }
        case TAG_ID.BASE:
        case TAG_ID.BASEFONT:
        case TAG_ID.BGSOUND:
        case TAG_ID.LINK:
        case TAG_ID.META: {
            p._appendElement(token, NS.HTML);
            token.ackSelfClosing = true;
            break;
        }
        case TAG_ID.TITLE: {
            p._switchToTextParsing(token, TokenizerMode.RCDATA);
            break;
        }
        case TAG_ID.NOSCRIPT: {
            if (p.options.scriptingEnabled) {
                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);
            }
            else {
                p._insertElement(token, NS.HTML);
                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;
            }
            break;
        }
        case TAG_ID.NOFRAMES:
        case TAG_ID.STYLE: {
            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);
            break;
        }
        case TAG_ID.SCRIPT: {
            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);
            break;
        }
        case TAG_ID.TEMPLATE: {
            p._insertTemplate(token);
            p.activeFormattingElements.insertMarker();
            p.framesetOk = false;
            p.insertionMode = InsertionMode.IN_TEMPLATE;
            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);
            break;
        }
        case TAG_ID.HEAD: {
            p._err(token, ERR.misplacedStartTagForHeadElement);
            break;
        }
        default: {
            tokenInHead(p, token);
        }
    }
}
function endTagInHead(p, token) {
    switch (token.tagID) {
        case TAG_ID.HEAD: {
            p.openElements.pop();
            p.insertionMode = InsertionMode.AFTER_HEAD;
            break;
        }
        case TAG_ID.BODY:
        case TAG_ID.BR:
        case TAG_ID.HTML: {
            tokenInHead(p, token);
            break;
        }
        case TAG_ID.TEMPLATE: {
            templateEndTagInHead(p, token);
            break;
        }
        default: {
            p._err(token, ERR.endTagWithoutMatchingOpenElement);
        }
    }
}
function templateEndTagInHead(p, token) {
    if (p.openElements.tmplCount > 0) {
        p.openElements.generateImpliedEndTagsThoroughly();
        if (p.openElements.currentTagId !== TAG_ID.TEMPLATE) {
            p._err(token, ERR.closingOfElementWithOpenChildElements);
        }
        p.openElements.popUntilTagNamePopped(TAG_ID.TEMPLATE);
        p.activeFormattingElements.clearToLastMarker();
        p.tmplInsertionModeStack.shift();
        p._resetInsertionMode();
    }
    else {
        p._err(token, ERR.endTagWithoutMatchingOpenElement);
    }
}
function tokenInHead(p, token) {
    p.openElements.pop();
    p.insertionMode = InsertionMode.AFTER_HEAD;
    p._processToken(token);
}
// The "in head no script" insertion mode
//------------------------------------------------------------------
function startTagInHeadNoScript(p, token) {
    switch (token.tagID) {
        case TAG_ID.HTML: {
            startTagInBody(p, token);
            break;
        }
        case TAG_ID.BASEFONT:
        case TAG_ID.BGSOUND:
        case TAG_ID.HEAD:
        case TAG_ID.LINK:
        case TAG_ID.META:
        case TAG_ID.NOFRAMES:
        case TAG_ID.STYLE: {
            startTagInHead(p, token);
            break;
        }
        case TAG_ID.NOSCRIPT: {
            p._err(token, ERR.nestedNoscriptInHead);
            break;
        }
        default: {
            tokenInHeadNoScript(p, token);
        }
    }
}
function endTagInHeadNoScript(p, token) {
    switch (token.tagID) {
        case TAG_ID.NOSCRIPT: {
            p.openElements.pop();
            p.insertionMode = InsertionMode.IN_HEAD;
            break;
        }
        case TAG_ID.BR: {
            tokenInHeadNoScript(p, token);
            break;
        }
        default: {
            p._err(token, ERR.endTagWithoutMatchingOpenElement);
        }
    }
}
function tokenInHeadNoScript(p, token) {
    const errCode = token.type === TokenType$2.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;
    p._err(token, errCode);
    p.openElements.pop();
    p.insertionMode = InsertionMode.IN_HEAD;
    p._processToken(token);
}
// The "after head" insertion mode
//------------------------------------------------------------------
function startTagAfterHead(p, token) {
    switch (token.tagID) {
        case TAG_ID.HTML: {
            startTagInBody(p, token);
            break;
        }
        case TAG_ID.BODY: {
            p._insertElement(token, NS.HTML);
            p.framesetOk = false;
            p.insertionMode = InsertionMode.IN_BODY;
            break;
        }
        case TAG_ID.FRAMESET: {
            p._insertElement(token, NS.HTML);
            p.insertionMode = InsertionMode.IN_FRAMESET;
            break;
        }
        case TAG_ID.BASE:
        case TAG_ID.BASEFONT:
        case TAG_ID.BGSOUND:
        case TAG_ID.LINK:
        case TAG_ID.META:
        case TAG_ID.NOFRAMES:
        case TAG_ID.SCRIPT:
        case TAG_ID.STYLE:
        case TAG_ID.TEMPLATE:
        case TAG_ID.TITLE: {
            p._err(token, ERR.abandonedHeadElementChild);
            p.openElements.push(p.headElement, TAG_ID.HEAD);
            startTagInHead(p, token);
            p.openElements.remove(p.headElement);
            break;
        }
        case TAG_ID.HEAD: {
            p._err(token, ERR.misplacedStartTagForHeadElement);
            break;
        }
        default: {
            tokenAfterHead(p, token);
        }
    }
}
function endTagAfterHead(p, token) {
    switch (token.tagID) {
        case TAG_ID.BODY:
        case TAG_ID.HTML:
        case TAG_ID.BR: {
            tokenAfterHead(p, token);
            break;
        }
        case TAG_ID.TEMPLATE: {
            templateEndTagInHead(p, token);
            break;
        }
        default: {
            p._err(token, ERR.endTagWithoutMatchingOpenElement);
        }
    }
}
function tokenAfterHead(p, token) {
    p._insertFakeElement(TAG_NAMES.BODY, TAG_ID.BODY);
    p.insertionMode = InsertionMode.IN_BODY;
    modeInBody(p, token);
}
// The "in body" insertion mode
//------------------------------------------------------------------
function modeInBody(p, token) {
    switch (token.type) {
        case TokenType$2.CHARACTER: {
            characterInBody(p, token);
            break;
        }
        case TokenType$2.WHITESPACE_CHARACTER: {
            whitespaceCharacterInBody(p, token);
            break;
        }
        case TokenType$2.COMMENT: {
            appendComment(p, token);
            break;
        }
        case TokenType$2.START_TAG: {
            startTagInBody(p, token);
            break;
        }
        case TokenType$2.END_TAG: {
            endTagInBody(p, token);
            break;
        }
        case TokenType$2.EOF: {
            eofInBody(p, token);
            break;
        }
        // Do nothing
    }
}
function whitespaceCharacterInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._insertCharacters(token);
}
function characterInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._insertCharacters(token);
    p.framesetOk = false;
}
function htmlStartTagInBody(p, token) {
    if (p.openElements.tmplCount === 0) {
        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);
    }
}
function bodyStartTagInBody(p, token) {
    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();
    if (bodyElement && p.openElements.tmplCount === 0) {
        p.framesetOk = false;
        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);
    }
}
function framesetStartTagInBody(p, token) {
    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();
    if (p.framesetOk && bodyElement) {
        p.treeAdapter.detachNode(bodyElement);
        p.openElements.popAllUpToHtmlElement();
        p._insertElement(token, NS.HTML);
        p.insertionMode = InsertionMode.IN_FRAMESET;
    }
}
function addressStartTagInBody(p, token) {
    if (p.openElements.hasInButtonScope(TAG_ID.P)) {
        p._closePElement();
    }
    p._insertElement(token, NS.HTML);
}
function numberedHeaderStartTagInBody(p, token) {
    if (p.openElements.hasInButtonScope(TAG_ID.P)) {
        p._closePElement();
    }
    if (NUMBERED_HEADERS.has(p.openElements.currentTagId)) {
        p.openElements.pop();
    }
    p._insertElement(token, NS.HTML);
}
function preStartTagInBody(p, token) {
    if (p.openElements.hasInButtonScope(TAG_ID.P)) {
        p._closePElement();
    }
    p._insertElement(token, NS.HTML);
    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move
    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)
    p.skipNextNewLine = true;
    p.framesetOk = false;
}
function formStartTagInBody(p, token) {
    const inTemplate = p.openElements.tmplCount > 0;
    if (!p.formElement || inTemplate) {
        if (p.openElements.hasInButtonScope(TAG_ID.P)) {
            p._closePElement();
        }
        p._insertElement(token, NS.HTML);
        if (!inTemplate) {
            p.formElement = p.openElements.current;
        }
    }
}
function listItemStartTagInBody(p, token) {
    p.framesetOk = false;
    const tn = token.tagID;
    for (let i = p.openElements.stackTop; i >= 0; i--) {
        const elementId = p.openElements.tagIDs[i];
        if ((tn === TAG_ID.LI && elementId === TAG_ID.LI) ||
            ((tn === TAG_ID.DD || tn === TAG_ID.DT) && (elementId === TAG_ID.DD || elementId === TAG_ID.DT))) {
            p.openElements.generateImpliedEndTagsWithExclusion(elementId);
            p.openElements.popUntilTagNamePopped(elementId);
            break;
        }
        if (elementId !== TAG_ID.ADDRESS &&
            elementId !== TAG_ID.DIV &&
            elementId !== TAG_ID.P &&
            p._isSpecialElement(p.openElements.items[i], elementId)) {
            break;
        }
    }
    if (p.openElements.hasInButtonScope(TAG_ID.P)) {
        p._closePElement();
    }
    p._insertElement(token, NS.HTML);
}
function plaintextStartTagInBody(p, token) {
    if (p.openElements.hasInButtonScope(TAG_ID.P)) {
        p._closePElement();
    }
    p._insertElement(token, NS.HTML);
    p.tokenizer.state = TokenizerMode.PLAINTEXT;
}
function buttonStartTagInBody(p, token) {
    if (p.openElements.hasInScope(TAG_ID.BUTTON)) {
        p.openElements.generateImpliedEndTags();
        p.openElements.popUntilTagNamePopped(TAG_ID.BUTTON);
    }
    p._reconstructActiveFormattingElements();
    p._insertElement(token, NS.HTML);
    p.framesetOk = false;
}
function aStartTagInBody(p, token) {
    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TAG_NAMES.A);
    if (activeElementEntry) {
        callAdoptionAgency(p, token);
        p.openElements.remove(activeElementEntry.element);
        p.activeFormattingElements.removeEntry(activeElementEntry);
    }
    p._reconstructActiveFormattingElements();
    p._insertElement(token, NS.HTML);
    p.activeFormattingElements.pushElement(p.openElements.current, token);
}
function bStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._insertElement(token, NS.HTML);
    p.activeFormattingElements.pushElement(p.openElements.current, token);
}
function nobrStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();
    if (p.openElements.hasInScope(TAG_ID.NOBR)) {
        callAdoptionAgency(p, token);
        p._reconstructActiveFormattingElements();
    }
    p._insertElement(token, NS.HTML);
    p.activeFormattingElements.pushElement(p.openElements.current, token);
}
function appletStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._insertElement(token, NS.HTML);
    p.activeFormattingElements.insertMarker();
    p.framesetOk = false;
}
function tableStartTagInBody(p, token) {
    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope(TAG_ID.P)) {
        p._closePElement();
    }
    p._insertElement(token, NS.HTML);
    p.framesetOk = false;
    p.insertionMode = InsertionMode.IN_TABLE;
}
function areaStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._appendElement(token, NS.HTML);
    p.framesetOk = false;
    token.ackSelfClosing = true;
}
function isHiddenInput(token) {
    const inputType = getTokenAttr(token, ATTRS.TYPE);
    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;
}
function inputStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._appendElement(token, NS.HTML);
    if (!isHiddenInput(token)) {
        p.framesetOk = false;
    }
    token.ackSelfClosing = true;
}
function paramStartTagInBody(p, token) {
    p._appendElement(token, NS.HTML);
    token.ackSelfClosing = true;
}
function hrStartTagInBody(p, token) {
    if (p.openElements.hasInButtonScope(TAG_ID.P)) {
        p._closePElement();
    }
    p._appendElement(token, NS.HTML);
    p.framesetOk = false;
    token.ackSelfClosing = true;
}
function imageStartTagInBody(p, token) {
    token.tagName = TAG_NAMES.IMG;
    token.tagID = TAG_ID.IMG;
    areaStartTagInBody(p, token);
}
function textareaStartTagInBody(p, token) {
    p._insertElement(token, NS.HTML);
    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move
    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)
    p.skipNextNewLine = true;
    p.tokenizer.state = TokenizerMode.RCDATA;
    p.originalInsertionMode = p.insertionMode;
    p.framesetOk = false;
    p.insertionMode = InsertionMode.TEXT;
}
function xmpStartTagInBody(p, token) {
    if (p.openElements.hasInButtonScope(TAG_ID.P)) {
        p._closePElement();
    }
    p._reconstructActiveFormattingElements();
    p.framesetOk = false;
    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);
}
function iframeStartTagInBody(p, token) {
    p.framesetOk = false;
    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);
}
//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse
//<noembed>/<noframes> as rawtext.
function rawTextStartTagInBody(p, token) {
    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);
}
function selectStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._insertElement(token, NS.HTML);
    p.framesetOk = false;
    p.insertionMode =
        p.insertionMode === InsertionMode.IN_TABLE ||
            p.insertionMode === InsertionMode.IN_CAPTION ||
            p.insertionMode === InsertionMode.IN_TABLE_BODY ||
            p.insertionMode === InsertionMode.IN_ROW ||
            p.insertionMode === InsertionMode.IN_CELL
            ? InsertionMode.IN_SELECT_IN_TABLE
            : InsertionMode.IN_SELECT;
}
function optgroupStartTagInBody(p, token) {
    if (p.openElements.currentTagId === TAG_ID.OPTION) {
        p.openElements.pop();
    }
    p._reconstructActiveFormattingElements();
    p._insertElement(token, NS.HTML);
}
function rbStartTagInBody(p, token) {
    if (p.openElements.hasInScope(TAG_ID.RUBY)) {
        p.openElements.generateImpliedEndTags();
    }
    p._insertElement(token, NS.HTML);
}
function rtStartTagInBody(p, token) {
    if (p.openElements.hasInScope(TAG_ID.RUBY)) {
        p.openElements.generateImpliedEndTagsWithExclusion(TAG_ID.RTC);
    }
    p._insertElement(token, NS.HTML);
}
function mathStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();
    adjustTokenMathMLAttrs(token);
    adjustTokenXMLAttrs(token);
    if (token.selfClosing) {
        p._appendElement(token, NS.MATHML);
    }
    else {
        p._insertElement(token, NS.MATHML);
    }
    token.ackSelfClosing = true;
}
function svgStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();
    adjustTokenSVGAttrs(token);
    adjustTokenXMLAttrs(token);
    if (token.selfClosing) {
        p._appendElement(token, NS.SVG);
    }
    else {
        p._insertElement(token, NS.SVG);
    }
    token.ackSelfClosing = true;
}
function genericStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._insertElement(token, NS.HTML);
}
function startTagInBody(p, token) {
    switch (token.tagID) {
        case TAG_ID.I:
        case TAG_ID.S:
        case TAG_ID.B:
        case TAG_ID.U:
        case TAG_ID.EM:
        case TAG_ID.TT:
        case TAG_ID.BIG:
        case TAG_ID.CODE:
        case TAG_ID.FONT:
        case TAG_ID.SMALL:
        case TAG_ID.STRIKE:
        case TAG_ID.STRONG: {
            bStartTagInBody(p, token);
            break;
        }
        case TAG_ID.A: {
            aStartTagInBody(p, token);
            break;
        }
        case TAG_ID.H1:
        case TAG_ID.H2:
        case TAG_ID.H3:
        case TAG_ID.H4:
        case TAG_ID.H5:
        case TAG_ID.H6: {
            numberedHeaderStartTagInBody(p, token);
            break;
        }
        case TAG_ID.P:
        case TAG_ID.DL:
        case TAG_ID.OL:
        case TAG_ID.UL:
        case TAG_ID.DIV:
        case TAG_ID.DIR:
        case TAG_ID.NAV:
        case TAG_ID.MAIN:
        case TAG_ID.MENU:
        case TAG_ID.ASIDE:
        case TAG_ID.CENTER:
        case TAG_ID.FIGURE:
        case TAG_ID.FOOTER:
        case TAG_ID.HEADER:
        case TAG_ID.HGROUP:
        case TAG_ID.DIALOG:
        case TAG_ID.DETAILS:
        case TAG_ID.ADDRESS:
        case TAG_ID.ARTICLE:
        case TAG_ID.SEARCH:
        case TAG_ID.SECTION:
        case TAG_ID.SUMMARY:
        case TAG_ID.FIELDSET:
        case TAG_ID.BLOCKQUOTE:
        case TAG_ID.FIGCAPTION: {
            addressStartTagInBody(p, token);
            break;
        }
        case TAG_ID.LI:
        case TAG_ID.DD:
        case TAG_ID.DT: {
            listItemStartTagInBody(p, token);
            break;
        }
        case TAG_ID.BR:
        case TAG_ID.IMG:
        case TAG_ID.WBR:
        case TAG_ID.AREA:
        case TAG_ID.EMBED:
        case TAG_ID.KEYGEN: {
            areaStartTagInBody(p, token);
            break;
        }
        case TAG_ID.HR: {
            hrStartTagInBody(p, token);
            break;
        }
        case TAG_ID.RB:
        case TAG_ID.RTC: {
            rbStartTagInBody(p, token);
            break;
        }
        case TAG_ID.RT:
        case TAG_ID.RP: {
            rtStartTagInBody(p, token);
            break;
        }
        case TAG_ID.PRE:
        case TAG_ID.LISTING: {
            preStartTagInBody(p, token);
            break;
        }
        case TAG_ID.XMP: {
            xmpStartTagInBody(p, token);
            break;
        }
        case TAG_ID.SVG: {
            svgStartTagInBody(p, token);
            break;
        }
        case TAG_ID.HTML: {
            htmlStartTagInBody(p, token);
            break;
        }
        case TAG_ID.BASE:
        case TAG_ID.LINK:
        case TAG_ID.META:
        case TAG_ID.STYLE:
        case TAG_ID.TITLE:
        case TAG_ID.SCRIPT:
        case TAG_ID.BGSOUND:
        case TAG_ID.BASEFONT:
        case TAG_ID.TEMPLATE: {
            startTagInHead(p, token);
            break;
        }
        case TAG_ID.BODY: {
            bodyStartTagInBody(p, token);
            break;
        }
        case TAG_ID.FORM: {
            formStartTagInBody(p, token);
            break;
        }
        case TAG_ID.NOBR: {
            nobrStartTagInBody(p, token);
            break;
        }
        case TAG_ID.MATH: {
            mathStartTagInBody(p, token);
            break;
        }
        case TAG_ID.TABLE: {
            tableStartTagInBody(p, token);
            break;
        }
        case TAG_ID.INPUT: {
            inputStartTagInBody(p, token);
            break;
        }
        case TAG_ID.PARAM:
        case TAG_ID.TRACK:
        case TAG_ID.SOURCE: {
            paramStartTagInBody(p, token);
            break;
        }
        case TAG_ID.IMAGE: {
            imageStartTagInBody(p, token);
            break;
        }
        case TAG_ID.BUTTON: {
            buttonStartTagInBody(p, token);
            break;
        }
        case TAG_ID.APPLET:
        case TAG_ID.OBJECT:
        case TAG_ID.MARQUEE: {
            appletStartTagInBody(p, token);
            break;
        }
        case TAG_ID.IFRAME: {
            iframeStartTagInBody(p, token);
            break;
        }
        case TAG_ID.SELECT: {
            selectStartTagInBody(p, token);
            break;
        }
        case TAG_ID.OPTION:
        case TAG_ID.OPTGROUP: {
            optgroupStartTagInBody(p, token);
            break;
        }
        case TAG_ID.NOEMBED:
        case TAG_ID.NOFRAMES: {
            rawTextStartTagInBody(p, token);
            break;
        }
        case TAG_ID.FRAMESET: {
            framesetStartTagInBody(p, token);
            break;
        }
        case TAG_ID.TEXTAREA: {
            textareaStartTagInBody(p, token);
            break;
        }
        case TAG_ID.NOSCRIPT: {
            if (p.options.scriptingEnabled) {
                rawTextStartTagInBody(p, token);
            }
            else {
                genericStartTagInBody(p, token);
            }
            break;
        }
        case TAG_ID.PLAINTEXT: {
            plaintextStartTagInBody(p, token);
            break;
        }
        case TAG_ID.COL:
        case TAG_ID.TH:
        case TAG_ID.TD:
        case TAG_ID.TR:
        case TAG_ID.HEAD:
        case TAG_ID.FRAME:
        case TAG_ID.TBODY:
        case TAG_ID.TFOOT:
        case TAG_ID.THEAD:
        case TAG_ID.CAPTION:
        case TAG_ID.COLGROUP: {
            // Ignore token
            break;
        }
        default: {
            genericStartTagInBody(p, token);
        }
    }
}
function bodyEndTagInBody(p, token) {
    if (p.openElements.hasInScope(TAG_ID.BODY)) {
        p.insertionMode = InsertionMode.AFTER_BODY;
        //NOTE: <body> is never popped from the stack, so we need to updated
        //the end location explicitly.
        if (p.options.sourceCodeLocationInfo) {
            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();
            if (bodyElement) {
                p._setEndLocation(bodyElement, token);
            }
        }
    }
}
function htmlEndTagInBody(p, token) {
    if (p.openElements.hasInScope(TAG_ID.BODY)) {
        p.insertionMode = InsertionMode.AFTER_BODY;
        endTagAfterBody(p, token);
    }
}
function addressEndTagInBody(p, token) {
    const tn = token.tagID;
    if (p.openElements.hasInScope(tn)) {
        p.openElements.generateImpliedEndTags();
        p.openElements.popUntilTagNamePopped(tn);
    }
}
function formEndTagInBody(p) {
    const inTemplate = p.openElements.tmplCount > 0;
    const { formElement } = p;
    if (!inTemplate) {
        p.formElement = null;
    }
    if ((formElement || inTemplate) && p.openElements.hasInScope(TAG_ID.FORM)) {
        p.openElements.generateImpliedEndTags();
        if (inTemplate) {
            p.openElements.popUntilTagNamePopped(TAG_ID.FORM);
        }
        else if (formElement) {
            p.openElements.remove(formElement);
        }
    }
}
function pEndTagInBody(p) {
    if (!p.openElements.hasInButtonScope(TAG_ID.P)) {
        p._insertFakeElement(TAG_NAMES.P, TAG_ID.P);
    }
    p._closePElement();
}
function liEndTagInBody(p) {
    if (p.openElements.hasInListItemScope(TAG_ID.LI)) {
        p.openElements.generateImpliedEndTagsWithExclusion(TAG_ID.LI);
        p.openElements.popUntilTagNamePopped(TAG_ID.LI);
    }
}
function ddEndTagInBody(p, token) {
    const tn = token.tagID;
    if (p.openElements.hasInScope(tn)) {
        p.openElements.generateImpliedEndTagsWithExclusion(tn);
        p.openElements.popUntilTagNamePopped(tn);
    }
}
function numberedHeaderEndTagInBody(p) {
    if (p.openElements.hasNumberedHeaderInScope()) {
        p.openElements.generateImpliedEndTags();
        p.openElements.popUntilNumberedHeaderPopped();
    }
}
function appletEndTagInBody(p, token) {
    const tn = token.tagID;
    if (p.openElements.hasInScope(tn)) {
        p.openElements.generateImpliedEndTags();
        p.openElements.popUntilTagNamePopped(tn);
        p.activeFormattingElements.clearToLastMarker();
    }
}
function brEndTagInBody(p) {
    p._reconstructActiveFormattingElements();
    p._insertFakeElement(TAG_NAMES.BR, TAG_ID.BR);
    p.openElements.pop();
    p.framesetOk = false;
}
function genericEndTagInBody(p, token) {
    const tn = token.tagName;
    const tid = token.tagID;
    for (let i = p.openElements.stackTop; i > 0; i--) {
        const element = p.openElements.items[i];
        const elementId = p.openElements.tagIDs[i];
        // Compare the tag name here, as the tag might not be a known tag with an ID.
        if (tid === elementId && (tid !== TAG_ID.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {
            p.openElements.generateImpliedEndTagsWithExclusion(tid);
            if (p.openElements.stackTop >= i)
                p.openElements.shortenToLength(i);
            break;
        }
        if (p._isSpecialElement(element, elementId)) {
            break;
        }
    }
}
function endTagInBody(p, token) {
    switch (token.tagID) {
        case TAG_ID.A:
        case TAG_ID.B:
        case TAG_ID.I:
        case TAG_ID.S:
        case TAG_ID.U:
        case TAG_ID.EM:
        case TAG_ID.TT:
        case TAG_ID.BIG:
        case TAG_ID.CODE:
        case TAG_ID.FONT:
        case TAG_ID.NOBR:
        case TAG_ID.SMALL:
        case TAG_ID.STRIKE:
        case TAG_ID.STRONG: {
            callAdoptionAgency(p, token);
            break;
        }
        case TAG_ID.P: {
            pEndTagInBody(p);
            break;
        }
        case TAG_ID.DL:
        case TAG_ID.UL:
        case TAG_ID.OL:
        case TAG_ID.DIR:
        case TAG_ID.DIV:
        case TAG_ID.NAV:
        case TAG_ID.PRE:
        case TAG_ID.MAIN:
        case TAG_ID.MENU:
        case TAG_ID.ASIDE:
        case TAG_ID.BUTTON:
        case TAG_ID.CENTER:
        case TAG_ID.FIGURE:
        case TAG_ID.FOOTER:
        case TAG_ID.HEADER:
        case TAG_ID.HGROUP:
        case TAG_ID.DIALOG:
        case TAG_ID.ADDRESS:
        case TAG_ID.ARTICLE:
        case TAG_ID.DETAILS:
        case TAG_ID.SEARCH:
        case TAG_ID.SECTION:
        case TAG_ID.SUMMARY:
        case TAG_ID.LISTING:
        case TAG_ID.FIELDSET:
        case TAG_ID.BLOCKQUOTE:
        case TAG_ID.FIGCAPTION: {
            addressEndTagInBody(p, token);
            break;
        }
        case TAG_ID.LI: {
            liEndTagInBody(p);
            break;
        }
        case TAG_ID.DD:
        case TAG_ID.DT: {
            ddEndTagInBody(p, token);
            break;
        }
        case TAG_ID.H1:
        case TAG_ID.H2:
        case TAG_ID.H3:
        case TAG_ID.H4:
        case TAG_ID.H5:
        case TAG_ID.H6: {
            numberedHeaderEndTagInBody(p);
            break;
        }
        case TAG_ID.BR: {
            brEndTagInBody(p);
            break;
        }
        case TAG_ID.BODY: {
            bodyEndTagInBody(p, token);
            break;
        }
        case TAG_ID.HTML: {
            htmlEndTagInBody(p, token);
            break;
        }
        case TAG_ID.FORM: {
            formEndTagInBody(p);
            break;
        }
        case TAG_ID.APPLET:
        case TAG_ID.OBJECT:
        case TAG_ID.MARQUEE: {
            appletEndTagInBody(p, token);
            break;
        }
        case TAG_ID.TEMPLATE: {
            templateEndTagInHead(p, token);
            break;
        }
        default: {
            genericEndTagInBody(p, token);
        }
    }
}
function eofInBody(p, token) {
    if (p.tmplInsertionModeStack.length > 0) {
        eofInTemplate(p, token);
    }
    else {
        stopParsing(p, token);
    }
}
// The "text" insertion mode
//------------------------------------------------------------------
function endTagInText(p, token) {
    var _a;
    if (token.tagID === TAG_ID.SCRIPT) {
        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);
    }
    p.openElements.pop();
    p.insertionMode = p.originalInsertionMode;
}
function eofInText(p, token) {
    p._err(token, ERR.eofInElementThatCanContainOnlyText);
    p.openElements.pop();
    p.insertionMode = p.originalInsertionMode;
    p.onEof(token);
}
// The "in table" insertion mode
//------------------------------------------------------------------
function characterInTable(p, token) {
    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {
        p.pendingCharacterTokens.length = 0;
        p.hasNonWhitespacePendingCharacterToken = false;
        p.originalInsertionMode = p.insertionMode;
        p.insertionMode = InsertionMode.IN_TABLE_TEXT;
        switch (token.type) {
            case TokenType$2.CHARACTER: {
                characterInTableText(p, token);
                break;
            }
            case TokenType$2.WHITESPACE_CHARACTER: {
                whitespaceCharacterInTableText(p, token);
                break;
            }
            // Ignore null
        }
    }
    else {
        tokenInTable(p, token);
    }
}
function captionStartTagInTable(p, token) {
    p.openElements.clearBackToTableContext();
    p.activeFormattingElements.insertMarker();
    p._insertElement(token, NS.HTML);
    p.insertionMode = InsertionMode.IN_CAPTION;
}
function colgroupStartTagInTable(p, token) {
    p.openElements.clearBackToTableContext();
    p._insertElement(token, NS.HTML);
    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;
}
function colStartTagInTable(p, token) {
    p.openElements.clearBackToTableContext();
    p._insertFakeElement(TAG_NAMES.COLGROUP, TAG_ID.COLGROUP);
    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;
    startTagInColumnGroup(p, token);
}
function tbodyStartTagInTable(p, token) {
    p.openElements.clearBackToTableContext();
    p._insertElement(token, NS.HTML);
    p.insertionMode = InsertionMode.IN_TABLE_BODY;
}
function tdStartTagInTable(p, token) {
    p.openElements.clearBackToTableContext();
    p._insertFakeElement(TAG_NAMES.TBODY, TAG_ID.TBODY);
    p.insertionMode = InsertionMode.IN_TABLE_BODY;
    startTagInTableBody(p, token);
}
function tableStartTagInTable(p, token) {
    if (p.openElements.hasInTableScope(TAG_ID.TABLE)) {
        p.openElements.popUntilTagNamePopped(TAG_ID.TABLE);
        p._resetInsertionMode();
        p._processStartTag(token);
    }
}
function inputStartTagInTable(p, token) {
    if (isHiddenInput(token)) {
        p._appendElement(token, NS.HTML);
    }
    else {
        tokenInTable(p, token);
    }
    token.ackSelfClosing = true;
}
function formStartTagInTable(p, token) {
    if (!p.formElement && p.openElements.tmplCount === 0) {
        p._insertElement(token, NS.HTML);
        p.formElement = p.openElements.current;
        p.openElements.pop();
    }
}
function startTagInTable(p, token) {
    switch (token.tagID) {
        case TAG_ID.TD:
        case TAG_ID.TH:
        case TAG_ID.TR: {
            tdStartTagInTable(p, token);
            break;
        }
        case TAG_ID.STYLE:
        case TAG_ID.SCRIPT:
        case TAG_ID.TEMPLATE: {
            startTagInHead(p, token);
            break;
        }
        case TAG_ID.COL: {
            colStartTagInTable(p, token);
            break;
        }
        case TAG_ID.FORM: {
            formStartTagInTable(p, token);
            break;
        }
        case TAG_ID.TABLE: {
            tableStartTagInTable(p, token);
            break;
        }
        case TAG_ID.TBODY:
        case TAG_ID.TFOOT:
        case TAG_ID.THEAD: {
            tbodyStartTagInTable(p, token);
            break;
        }
        case TAG_ID.INPUT: {
            inputStartTagInTable(p, token);
            break;
        }
        case TAG_ID.CAPTION: {
            captionStartTagInTable(p, token);
            break;
        }
        case TAG_ID.COLGROUP: {
            colgroupStartTagInTable(p, token);
            break;
        }
        default: {
            tokenInTable(p, token);
        }
    }
}
function endTagInTable(p, token) {
    switch (token.tagID) {
        case TAG_ID.TABLE: {
            if (p.openElements.hasInTableScope(TAG_ID.TABLE)) {
                p.openElements.popUntilTagNamePopped(TAG_ID.TABLE);
                p._resetInsertionMode();
            }
            break;
        }
        case TAG_ID.TEMPLATE: {
            templateEndTagInHead(p, token);
            break;
        }
        case TAG_ID.BODY:
        case TAG_ID.CAPTION:
        case TAG_ID.COL:
        case TAG_ID.COLGROUP:
        case TAG_ID.HTML:
        case TAG_ID.TBODY:
        case TAG_ID.TD:
        case TAG_ID.TFOOT:
        case TAG_ID.TH:
        case TAG_ID.THEAD:
        case TAG_ID.TR: {
            // Ignore token
            break;
        }
        default: {
            tokenInTable(p, token);
        }
    }
}
function tokenInTable(p, token) {
    const savedFosterParentingState = p.fosterParentingEnabled;
    p.fosterParentingEnabled = true;
    // Process token in `In Body` mode
    modeInBody(p, token);
    p.fosterParentingEnabled = savedFosterParentingState;
}
// The "in table text" insertion mode
//------------------------------------------------------------------
function whitespaceCharacterInTableText(p, token) {
    p.pendingCharacterTokens.push(token);
}
function characterInTableText(p, token) {
    p.pendingCharacterTokens.push(token);
    p.hasNonWhitespacePendingCharacterToken = true;
}
function tokenInTableText(p, token) {
    let i = 0;
    if (p.hasNonWhitespacePendingCharacterToken) {
        for (; i < p.pendingCharacterTokens.length; i++) {
            tokenInTable(p, p.pendingCharacterTokens[i]);
        }
    }
    else {
        for (; i < p.pendingCharacterTokens.length; i++) {
            p._insertCharacters(p.pendingCharacterTokens[i]);
        }
    }
    p.insertionMode = p.originalInsertionMode;
    p._processToken(token);
}
// The "in caption" insertion mode
//------------------------------------------------------------------
const TABLE_VOID_ELEMENTS = new Set([TAG_ID.CAPTION, TAG_ID.COL, TAG_ID.COLGROUP, TAG_ID.TBODY, TAG_ID.TD, TAG_ID.TFOOT, TAG_ID.TH, TAG_ID.THEAD, TAG_ID.TR]);
function startTagInCaption(p, token) {
    const tn = token.tagID;
    if (TABLE_VOID_ELEMENTS.has(tn)) {
        if (p.openElements.hasInTableScope(TAG_ID.CAPTION)) {
            p.openElements.generateImpliedEndTags();
            p.openElements.popUntilTagNamePopped(TAG_ID.CAPTION);
            p.activeFormattingElements.clearToLastMarker();
            p.insertionMode = InsertionMode.IN_TABLE;
            startTagInTable(p, token);
        }
    }
    else {
        startTagInBody(p, token);
    }
}
function endTagInCaption(p, token) {
    const tn = token.tagID;
    switch (tn) {
        case TAG_ID.CAPTION:
        case TAG_ID.TABLE: {
            if (p.openElements.hasInTableScope(TAG_ID.CAPTION)) {
                p.openElements.generateImpliedEndTags();
                p.openElements.popUntilTagNamePopped(TAG_ID.CAPTION);
                p.activeFormattingElements.clearToLastMarker();
                p.insertionMode = InsertionMode.IN_TABLE;
                if (tn === TAG_ID.TABLE) {
                    endTagInTable(p, token);
                }
            }
            break;
        }
        case TAG_ID.BODY:
        case TAG_ID.COL:
        case TAG_ID.COLGROUP:
        case TAG_ID.HTML:
        case TAG_ID.TBODY:
        case TAG_ID.TD:
        case TAG_ID.TFOOT:
        case TAG_ID.TH:
        case TAG_ID.THEAD:
        case TAG_ID.TR: {
            // Ignore token
            break;
        }
        default: {
            endTagInBody(p, token);
        }
    }
}
// The "in column group" insertion mode
//------------------------------------------------------------------
function startTagInColumnGroup(p, token) {
    switch (token.tagID) {
        case TAG_ID.HTML: {
            startTagInBody(p, token);
            break;
        }
        case TAG_ID.COL: {
            p._appendElement(token, NS.HTML);
            token.ackSelfClosing = true;
            break;
        }
        case TAG_ID.TEMPLATE: {
            startTagInHead(p, token);
            break;
        }
        default: {
            tokenInColumnGroup(p, token);
        }
    }
}
function endTagInColumnGroup(p, token) {
    switch (token.tagID) {
        case TAG_ID.COLGROUP: {
            if (p.openElements.currentTagId === TAG_ID.COLGROUP) {
                p.openElements.pop();
                p.insertionMode = InsertionMode.IN_TABLE;
            }
            break;
        }
        case TAG_ID.TEMPLATE: {
            templateEndTagInHead(p, token);
            break;
        }
        case TAG_ID.COL: {
            // Ignore token
            break;
        }
        default: {
            tokenInColumnGroup(p, token);
        }
    }
}
function tokenInColumnGroup(p, token) {
    if (p.openElements.currentTagId === TAG_ID.COLGROUP) {
        p.openElements.pop();
        p.insertionMode = InsertionMode.IN_TABLE;
        p._processToken(token);
    }
}
// The "in table body" insertion mode
//------------------------------------------------------------------
function startTagInTableBody(p, token) {
    switch (token.tagID) {
        case TAG_ID.TR: {
            p.openElements.clearBackToTableBodyContext();
            p._insertElement(token, NS.HTML);
            p.insertionMode = InsertionMode.IN_ROW;
            break;
        }
        case TAG_ID.TH:
        case TAG_ID.TD: {
            p.openElements.clearBackToTableBodyContext();
            p._insertFakeElement(TAG_NAMES.TR, TAG_ID.TR);
            p.insertionMode = InsertionMode.IN_ROW;
            startTagInRow(p, token);
            break;
        }
        case TAG_ID.CAPTION:
        case TAG_ID.COL:
        case TAG_ID.COLGROUP:
        case TAG_ID.TBODY:
        case TAG_ID.TFOOT:
        case TAG_ID.THEAD: {
            if (p.openElements.hasTableBodyContextInTableScope()) {
                p.openElements.clearBackToTableBodyContext();
                p.openElements.pop();
                p.insertionMode = InsertionMode.IN_TABLE;
                startTagInTable(p, token);
            }
            break;
        }
        default: {
            startTagInTable(p, token);
        }
    }
}
function endTagInTableBody(p, token) {
    const tn = token.tagID;
    switch (token.tagID) {
        case TAG_ID.TBODY:
        case TAG_ID.TFOOT:
        case TAG_ID.THEAD: {
            if (p.openElements.hasInTableScope(tn)) {
                p.openElements.clearBackToTableBodyContext();
                p.openElements.pop();
                p.insertionMode = InsertionMode.IN_TABLE;
            }
            break;
        }
        case TAG_ID.TABLE: {
            if (p.openElements.hasTableBodyContextInTableScope()) {
                p.openElements.clearBackToTableBodyContext();
                p.openElements.pop();
                p.insertionMode = InsertionMode.IN_TABLE;
                endTagInTable(p, token);
            }
            break;
        }
        case TAG_ID.BODY:
        case TAG_ID.CAPTION:
        case TAG_ID.COL:
        case TAG_ID.COLGROUP:
        case TAG_ID.HTML:
        case TAG_ID.TD:
        case TAG_ID.TH:
        case TAG_ID.TR: {
            // Ignore token
            break;
        }
        default: {
            endTagInTable(p, token);
        }
    }
}
// The "in row" insertion mode
//------------------------------------------------------------------
function startTagInRow(p, token) {
    switch (token.tagID) {
        case TAG_ID.TH:
        case TAG_ID.TD: {
            p.openElements.clearBackToTableRowContext();
            p._insertElement(token, NS.HTML);
            p.insertionMode = InsertionMode.IN_CELL;
            p.activeFormattingElements.insertMarker();
            break;
        }
        case TAG_ID.CAPTION:
        case TAG_ID.COL:
        case TAG_ID.COLGROUP:
        case TAG_ID.TBODY:
        case TAG_ID.TFOOT:
        case TAG_ID.THEAD:
        case TAG_ID.TR: {
            if (p.openElements.hasInTableScope(TAG_ID.TR)) {
                p.openElements.clearBackToTableRowContext();
                p.openElements.pop();
                p.insertionMode = InsertionMode.IN_TABLE_BODY;
                startTagInTableBody(p, token);
            }
            break;
        }
        default: {
            startTagInTable(p, token);
        }
    }
}
function endTagInRow(p, token) {
    switch (token.tagID) {
        case TAG_ID.TR: {
            if (p.openElements.hasInTableScope(TAG_ID.TR)) {
                p.openElements.clearBackToTableRowContext();
                p.openElements.pop();
                p.insertionMode = InsertionMode.IN_TABLE_BODY;
            }
            break;
        }
        case TAG_ID.TABLE: {
            if (p.openElements.hasInTableScope(TAG_ID.TR)) {
                p.openElements.clearBackToTableRowContext();
                p.openElements.pop();
                p.insertionMode = InsertionMode.IN_TABLE_BODY;
                endTagInTableBody(p, token);
            }
            break;
        }
        case TAG_ID.TBODY:
        case TAG_ID.TFOOT:
        case TAG_ID.THEAD: {
            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope(TAG_ID.TR)) {
                p.openElements.clearBackToTableRowContext();
                p.openElements.pop();
                p.insertionMode = InsertionMode.IN_TABLE_BODY;
                endTagInTableBody(p, token);
            }
            break;
        }
        case TAG_ID.BODY:
        case TAG_ID.CAPTION:
        case TAG_ID.COL:
        case TAG_ID.COLGROUP:
        case TAG_ID.HTML:
        case TAG_ID.TD:
        case TAG_ID.TH: {
            // Ignore end tag
            break;
        }
        default: {
            endTagInTable(p, token);
        }
    }
}
// The "in cell" insertion mode
//------------------------------------------------------------------
function startTagInCell(p, token) {
    const tn = token.tagID;
    if (TABLE_VOID_ELEMENTS.has(tn)) {
        if (p.openElements.hasInTableScope(TAG_ID.TD) || p.openElements.hasInTableScope(TAG_ID.TH)) {
            p._closeTableCell();
            startTagInRow(p, token);
        }
    }
    else {
        startTagInBody(p, token);
    }
}
function endTagInCell(p, token) {
    const tn = token.tagID;
    switch (tn) {
        case TAG_ID.TD:
        case TAG_ID.TH: {
            if (p.openElements.hasInTableScope(tn)) {
                p.openElements.generateImpliedEndTags();
                p.openElements.popUntilTagNamePopped(tn);
                p.activeFormattingElements.clearToLastMarker();
                p.insertionMode = InsertionMode.IN_ROW;
            }
            break;
        }
        case TAG_ID.TABLE:
        case TAG_ID.TBODY:
        case TAG_ID.TFOOT:
        case TAG_ID.THEAD:
        case TAG_ID.TR: {
            if (p.openElements.hasInTableScope(tn)) {
                p._closeTableCell();
                endTagInRow(p, token);
            }
            break;
        }
        case TAG_ID.BODY:
        case TAG_ID.CAPTION:
        case TAG_ID.COL:
        case TAG_ID.COLGROUP:
        case TAG_ID.HTML: {
            // Ignore token
            break;
        }
        default: {
            endTagInBody(p, token);
        }
    }
}
// The "in select" insertion mode
//------------------------------------------------------------------
function startTagInSelect(p, token) {
    switch (token.tagID) {
        case TAG_ID.HTML: {
            startTagInBody(p, token);
            break;
        }
        case TAG_ID.OPTION: {
            if (p.openElements.currentTagId === TAG_ID.OPTION) {
                p.openElements.pop();
            }
            p._insertElement(token, NS.HTML);
            break;
        }
        case TAG_ID.OPTGROUP: {
            if (p.openElements.currentTagId === TAG_ID.OPTION) {
                p.openElements.pop();
            }
            if (p.openElements.currentTagId === TAG_ID.OPTGROUP) {
                p.openElements.pop();
            }
            p._insertElement(token, NS.HTML);
            break;
        }
        case TAG_ID.HR: {
            if (p.openElements.currentTagId === TAG_ID.OPTION) {
                p.openElements.pop();
            }
            if (p.openElements.currentTagId === TAG_ID.OPTGROUP) {
                p.openElements.pop();
            }
            p._appendElement(token, NS.HTML);
            token.ackSelfClosing = true;
            break;
        }
        case TAG_ID.INPUT:
        case TAG_ID.KEYGEN:
        case TAG_ID.TEXTAREA:
        case TAG_ID.SELECT: {
            if (p.openElements.hasInSelectScope(TAG_ID.SELECT)) {
                p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);
                p._resetInsertionMode();
                if (token.tagID !== TAG_ID.SELECT) {
                    p._processStartTag(token);
                }
            }
            break;
        }
        case TAG_ID.SCRIPT:
        case TAG_ID.TEMPLATE: {
            startTagInHead(p, token);
            break;
        }
        // Do nothing
    }
}
function endTagInSelect(p, token) {
    switch (token.tagID) {
        case TAG_ID.OPTGROUP: {
            if (p.openElements.stackTop > 0 &&
                p.openElements.currentTagId === TAG_ID.OPTION &&
                p.openElements.tagIDs[p.openElements.stackTop - 1] === TAG_ID.OPTGROUP) {
                p.openElements.pop();
            }
            if (p.openElements.currentTagId === TAG_ID.OPTGROUP) {
                p.openElements.pop();
            }
            break;
        }
        case TAG_ID.OPTION: {
            if (p.openElements.currentTagId === TAG_ID.OPTION) {
                p.openElements.pop();
            }
            break;
        }
        case TAG_ID.SELECT: {
            if (p.openElements.hasInSelectScope(TAG_ID.SELECT)) {
                p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);
                p._resetInsertionMode();
            }
            break;
        }
        case TAG_ID.TEMPLATE: {
            templateEndTagInHead(p, token);
            break;
        }
        // Do nothing
    }
}
// The "in select in table" insertion mode
//------------------------------------------------------------------
function startTagInSelectInTable(p, token) {
    const tn = token.tagID;
    if (tn === TAG_ID.CAPTION ||
        tn === TAG_ID.TABLE ||
        tn === TAG_ID.TBODY ||
        tn === TAG_ID.TFOOT ||
        tn === TAG_ID.THEAD ||
        tn === TAG_ID.TR ||
        tn === TAG_ID.TD ||
        tn === TAG_ID.TH) {
        p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);
        p._resetInsertionMode();
        p._processStartTag(token);
    }
    else {
        startTagInSelect(p, token);
    }
}
function endTagInSelectInTable(p, token) {
    const tn = token.tagID;
    if (tn === TAG_ID.CAPTION ||
        tn === TAG_ID.TABLE ||
        tn === TAG_ID.TBODY ||
        tn === TAG_ID.TFOOT ||
        tn === TAG_ID.THEAD ||
        tn === TAG_ID.TR ||
        tn === TAG_ID.TD ||
        tn === TAG_ID.TH) {
        if (p.openElements.hasInTableScope(tn)) {
            p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);
            p._resetInsertionMode();
            p.onEndTag(token);
        }
    }
    else {
        endTagInSelect(p, token);
    }
}
// The "in template" insertion mode
//------------------------------------------------------------------
function startTagInTemplate(p, token) {
    switch (token.tagID) {
        // First, handle tags that can start without a mode change
        case TAG_ID.BASE:
        case TAG_ID.BASEFONT:
        case TAG_ID.BGSOUND:
        case TAG_ID.LINK:
        case TAG_ID.META:
        case TAG_ID.NOFRAMES:
        case TAG_ID.SCRIPT:
        case TAG_ID.STYLE:
        case TAG_ID.TEMPLATE:
        case TAG_ID.TITLE: {
            startTagInHead(p, token);
            break;
        }
        // Re-process the token in the appropriate mode
        case TAG_ID.CAPTION:
        case TAG_ID.COLGROUP:
        case TAG_ID.TBODY:
        case TAG_ID.TFOOT:
        case TAG_ID.THEAD: {
            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;
            p.insertionMode = InsertionMode.IN_TABLE;
            startTagInTable(p, token);
            break;
        }
        case TAG_ID.COL: {
            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;
            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;
            startTagInColumnGroup(p, token);
            break;
        }
        case TAG_ID.TR: {
            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;
            p.insertionMode = InsertionMode.IN_TABLE_BODY;
            startTagInTableBody(p, token);
            break;
        }
        case TAG_ID.TD:
        case TAG_ID.TH: {
            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;
            p.insertionMode = InsertionMode.IN_ROW;
            startTagInRow(p, token);
            break;
        }
        default: {
            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;
            p.insertionMode = InsertionMode.IN_BODY;
            startTagInBody(p, token);
        }
    }
}
function endTagInTemplate(p, token) {
    if (token.tagID === TAG_ID.TEMPLATE) {
        templateEndTagInHead(p, token);
    }
}
function eofInTemplate(p, token) {
    if (p.openElements.tmplCount > 0) {
        p.openElements.popUntilTagNamePopped(TAG_ID.TEMPLATE);
        p.activeFormattingElements.clearToLastMarker();
        p.tmplInsertionModeStack.shift();
        p._resetInsertionMode();
        p.onEof(token);
    }
    else {
        stopParsing(p, token);
    }
}
// The "after body" insertion mode
//------------------------------------------------------------------
function startTagAfterBody(p, token) {
    if (token.tagID === TAG_ID.HTML) {
        startTagInBody(p, token);
    }
    else {
        tokenAfterBody(p, token);
    }
}
function endTagAfterBody(p, token) {
    var _a;
    if (token.tagID === TAG_ID.HTML) {
        if (!p.fragmentContext) {
            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;
        }
        //NOTE: <html> is never popped from the stack, so we need to updated
        //the end location explicitly.
        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === TAG_ID.HTML) {
            p._setEndLocation(p.openElements.items[0], token);
            // Update the body element, if it doesn't have an end tag
            const bodyElement = p.openElements.items[1];
            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {
                p._setEndLocation(bodyElement, token);
            }
        }
    }
    else {
        tokenAfterBody(p, token);
    }
}
function tokenAfterBody(p, token) {
    p.insertionMode = InsertionMode.IN_BODY;
    modeInBody(p, token);
}
// The "in frameset" insertion mode
//------------------------------------------------------------------
function startTagInFrameset(p, token) {
    switch (token.tagID) {
        case TAG_ID.HTML: {
            startTagInBody(p, token);
            break;
        }
        case TAG_ID.FRAMESET: {
            p._insertElement(token, NS.HTML);
            break;
        }
        case TAG_ID.FRAME: {
            p._appendElement(token, NS.HTML);
            token.ackSelfClosing = true;
            break;
        }
        case TAG_ID.NOFRAMES: {
            startTagInHead(p, token);
            break;
        }
        // Do nothing
    }
}
function endTagInFrameset(p, token) {
    if (token.tagID === TAG_ID.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {
        p.openElements.pop();
        if (!p.fragmentContext && p.openElements.currentTagId !== TAG_ID.FRAMESET) {
            p.insertionMode = InsertionMode.AFTER_FRAMESET;
        }
    }
}
// The "after frameset" insertion mode
//------------------------------------------------------------------
function startTagAfterFrameset(p, token) {
    switch (token.tagID) {
        case TAG_ID.HTML: {
            startTagInBody(p, token);
            break;
        }
        case TAG_ID.NOFRAMES: {
            startTagInHead(p, token);
            break;
        }
        // Do nothing
    }
}
function endTagAfterFrameset(p, token) {
    if (token.tagID === TAG_ID.HTML) {
        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;
    }
}
// The "after after body" insertion mode
//------------------------------------------------------------------
function startTagAfterAfterBody(p, token) {
    if (token.tagID === TAG_ID.HTML) {
        startTagInBody(p, token);
    }
    else {
        tokenAfterAfterBody(p, token);
    }
}
function tokenAfterAfterBody(p, token) {
    p.insertionMode = InsertionMode.IN_BODY;
    modeInBody(p, token);
}
// The "after after frameset" insertion mode
//------------------------------------------------------------------
function startTagAfterAfterFrameset(p, token) {
    switch (token.tagID) {
        case TAG_ID.HTML: {
            startTagInBody(p, token);
            break;
        }
        case TAG_ID.NOFRAMES: {
            startTagInHead(p, token);
            break;
        }
        // Do nothing
    }
}
// The rules for parsing tokens in foreign content
//------------------------------------------------------------------
function nullCharacterInForeignContent(p, token) {
    token.chars = REPLACEMENT_CHARACTER;
    p._insertCharacters(token);
}
function characterInForeignContent(p, token) {
    p._insertCharacters(token);
    p.framesetOk = false;
}
function popUntilHtmlOrIntegrationPoint(p) {
    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&
        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {
        p.openElements.pop();
    }
}
function startTagInForeignContent(p, token) {
    if (causesExit(token)) {
        popUntilHtmlOrIntegrationPoint(p);
        p._startTagOutsideForeignContent(token);
    }
    else {
        const current = p._getAdjustedCurrentElement();
        const currentNs = p.treeAdapter.getNamespaceURI(current);
        if (currentNs === NS.MATHML) {
            adjustTokenMathMLAttrs(token);
        }
        else if (currentNs === NS.SVG) {
            adjustTokenSVGTagName(token);
            adjustTokenSVGAttrs(token);
        }
        adjustTokenXMLAttrs(token);
        if (token.selfClosing) {
            p._appendElement(token, currentNs);
        }
        else {
            p._insertElement(token, currentNs);
        }
        token.ackSelfClosing = true;
    }
}
function endTagInForeignContent(p, token) {
    if (token.tagID === TAG_ID.P || token.tagID === TAG_ID.BR) {
        popUntilHtmlOrIntegrationPoint(p);
        p._endTagOutsideForeignContent(token);
        return;
    }
    for (let i = p.openElements.stackTop; i > 0; i--) {
        const element = p.openElements.items[i];
        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {
            p._endTagOutsideForeignContent(token);
            break;
        }
        const tagName = p.treeAdapter.getTagName(element);
        if (tagName.toLowerCase() === token.tagName) {
            //NOTE: update the token tag name for `_setEndLocation`.
            token.tagName = tagName;
            p.openElements.shortenToLength(i);
            break;
        }
    }
}

/**
 * Creates a function that escapes all characters matched by the given regular
 * expression using the given map of characters to escape to their entities.
 *
 * @param regex Regular expression to match characters to escape.
 * @param map Map of characters to escape to their entities.
 *
 * @returns Function that escapes all characters matched by the given regular
 * expression using the given map of characters to escape to their entities.
 */
function getEscaper(regex, map) {
    return function escape(data) {
        let match;
        let lastIdx = 0;
        let result = "";
        while ((match = regex.exec(data))) {
            if (lastIdx !== match.index) {
                result += data.substring(lastIdx, match.index);
            }
            // We know that this character will be in the map.
            result += map.get(match[0].charCodeAt(0));
            // Every match will be of length 1
            lastIdx = match.index + 1;
        }
        return result + data.substring(lastIdx);
    };
}
/**
 * Encodes all characters that have to be escaped in HTML attributes,
 * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.
 *
 * @param data String to escape.
 */
const escapeAttribute = getEscaper(/["&\u00A0]/g, new Map([
    [34, "&quot;"],
    [38, "&amp;"],
    [160, "&nbsp;"],
]));
/**
 * Encodes all characters that have to be escaped in HTML text,
 * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.
 *
 * @param data String to escape.
 */
const escapeText = getEscaper(/[&<>\u00A0]/g, new Map([
    [38, "&amp;"],
    [60, "&lt;"],
    [62, "&gt;"],
    [160, "&nbsp;"],
]));

// Sets
const VOID_ELEMENTS = new Set([
    TAG_NAMES.AREA,
    TAG_NAMES.BASE,
    TAG_NAMES.BASEFONT,
    TAG_NAMES.BGSOUND,
    TAG_NAMES.BR,
    TAG_NAMES.COL,
    TAG_NAMES.EMBED,
    TAG_NAMES.FRAME,
    TAG_NAMES.HR,
    TAG_NAMES.IMG,
    TAG_NAMES.INPUT,
    TAG_NAMES.KEYGEN,
    TAG_NAMES.LINK,
    TAG_NAMES.META,
    TAG_NAMES.PARAM,
    TAG_NAMES.SOURCE,
    TAG_NAMES.TRACK,
    TAG_NAMES.WBR,
]);
function isVoidElement(node, options) {
    return (options.treeAdapter.isElementNode(node) &&
        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&
        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));
}
const defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };
/**
 * Serializes an AST node to an HTML string.
 *
 * @example
 *
 * ```js
 * const parse5 = require('parse5');
 *
 * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');
 *
 * // Serializes a document.
 * const html = parse5.serialize(document);
 *
 * // Serializes the <html> element content.
 * const str = parse5.serialize(document.childNodes[1]);
 *
 * console.log(str); //> '<head></head><body>Hi there!</body>'
 * ```
 *
 * @param node Node to serialize.
 * @param options Serialization options.
 */
function serialize(node, options) {
    const opts = { ...defaultOpts, ...options };
    if (isVoidElement(node, opts)) {
        return '';
    }
    return serializeChildNodes(node, opts);
}
function serializeChildNodes(parentNode, options) {
    let html = '';
    // Get container of the child nodes
    const container = options.treeAdapter.isElementNode(parentNode) &&
        options.treeAdapter.getTagName(parentNode) === TAG_NAMES.TEMPLATE &&
        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML
        ? options.treeAdapter.getTemplateContent(parentNode)
        : parentNode;
    const childNodes = options.treeAdapter.getChildNodes(container);
    if (childNodes) {
        for (const currentNode of childNodes) {
            html += serializeNode(currentNode, options);
        }
    }
    return html;
}
function serializeNode(node, options) {
    if (options.treeAdapter.isElementNode(node)) {
        return serializeElement(node, options);
    }
    if (options.treeAdapter.isTextNode(node)) {
        return serializeTextNode(node, options);
    }
    if (options.treeAdapter.isCommentNode(node)) {
        return serializeCommentNode(node, options);
    }
    if (options.treeAdapter.isDocumentTypeNode(node)) {
        return serializeDocumentTypeNode(node, options);
    }
    // Return an empty string for unknown nodes
    return '';
}
function serializeElement(node, options) {
    const tn = options.treeAdapter.getTagName(node);
    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;
}
function serializeAttributes(node, { treeAdapter }) {
    let html = '';
    for (const attr of treeAdapter.getAttrList(node)) {
        html += ' ';
        if (attr.namespace) {
            switch (attr.namespace) {
                case NS.XML: {
                    html += `xml:${attr.name}`;
                    break;
                }
                case NS.XMLNS: {
                    if (attr.name !== 'xmlns') {
                        html += 'xmlns:';
                    }
                    html += attr.name;
                    break;
                }
                case NS.XLINK: {
                    html += `xlink:${attr.name}`;
                    break;
                }
                default: {
                    html += `${attr.prefix}:${attr.name}`;
                }
            }
        }
        else {
            html += attr.name;
        }
        html += `="${escapeAttribute(attr.value)}"`;
    }
    return html;
}
function serializeTextNode(node, options) {
    const { treeAdapter } = options;
    const content = treeAdapter.getTextNodeContent(node);
    const parent = treeAdapter.getParentNode(node);
    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);
    return parentTn &&
        treeAdapter.getNamespaceURI(parent) === NS.HTML &&
        hasUnescapedText(parentTn, options.scriptingEnabled)
        ? content
        : escapeText(content);
}
function serializeCommentNode(node, { treeAdapter }) {
    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;
}
function serializeDocumentTypeNode(node, { treeAdapter }) {
    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;
}

// Shorthands
/**
 * Parses an HTML string.
 *
 * @param html Input HTML string.
 * @param options Parsing options.
 * @returns Document
 *
 * @example
 *
 * ```js
 * const parse5 = require('parse5');
 *
 * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');
 *
 * console.log(document.childNodes[1].tagName); //> 'html'
 *```
 */
function parse$2(html, options) {
    return Parser$1.parse(html, options);
}
function parseFragment(fragmentContext, html, options) {
    if (typeof fragmentContext === 'string') {
        options = html;
        html = fragmentContext;
        fragmentContext = null;
    }
    const parser = Parser$1.getFragmentParser(fragmentContext, options);
    parser.tokenizer.write(html, true);
    return parser.getFragment();
}

/* eslint-disable no-warning-comments */


function getParse$1(html) {
  return html.indexOf('<html>') >= 0 || html.indexOf('<body>') >= 0 || html.indexOf('<head>') >= 0
    ? parse$2
    : parseFragment;
}

function isShadowRoot(element) {
  return Object.getPrototypeOf(element).constructor.name === 'ShadowRoot';
}

function deepClone(obj, map = new WeakMap()) {
  if (obj === null || typeof obj !== 'object') {
    return obj;
  }

  if (typeof obj === 'function') {
    const clonedFn = obj.bind({});
    Object.assign(clonedFn, obj);
    return clonedFn;
  }

  if (map.has(obj)) {
    return map.get(obj);
  }

  const result = Array.isArray(obj) ? [] : {};
  map.set(obj, result);

  for (const key of Object.keys(obj)) {
    result[key] = deepClone(obj[key], map);
  }

  return result;
}

// Creates an empty parse5 element without the parse5 overhead resulting in better performance
function getParse5ElementDefaults(element, tagName) {
  return {
    addEventListener: noop,
    attrs: [],
    parentNode: element.parentNode,
    childNodes: [],
    nodeName: tagName,
    tagName: tagName,
    namespaceURI: 'http://www.w3.org/1999/xhtml',
    // eslint-disable-next-line no-extra-parens
    ...(tagName === 'template' ? { content: { nodeName: '#document-fragment', childNodes: [] } } : {})
  };
}

function noop() { }

// https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet/CSSStyleSheet
class CSSStyleSheet {
  insertRule() { }
  deleteRule() { }
  replace() { }
  replaceSync() { }
}

// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget
class EventTarget {
  constructor() {
    this.addEventListener = noop;
  }
}

// https://developer.mozilla.org/en-US/docs/Web/API/Node
// EventTarget <- Node
// TODO should be an interface?
let Node$1 = class Node extends EventTarget {
  constructor() {
    super();
    // Parse5 properties
    this.attrs = [];
    this.parentNode = null;
    this.childNodes = [];
    this.nodeName = '';
  }

  cloneNode(deep) {
    return deep ? deepClone(this) : Object.assign({}, this);
  }

  appendChild(node) {
    const childNodes = (this.nodeName === 'template' ? this.content : this).childNodes;

    if (node.parentNode) {
      node.parentNode?.removeChild?.(node);
    }

    if (node.nodeName === 'template') {
      if (isShadowRoot(this) && this.mode) {
        node.attrs = [{ name: 'shadowrootmode', value: this.mode }];
        childNodes.push(node);
        node.parentNode = this;
      } else {
        this.childNodes = [...this.childNodes, ...node.content.childNodes];
      }
    } else if (node instanceof DocumentFragment) {
      this.childNodes = [...this.childNodes, ...node.childNodes];
    } else {
      childNodes.push(node);
      node.parentNode = this;
    }

    return node;
  }

  removeChild(node) {
    const childNodes = (this.nodeName === 'template' ? this.content : this).childNodes;
    if (!childNodes || !childNodes.length) {
      return null;
    }

    const index = childNodes.indexOf(node);
    if (index === -1) {
      return null;
    }

    childNodes.splice(index, 1);
    node.parentNode = null;

    return node;
  }

  get textContent() {
    if (this.nodeName === '#text') {
      return this.value || '';
    }

    return this.childNodes
      .map((child) => child.nodeName === '#text' ? child.value : child.textContent)
      .join('');
  }

  set textContent(value) {
    this.childNodes = [];

    if (value) {
      const textNode = new Node();
      textNode.nodeName = '#text';
      textNode.value = value;
      textNode.parentNode = this;
      this.childNodes.push(textNode);
    }
  }
};

// https://developer.mozilla.org/en-US/docs/Web/API/Element
// EventTarget <- Node <- Element
class Element extends Node$1 {
  constructor() {
    super();
  }

  attachShadow(options) {
    this.shadowRoot = new ShadowRoot(options);
    this.shadowRoot.parentNode = this;
    return this.shadowRoot;
  }

  getHTML({ serializableShadowRoots = false }) {
    return this.shadowRoot && serializableShadowRoots && this.shadowRoot.serializable ? this.shadowRoot.innerHTML : '';
  }

  get innerHTML() {
    const childNodes = (this.nodeName === 'template' ? this.content : this).childNodes;
    return childNodes ? serialize({ childNodes }) : '';
  }

  set innerHTML(html) {
    (this.nodeName === 'template' ? this.content : this).childNodes = getParse$1(html)(html).childNodes;
  }

  hasAttribute(name) {
    return this.attrs.some((attr) => attr.name === name);
  }

  getAttribute(name) {
    const attr = this.attrs.find((attr) => attr.name === name);
    return attr ? attr.value : null;
  }

  setAttribute(name, value) {
    const attr = this.attrs?.find((attr) => attr.name === name);

    if (attr) {
      attr.value = value;
    } else {
      this.attrs?.push({ name, value });
    }
  }
}

// https://developer.mozilla.org/en-US/docs/Web/API/Document
// EventTarget <- Node <- Document
class Document extends Node$1 {

  createElement(tagName) {
    switch (tagName) {

      case 'template':
        return new HTMLTemplateElement();

      default:
        return new HTMLElement(tagName);

    }
  }

  createDocumentFragment(html) {
    return new DocumentFragment(html);
  }
}

// https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement
// EventTarget <- Node <- Element <- HTMLElement
class HTMLElement extends Element {
  constructor(tagName) {
    super();
    Object.assign(this, getParse5ElementDefaults(this, tagName));
  }
  connectedCallback() { }
}

// https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment
// EventTarget <- Node <- DocumentFragment
class DocumentFragment extends Node$1 { }

// https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot
// EventTarget <- Node <- DocumentFragment <- ShadowRoot
class ShadowRoot extends DocumentFragment {
  constructor(options) {
    super();
    this.mode = options.mode ?? 'closed';
    this.serializable = options.serializable ?? false;
    this.adoptedStyleSheets = [];
  }

  get innerHTML() {
    return this.childNodes?.[0]?.content?.childNodes ? serialize({ childNodes: this.childNodes[0].content.childNodes }) : '';
  }

  set innerHTML(html) {
    this.childNodes = getParse$1(html)(`<template shadowrootmode="${this.mode}">${html}</template>`).childNodes;
  }
}

// https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement
// EventTarget <- Node <- Element <- HTMLElement <- HTMLTemplateElement
class HTMLTemplateElement extends HTMLElement {
  constructor() {
    super();
    // Gets element defaults for template element instead of parsing a
    // <template></template> with parse5. Results in better performance
    // when creating templates
    Object.assign(this, getParse5ElementDefaults(this, 'template'));
    this.content.cloneNode = this.cloneNode.bind(this);
  }
}

// https://developer.mozilla.org/en-US/docs/Web/API/CustomElementRegistry
class CustomElementsRegistry {
  constructor() {
    // TODO this should probably be a set or otherwise follow the spec?
    // https://github.com/ProjectEvergreen/wcc/discussions/145
    this.customElementsRegistry = new Map();
  }

  define(tagName, BaseClass) {
    // TODO this should probably fail as per the spec...
    // e.g. if(this.customElementsRegistry.get(tagName))
    // https://github.com/ProjectEvergreen/wcc/discussions/145
    this.customElementsRegistry.set(tagName, BaseClass);
  }

  get(tagName) {
    return this.customElementsRegistry.get(tagName);
  }
}

// mock top level aliases (globalThis === window)
// https://developer.mozilla.org/en-US/docs/Web/API/Window
// make this "idempotent" for now until a better idea comes along - https://github.com/ProjectEvergreen/wcc/discussions/145
globalThis.addEventListener = globalThis.addEventListener ?? noop;
globalThis.document = globalThis.document ?? new Document();
globalThis.customElements = globalThis.customElements ?? new CustomElementsRegistry();
globalThis.HTMLElement = globalThis.HTMLElement ?? HTMLElement;
globalThis.DocumentFragment = globalThis.DocumentFragment ?? DocumentFragment;
globalThis.CSSStyleSheet = globalThis.CSSStyleSheet ?? CSSStyleSheet;

// This file was generated. Do not modify manually!
var astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 7, 9, 32, 4, 318, 1, 80, 3, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 68, 8, 2, 0, 3, 0, 2, 3, 2, 4, 2, 0, 15, 1, 83, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 7, 19, 58, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 343, 9, 54, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 10, 5350, 0, 7, 14, 11465, 27, 2343, 9, 87, 9, 39, 4, 60, 6, 26, 9, 535, 9, 470, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4178, 9, 519, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 245, 1, 2, 9, 726, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];

// This file was generated. Do not modify manually!
var astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 4, 51, 13, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 39, 27, 10, 22, 251, 41, 7, 1, 17, 2, 60, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 31, 9, 2, 0, 3, 0, 2, 37, 2, 0, 26, 0, 2, 0, 45, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 200, 32, 32, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 26, 3994, 6, 582, 6842, 29, 1763, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 433, 44, 212, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 42, 9, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 229, 29, 3, 0, 496, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191];

// This file was generated. Do not modify manually!
var nonASCIIidentifierChars = "\u200c\u200d\xb7\u0300-\u036f\u0387\u0483-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u064b-\u0669\u0670\u06d6-\u06dc\u06df-\u06e4\u06e7\u06e8\u06ea-\u06ed\u06f0-\u06f9\u0711\u0730-\u074a\u07a6-\u07b0\u07c0-\u07c9\u07eb-\u07f3\u07fd\u0816-\u0819\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0859-\u085b\u0897-\u089f\u08ca-\u08e1\u08e3-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962\u0963\u0966-\u096f\u0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09cb-\u09cd\u09d7\u09e2\u09e3\u09e6-\u09ef\u09fe\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ae2\u0ae3\u0ae6-\u0aef\u0afa-\u0aff\u0b01-\u0b03\u0b3c\u0b3e-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b55-\u0b57\u0b62\u0b63\u0b66-\u0b6f\u0b82\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c00-\u0c04\u0c3c\u0c3e-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62\u0c63\u0c66-\u0c6f\u0c81-\u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2\u0ce3\u0ce6-\u0cef\u0cf3\u0d00-\u0d03\u0d3b\u0d3c\u0d3e-\u0d44\u0d46-\u0d48\u0d4a-\u0d4d\u0d57\u0d62\u0d63\u0d66-\u0d6f\u0d81-\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0de6-\u0def\u0df2\u0df3\u0e31\u0e34-\u0e3a\u0e47-\u0e4e\u0e50-\u0e59\u0eb1\u0eb4-\u0ebc\u0ec8-\u0ece\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f3e\u0f3f\u0f71-\u0f84\u0f86\u0f87\u0f8d-\u0f97\u0f99-\u0fbc\u0fc6\u102b-\u103e\u1040-\u1049\u1056-\u1059\u105e-\u1060\u1062-\u1064\u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u1369-\u1371\u1712-\u1715\u1732-\u1734\u1752\u1753\u1772\u1773\u17b4-\u17d3\u17dd\u17e0-\u17e9\u180b-\u180d\u180f-\u1819\u18a9\u1920-\u192b\u1930-\u193b\u1946-\u194f\u19d0-\u19da\u1a17-\u1a1b\u1a55-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1ab0-\u1abd\u1abf-\u1ace\u1b00-\u1b04\u1b34-\u1b44\u1b50-\u1b59\u1b6b-\u1b73\u1b80-\u1b82\u1ba1-\u1bad\u1bb0-\u1bb9\u1be6-\u1bf3\u1c24-\u1c37\u1c40-\u1c49\u1c50-\u1c59\u1cd0-\u1cd2\u1cd4-\u1ce8\u1ced\u1cf4\u1cf7-\u1cf9\u1dc0-\u1dff\u200c\u200d\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2cef-\u2cf1\u2d7f\u2de0-\u2dff\u302a-\u302f\u3099\u309a\u30fb\ua620-\ua629\ua66f\ua674-\ua67d\ua69e\ua69f\ua6f0\ua6f1\ua802\ua806\ua80b\ua823-\ua827\ua82c\ua880\ua881\ua8b4-\ua8c5\ua8d0-\ua8d9\ua8e0-\ua8f1\ua8ff-\ua909\ua926-\ua92d\ua947-\ua953\ua980-\ua983\ua9b3-\ua9c0\ua9d0-\ua9d9\ua9e5\ua9f0-\ua9f9\uaa29-\uaa36\uaa43\uaa4c\uaa4d\uaa50-\uaa59\uaa7b-\uaa7d\uaab0\uaab2-\uaab4\uaab7\uaab8\uaabe\uaabf\uaac1\uaaeb-\uaaef\uaaf5\uaaf6\uabe3-\uabea\uabec\uabed\uabf0-\uabf9\ufb1e\ufe00-\ufe0f\ufe20-\ufe2f\ufe33\ufe34\ufe4d-\ufe4f\uff10-\uff19\uff3f\uff65";

// This file was generated. Do not modify manually!
var nonASCIIidentifierStartChars = "\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u037f\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u052f\u0531-\u0556\u0559\u0560-\u0588\u05d0-\u05ea\u05ef-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u0860-\u086a\u0870-\u0887\u0889-\u088e\u08a0-\u08c9\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u09fc\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0af9\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d\u0c58-\u0c5a\u0c5d\u0c60\u0c61\u0c80\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cdd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d04-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d54-\u0d56\u0d5f-\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e86-\u0e8a\u0e8c-\u0ea3\u0ea5\u0ea7-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f5\u13f8-\u13fd\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f8\u1700-\u1711\u171f-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1878\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191e\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4c\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1c80-\u1c8a\u1c90-\u1cba\u1cbd-\u1cbf\u1ce9-\u1cec\u1cee-\u1cf3\u1cf5\u1cf6\u1cfa\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2118-\u211d\u2124\u2126\u2128\u212a-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309b-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312f\u3131-\u318e\u31a0-\u31bf\u31f0-\u31ff\u3400-\u4dbf\u4e00-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua69d\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua7cd\ua7d0\ua7d1\ua7d3\ua7d5-\ua7dc\ua7f2-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua8fd\ua8fe\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\ua9e0-\ua9e4\ua9e6-\ua9ef\ua9fa-\ua9fe\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa7e-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uab30-\uab5a\uab5c-\uab69\uab70-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc";

// These are a run-length and offset encoded representation of the
// >0xffff code points that are a valid part of identifiers. The
// offset starts at 0x10000, and each pair of numbers represents an
// offset to the next range, and then a size of the range.

// Reserved word lists for various dialects of the language

var reservedWords = {
  3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",
  5: "class enum extends super const export import",
  6: "enum",
  strict: "implements interface let package private protected public static yield",
  strictBind: "eval arguments"
};

// And the keywords

var ecma5AndLessKeywords = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this";

var keywords$1 = {
  5: ecma5AndLessKeywords,
  "5module": ecma5AndLessKeywords + " export import",
  6: ecma5AndLessKeywords + " const class extends export import super"
};

var keywordRelationalOperator = /^in(stanceof)?$/;

// ## Character categories

var nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");
var nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");

// This has a complexity linear to the value of the code. The
// assumption is that looking up astral identifier characters is
// rare.
function isInAstralSet(code, set) {
  var pos = 0x10000;
  for (var i = 0; i < set.length; i += 2) {
    pos += set[i];
    if (pos > code) { return false }
    pos += set[i + 1];
    if (pos >= code) { return true }
  }
  return false
}

// Test whether a given character code starts an identifier.

function isIdentifierStart(code, astral) {
  if (code < 65) { return code === 36 }
  if (code < 91) { return true }
  if (code < 97) { return code === 95 }
  if (code < 123) { return true }
  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }
  if (astral === false) { return false }
  return isInAstralSet(code, astralIdentifierStartCodes)
}

// Test whether a given character is part of an identifier.

function isIdentifierChar(code, astral) {
  if (code < 48) { return code === 36 }
  if (code < 58) { return true }
  if (code < 65) { return false }
  if (code < 91) { return true }
  if (code < 97) { return code === 95 }
  if (code < 123) { return true }
  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }
  if (astral === false) { return false }
  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)
}

// ## Token types

// The assignment of fine-grained, information-carrying type objects
// allows the tokenizer to store the information it has about a
// token in a way that is very cheap for the parser to look up.

// All token type variables start with an underscore, to make them
// easy to recognize.

// The `beforeExpr` property is used to disambiguate between regular
// expressions and divisions. It is set on all token types that can
// be followed by an expression (thus, a slash after them would be a
// regular expression).
//
// The `startsExpr` property is used to check if the token ends a
// `yield` expression. It is set on all token types that either can
// directly start an expression (like a quotation mark) or can
// continue an expression (like the body of a string).
//
// `isLoop` marks a keyword as starting a loop, which is important
// to know when parsing a label, in order to allow or disallow
// continue jumps to that label.

var TokenType$1 = function TokenType(label, conf) {
  if ( conf === void 0 ) conf = {};

  this.label = label;
  this.keyword = conf.keyword;
  this.beforeExpr = !!conf.beforeExpr;
  this.startsExpr = !!conf.startsExpr;
  this.isLoop = !!conf.isLoop;
  this.isAssign = !!conf.isAssign;
  this.prefix = !!conf.prefix;
  this.postfix = !!conf.postfix;
  this.binop = conf.binop || null;
  this.updateContext = null;
};

function binop(name, prec) {
  return new TokenType$1(name, {beforeExpr: true, binop: prec})
}
var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};

// Map keyword names to token types.

var keywords = {};

// Succinct definitions of keyword token types
function kw(name, options) {
  if ( options === void 0 ) options = {};

  options.keyword = name;
  return keywords[name] = new TokenType$1(name, options)
}

var types$1 = {
  num: new TokenType$1("num", startsExpr),
  regexp: new TokenType$1("regexp", startsExpr),
  string: new TokenType$1("string", startsExpr),
  name: new TokenType$1("name", startsExpr),
  privateId: new TokenType$1("privateId", startsExpr),
  eof: new TokenType$1("eof"),

  // Punctuation token types.
  bracketL: new TokenType$1("[", {beforeExpr: true, startsExpr: true}),
  bracketR: new TokenType$1("]"),
  braceL: new TokenType$1("{", {beforeExpr: true, startsExpr: true}),
  braceR: new TokenType$1("}"),
  parenL: new TokenType$1("(", {beforeExpr: true, startsExpr: true}),
  parenR: new TokenType$1(")"),
  comma: new TokenType$1(",", beforeExpr),
  semi: new TokenType$1(";", beforeExpr),
  colon: new TokenType$1(":", beforeExpr),
  dot: new TokenType$1("."),
  question: new TokenType$1("?", beforeExpr),
  questionDot: new TokenType$1("?."),
  arrow: new TokenType$1("=>", beforeExpr),
  template: new TokenType$1("template"),
  invalidTemplate: new TokenType$1("invalidTemplate"),
  ellipsis: new TokenType$1("...", beforeExpr),
  backQuote: new TokenType$1("`", startsExpr),
  dollarBraceL: new TokenType$1("${", {beforeExpr: true, startsExpr: true}),

  // Operators. These carry several kinds of properties to help the
  // parser use them properly (the presence of these properties is
  // what categorizes them as operators).
  //
  // `binop`, when present, specifies that this operator is a binary
  // operator, and will refer to its precedence.
  //
  // `prefix` and `postfix` mark the operator as a prefix or postfix
  // unary operator.
  //
  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as
  // binary operators with a very low precedence, that should result
  // in AssignmentExpression nodes.

  eq: new TokenType$1("=", {beforeExpr: true, isAssign: true}),
  assign: new TokenType$1("_=", {beforeExpr: true, isAssign: true}),
  incDec: new TokenType$1("++/--", {prefix: true, postfix: true, startsExpr: true}),
  prefix: new TokenType$1("!/~", {beforeExpr: true, prefix: true, startsExpr: true}),
  logicalOR: binop("||", 1),
  logicalAND: binop("&&", 2),
  bitwiseOR: binop("|", 3),
  bitwiseXOR: binop("^", 4),
  bitwiseAND: binop("&", 5),
  equality: binop("==/!=/===/!==", 6),
  relational: binop("</>/<=/>=", 7),
  bitShift: binop("<</>>/>>>", 8),
  plusMin: new TokenType$1("+/-", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),
  modulo: binop("%", 10),
  star: binop("*", 10),
  slash: binop("/", 10),
  starstar: new TokenType$1("**", {beforeExpr: true}),
  coalesce: binop("??", 1),

  // Keyword token types.
  _break: kw("break"),
  _case: kw("case", beforeExpr),
  _catch: kw("catch"),
  _continue: kw("continue"),
  _debugger: kw("debugger"),
  _default: kw("default", beforeExpr),
  _do: kw("do", {isLoop: true, beforeExpr: true}),
  _else: kw("else", beforeExpr),
  _finally: kw("finally"),
  _for: kw("for", {isLoop: true}),
  _function: kw("function", startsExpr),
  _if: kw("if"),
  _return: kw("return", beforeExpr),
  _switch: kw("switch"),
  _throw: kw("throw", beforeExpr),
  _try: kw("try"),
  _var: kw("var"),
  _const: kw("const"),
  _while: kw("while", {isLoop: true}),
  _with: kw("with"),
  _new: kw("new", {beforeExpr: true, startsExpr: true}),
  _this: kw("this", startsExpr),
  _super: kw("super", startsExpr),
  _class: kw("class", startsExpr),
  _extends: kw("extends", beforeExpr),
  _export: kw("export"),
  _import: kw("import", startsExpr),
  _null: kw("null", startsExpr),
  _true: kw("true", startsExpr),
  _false: kw("false", startsExpr),
  _in: kw("in", {beforeExpr: true, binop: 7}),
  _instanceof: kw("instanceof", {beforeExpr: true, binop: 7}),
  _typeof: kw("typeof", {beforeExpr: true, prefix: true, startsExpr: true}),
  _void: kw("void", {beforeExpr: true, prefix: true, startsExpr: true}),
  _delete: kw("delete", {beforeExpr: true, prefix: true, startsExpr: true})
};

// Matches a whole line break (where CRLF is considered a single
// line break). Used to count lines.

var lineBreak = /\r\n?|\n|\u2028|\u2029/;
var lineBreakG = new RegExp(lineBreak.source, "g");

function isNewLine(code) {
  return code === 10 || code === 13 || code === 0x2028 || code === 0x2029
}

function nextLineBreak(code, from, end) {
  if ( end === void 0 ) end = code.length;

  for (var i = from; i < end; i++) {
    var next = code.charCodeAt(i);
    if (isNewLine(next))
      { return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1 }
  }
  return -1
}

var nonASCIIwhitespace = /[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/;

var skipWhiteSpace$1 = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;

var ref = Object.prototype;
var hasOwnProperty = ref.hasOwnProperty;
var toString = ref.toString;

var hasOwn = Object.hasOwn || (function (obj, propName) { return (
  hasOwnProperty.call(obj, propName)
); });

var isArray = Array.isArray || (function (obj) { return (
  toString.call(obj) === "[object Array]"
); });

var regexpCache = Object.create(null);

function wordsRegexp(words) {
  return regexpCache[words] || (regexpCache[words] = new RegExp("^(?:" + words.replace(/ /g, "|") + ")$"))
}

function codePointToString(code) {
  // UTF-16 Decoding
  if (code <= 0xFFFF) { return String.fromCharCode(code) }
  code -= 0x10000;
  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)
}

var loneSurrogate = /(?:[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/;

// These are used when `options.locations` is on, for the
// `startLoc` and `endLoc` properties.

var Position = function Position(line, col) {
  this.line = line;
  this.column = col;
};

Position.prototype.offset = function offset (n) {
  return new Position(this.line, this.column + n)
};

var SourceLocation = function SourceLocation(p, start, end) {
  this.start = start;
  this.end = end;
  if (p.sourceFile !== null) { this.source = p.sourceFile; }
};

// The `getLineInfo` function is mostly useful when the
// `locations` option is off (for performance reasons) and you
// want to find the line/column position for a given character
// offset. `input` should be the code string that the offset refers
// into.

function getLineInfo(input, offset) {
  for (var line = 1, cur = 0;;) {
    var nextBreak = nextLineBreak(input, cur, offset);
    if (nextBreak < 0) { return new Position(line, offset - cur) }
    ++line;
    cur = nextBreak;
  }
}

// A second argument must be given to configure the parser process.
// These options are recognized (only `ecmaVersion` is required):

var defaultOptions = {
  // `ecmaVersion` indicates the ECMAScript version to parse. Must be
  // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10
  // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `"latest"`
  // (the latest version the library supports). This influences
  // support for strict mode, the set of reserved words, and support
  // for new syntax features.
  ecmaVersion: null,
  // `sourceType` indicates the mode the code should be parsed in.
  // Can be either `"script"` or `"module"`. This influences global
  // strict mode and parsing of `import` and `export` declarations.
  sourceType: "script",
  // `onInsertedSemicolon` can be a callback that will be called when
  // a semicolon is automatically inserted. It will be passed the
  // position of the inserted semicolon as an offset, and if
  // `locations` is enabled, it is given the location as a `{line,
  // column}` object as second argument.
  onInsertedSemicolon: null,
  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for
  // trailing commas.
  onTrailingComma: null,
  // By default, reserved words are only enforced if ecmaVersion >= 5.
  // Set `allowReserved` to a boolean value to explicitly turn this on
  // an off. When this option has the value "never", reserved words
  // and keywords can also not be used as property names.
  allowReserved: null,
  // When enabled, a return at the top level is not considered an
  // error.
  allowReturnOutsideFunction: false,
  // When enabled, import/export statements are not constrained to
  // appearing at the top of the program, and an import.meta expression
  // in a script isn't considered an error.
  allowImportExportEverywhere: false,
  // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.
  // When enabled, await identifiers are allowed to appear at the top-level scope,
  // but they are still not allowed in non-async functions.
  allowAwaitOutsideFunction: null,
  // When enabled, super identifiers are not constrained to
  // appearing in methods and do not raise an error when they appear elsewhere.
  allowSuperOutsideMethod: null,
  // When enabled, hashbang directive in the beginning of file is
  // allowed and treated as a line comment. Enabled by default when
  // `ecmaVersion` >= 2023.
  allowHashBang: false,
  // By default, the parser will verify that private properties are
  // only used in places where they are valid and have been declared.
  // Set this to false to turn such checks off.
  checkPrivateFields: true,
  // When `locations` is on, `loc` properties holding objects with
  // `start` and `end` properties in `{line, column}` form (with
  // line being 1-based and column 0-based) will be attached to the
  // nodes.
  locations: false,
  // A function can be passed as `onToken` option, which will
  // cause Acorn to call that function with object in the same
  // format as tokens returned from `tokenizer().getToken()`. Note
  // that you are not allowed to call the parser from the
  // callback—that will corrupt its internal state.
  onToken: null,
  // A function can be passed as `onComment` option, which will
  // cause Acorn to call that function with `(block, text, start,
  // end)` parameters whenever a comment is skipped. `block` is a
  // boolean indicating whether this is a block (`/* */`) comment,
  // `text` is the content of the comment, and `start` and `end` are
  // character offsets that denote the start and end of the comment.
  // When the `locations` option is on, two more parameters are
  // passed, the full `{line, column}` locations of the start and
  // end of the comments. Note that you are not allowed to call the
  // parser from the callback—that will corrupt its internal state.
  // When this option has an array as value, objects representing the
  // comments are pushed to it.
  onComment: null,
  // Nodes have their start and end characters offsets recorded in
  // `start` and `end` properties (directly on the node, rather than
  // the `loc` object, which holds line/column data. To also add a
  // [semi-standardized][range] `range` property holding a `[start,
  // end]` array with the same numbers, set the `ranges` option to
  // `true`.
  //
  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678
  ranges: false,
  // It is possible to parse multiple files into a single AST by
  // passing the tree produced by parsing the first file as
  // `program` option in subsequent parses. This will add the
  // toplevel forms of the parsed file to the `Program` (top) node
  // of an existing parse tree.
  program: null,
  // When `locations` is on, you can pass this to record the source
  // file in every node's `loc` object.
  sourceFile: null,
  // This value, if given, is stored in every node, whether
  // `locations` is on or off.
  directSourceFile: null,
  // When enabled, parenthesized expressions are represented by
  // (non-standard) ParenthesizedExpression nodes
  preserveParens: false
};

// Interpret and default an options object

var warnedAboutEcmaVersion = false;

function getOptions(opts) {
  var options = {};

  for (var opt in defaultOptions)
    { options[opt] = opts && hasOwn(opts, opt) ? opts[opt] : defaultOptions[opt]; }

  if (options.ecmaVersion === "latest") {
    options.ecmaVersion = 1e8;
  } else if (options.ecmaVersion == null) {
    if (!warnedAboutEcmaVersion && typeof console === "object" && console.warn) {
      warnedAboutEcmaVersion = true;
      console.warn("Since Acorn 8.0.0, options.ecmaVersion is required.\nDefaulting to 2020, but this will stop working in the future.");
    }
    options.ecmaVersion = 11;
  } else if (options.ecmaVersion >= 2015) {
    options.ecmaVersion -= 2009;
  }

  if (options.allowReserved == null)
    { options.allowReserved = options.ecmaVersion < 5; }

  if (!opts || opts.allowHashBang == null)
    { options.allowHashBang = options.ecmaVersion >= 14; }

  if (isArray(options.onToken)) {
    var tokens = options.onToken;
    options.onToken = function (token) { return tokens.push(token); };
  }
  if (isArray(options.onComment))
    { options.onComment = pushComment(options, options.onComment); }

  return options
}

function pushComment(options, array) {
  return function(block, text, start, end, startLoc, endLoc) {
    var comment = {
      type: block ? "Block" : "Line",
      value: text,
      start: start,
      end: end
    };
    if (options.locations)
      { comment.loc = new SourceLocation(this, startLoc, endLoc); }
    if (options.ranges)
      { comment.range = [start, end]; }
    array.push(comment);
  }
}

// Each scope gets a bitset that may contain these flags
var
    SCOPE_TOP = 1,
    SCOPE_FUNCTION = 2,
    SCOPE_ASYNC = 4,
    SCOPE_GENERATOR = 8,
    SCOPE_ARROW = 16,
    SCOPE_SIMPLE_CATCH = 32,
    SCOPE_SUPER = 64,
    SCOPE_DIRECT_SUPER = 128,
    SCOPE_CLASS_STATIC_BLOCK = 256,
    SCOPE_CLASS_FIELD_INIT = 512,
    SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;

function functionFlags(async, generator) {
  return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)
}

// Used in checkLVal* and declareName to determine the type of a binding
var
    BIND_NONE = 0, // Not a binding
    BIND_VAR = 1, // Var-style binding
    BIND_LEXICAL = 2, // Let- or const-style binding
    BIND_FUNCTION = 3, // Function declaration
    BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding
    BIND_OUTSIDE = 5; // Special case for function names as bound inside the function

var Parser = function Parser(options, input, startPos) {
  this.options = options = getOptions(options);
  this.sourceFile = options.sourceFile;
  this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === "module" ? "5module" : 5]);
  var reserved = "";
  if (options.allowReserved !== true) {
    reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];
    if (options.sourceType === "module") { reserved += " await"; }
  }
  this.reservedWords = wordsRegexp(reserved);
  var reservedStrict = (reserved ? reserved + " " : "") + reservedWords.strict;
  this.reservedWordsStrict = wordsRegexp(reservedStrict);
  this.reservedWordsStrictBind = wordsRegexp(reservedStrict + " " + reservedWords.strictBind);
  this.input = String(input);

  // Used to signal to callers of `readWord1` whether the word
  // contained any escape sequences. This is needed because words with
  // escape sequences must not be interpreted as keywords.
  this.containsEsc = false;

  // Set up token state

  // The current position of the tokenizer in the input.
  if (startPos) {
    this.pos = startPos;
    this.lineStart = this.input.lastIndexOf("\n", startPos - 1) + 1;
    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;
  } else {
    this.pos = this.lineStart = 0;
    this.curLine = 1;
  }

  // Properties of the current token:
  // Its type
  this.type = types$1.eof;
  // For tokens that include more information than their type, the value
  this.value = null;
  // Its start and end offset
  this.start = this.end = this.pos;
  // And, if locations are used, the {line, column} object
  // corresponding to those offsets
  this.startLoc = this.endLoc = this.curPosition();

  // Position information for the previous token
  this.lastTokEndLoc = this.lastTokStartLoc = null;
  this.lastTokStart = this.lastTokEnd = this.pos;

  // The context stack is used to superficially track syntactic
  // context to predict whether a regular expression is allowed in a
  // given position.
  this.context = this.initialContext();
  this.exprAllowed = true;

  // Figure out if it's a module code.
  this.inModule = options.sourceType === "module";
  this.strict = this.inModule || this.strictDirective(this.pos);

  // Used to signify the start of a potential arrow function
  this.potentialArrowAt = -1;
  this.potentialArrowInForAwait = false;

  // Positions to delayed-check that yield/await does not exist in default parameters.
  this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;
  // Labels in scope.
  this.labels = [];
  // Thus-far undefined exports.
  this.undefinedExports = Object.create(null);

  // If enabled, skip leading hashbang line.
  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === "#!")
    { this.skipLineComment(2); }

  // Scope tracking for duplicate variable names (see scope.js)
  this.scopeStack = [];
  this.enterScope(SCOPE_TOP);

  // For RegExp validation
  this.regexpState = null;

  // The stack of private names.
  // Each element has two properties: 'declared' and 'used'.
  // When it exited from the outermost class definition, all used private names must be declared.
  this.privateNameStack = [];
};

var prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },canAwait: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true },allowNewDotTarget: { configurable: true },inClassStaticBlock: { configurable: true } };

Parser.prototype.parse = function parse () {
  var node = this.options.program || this.startNode();
  this.nextToken();
  return this.parseTopLevel(node)
};

prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };

prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 };

prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };

prototypeAccessors.canAwait.get = function () {
  for (var i = this.scopeStack.length - 1; i >= 0; i--) {
    var ref = this.scopeStack[i];
      var flags = ref.flags;
    if (flags & (SCOPE_CLASS_STATIC_BLOCK | SCOPE_CLASS_FIELD_INIT)) { return false }
    if (flags & SCOPE_FUNCTION) { return (flags & SCOPE_ASYNC) > 0 }
  }
  return (this.inModule && this.options.ecmaVersion >= 13) || this.options.allowAwaitOutsideFunction
};

prototypeAccessors.allowSuper.get = function () {
  var ref = this.currentThisScope();
    var flags = ref.flags;
  return (flags & SCOPE_SUPER) > 0 || this.options.allowSuperOutsideMethod
};

prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };

prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };

prototypeAccessors.allowNewDotTarget.get = function () {
  for (var i = this.scopeStack.length - 1; i >= 0; i--) {
    var ref = this.scopeStack[i];
      var flags = ref.flags;
    if (flags & (SCOPE_CLASS_STATIC_BLOCK | SCOPE_CLASS_FIELD_INIT) ||
        ((flags & SCOPE_FUNCTION) && !(flags & SCOPE_ARROW))) { return true }
  }
  return false
};

prototypeAccessors.inClassStaticBlock.get = function () {
  return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0
};

Parser.extend = function extend () {
    var plugins = [], len = arguments.length;
    while ( len-- ) plugins[ len ] = arguments[ len ];

  var cls = this;
  for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }
  return cls
};

Parser.parse = function parse (input, options) {
  return new this(options, input).parse()
};

Parser.parseExpressionAt = function parseExpressionAt (input, pos, options) {
  var parser = new this(options, input, pos);
  parser.nextToken();
  return parser.parseExpression()
};

Parser.tokenizer = function tokenizer (input, options) {
  return new this(options, input)
};

Object.defineProperties( Parser.prototype, prototypeAccessors );

var pp$9 = Parser.prototype;

// ## Parser utilities

var literal = /^(?:'((?:\\[^]|[^'\\])*?)'|"((?:\\[^]|[^"\\])*?)")/;
pp$9.strictDirective = function(start) {
  if (this.options.ecmaVersion < 5) { return false }
  for (;;) {
    // Try to find string literal.
    skipWhiteSpace$1.lastIndex = start;
    start += skipWhiteSpace$1.exec(this.input)[0].length;
    var match = literal.exec(this.input.slice(start));
    if (!match) { return false }
    if ((match[1] || match[2]) === "use strict") {
      skipWhiteSpace$1.lastIndex = start + match[0].length;
      var spaceAfter = skipWhiteSpace$1.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;
      var next = this.input.charAt(end);
      return next === ";" || next === "}" ||
        (lineBreak.test(spaceAfter[0]) &&
         !(/[(`.[+\-/*%<>=,?^&]/.test(next) || next === "!" && this.input.charAt(end + 1) === "="))
    }
    start += match[0].length;

    // Skip semicolon, if any.
    skipWhiteSpace$1.lastIndex = start;
    start += skipWhiteSpace$1.exec(this.input)[0].length;
    if (this.input[start] === ";")
      { start++; }
  }
};

// Predicate that tests whether the next token is of the given
// type, and if yes, consumes it as a side effect.

pp$9.eat = function(type) {
  if (this.type === type) {
    this.next();
    return true
  } else {
    return false
  }
};

// Tests whether parsed token is a contextual keyword.

pp$9.isContextual = function(name) {
  return this.type === types$1.name && this.value === name && !this.containsEsc
};

// Consumes contextual keyword if possible.

pp$9.eatContextual = function(name) {
  if (!this.isContextual(name)) { return false }
  this.next();
  return true
};

// Asserts that following token is given contextual keyword.

pp$9.expectContextual = function(name) {
  if (!this.eatContextual(name)) { this.unexpected(); }
};

// Test whether a semicolon can be inserted at the current position.

pp$9.canInsertSemicolon = function() {
  return this.type === types$1.eof ||
    this.type === types$1.braceR ||
    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
};

pp$9.insertSemicolon = function() {
  if (this.canInsertSemicolon()) {
    if (this.options.onInsertedSemicolon)
      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }
    return true
  }
};

// Consume a semicolon, or, failing that, see if we are allowed to
// pretend that there is a semicolon at this position.

pp$9.semicolon = function() {
  if (!this.eat(types$1.semi) && !this.insertSemicolon()) { this.unexpected(); }
};

pp$9.afterTrailingComma = function(tokType, notNext) {
  if (this.type === tokType) {
    if (this.options.onTrailingComma)
      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }
    if (!notNext)
      { this.next(); }
    return true
  }
};

// Expect a token of a given type. If found, consume it, otherwise,
// raise an unexpected token error.

pp$9.expect = function(type) {
  this.eat(type) || this.unexpected();
};

// Raise an unexpected token error.

pp$9.unexpected = function(pos) {
  this.raise(pos != null ? pos : this.start, "Unexpected token");
};

var DestructuringErrors = function DestructuringErrors() {
  this.shorthandAssign =
  this.trailingComma =
  this.parenthesizedAssign =
  this.parenthesizedBind =
  this.doubleProto =
    -1;
};

pp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {
  if (!refDestructuringErrors) { return }
  if (refDestructuringErrors.trailingComma > -1)
    { this.raiseRecoverable(refDestructuringErrors.trailingComma, "Comma is not permitted after the rest element"); }
  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;
  if (parens > -1) { this.raiseRecoverable(parens, isAssign ? "Assigning to rvalue" : "Parenthesized pattern"); }
};

pp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {
  if (!refDestructuringErrors) { return false }
  var shorthandAssign = refDestructuringErrors.shorthandAssign;
  var doubleProto = refDestructuringErrors.doubleProto;
  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }
  if (shorthandAssign >= 0)
    { this.raise(shorthandAssign, "Shorthand property assignments are valid only in destructuring patterns"); }
  if (doubleProto >= 0)
    { this.raiseRecoverable(doubleProto, "Redefinition of __proto__ property"); }
};

pp$9.checkYieldAwaitInDefaultParams = function() {
  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))
    { this.raise(this.yieldPos, "Yield expression cannot be a default value"); }
  if (this.awaitPos)
    { this.raise(this.awaitPos, "Await expression cannot be a default value"); }
};

pp$9.isSimpleAssignTarget = function(expr) {
  if (expr.type === "ParenthesizedExpression")
    { return this.isSimpleAssignTarget(expr.expression) }
  return expr.type === "Identifier" || expr.type === "MemberExpression"
};

var pp$8 = Parser.prototype;

// ### Statement parsing

// Parse a program. Initializes the parser, reads any number of
// statements, and wraps them in a Program node.  Optionally takes a
// `program` argument.  If present, the statements will be appended
// to its body instead of creating a new node.

pp$8.parseTopLevel = function(node) {
  var exports = Object.create(null);
  if (!node.body) { node.body = []; }
  while (this.type !== types$1.eof) {
    var stmt = this.parseStatement(null, true, exports);
    node.body.push(stmt);
  }
  if (this.inModule)
    { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)
      {
        var name = list[i];

        this.raiseRecoverable(this.undefinedExports[name].start, ("Export '" + name + "' is not defined"));
      } }
  this.adaptDirectivePrologue(node.body);
  this.next();
  node.sourceType = this.options.sourceType;
  return this.finishNode(node, "Program")
};

var loopLabel = {kind: "loop"}, switchLabel = {kind: "switch"};

pp$8.isLet = function(context) {
  if (this.options.ecmaVersion < 6 || !this.isContextual("let")) { return false }
  skipWhiteSpace$1.lastIndex = this.pos;
  var skip = skipWhiteSpace$1.exec(this.input);
  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);
  // For ambiguous cases, determine if a LexicalDeclaration (or only a
  // Statement) is allowed here. If context is not empty then only a Statement
  // is allowed. However, `let [` is an explicit negative lookahead for
  // ExpressionStatement, so special-case it first.
  if (nextCh === 91 || nextCh === 92) { return true } // '[', '\'
  if (context) { return false }

  if (nextCh === 123 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true } // '{', astral
  if (isIdentifierStart(nextCh, true)) {
    var pos = next + 1;
    while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) { ++pos; }
    if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true }
    var ident = this.input.slice(next, pos);
    if (!keywordRelationalOperator.test(ident)) { return true }
  }
  return false
};

// check 'async [no LineTerminator here] function'
// - 'async /*foo*/ function' is OK.
// - 'async /*\n*/ function' is invalid.
pp$8.isAsyncFunction = function() {
  if (this.options.ecmaVersion < 8 || !this.isContextual("async"))
    { return false }

  skipWhiteSpace$1.lastIndex = this.pos;
  var skip = skipWhiteSpace$1.exec(this.input);
  var next = this.pos + skip[0].length, after;
  return !lineBreak.test(this.input.slice(this.pos, next)) &&
    this.input.slice(next, next + 8) === "function" &&
    (next + 8 === this.input.length ||
     !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00))
};

// Parse a single statement.
//
// If expecting a statement and finding a slash operator, parse a
// regular expression literal. This is to handle cases like
// `if (foo) /blah/.exec(foo)`, where looking at the previous token
// does not help.

pp$8.parseStatement = function(context, topLevel, exports) {
  var starttype = this.type, node = this.startNode(), kind;

  if (this.isLet(context)) {
    starttype = types$1._var;
    kind = "let";
  }

  // Most types of statements are recognized by the keyword they
  // start with. Many are trivial to parse, some require a bit of
  // complexity.

  switch (starttype) {
  case types$1._break: case types$1._continue: return this.parseBreakContinueStatement(node, starttype.keyword)
  case types$1._debugger: return this.parseDebuggerStatement(node)
  case types$1._do: return this.parseDoStatement(node)
  case types$1._for: return this.parseForStatement(node)
  case types$1._function:
    // Function as sole body of either an if statement or a labeled statement
    // works, but not when it is part of a labeled statement that is the sole
    // body of an if statement.
    if ((context && (this.strict || context !== "if" && context !== "label")) && this.options.ecmaVersion >= 6) { this.unexpected(); }
    return this.parseFunctionStatement(node, false, !context)
  case types$1._class:
    if (context) { this.unexpected(); }
    return this.parseClass(node, true)
  case types$1._if: return this.parseIfStatement(node)
  case types$1._return: return this.parseReturnStatement(node)
  case types$1._switch: return this.parseSwitchStatement(node)
  case types$1._throw: return this.parseThrowStatement(node)
  case types$1._try: return this.parseTryStatement(node)
  case types$1._const: case types$1._var:
    kind = kind || this.value;
    if (context && kind !== "var") { this.unexpected(); }
    return this.parseVarStatement(node, kind)
  case types$1._while: return this.parseWhileStatement(node)
  case types$1._with: return this.parseWithStatement(node)
  case types$1.braceL: return this.parseBlock(true, node)
  case types$1.semi: return this.parseEmptyStatement(node)
  case types$1._export:
  case types$1._import:
    if (this.options.ecmaVersion > 10 && starttype === types$1._import) {
      skipWhiteSpace$1.lastIndex = this.pos;
      var skip = skipWhiteSpace$1.exec(this.input);
      var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);
      if (nextCh === 40 || nextCh === 46) // '(' or '.'
        { return this.parseExpressionStatement(node, this.parseExpression()) }
    }

    if (!this.options.allowImportExportEverywhere) {
      if (!topLevel)
        { this.raise(this.start, "'import' and 'export' may only appear at the top level"); }
      if (!this.inModule)
        { this.raise(this.start, "'import' and 'export' may appear only with 'sourceType: module'"); }
    }
    return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports)

    // If the statement does not start with a statement keyword or a
    // brace, it's an ExpressionStatement or LabeledStatement. We
    // simply start parsing an expression, and afterwards, if the
    // next token is a colon and the expression was a simple
    // Identifier node, we switch to interpreting it as a label.
  default:
    if (this.isAsyncFunction()) {
      if (context) { this.unexpected(); }
      this.next();
      return this.parseFunctionStatement(node, true, !context)
    }

    var maybeName = this.value, expr = this.parseExpression();
    if (starttype === types$1.name && expr.type === "Identifier" && this.eat(types$1.colon))
      { return this.parseLabeledStatement(node, maybeName, expr, context) }
    else { return this.parseExpressionStatement(node, expr) }
  }
};

pp$8.parseBreakContinueStatement = function(node, keyword) {
  var isBreak = keyword === "break";
  this.next();
  if (this.eat(types$1.semi) || this.insertSemicolon()) { node.label = null; }
  else if (this.type !== types$1.name) { this.unexpected(); }
  else {
    node.label = this.parseIdent();
    this.semicolon();
  }

  // Verify that there is an actual destination to break or
  // continue to.
  var i = 0;
  for (; i < this.labels.length; ++i) {
    var lab = this.labels[i];
    if (node.label == null || lab.name === node.label.name) {
      if (lab.kind != null && (isBreak || lab.kind === "loop")) { break }
      if (node.label && isBreak) { break }
    }
  }
  if (i === this.labels.length) { this.raise(node.start, "Unsyntactic " + keyword); }
  return this.finishNode(node, isBreak ? "BreakStatement" : "ContinueStatement")
};

pp$8.parseDebuggerStatement = function(node) {
  this.next();
  this.semicolon();
  return this.finishNode(node, "DebuggerStatement")
};

pp$8.parseDoStatement = function(node) {
  this.next();
  this.labels.push(loopLabel);
  node.body = this.parseStatement("do");
  this.labels.pop();
  this.expect(types$1._while);
  node.test = this.parseParenExpression();
  if (this.options.ecmaVersion >= 6)
    { this.eat(types$1.semi); }
  else
    { this.semicolon(); }
  return this.finishNode(node, "DoWhileStatement")
};

// Disambiguating between a `for` and a `for`/`in` or `for`/`of`
// loop is non-trivial. Basically, we have to parse the init `var`
// statement or expression, disallowing the `in` operator (see
// the second parameter to `parseExpression`), and then check
// whether the next token is `in` or `of`. When there is no init
// part (semicolon immediately after the opening parenthesis), it
// is a regular `for` loop.

pp$8.parseForStatement = function(node) {
  this.next();
  var awaitAt = (this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual("await")) ? this.lastTokStart : -1;
  this.labels.push(loopLabel);
  this.enterScope(0);
  this.expect(types$1.parenL);
  if (this.type === types$1.semi) {
    if (awaitAt > -1) { this.unexpected(awaitAt); }
    return this.parseFor(node, null)
  }
  var isLet = this.isLet();
  if (this.type === types$1._var || this.type === types$1._const || isLet) {
    var init$1 = this.startNode(), kind = isLet ? "let" : this.value;
    this.next();
    this.parseVar(init$1, true, kind);
    this.finishNode(init$1, "VariableDeclaration");
    if ((this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual("of"))) && init$1.declarations.length === 1) {
      if (this.options.ecmaVersion >= 9) {
        if (this.type === types$1._in) {
          if (awaitAt > -1) { this.unexpected(awaitAt); }
        } else { node.await = awaitAt > -1; }
      }
      return this.parseForIn(node, init$1)
    }
    if (awaitAt > -1) { this.unexpected(awaitAt); }
    return this.parseFor(node, init$1)
  }
  var startsWithLet = this.isContextual("let"), isForOf = false;
  var containsEsc = this.containsEsc;
  var refDestructuringErrors = new DestructuringErrors;
  var initPos = this.start;
  var init = awaitAt > -1
    ? this.parseExprSubscripts(refDestructuringErrors, "await")
    : this.parseExpression(true, refDestructuringErrors);
  if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual("of"))) {
    if (awaitAt > -1) { // implies `ecmaVersion >= 9` (see declaration of awaitAt)
      if (this.type === types$1._in) { this.unexpected(awaitAt); }
      node.await = true;
    } else if (isForOf && this.options.ecmaVersion >= 8) {
      if (init.start === initPos && !containsEsc && init.type === "Identifier" && init.name === "async") { this.unexpected(); }
      else if (this.options.ecmaVersion >= 9) { node.await = false; }
    }
    if (startsWithLet && isForOf) { this.raise(init.start, "The left-hand side of a for-of loop may not start with 'let'."); }
    this.toAssignable(init, false, refDestructuringErrors);
    this.checkLValPattern(init);
    return this.parseForIn(node, init)
  } else {
    this.checkExpressionErrors(refDestructuringErrors, true);
  }
  if (awaitAt > -1) { this.unexpected(awaitAt); }
  return this.parseFor(node, init)
};

pp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {
  this.next();
  return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)
};

pp$8.parseIfStatement = function(node) {
  this.next();
  node.test = this.parseParenExpression();
  // allow function declarations in branches, but only in non-strict mode
  node.consequent = this.parseStatement("if");
  node.alternate = this.eat(types$1._else) ? this.parseStatement("if") : null;
  return this.finishNode(node, "IfStatement")
};

pp$8.parseReturnStatement = function(node) {
  if (!this.inFunction && !this.options.allowReturnOutsideFunction)
    { this.raise(this.start, "'return' outside of function"); }
  this.next();

  // In `return` (and `break`/`continue`), the keywords with
  // optional arguments, we eagerly look for a semicolon or the
  // possibility to insert one.

  if (this.eat(types$1.semi) || this.insertSemicolon()) { node.argument = null; }
  else { node.argument = this.parseExpression(); this.semicolon(); }
  return this.finishNode(node, "ReturnStatement")
};

pp$8.parseSwitchStatement = function(node) {
  this.next();
  node.discriminant = this.parseParenExpression();
  node.cases = [];
  this.expect(types$1.braceL);
  this.labels.push(switchLabel);
  this.enterScope(0);

  // Statements under must be grouped (by label) in SwitchCase
  // nodes. `cur` is used to keep the node that we are currently
  // adding statements to.

  var cur;
  for (var sawDefault = false; this.type !== types$1.braceR;) {
    if (this.type === types$1._case || this.type === types$1._default) {
      var isCase = this.type === types$1._case;
      if (cur) { this.finishNode(cur, "SwitchCase"); }
      node.cases.push(cur = this.startNode());
      cur.consequent = [];
      this.next();
      if (isCase) {
        cur.test = this.parseExpression();
      } else {
        if (sawDefault) { this.raiseRecoverable(this.lastTokStart, "Multiple default clauses"); }
        sawDefault = true;
        cur.test = null;
      }
      this.expect(types$1.colon);
    } else {
      if (!cur) { this.unexpected(); }
      cur.consequent.push(this.parseStatement(null));
    }
  }
  this.exitScope();
  if (cur) { this.finishNode(cur, "SwitchCase"); }
  this.next(); // Closing brace
  this.labels.pop();
  return this.finishNode(node, "SwitchStatement")
};

pp$8.parseThrowStatement = function(node) {
  this.next();
  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))
    { this.raise(this.lastTokEnd, "Illegal newline after throw"); }
  node.argument = this.parseExpression();
  this.semicolon();
  return this.finishNode(node, "ThrowStatement")
};

// Reused empty array added for node fields that are always empty.

var empty$1 = [];

pp$8.parseCatchClauseParam = function() {
  var param = this.parseBindingAtom();
  var simple = param.type === "Identifier";
  this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);
  this.checkLValPattern(param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);
  this.expect(types$1.parenR);

  return param
};

pp$8.parseTryStatement = function(node) {
  this.next();
  node.block = this.parseBlock();
  node.handler = null;
  if (this.type === types$1._catch) {
    var clause = this.startNode();
    this.next();
    if (this.eat(types$1.parenL)) {
      clause.param = this.parseCatchClauseParam();
    } else {
      if (this.options.ecmaVersion < 10) { this.unexpected(); }
      clause.param = null;
      this.enterScope(0);
    }
    clause.body = this.parseBlock(false);
    this.exitScope();
    node.handler = this.finishNode(clause, "CatchClause");
  }
  node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;
  if (!node.handler && !node.finalizer)
    { this.raise(node.start, "Missing catch or finally clause"); }
  return this.finishNode(node, "TryStatement")
};

pp$8.parseVarStatement = function(node, kind, allowMissingInitializer) {
  this.next();
  this.parseVar(node, false, kind, allowMissingInitializer);
  this.semicolon();
  return this.finishNode(node, "VariableDeclaration")
};

pp$8.parseWhileStatement = function(node) {
  this.next();
  node.test = this.parseParenExpression();
  this.labels.push(loopLabel);
  node.body = this.parseStatement("while");
  this.labels.pop();
  return this.finishNode(node, "WhileStatement")
};

pp$8.parseWithStatement = function(node) {
  if (this.strict) { this.raise(this.start, "'with' in strict mode"); }
  this.next();
  node.object = this.parseParenExpression();
  node.body = this.parseStatement("with");
  return this.finishNode(node, "WithStatement")
};

pp$8.parseEmptyStatement = function(node) {
  this.next();
  return this.finishNode(node, "EmptyStatement")
};

pp$8.parseLabeledStatement = function(node, maybeName, expr, context) {
  for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)
    {
    var label = list[i$1];

    if (label.name === maybeName)
      { this.raise(expr.start, "Label '" + maybeName + "' is already declared");
  } }
  var kind = this.type.isLoop ? "loop" : this.type === types$1._switch ? "switch" : null;
  for (var i = this.labels.length - 1; i >= 0; i--) {
    var label$1 = this.labels[i];
    if (label$1.statementStart === node.start) {
      // Update information about previous labels on this node
      label$1.statementStart = this.start;
      label$1.kind = kind;
    } else { break }
  }
  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});
  node.body = this.parseStatement(context ? context.indexOf("label") === -1 ? context + "label" : context : "label");
  this.labels.pop();
  node.label = expr;
  return this.finishNode(node, "LabeledStatement")
};

pp$8.parseExpressionStatement = function(node, expr) {
  node.expression = expr;
  this.semicolon();
  return this.finishNode(node, "ExpressionStatement")
};

// Parse a semicolon-enclosed block of statements, handling `"use
// strict"` declarations when `allowStrict` is true (used for
// function bodies).

pp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {
  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;
  if ( node === void 0 ) node = this.startNode();

  node.body = [];
  this.expect(types$1.braceL);
  if (createNewLexicalScope) { this.enterScope(0); }
  while (this.type !== types$1.braceR) {
    var stmt = this.parseStatement(null);
    node.body.push(stmt);
  }
  if (exitStrict) { this.strict = false; }
  this.next();
  if (createNewLexicalScope) { this.exitScope(); }
  return this.finishNode(node, "BlockStatement")
};

// Parse a regular `for` loop. The disambiguation code in
// `parseStatement` will already have parsed the init statement or
// expression.

pp$8.parseFor = function(node, init) {
  node.init = init;
  this.expect(types$1.semi);
  node.test = this.type === types$1.semi ? null : this.parseExpression();
  this.expect(types$1.semi);
  node.update = this.type === types$1.parenR ? null : this.parseExpression();
  this.expect(types$1.parenR);
  node.body = this.parseStatement("for");
  this.exitScope();
  this.labels.pop();
  return this.finishNode(node, "ForStatement")
};

// Parse a `for`/`in` and `for`/`of` loop, which are almost
// same from parser's perspective.

pp$8.parseForIn = function(node, init) {
  var isForIn = this.type === types$1._in;
  this.next();

  if (
    init.type === "VariableDeclaration" &&
    init.declarations[0].init != null &&
    (
      !isForIn ||
      this.options.ecmaVersion < 8 ||
      this.strict ||
      init.kind !== "var" ||
      init.declarations[0].id.type !== "Identifier"
    )
  ) {
    this.raise(
      init.start,
      ((isForIn ? "for-in" : "for-of") + " loop variable declaration may not have an initializer")
    );
  }
  node.left = init;
  node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();
  this.expect(types$1.parenR);
  node.body = this.parseStatement("for");
  this.exitScope();
  this.labels.pop();
  return this.finishNode(node, isForIn ? "ForInStatement" : "ForOfStatement")
};

// Parse a list of variable declarations.

pp$8.parseVar = function(node, isFor, kind, allowMissingInitializer) {
  node.declarations = [];
  node.kind = kind;
  for (;;) {
    var decl = this.startNode();
    this.parseVarId(decl, kind);
    if (this.eat(types$1.eq)) {
      decl.init = this.parseMaybeAssign(isFor);
    } else if (!allowMissingInitializer && kind === "const" && !(this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual("of")))) {
      this.unexpected();
    } else if (!allowMissingInitializer && decl.id.type !== "Identifier" && !(isFor && (this.type === types$1._in || this.isContextual("of")))) {
      this.raise(this.lastTokEnd, "Complex binding patterns require an initialization value");
    } else {
      decl.init = null;
    }
    node.declarations.push(this.finishNode(decl, "VariableDeclarator"));
    if (!this.eat(types$1.comma)) { break }
  }
  return node
};

pp$8.parseVarId = function(decl, kind) {
  decl.id = this.parseBindingAtom();
  this.checkLValPattern(decl.id, kind === "var" ? BIND_VAR : BIND_LEXICAL, false);
};

var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;

// Parse a function declaration or literal (depending on the
// `statement & FUNC_STATEMENT`).

// Remove `allowExpressionBody` for 7.0.0, as it is only called with false
pp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {
  this.initFunction(node);
  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {
    if (this.type === types$1.star && (statement & FUNC_HANGING_STATEMENT))
      { this.unexpected(); }
    node.generator = this.eat(types$1.star);
  }
  if (this.options.ecmaVersion >= 8)
    { node.async = !!isAsync; }

  if (statement & FUNC_STATEMENT) {
    node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types$1.name ? null : this.parseIdent();
    if (node.id && !(statement & FUNC_HANGING_STATEMENT))
      // If it is a regular function declaration in sloppy mode, then it is
      // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding
      // mode depends on properties of the current scope (see
      // treatFunctionsAsVar).
      { this.checkLValSimple(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }
  }

  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
  this.yieldPos = 0;
  this.awaitPos = 0;
  this.awaitIdentPos = 0;
  this.enterScope(functionFlags(node.async, node.generator));

  if (!(statement & FUNC_STATEMENT))
    { node.id = this.type === types$1.name ? this.parseIdent() : null; }

  this.parseFunctionParams(node);
  this.parseFunctionBody(node, allowExpressionBody, false, forInit);

  this.yieldPos = oldYieldPos;
  this.awaitPos = oldAwaitPos;
  this.awaitIdentPos = oldAwaitIdentPos;
  return this.finishNode(node, (statement & FUNC_STATEMENT) ? "FunctionDeclaration" : "FunctionExpression")
};

pp$8.parseFunctionParams = function(node) {
  this.expect(types$1.parenL);
  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);
  this.checkYieldAwaitInDefaultParams();
};

// Parse a class declaration or literal (depending on the
// `isStatement` parameter).

pp$8.parseClass = function(node, isStatement) {
  this.next();

  // ecma-262 14.6 Class Definitions
  // A class definition is always strict mode code.
  var oldStrict = this.strict;
  this.strict = true;

  this.parseClassId(node, isStatement);
  this.parseClassSuper(node);
  var privateNameMap = this.enterClassBody();
  var classBody = this.startNode();
  var hadConstructor = false;
  classBody.body = [];
  this.expect(types$1.braceL);
  while (this.type !== types$1.braceR) {
    var element = this.parseClassElement(node.superClass !== null);
    if (element) {
      classBody.body.push(element);
      if (element.type === "MethodDefinition" && element.kind === "constructor") {
        if (hadConstructor) { this.raiseRecoverable(element.start, "Duplicate constructor in the same class"); }
        hadConstructor = true;
      } else if (element.key && element.key.type === "PrivateIdentifier" && isPrivateNameConflicted(privateNameMap, element)) {
        this.raiseRecoverable(element.key.start, ("Identifier '#" + (element.key.name) + "' has already been declared"));
      }
    }
  }
  this.strict = oldStrict;
  this.next();
  node.body = this.finishNode(classBody, "ClassBody");
  this.exitClassBody();
  return this.finishNode(node, isStatement ? "ClassDeclaration" : "ClassExpression")
};

pp$8.parseClassElement = function(constructorAllowsSuper) {
  if (this.eat(types$1.semi)) { return null }

  var ecmaVersion = this.options.ecmaVersion;
  var node = this.startNode();
  var keyName = "";
  var isGenerator = false;
  var isAsync = false;
  var kind = "method";
  var isStatic = false;

  if (this.eatContextual("static")) {
    // Parse static init block
    if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {
      this.parseClassStaticBlock(node);
      return node
    }
    if (this.isClassElementNameStart() || this.type === types$1.star) {
      isStatic = true;
    } else {
      keyName = "static";
    }
  }
  node.static = isStatic;
  if (!keyName && ecmaVersion >= 8 && this.eatContextual("async")) {
    if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {
      isAsync = true;
    } else {
      keyName = "async";
    }
  }
  if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {
    isGenerator = true;
  }
  if (!keyName && !isAsync && !isGenerator) {
    var lastValue = this.value;
    if (this.eatContextual("get") || this.eatContextual("set")) {
      if (this.isClassElementNameStart()) {
        kind = lastValue;
      } else {
        keyName = lastValue;
      }
    }
  }

  // Parse element name
  if (keyName) {
    // 'async', 'get', 'set', or 'static' were not a keyword contextually.
    // The last token is any of those. Make it the element name.
    node.computed = false;
    node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);
    node.key.name = keyName;
    this.finishNode(node.key, "Identifier");
  } else {
    this.parseClassElementName(node);
  }

  // Parse element value
  if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== "method" || isGenerator || isAsync) {
    var isConstructor = !node.static && checkKeyName(node, "constructor");
    var allowsDirectSuper = isConstructor && constructorAllowsSuper;
    // Couldn't move this check into the 'parseClassMethod' method for backward compatibility.
    if (isConstructor && kind !== "method") { this.raise(node.key.start, "Constructor can't have get/set modifier"); }
    node.kind = isConstructor ? "constructor" : kind;
    this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);
  } else {
    this.parseClassField(node);
  }

  return node
};

pp$8.isClassElementNameStart = function() {
  return (
    this.type === types$1.name ||
    this.type === types$1.privateId ||
    this.type === types$1.num ||
    this.type === types$1.string ||
    this.type === types$1.bracketL ||
    this.type.keyword
  )
};

pp$8.parseClassElementName = function(element) {
  if (this.type === types$1.privateId) {
    if (this.value === "constructor") {
      this.raise(this.start, "Classes can't have an element named '#constructor'");
    }
    element.computed = false;
    element.key = this.parsePrivateIdent();
  } else {
    this.parsePropertyName(element);
  }
};

pp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {
  // Check key and flags
  var key = method.key;
  if (method.kind === "constructor") {
    if (isGenerator) { this.raise(key.start, "Constructor can't be a generator"); }
    if (isAsync) { this.raise(key.start, "Constructor can't be an async method"); }
  } else if (method.static && checkKeyName(method, "prototype")) {
    this.raise(key.start, "Classes may not have a static property named prototype");
  }

  // Parse value
  var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);

  // Check value
  if (method.kind === "get" && value.params.length !== 0)
    { this.raiseRecoverable(value.start, "getter should have no params"); }
  if (method.kind === "set" && value.params.length !== 1)
    { this.raiseRecoverable(value.start, "setter should have exactly one param"); }
  if (method.kind === "set" && value.params[0].type === "RestElement")
    { this.raiseRecoverable(value.params[0].start, "Setter cannot use rest params"); }

  return this.finishNode(method, "MethodDefinition")
};

pp$8.parseClassField = function(field) {
  if (checkKeyName(field, "constructor")) {
    this.raise(field.key.start, "Classes can't have a field named 'constructor'");
  } else if (field.static && checkKeyName(field, "prototype")) {
    this.raise(field.key.start, "Classes can't have a static field named 'prototype'");
  }

  if (this.eat(types$1.eq)) {
    // To raise SyntaxError if 'arguments' exists in the initializer.
    this.enterScope(SCOPE_CLASS_FIELD_INIT | SCOPE_SUPER);
    field.value = this.parseMaybeAssign();
    this.exitScope();
  } else {
    field.value = null;
  }
  this.semicolon();

  return this.finishNode(field, "PropertyDefinition")
};

pp$8.parseClassStaticBlock = function(node) {
  node.body = [];

  var oldLabels = this.labels;
  this.labels = [];
  this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);
  while (this.type !== types$1.braceR) {
    var stmt = this.parseStatement(null);
    node.body.push(stmt);
  }
  this.next();
  this.exitScope();
  this.labels = oldLabels;

  return this.finishNode(node, "StaticBlock")
};

pp$8.parseClassId = function(node, isStatement) {
  if (this.type === types$1.name) {
    node.id = this.parseIdent();
    if (isStatement)
      { this.checkLValSimple(node.id, BIND_LEXICAL, false); }
  } else {
    if (isStatement === true)
      { this.unexpected(); }
    node.id = null;
  }
};

pp$8.parseClassSuper = function(node) {
  node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(null, false) : null;
};

pp$8.enterClassBody = function() {
  var element = {declared: Object.create(null), used: []};
  this.privateNameStack.push(element);
  return element.declared
};

pp$8.exitClassBody = function() {
  var ref = this.privateNameStack.pop();
  var declared = ref.declared;
  var used = ref.used;
  if (!this.options.checkPrivateFields) { return }
  var len = this.privateNameStack.length;
  var parent = len === 0 ? null : this.privateNameStack[len - 1];
  for (var i = 0; i < used.length; ++i) {
    var id = used[i];
    if (!hasOwn(declared, id.name)) {
      if (parent) {
        parent.used.push(id);
      } else {
        this.raiseRecoverable(id.start, ("Private field '#" + (id.name) + "' must be declared in an enclosing class"));
      }
    }
  }
};

function isPrivateNameConflicted(privateNameMap, element) {
  var name = element.key.name;
  var curr = privateNameMap[name];

  var next = "true";
  if (element.type === "MethodDefinition" && (element.kind === "get" || element.kind === "set")) {
    next = (element.static ? "s" : "i") + element.kind;
  }

  // `class { get #a(){}; static set #a(_){} }` is also conflict.
  if (
    curr === "iget" && next === "iset" ||
    curr === "iset" && next === "iget" ||
    curr === "sget" && next === "sset" ||
    curr === "sset" && next === "sget"
  ) {
    privateNameMap[name] = "true";
    return false
  } else if (!curr) {
    privateNameMap[name] = next;
    return false
  } else {
    return true
  }
}

function checkKeyName(node, name) {
  var computed = node.computed;
  var key = node.key;
  return !computed && (
    key.type === "Identifier" && key.name === name ||
    key.type === "Literal" && key.value === name
  )
}

// Parses module export declaration.

pp$8.parseExportAllDeclaration = function(node, exports) {
  if (this.options.ecmaVersion >= 11) {
    if (this.eatContextual("as")) {
      node.exported = this.parseModuleExportName();
      this.checkExport(exports, node.exported, this.lastTokStart);
    } else {
      node.exported = null;
    }
  }
  this.expectContextual("from");
  if (this.type !== types$1.string) { this.unexpected(); }
  node.source = this.parseExprAtom();
  if (this.options.ecmaVersion >= 16)
    { node.attributes = this.parseWithClause(); }
  this.semicolon();
  return this.finishNode(node, "ExportAllDeclaration")
};

pp$8.parseExport = function(node, exports) {
  this.next();
  // export * from '...'
  if (this.eat(types$1.star)) {
    return this.parseExportAllDeclaration(node, exports)
  }
  if (this.eat(types$1._default)) { // export default ...
    this.checkExport(exports, "default", this.lastTokStart);
    node.declaration = this.parseExportDefaultDeclaration();
    return this.finishNode(node, "ExportDefaultDeclaration")
  }
  // export var|const|let|function|class ...
  if (this.shouldParseExportStatement()) {
    node.declaration = this.parseExportDeclaration(node);
    if (node.declaration.type === "VariableDeclaration")
      { this.checkVariableExport(exports, node.declaration.declarations); }
    else
      { this.checkExport(exports, node.declaration.id, node.declaration.id.start); }
    node.specifiers = [];
    node.source = null;
    if (this.options.ecmaVersion >= 16)
      { node.attributes = []; }
  } else { // export { x, y as z } [from '...']
    node.declaration = null;
    node.specifiers = this.parseExportSpecifiers(exports);
    if (this.eatContextual("from")) {
      if (this.type !== types$1.string) { this.unexpected(); }
      node.source = this.parseExprAtom();
      if (this.options.ecmaVersion >= 16)
        { node.attributes = this.parseWithClause(); }
    } else {
      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {
        // check for keywords used as local names
        var spec = list[i];

        this.checkUnreserved(spec.local);
        // check if export is defined
        this.checkLocalExport(spec.local);

        if (spec.local.type === "Literal") {
          this.raise(spec.local.start, "A string literal cannot be used as an exported binding without `from`.");
        }
      }

      node.source = null;
      if (this.options.ecmaVersion >= 16)
        { node.attributes = []; }
    }
    this.semicolon();
  }
  return this.finishNode(node, "ExportNamedDeclaration")
};

pp$8.parseExportDeclaration = function(node) {
  return this.parseStatement(null)
};

pp$8.parseExportDefaultDeclaration = function() {
  var isAsync;
  if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {
    var fNode = this.startNode();
    this.next();
    if (isAsync) { this.next(); }
    return this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync)
  } else if (this.type === types$1._class) {
    var cNode = this.startNode();
    return this.parseClass(cNode, "nullableID")
  } else {
    var declaration = this.parseMaybeAssign();
    this.semicolon();
    return declaration
  }
};

pp$8.checkExport = function(exports, name, pos) {
  if (!exports) { return }
  if (typeof name !== "string")
    { name = name.type === "Identifier" ? name.name : name.value; }
  if (hasOwn(exports, name))
    { this.raiseRecoverable(pos, "Duplicate export '" + name + "'"); }
  exports[name] = true;
};

pp$8.checkPatternExport = function(exports, pat) {
  var type = pat.type;
  if (type === "Identifier")
    { this.checkExport(exports, pat, pat.start); }
  else if (type === "ObjectPattern")
    { for (var i = 0, list = pat.properties; i < list.length; i += 1)
      {
        var prop = list[i];

        this.checkPatternExport(exports, prop);
      } }
  else if (type === "ArrayPattern")
    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {
      var elt = list$1[i$1];

        if (elt) { this.checkPatternExport(exports, elt); }
    } }
  else if (type === "Property")
    { this.checkPatternExport(exports, pat.value); }
  else if (type === "AssignmentPattern")
    { this.checkPatternExport(exports, pat.left); }
  else if (type === "RestElement")
    { this.checkPatternExport(exports, pat.argument); }
};

pp$8.checkVariableExport = function(exports, decls) {
  if (!exports) { return }
  for (var i = 0, list = decls; i < list.length; i += 1)
    {
    var decl = list[i];

    this.checkPatternExport(exports, decl.id);
  }
};

pp$8.shouldParseExportStatement = function() {
  return this.type.keyword === "var" ||
    this.type.keyword === "const" ||
    this.type.keyword === "class" ||
    this.type.keyword === "function" ||
    this.isLet() ||
    this.isAsyncFunction()
};

// Parses a comma-separated list of module exports.

pp$8.parseExportSpecifier = function(exports) {
  var node = this.startNode();
  node.local = this.parseModuleExportName();

  node.exported = this.eatContextual("as") ? this.parseModuleExportName() : node.local;
  this.checkExport(
    exports,
    node.exported,
    node.exported.start
  );

  return this.finishNode(node, "ExportSpecifier")
};

pp$8.parseExportSpecifiers = function(exports) {
  var nodes = [], first = true;
  // export { x, y as z } [from '...']
  this.expect(types$1.braceL);
  while (!this.eat(types$1.braceR)) {
    if (!first) {
      this.expect(types$1.comma);
      if (this.afterTrailingComma(types$1.braceR)) { break }
    } else { first = false; }

    nodes.push(this.parseExportSpecifier(exports));
  }
  return nodes
};

// Parses import declaration.

pp$8.parseImport = function(node) {
  this.next();

  // import '...'
  if (this.type === types$1.string) {
    node.specifiers = empty$1;
    node.source = this.parseExprAtom();
  } else {
    node.specifiers = this.parseImportSpecifiers();
    this.expectContextual("from");
    node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();
  }
  if (this.options.ecmaVersion >= 16)
    { node.attributes = this.parseWithClause(); }
  this.semicolon();
  return this.finishNode(node, "ImportDeclaration")
};

// Parses a comma-separated list of module imports.

pp$8.parseImportSpecifier = function() {
  var node = this.startNode();
  node.imported = this.parseModuleExportName();

  if (this.eatContextual("as")) {
    node.local = this.parseIdent();
  } else {
    this.checkUnreserved(node.imported);
    node.local = node.imported;
  }
  this.checkLValSimple(node.local, BIND_LEXICAL);

  return this.finishNode(node, "ImportSpecifier")
};

pp$8.parseImportDefaultSpecifier = function() {
  // import defaultObj, { x, y as z } from '...'
  var node = this.startNode();
  node.local = this.parseIdent();
  this.checkLValSimple(node.local, BIND_LEXICAL);
  return this.finishNode(node, "ImportDefaultSpecifier")
};

pp$8.parseImportNamespaceSpecifier = function() {
  var node = this.startNode();
  this.next();
  this.expectContextual("as");
  node.local = this.parseIdent();
  this.checkLValSimple(node.local, BIND_LEXICAL);
  return this.finishNode(node, "ImportNamespaceSpecifier")
};

pp$8.parseImportSpecifiers = function() {
  var nodes = [], first = true;
  if (this.type === types$1.name) {
    nodes.push(this.parseImportDefaultSpecifier());
    if (!this.eat(types$1.comma)) { return nodes }
  }
  if (this.type === types$1.star) {
    nodes.push(this.parseImportNamespaceSpecifier());
    return nodes
  }
  this.expect(types$1.braceL);
  while (!this.eat(types$1.braceR)) {
    if (!first) {
      this.expect(types$1.comma);
      if (this.afterTrailingComma(types$1.braceR)) { break }
    } else { first = false; }

    nodes.push(this.parseImportSpecifier());
  }
  return nodes
};

pp$8.parseWithClause = function() {
  var nodes = [];
  if (!this.eat(types$1._with)) {
    return nodes
  }
  this.expect(types$1.braceL);
  var attributeKeys = {};
  var first = true;
  while (!this.eat(types$1.braceR)) {
    if (!first) {
      this.expect(types$1.comma);
      if (this.afterTrailingComma(types$1.braceR)) { break }
    } else { first = false; }

    var attr = this.parseImportAttribute();
    var keyName = attr.key.type === "Identifier" ? attr.key.name : attr.key.value;
    if (hasOwn(attributeKeys, keyName))
      { this.raiseRecoverable(attr.key.start, "Duplicate attribute key '" + keyName + "'"); }
    attributeKeys[keyName] = true;
    nodes.push(attr);
  }
  return nodes
};

pp$8.parseImportAttribute = function() {
  var node = this.startNode();
  node.key = this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never");
  this.expect(types$1.colon);
  if (this.type !== types$1.string) {
    this.unexpected();
  }
  node.value = this.parseExprAtom();
  return this.finishNode(node, "ImportAttribute")
};

pp$8.parseModuleExportName = function() {
  if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {
    var stringLiteral = this.parseLiteral(this.value);
    if (loneSurrogate.test(stringLiteral.value)) {
      this.raise(stringLiteral.start, "An export name cannot include a lone surrogate.");
    }
    return stringLiteral
  }
  return this.parseIdent(true)
};

// Set `ExpressionStatement#directive` property for directive prologues.
pp$8.adaptDirectivePrologue = function(statements) {
  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {
    statements[i].directive = statements[i].expression.raw.slice(1, -1);
  }
};
pp$8.isDirectiveCandidate = function(statement) {
  return (
    this.options.ecmaVersion >= 5 &&
    statement.type === "ExpressionStatement" &&
    statement.expression.type === "Literal" &&
    typeof statement.expression.value === "string" &&
    // Reject parenthesized strings.
    (this.input[statement.start] === "\"" || this.input[statement.start] === "'")
  )
};

var pp$7 = Parser.prototype;

// Convert existing expression atom to assignable pattern
// if possible.

pp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {
  if (this.options.ecmaVersion >= 6 && node) {
    switch (node.type) {
    case "Identifier":
      if (this.inAsync && node.name === "await")
        { this.raise(node.start, "Cannot use 'await' as identifier inside an async function"); }
      break

    case "ObjectPattern":
    case "ArrayPattern":
    case "AssignmentPattern":
    case "RestElement":
      break

    case "ObjectExpression":
      node.type = "ObjectPattern";
      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }
      for (var i = 0, list = node.properties; i < list.length; i += 1) {
        var prop = list[i];

      this.toAssignable(prop, isBinding);
        // Early error:
        //   AssignmentRestProperty[Yield, Await] :
        //     `...` DestructuringAssignmentTarget[Yield, Await]
        //
        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.
        if (
          prop.type === "RestElement" &&
          (prop.argument.type === "ArrayPattern" || prop.argument.type === "ObjectPattern")
        ) {
          this.raise(prop.argument.start, "Unexpected token");
        }
      }
      break

    case "Property":
      // AssignmentProperty has type === "Property"
      if (node.kind !== "init") { this.raise(node.key.start, "Object pattern can't contain getter or setter"); }
      this.toAssignable(node.value, isBinding);
      break

    case "ArrayExpression":
      node.type = "ArrayPattern";
      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }
      this.toAssignableList(node.elements, isBinding);
      break

    case "SpreadElement":
      node.type = "RestElement";
      this.toAssignable(node.argument, isBinding);
      if (node.argument.type === "AssignmentPattern")
        { this.raise(node.argument.start, "Rest elements cannot have a default value"); }
      break

    case "AssignmentExpression":
      if (node.operator !== "=") { this.raise(node.left.end, "Only '=' operator can be used for specifying default value."); }
      node.type = "AssignmentPattern";
      delete node.operator;
      this.toAssignable(node.left, isBinding);
      break

    case "ParenthesizedExpression":
      this.toAssignable(node.expression, isBinding, refDestructuringErrors);
      break

    case "ChainExpression":
      this.raiseRecoverable(node.start, "Optional chaining cannot appear in left-hand side");
      break

    case "MemberExpression":
      if (!isBinding) { break }

    default:
      this.raise(node.start, "Assigning to rvalue");
    }
  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }
  return node
};

// Convert list of expression atoms to binding list.

pp$7.toAssignableList = function(exprList, isBinding) {
  var end = exprList.length;
  for (var i = 0; i < end; i++) {
    var elt = exprList[i];
    if (elt) { this.toAssignable(elt, isBinding); }
  }
  if (end) {
    var last = exprList[end - 1];
    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === "RestElement" && last.argument.type !== "Identifier")
      { this.unexpected(last.argument.start); }
  }
  return exprList
};

// Parses spread element.

pp$7.parseSpread = function(refDestructuringErrors) {
  var node = this.startNode();
  this.next();
  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);
  return this.finishNode(node, "SpreadElement")
};

pp$7.parseRestBinding = function() {
  var node = this.startNode();
  this.next();

  // RestElement inside of a function parameter must be an identifier
  if (this.options.ecmaVersion === 6 && this.type !== types$1.name)
    { this.unexpected(); }

  node.argument = this.parseBindingAtom();

  return this.finishNode(node, "RestElement")
};

// Parses lvalue (assignable) atom.

pp$7.parseBindingAtom = function() {
  if (this.options.ecmaVersion >= 6) {
    switch (this.type) {
    case types$1.bracketL:
      var node = this.startNode();
      this.next();
      node.elements = this.parseBindingList(types$1.bracketR, true, true);
      return this.finishNode(node, "ArrayPattern")

    case types$1.braceL:
      return this.parseObj(true)
    }
  }
  return this.parseIdent()
};

pp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma, allowModifiers) {
  var elts = [], first = true;
  while (!this.eat(close)) {
    if (first) { first = false; }
    else { this.expect(types$1.comma); }
    if (allowEmpty && this.type === types$1.comma) {
      elts.push(null);
    } else if (allowTrailingComma && this.afterTrailingComma(close)) {
      break
    } else if (this.type === types$1.ellipsis) {
      var rest = this.parseRestBinding();
      this.parseBindingListItem(rest);
      elts.push(rest);
      if (this.type === types$1.comma) { this.raiseRecoverable(this.start, "Comma is not permitted after the rest element"); }
      this.expect(close);
      break
    } else {
      elts.push(this.parseAssignableListItem(allowModifiers));
    }
  }
  return elts
};

pp$7.parseAssignableListItem = function(allowModifiers) {
  var elem = this.parseMaybeDefault(this.start, this.startLoc);
  this.parseBindingListItem(elem);
  return elem
};

pp$7.parseBindingListItem = function(param) {
  return param
};

// Parses assignment pattern around given atom if possible.

pp$7.parseMaybeDefault = function(startPos, startLoc, left) {
  left = left || this.parseBindingAtom();
  if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) { return left }
  var node = this.startNodeAt(startPos, startLoc);
  node.left = left;
  node.right = this.parseMaybeAssign();
  return this.finishNode(node, "AssignmentPattern")
};

// The following three functions all verify that a node is an lvalue —
// something that can be bound, or assigned to. In order to do so, they perform
// a variety of checks:
//
// - Check that none of the bound/assigned-to identifiers are reserved words.
// - Record name declarations for bindings in the appropriate scope.
// - Check duplicate argument names, if checkClashes is set.
//
// If a complex binding pattern is encountered (e.g., object and array
// destructuring), the entire pattern is recursively checked.
//
// There are three versions of checkLVal*() appropriate for different
// circumstances:
//
// - checkLValSimple() shall be used if the syntactic construct supports
//   nothing other than identifiers and member expressions. Parenthesized
//   expressions are also correctly handled. This is generally appropriate for
//   constructs for which the spec says
//
//   > It is a Syntax Error if AssignmentTargetType of [the production] is not
//   > simple.
//
//   It is also appropriate for checking if an identifier is valid and not
//   defined elsewhere, like import declarations or function/class identifiers.
//
//   Examples where this is used include:
//     a += …;
//     import a from '…';
//   where a is the node to be checked.
//
// - checkLValPattern() shall be used if the syntactic construct supports
//   anything checkLValSimple() supports, as well as object and array
//   destructuring patterns. This is generally appropriate for constructs for
//   which the spec says
//
//   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor
//   > an ArrayLiteral and AssignmentTargetType of [the production] is not
//   > simple.
//
//   Examples where this is used include:
//     (a = …);
//     const a = …;
//     try { … } catch (a) { … }
//   where a is the node to be checked.
//
// - checkLValInnerPattern() shall be used if the syntactic construct supports
//   anything checkLValPattern() supports, as well as default assignment
//   patterns, rest elements, and other constructs that may appear within an
//   object or array destructuring pattern.
//
//   As a special case, function parameters also use checkLValInnerPattern(),
//   as they also support defaults and rest constructs.
//
// These functions deliberately support both assignment and binding constructs,
// as the logic for both is exceedingly similar. If the node is the target of
// an assignment, then bindingType should be set to BIND_NONE. Otherwise, it
// should be set to the appropriate BIND_* constant, like BIND_VAR or
// BIND_LEXICAL.
//
// If the function is called with a non-BIND_NONE bindingType, then
// additionally a checkClashes object may be specified to allow checking for
// duplicate argument names. checkClashes is ignored if the provided construct
// is an assignment (i.e., bindingType is BIND_NONE).

pp$7.checkLValSimple = function(expr, bindingType, checkClashes) {
  if ( bindingType === void 0 ) bindingType = BIND_NONE;

  var isBind = bindingType !== BIND_NONE;

  switch (expr.type) {
  case "Identifier":
    if (this.strict && this.reservedWordsStrictBind.test(expr.name))
      { this.raiseRecoverable(expr.start, (isBind ? "Binding " : "Assigning to ") + expr.name + " in strict mode"); }
    if (isBind) {
      if (bindingType === BIND_LEXICAL && expr.name === "let")
        { this.raiseRecoverable(expr.start, "let is disallowed as a lexically bound name"); }
      if (checkClashes) {
        if (hasOwn(checkClashes, expr.name))
          { this.raiseRecoverable(expr.start, "Argument name clash"); }
        checkClashes[expr.name] = true;
      }
      if (bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }
    }
    break

  case "ChainExpression":
    this.raiseRecoverable(expr.start, "Optional chaining cannot appear in left-hand side");
    break

  case "MemberExpression":
    if (isBind) { this.raiseRecoverable(expr.start, "Binding member expression"); }
    break

  case "ParenthesizedExpression":
    if (isBind) { this.raiseRecoverable(expr.start, "Binding parenthesized expression"); }
    return this.checkLValSimple(expr.expression, bindingType, checkClashes)

  default:
    this.raise(expr.start, (isBind ? "Binding" : "Assigning to") + " rvalue");
  }
};

pp$7.checkLValPattern = function(expr, bindingType, checkClashes) {
  if ( bindingType === void 0 ) bindingType = BIND_NONE;

  switch (expr.type) {
  case "ObjectPattern":
    for (var i = 0, list = expr.properties; i < list.length; i += 1) {
      var prop = list[i];

    this.checkLValInnerPattern(prop, bindingType, checkClashes);
    }
    break

  case "ArrayPattern":
    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {
      var elem = list$1[i$1];

    if (elem) { this.checkLValInnerPattern(elem, bindingType, checkClashes); }
    }
    break

  default:
    this.checkLValSimple(expr, bindingType, checkClashes);
  }
};

pp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {
  if ( bindingType === void 0 ) bindingType = BIND_NONE;

  switch (expr.type) {
  case "Property":
    // AssignmentProperty has type === "Property"
    this.checkLValInnerPattern(expr.value, bindingType, checkClashes);
    break

  case "AssignmentPattern":
    this.checkLValPattern(expr.left, bindingType, checkClashes);
    break

  case "RestElement":
    this.checkLValPattern(expr.argument, bindingType, checkClashes);
    break

  default:
    this.checkLValPattern(expr, bindingType, checkClashes);
  }
};

// The algorithm used to determine whether a regexp can appear at a
// given point in the program is loosely based on sweet.js' approach.
// See https://github.com/mozilla/sweet.js/wiki/design


var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {
  this.token = token;
  this.isExpr = !!isExpr;
  this.preserveSpace = !!preserveSpace;
  this.override = override;
  this.generator = !!generator;
};

var types$2 = {
  b_stat: new TokContext("{", false),
  b_expr: new TokContext("{", true),
  b_tmpl: new TokContext("${", false),
  p_stat: new TokContext("(", false),
  p_expr: new TokContext("(", true),
  q_tmpl: new TokContext("`", true, true, function (p) { return p.tryReadTemplateToken(); }),
  f_stat: new TokContext("function", false),
  f_expr: new TokContext("function", true),
  f_expr_gen: new TokContext("function", true, false, null, true),
  f_gen: new TokContext("function", false, false, null, true)
};

var pp$6 = Parser.prototype;

pp$6.initialContext = function() {
  return [types$2.b_stat]
};

pp$6.curContext = function() {
  return this.context[this.context.length - 1]
};

pp$6.braceIsBlock = function(prevType) {
  var parent = this.curContext();
  if (parent === types$2.f_expr || parent === types$2.f_stat)
    { return true }
  if (prevType === types$1.colon && (parent === types$2.b_stat || parent === types$2.b_expr))
    { return !parent.isExpr }

  // The check for `tt.name && exprAllowed` detects whether we are
  // after a `yield` or `of` construct. See the `updateContext` for
  // `tt.name`.
  if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed)
    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }
  if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow)
    { return true }
  if (prevType === types$1.braceL)
    { return parent === types$2.b_stat }
  if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name)
    { return false }
  return !this.exprAllowed
};

pp$6.inGeneratorContext = function() {
  for (var i = this.context.length - 1; i >= 1; i--) {
    var context = this.context[i];
    if (context.token === "function")
      { return context.generator }
  }
  return false
};

pp$6.updateContext = function(prevType) {
  var update, type = this.type;
  if (type.keyword && prevType === types$1.dot)
    { this.exprAllowed = false; }
  else if (update = type.updateContext)
    { update.call(this, prevType); }
  else
    { this.exprAllowed = type.beforeExpr; }
};

// Used to handle edge cases when token context could not be inferred correctly during tokenization phase

pp$6.overrideContext = function(tokenCtx) {
  if (this.curContext() !== tokenCtx) {
    this.context[this.context.length - 1] = tokenCtx;
  }
};

// Token-specific context update code

types$1.parenR.updateContext = types$1.braceR.updateContext = function() {
  if (this.context.length === 1) {
    this.exprAllowed = true;
    return
  }
  var out = this.context.pop();
  if (out === types$2.b_stat && this.curContext().token === "function") {
    out = this.context.pop();
  }
  this.exprAllowed = !out.isExpr;
};

types$1.braceL.updateContext = function(prevType) {
  this.context.push(this.braceIsBlock(prevType) ? types$2.b_stat : types$2.b_expr);
  this.exprAllowed = true;
};

types$1.dollarBraceL.updateContext = function() {
  this.context.push(types$2.b_tmpl);
  this.exprAllowed = true;
};

types$1.parenL.updateContext = function(prevType) {
  var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;
  this.context.push(statementParens ? types$2.p_stat : types$2.p_expr);
  this.exprAllowed = true;
};

types$1.incDec.updateContext = function() {
  // tokExprAllowed stays unchanged
};

types$1._function.updateContext = types$1._class.updateContext = function(prevType) {
  if (prevType.beforeExpr && prevType !== types$1._else &&
      !(prevType === types$1.semi && this.curContext() !== types$2.p_stat) &&
      !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&
      !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types$2.b_stat))
    { this.context.push(types$2.f_expr); }
  else
    { this.context.push(types$2.f_stat); }
  this.exprAllowed = false;
};

types$1.colon.updateContext = function() {
  if (this.curContext().token === "function") { this.context.pop(); }
  this.exprAllowed = true;
};

types$1.backQuote.updateContext = function() {
  if (this.curContext() === types$2.q_tmpl)
    { this.context.pop(); }
  else
    { this.context.push(types$2.q_tmpl); }
  this.exprAllowed = false;
};

types$1.star.updateContext = function(prevType) {
  if (prevType === types$1._function) {
    var index = this.context.length - 1;
    if (this.context[index] === types$2.f_expr)
      { this.context[index] = types$2.f_expr_gen; }
    else
      { this.context[index] = types$2.f_gen; }
  }
  this.exprAllowed = true;
};

types$1.name.updateContext = function(prevType) {
  var allowed = false;
  if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {
    if (this.value === "of" && !this.exprAllowed ||
        this.value === "yield" && this.inGeneratorContext())
      { allowed = true; }
  }
  this.exprAllowed = allowed;
};

// A recursive descent parser operates by defining functions for all
// syntactic elements, and recursively calling those, each function
// advancing the input stream and returning an AST node. Precedence
// of constructs (for example, the fact that `!x[1]` means `!(x[1])`
// instead of `(!x)[1]` is handled by the fact that the parser
// function that parses unary prefix operators is called first, and
// in turn calls the function that parses `[]` subscripts — that
// way, it'll receive the node for `x[1]` already parsed, and wraps
// *that* in the unary operator node.
//
// Acorn uses an [operator precedence parser][opp] to handle binary
// operator precedence, because it is much more compact than using
// the technique outlined above, which uses different, nesting
// functions to specify precedence, for all of the ten binary
// precedence levels that JavaScript defines.
//
// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser


var pp$5 = Parser.prototype;

// Check if property name clashes with already added.
// Object/class getters and setters are not allowed to clash —
// either with each other or with an init property — and in
// strict mode, init properties are also not allowed to be repeated.

pp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {
  if (this.options.ecmaVersion >= 9 && prop.type === "SpreadElement")
    { return }
  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))
    { return }
  var key = prop.key;
  var name;
  switch (key.type) {
  case "Identifier": name = key.name; break
  case "Literal": name = String(key.value); break
  default: return
  }
  var kind = prop.kind;
  if (this.options.ecmaVersion >= 6) {
    if (name === "__proto__" && kind === "init") {
      if (propHash.proto) {
        if (refDestructuringErrors) {
          if (refDestructuringErrors.doubleProto < 0) {
            refDestructuringErrors.doubleProto = key.start;
          }
        } else {
          this.raiseRecoverable(key.start, "Redefinition of __proto__ property");
        }
      }
      propHash.proto = true;
    }
    return
  }
  name = "$" + name;
  var other = propHash[name];
  if (other) {
    var redefinition;
    if (kind === "init") {
      redefinition = this.strict && other.init || other.get || other.set;
    } else {
      redefinition = other.init || other[kind];
    }
    if (redefinition)
      { this.raiseRecoverable(key.start, "Redefinition of property"); }
  } else {
    other = propHash[name] = {
      init: false,
      get: false,
      set: false
    };
  }
  other[kind] = true;
};

// ### Expression parsing

// These nest, from the most general expression type at the top to
// 'atomic', nondivisible expression types at the bottom. Most of
// the functions will simply let the function(s) below them parse,
// and, *if* the syntactic construct they handle is present, wrap
// the AST node that the inner parser gave them in another node.

// Parse a full expression. The optional arguments are used to
// forbid the `in` operator (in for loops initalization expressions)
// and provide reference for storing '=' operator inside shorthand
// property assignment in contexts where both object expression
// and object pattern might appear (so it's possible to raise
// delayed syntax error at correct position).

pp$5.parseExpression = function(forInit, refDestructuringErrors) {
  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);
  if (this.type === types$1.comma) {
    var node = this.startNodeAt(startPos, startLoc);
    node.expressions = [expr];
    while (this.eat(types$1.comma)) { node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors)); }
    return this.finishNode(node, "SequenceExpression")
  }
  return expr
};

// Parse an assignment expression. This includes applications of
// operators like `+=`.

pp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {
  if (this.isContextual("yield")) {
    if (this.inGenerator) { return this.parseYield(forInit) }
    // The tokenizer will assume an expression is allowed after
    // `yield`, but this isn't that kind of yield
    else { this.exprAllowed = false; }
  }

  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;
  if (refDestructuringErrors) {
    oldParenAssign = refDestructuringErrors.parenthesizedAssign;
    oldTrailingComma = refDestructuringErrors.trailingComma;
    oldDoubleProto = refDestructuringErrors.doubleProto;
    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;
  } else {
    refDestructuringErrors = new DestructuringErrors;
    ownDestructuringErrors = true;
  }

  var startPos = this.start, startLoc = this.startLoc;
  if (this.type === types$1.parenL || this.type === types$1.name) {
    this.potentialArrowAt = this.start;
    this.potentialArrowInForAwait = forInit === "await";
  }
  var left = this.parseMaybeConditional(forInit, refDestructuringErrors);
  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }
  if (this.type.isAssign) {
    var node = this.startNodeAt(startPos, startLoc);
    node.operator = this.value;
    if (this.type === types$1.eq)
      { left = this.toAssignable(left, false, refDestructuringErrors); }
    if (!ownDestructuringErrors) {
      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;
    }
    if (refDestructuringErrors.shorthandAssign >= left.start)
      { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly
    if (this.type === types$1.eq)
      { this.checkLValPattern(left); }
    else
      { this.checkLValSimple(left); }
    node.left = left;
    this.next();
    node.right = this.parseMaybeAssign(forInit);
    if (oldDoubleProto > -1) { refDestructuringErrors.doubleProto = oldDoubleProto; }
    return this.finishNode(node, "AssignmentExpression")
  } else {
    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }
  }
  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }
  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }
  return left
};

// Parse a ternary conditional (`?:`) operator.

pp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {
  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseExprOps(forInit, refDestructuringErrors);
  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }
  if (this.eat(types$1.question)) {
    var node = this.startNodeAt(startPos, startLoc);
    node.test = expr;
    node.consequent = this.parseMaybeAssign();
    this.expect(types$1.colon);
    node.alternate = this.parseMaybeAssign(forInit);
    return this.finishNode(node, "ConditionalExpression")
  }
  return expr
};

// Start the precedence parser.

pp$5.parseExprOps = function(forInit, refDestructuringErrors) {
  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);
  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }
  return expr.start === startPos && expr.type === "ArrowFunctionExpression" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit)
};

// Parse binary operators with the operator precedence parsing
// algorithm. `left` is the left-hand side of the operator.
// `minPrec` provides context that allows the function to stop and
// defer further parser to one of its callers when it encounters an
// operator that has a lower precedence than the set it is parsing.

pp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {
  var prec = this.type.binop;
  if (prec != null && (!forInit || this.type !== types$1._in)) {
    if (prec > minPrec) {
      var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;
      var coalesce = this.type === types$1.coalesce;
      if (coalesce) {
        // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.
        // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.
        prec = types$1.logicalAND.binop;
      }
      var op = this.value;
      this.next();
      var startPos = this.start, startLoc = this.startLoc;
      var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);
      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);
      if ((logical && this.type === types$1.coalesce) || (coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND))) {
        this.raiseRecoverable(this.start, "Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses");
      }
      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit)
    }
  }
  return left
};

pp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {
  if (right.type === "PrivateIdentifier") { this.raise(right.start, "Private identifier can only be left side of binary expression"); }
  var node = this.startNodeAt(startPos, startLoc);
  node.left = left;
  node.operator = op;
  node.right = right;
  return this.finishNode(node, logical ? "LogicalExpression" : "BinaryExpression")
};

// Parse unary operators, both prefix and postfix.

pp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {
  var startPos = this.start, startLoc = this.startLoc, expr;
  if (this.isContextual("await") && this.canAwait) {
    expr = this.parseAwait(forInit);
    sawUnary = true;
  } else if (this.type.prefix) {
    var node = this.startNode(), update = this.type === types$1.incDec;
    node.operator = this.value;
    node.prefix = true;
    this.next();
    node.argument = this.parseMaybeUnary(null, true, update, forInit);
    this.checkExpressionErrors(refDestructuringErrors, true);
    if (update) { this.checkLValSimple(node.argument); }
    else if (this.strict && node.operator === "delete" && isLocalVariableAccess(node.argument))
      { this.raiseRecoverable(node.start, "Deleting local variable in strict mode"); }
    else if (node.operator === "delete" && isPrivateFieldAccess(node.argument))
      { this.raiseRecoverable(node.start, "Private fields can not be deleted"); }
    else { sawUnary = true; }
    expr = this.finishNode(node, update ? "UpdateExpression" : "UnaryExpression");
  } else if (!sawUnary && this.type === types$1.privateId) {
    if ((forInit || this.privateNameStack.length === 0) && this.options.checkPrivateFields) { this.unexpected(); }
    expr = this.parsePrivateIdent();
    // only could be private fields in 'in', such as #x in obj
    if (this.type !== types$1._in) { this.unexpected(); }
  } else {
    expr = this.parseExprSubscripts(refDestructuringErrors, forInit);
    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }
    while (this.type.postfix && !this.canInsertSemicolon()) {
      var node$1 = this.startNodeAt(startPos, startLoc);
      node$1.operator = this.value;
      node$1.prefix = false;
      node$1.argument = expr;
      this.checkLValSimple(expr);
      this.next();
      expr = this.finishNode(node$1, "UpdateExpression");
    }
  }

  if (!incDec && this.eat(types$1.starstar)) {
    if (sawUnary)
      { this.unexpected(this.lastTokStart); }
    else
      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), "**", false) }
  } else {
    return expr
  }
};

function isLocalVariableAccess(node) {
  return (
    node.type === "Identifier" ||
    node.type === "ParenthesizedExpression" && isLocalVariableAccess(node.expression)
  )
}

function isPrivateFieldAccess(node) {
  return (
    node.type === "MemberExpression" && node.property.type === "PrivateIdentifier" ||
    node.type === "ChainExpression" && isPrivateFieldAccess(node.expression) ||
    node.type === "ParenthesizedExpression" && isPrivateFieldAccess(node.expression)
  )
}

// Parse call, dot, and `[]`-subscript expressions.

pp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {
  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseExprAtom(refDestructuringErrors, forInit);
  if (expr.type === "ArrowFunctionExpression" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== ")")
    { return expr }
  var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);
  if (refDestructuringErrors && result.type === "MemberExpression") {
    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }
    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }
    if (refDestructuringErrors.trailingComma >= result.start) { refDestructuringErrors.trailingComma = -1; }
  }
  return result
};

pp$5.parseSubscripts = function(base, startPos, startLoc, noCalls, forInit) {
  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === "Identifier" && base.name === "async" &&
      this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&
      this.potentialArrowAt === base.start;
  var optionalChained = false;

  while (true) {
    var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);

    if (element.optional) { optionalChained = true; }
    if (element === base || element.type === "ArrowFunctionExpression") {
      if (optionalChained) {
        var chainNode = this.startNodeAt(startPos, startLoc);
        chainNode.expression = element;
        element = this.finishNode(chainNode, "ChainExpression");
      }
      return element
    }

    base = element;
  }
};

pp$5.shouldParseAsyncArrow = function() {
  return !this.canInsertSemicolon() && this.eat(types$1.arrow)
};

pp$5.parseSubscriptAsyncArrow = function(startPos, startLoc, exprList, forInit) {
  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit)
};

pp$5.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {
  var optionalSupported = this.options.ecmaVersion >= 11;
  var optional = optionalSupported && this.eat(types$1.questionDot);
  if (noCalls && optional) { this.raise(this.lastTokStart, "Optional chaining cannot appear in the callee of new expressions"); }

  var computed = this.eat(types$1.bracketL);
  if (computed || (optional && this.type !== types$1.parenL && this.type !== types$1.backQuote) || this.eat(types$1.dot)) {
    var node = this.startNodeAt(startPos, startLoc);
    node.object = base;
    if (computed) {
      node.property = this.parseExpression();
      this.expect(types$1.bracketR);
    } else if (this.type === types$1.privateId && base.type !== "Super") {
      node.property = this.parsePrivateIdent();
    } else {
      node.property = this.parseIdent(this.options.allowReserved !== "never");
    }
    node.computed = !!computed;
    if (optionalSupported) {
      node.optional = optional;
    }
    base = this.finishNode(node, "MemberExpression");
  } else if (!noCalls && this.eat(types$1.parenL)) {
    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
    this.yieldPos = 0;
    this.awaitPos = 0;
    this.awaitIdentPos = 0;
    var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);
    if (maybeAsyncArrow && !optional && this.shouldParseAsyncArrow()) {
      this.checkPatternErrors(refDestructuringErrors, false);
      this.checkYieldAwaitInDefaultParams();
      if (this.awaitIdentPos > 0)
        { this.raise(this.awaitIdentPos, "Cannot use 'await' as identifier inside an async function"); }
      this.yieldPos = oldYieldPos;
      this.awaitPos = oldAwaitPos;
      this.awaitIdentPos = oldAwaitIdentPos;
      return this.parseSubscriptAsyncArrow(startPos, startLoc, exprList, forInit)
    }
    this.checkExpressionErrors(refDestructuringErrors, true);
    this.yieldPos = oldYieldPos || this.yieldPos;
    this.awaitPos = oldAwaitPos || this.awaitPos;
    this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;
    var node$1 = this.startNodeAt(startPos, startLoc);
    node$1.callee = base;
    node$1.arguments = exprList;
    if (optionalSupported) {
      node$1.optional = optional;
    }
    base = this.finishNode(node$1, "CallExpression");
  } else if (this.type === types$1.backQuote) {
    if (optional || optionalChained) {
      this.raise(this.start, "Optional chaining cannot appear in the tag of tagged template expressions");
    }
    var node$2 = this.startNodeAt(startPos, startLoc);
    node$2.tag = base;
    node$2.quasi = this.parseTemplate({isTagged: true});
    base = this.finishNode(node$2, "TaggedTemplateExpression");
  }
  return base
};

// Parse an atomic expression — either a single token that is an
// expression, an expression started by a keyword like `function` or
// `new`, or an expression wrapped in punctuation like `()`, `[]`,
// or `{}`.

pp$5.parseExprAtom = function(refDestructuringErrors, forInit, forNew) {
  // If a division operator appears in an expression position, the
  // tokenizer got confused, and we force it to read a regexp instead.
  if (this.type === types$1.slash) { this.readRegexp(); }

  var node, canBeArrow = this.potentialArrowAt === this.start;
  switch (this.type) {
  case types$1._super:
    if (!this.allowSuper)
      { this.raise(this.start, "'super' keyword outside a method"); }
    node = this.startNode();
    this.next();
    if (this.type === types$1.parenL && !this.allowDirectSuper)
      { this.raise(node.start, "super() call outside constructor of a subclass"); }
    // The `super` keyword can appear at below:
    // SuperProperty:
    //     super [ Expression ]
    //     super . IdentifierName
    // SuperCall:
    //     super ( Arguments )
    if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL)
      { this.unexpected(); }
    return this.finishNode(node, "Super")

  case types$1._this:
    node = this.startNode();
    this.next();
    return this.finishNode(node, "ThisExpression")

  case types$1.name:
    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;
    var id = this.parseIdent(false);
    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === "async" && !this.canInsertSemicolon() && this.eat(types$1._function)) {
      this.overrideContext(types$2.f_expr);
      return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit)
    }
    if (canBeArrow && !this.canInsertSemicolon()) {
      if (this.eat(types$1.arrow))
        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false, forInit) }
      if (this.options.ecmaVersion >= 8 && id.name === "async" && this.type === types$1.name && !containsEsc &&
          (!this.potentialArrowInForAwait || this.value !== "of" || this.containsEsc)) {
        id = this.parseIdent(false);
        if (this.canInsertSemicolon() || !this.eat(types$1.arrow))
          { this.unexpected(); }
        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true, forInit)
      }
    }
    return id

  case types$1.regexp:
    var value = this.value;
    node = this.parseLiteral(value.value);
    node.regex = {pattern: value.pattern, flags: value.flags};
    return node

  case types$1.num: case types$1.string:
    return this.parseLiteral(this.value)

  case types$1._null: case types$1._true: case types$1._false:
    node = this.startNode();
    node.value = this.type === types$1._null ? null : this.type === types$1._true;
    node.raw = this.type.keyword;
    this.next();
    return this.finishNode(node, "Literal")

  case types$1.parenL:
    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);
    if (refDestructuringErrors) {
      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))
        { refDestructuringErrors.parenthesizedAssign = start; }
      if (refDestructuringErrors.parenthesizedBind < 0)
        { refDestructuringErrors.parenthesizedBind = start; }
    }
    return expr

  case types$1.bracketL:
    node = this.startNode();
    this.next();
    node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);
    return this.finishNode(node, "ArrayExpression")

  case types$1.braceL:
    this.overrideContext(types$2.b_expr);
    return this.parseObj(false, refDestructuringErrors)

  case types$1._function:
    node = this.startNode();
    this.next();
    return this.parseFunction(node, 0)

  case types$1._class:
    return this.parseClass(this.startNode(), false)

  case types$1._new:
    return this.parseNew()

  case types$1.backQuote:
    return this.parseTemplate()

  case types$1._import:
    if (this.options.ecmaVersion >= 11) {
      return this.parseExprImport(forNew)
    } else {
      return this.unexpected()
    }

  default:
    return this.parseExprAtomDefault()
  }
};

pp$5.parseExprAtomDefault = function() {
  this.unexpected();
};

pp$5.parseExprImport = function(forNew) {
  var node = this.startNode();

  // Consume `import` as an identifier for `import.meta`.
  // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.
  if (this.containsEsc) { this.raiseRecoverable(this.start, "Escape sequence in keyword import"); }
  this.next();

  if (this.type === types$1.parenL && !forNew) {
    return this.parseDynamicImport(node)
  } else if (this.type === types$1.dot) {
    var meta = this.startNodeAt(node.start, node.loc && node.loc.start);
    meta.name = "import";
    node.meta = this.finishNode(meta, "Identifier");
    return this.parseImportMeta(node)
  } else {
    this.unexpected();
  }
};

pp$5.parseDynamicImport = function(node) {
  this.next(); // skip `(`

  // Parse node.source.
  node.source = this.parseMaybeAssign();

  if (this.options.ecmaVersion >= 16) {
    if (!this.eat(types$1.parenR)) {
      this.expect(types$1.comma);
      if (!this.afterTrailingComma(types$1.parenR)) {
        node.options = this.parseMaybeAssign();
        if (!this.eat(types$1.parenR)) {
          this.expect(types$1.comma);
          if (!this.afterTrailingComma(types$1.parenR)) {
            this.unexpected();
          }
        }
      } else {
        node.options = null;
      }
    } else {
      node.options = null;
    }
  } else {
    // Verify ending.
    if (!this.eat(types$1.parenR)) {
      var errorPos = this.start;
      if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {
        this.raiseRecoverable(errorPos, "Trailing comma is not allowed in import()");
      } else {
        this.unexpected(errorPos);
      }
    }
  }

  return this.finishNode(node, "ImportExpression")
};

pp$5.parseImportMeta = function(node) {
  this.next(); // skip `.`

  var containsEsc = this.containsEsc;
  node.property = this.parseIdent(true);

  if (node.property.name !== "meta")
    { this.raiseRecoverable(node.property.start, "The only valid meta property for import is 'import.meta'"); }
  if (containsEsc)
    { this.raiseRecoverable(node.start, "'import.meta' must not contain escaped characters"); }
  if (this.options.sourceType !== "module" && !this.options.allowImportExportEverywhere)
    { this.raiseRecoverable(node.start, "Cannot use 'import.meta' outside a module"); }

  return this.finishNode(node, "MetaProperty")
};

pp$5.parseLiteral = function(value) {
  var node = this.startNode();
  node.value = value;
  node.raw = this.input.slice(this.start, this.end);
  if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1).replace(/_/g, ""); }
  this.next();
  return this.finishNode(node, "Literal")
};

pp$5.parseParenExpression = function() {
  this.expect(types$1.parenL);
  var val = this.parseExpression();
  this.expect(types$1.parenR);
  return val
};

pp$5.shouldParseArrow = function(exprList) {
  return !this.canInsertSemicolon()
};

pp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {
  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;
  if (this.options.ecmaVersion >= 6) {
    this.next();

    var innerStartPos = this.start, innerStartLoc = this.startLoc;
    var exprList = [], first = true, lastIsComma = false;
    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;
    this.yieldPos = 0;
    this.awaitPos = 0;
    // Do not save awaitIdentPos to allow checking awaits nested in parameters
    while (this.type !== types$1.parenR) {
      first ? first = false : this.expect(types$1.comma);
      if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {
        lastIsComma = true;
        break
      } else if (this.type === types$1.ellipsis) {
        spreadStart = this.start;
        exprList.push(this.parseParenItem(this.parseRestBinding()));
        if (this.type === types$1.comma) {
          this.raiseRecoverable(
            this.start,
            "Comma is not permitted after the rest element"
          );
        }
        break
      } else {
        exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));
      }
    }
    var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;
    this.expect(types$1.parenR);

    if (canBeArrow && this.shouldParseArrow(exprList) && this.eat(types$1.arrow)) {
      this.checkPatternErrors(refDestructuringErrors, false);
      this.checkYieldAwaitInDefaultParams();
      this.yieldPos = oldYieldPos;
      this.awaitPos = oldAwaitPos;
      return this.parseParenArrowList(startPos, startLoc, exprList, forInit)
    }

    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }
    if (spreadStart) { this.unexpected(spreadStart); }
    this.checkExpressionErrors(refDestructuringErrors, true);
    this.yieldPos = oldYieldPos || this.yieldPos;
    this.awaitPos = oldAwaitPos || this.awaitPos;

    if (exprList.length > 1) {
      val = this.startNodeAt(innerStartPos, innerStartLoc);
      val.expressions = exprList;
      this.finishNodeAt(val, "SequenceExpression", innerEndPos, innerEndLoc);
    } else {
      val = exprList[0];
    }
  } else {
    val = this.parseParenExpression();
  }

  if (this.options.preserveParens) {
    var par = this.startNodeAt(startPos, startLoc);
    par.expression = val;
    return this.finishNode(par, "ParenthesizedExpression")
  } else {
    return val
  }
};

pp$5.parseParenItem = function(item) {
  return item
};

pp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {
  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit)
};

// New's precedence is slightly tricky. It must allow its argument to
// be a `[]` or dot subscript expression, but not a call — at least,
// not without wrapping it in parentheses. Thus, it uses the noCalls
// argument to parseSubscripts to prevent it from consuming the
// argument list.

var empty = [];

pp$5.parseNew = function() {
  if (this.containsEsc) { this.raiseRecoverable(this.start, "Escape sequence in keyword new"); }
  var node = this.startNode();
  this.next();
  if (this.options.ecmaVersion >= 6 && this.type === types$1.dot) {
    var meta = this.startNodeAt(node.start, node.loc && node.loc.start);
    meta.name = "new";
    node.meta = this.finishNode(meta, "Identifier");
    this.next();
    var containsEsc = this.containsEsc;
    node.property = this.parseIdent(true);
    if (node.property.name !== "target")
      { this.raiseRecoverable(node.property.start, "The only valid meta property for new is 'new.target'"); }
    if (containsEsc)
      { this.raiseRecoverable(node.start, "'new.target' must not contain escaped characters"); }
    if (!this.allowNewDotTarget)
      { this.raiseRecoverable(node.start, "'new.target' can only be used in functions and class static block"); }
    return this.finishNode(node, "MetaProperty")
  }
  var startPos = this.start, startLoc = this.startLoc;
  node.callee = this.parseSubscripts(this.parseExprAtom(null, false, true), startPos, startLoc, true, false);
  if (this.eat(types$1.parenL)) { node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false); }
  else { node.arguments = empty; }
  return this.finishNode(node, "NewExpression")
};

// Parse template expression.

pp$5.parseTemplateElement = function(ref) {
  var isTagged = ref.isTagged;

  var elem = this.startNode();
  if (this.type === types$1.invalidTemplate) {
    if (!isTagged) {
      this.raiseRecoverable(this.start, "Bad escape sequence in untagged template literal");
    }
    elem.value = {
      raw: this.value.replace(/\r\n?/g, "\n"),
      cooked: null
    };
  } else {
    elem.value = {
      raw: this.input.slice(this.start, this.end).replace(/\r\n?/g, "\n"),
      cooked: this.value
    };
  }
  this.next();
  elem.tail = this.type === types$1.backQuote;
  return this.finishNode(elem, "TemplateElement")
};

pp$5.parseTemplate = function(ref) {
  if ( ref === void 0 ) ref = {};
  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;

  var node = this.startNode();
  this.next();
  node.expressions = [];
  var curElt = this.parseTemplateElement({isTagged: isTagged});
  node.quasis = [curElt];
  while (!curElt.tail) {
    if (this.type === types$1.eof) { this.raise(this.pos, "Unterminated template literal"); }
    this.expect(types$1.dollarBraceL);
    node.expressions.push(this.parseExpression());
    this.expect(types$1.braceR);
    node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));
  }
  this.next();
  return this.finishNode(node, "TemplateLiteral")
};

pp$5.isAsyncProp = function(prop) {
  return !prop.computed && prop.key.type === "Identifier" && prop.key.name === "async" &&
    (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types$1.star)) &&
    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
};

// Parse an object literal or binding pattern.

pp$5.parseObj = function(isPattern, refDestructuringErrors) {
  var node = this.startNode(), first = true, propHash = {};
  node.properties = [];
  this.next();
  while (!this.eat(types$1.braceR)) {
    if (!first) {
      this.expect(types$1.comma);
      if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) { break }
    } else { first = false; }

    var prop = this.parseProperty(isPattern, refDestructuringErrors);
    if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }
    node.properties.push(prop);
  }
  return this.finishNode(node, isPattern ? "ObjectPattern" : "ObjectExpression")
};

pp$5.parseProperty = function(isPattern, refDestructuringErrors) {
  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;
  if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {
    if (isPattern) {
      prop.argument = this.parseIdent(false);
      if (this.type === types$1.comma) {
        this.raiseRecoverable(this.start, "Comma is not permitted after the rest element");
      }
      return this.finishNode(prop, "RestElement")
    }
    // Parse argument.
    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);
    // To disallow trailing comma via `this.toAssignable()`.
    if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {
      refDestructuringErrors.trailingComma = this.start;
    }
    // Finish
    return this.finishNode(prop, "SpreadElement")
  }
  if (this.options.ecmaVersion >= 6) {
    prop.method = false;
    prop.shorthand = false;
    if (isPattern || refDestructuringErrors) {
      startPos = this.start;
      startLoc = this.startLoc;
    }
    if (!isPattern)
      { isGenerator = this.eat(types$1.star); }
  }
  var containsEsc = this.containsEsc;
  this.parsePropertyName(prop);
  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {
    isAsync = true;
    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);
    this.parsePropertyName(prop);
  } else {
    isAsync = false;
  }
  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);
  return this.finishNode(prop, "Property")
};

pp$5.parseGetterSetter = function(prop) {
  var kind = prop.key.name;
  this.parsePropertyName(prop);
  prop.value = this.parseMethod(false);
  prop.kind = kind;
  var paramCount = prop.kind === "get" ? 0 : 1;
  if (prop.value.params.length !== paramCount) {
    var start = prop.value.start;
    if (prop.kind === "get")
      { this.raiseRecoverable(start, "getter should have no params"); }
    else
      { this.raiseRecoverable(start, "setter should have exactly one param"); }
  } else {
    if (prop.kind === "set" && prop.value.params[0].type === "RestElement")
      { this.raiseRecoverable(prop.value.params[0].start, "Setter cannot use rest params"); }
  }
};

pp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {
  if ((isGenerator || isAsync) && this.type === types$1.colon)
    { this.unexpected(); }

  if (this.eat(types$1.colon)) {
    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);
    prop.kind = "init";
  } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {
    if (isPattern) { this.unexpected(); }
    prop.method = true;
    prop.value = this.parseMethod(isGenerator, isAsync);
    prop.kind = "init";
  } else if (!isPattern && !containsEsc &&
             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === "Identifier" &&
             (prop.key.name === "get" || prop.key.name === "set") &&
             (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {
    if (isGenerator || isAsync) { this.unexpected(); }
    this.parseGetterSetter(prop);
  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === "Identifier") {
    if (isGenerator || isAsync) { this.unexpected(); }
    this.checkUnreserved(prop.key);
    if (prop.key.name === "await" && !this.awaitIdentPos)
      { this.awaitIdentPos = startPos; }
    if (isPattern) {
      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));
    } else if (this.type === types$1.eq && refDestructuringErrors) {
      if (refDestructuringErrors.shorthandAssign < 0)
        { refDestructuringErrors.shorthandAssign = this.start; }
      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));
    } else {
      prop.value = this.copyNode(prop.key);
    }
    prop.kind = "init";
    prop.shorthand = true;
  } else { this.unexpected(); }
};

pp$5.parsePropertyName = function(prop) {
  if (this.options.ecmaVersion >= 6) {
    if (this.eat(types$1.bracketL)) {
      prop.computed = true;
      prop.key = this.parseMaybeAssign();
      this.expect(types$1.bracketR);
      return prop.key
    } else {
      prop.computed = false;
    }
  }
  return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never")
};

// Initialize empty function node.

pp$5.initFunction = function(node) {
  node.id = null;
  if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }
  if (this.options.ecmaVersion >= 8) { node.async = false; }
};

// Parse object or class method.

pp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {
  var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;

  this.initFunction(node);
  if (this.options.ecmaVersion >= 6)
    { node.generator = isGenerator; }
  if (this.options.ecmaVersion >= 8)
    { node.async = !!isAsync; }

  this.yieldPos = 0;
  this.awaitPos = 0;
  this.awaitIdentPos = 0;
  this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));

  this.expect(types$1.parenL);
  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);
  this.checkYieldAwaitInDefaultParams();
  this.parseFunctionBody(node, false, true, false);

  this.yieldPos = oldYieldPos;
  this.awaitPos = oldAwaitPos;
  this.awaitIdentPos = oldAwaitIdentPos;
  return this.finishNode(node, "FunctionExpression")
};

// Parse arrow function expression with given parameters.

pp$5.parseArrowExpression = function(node, params, isAsync, forInit) {
  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;

  this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);
  this.initFunction(node);
  if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }

  this.yieldPos = 0;
  this.awaitPos = 0;
  this.awaitIdentPos = 0;

  node.params = this.toAssignableList(params, true);
  this.parseFunctionBody(node, true, false, forInit);

  this.yieldPos = oldYieldPos;
  this.awaitPos = oldAwaitPos;
  this.awaitIdentPos = oldAwaitIdentPos;
  return this.finishNode(node, "ArrowFunctionExpression")
};

// Parse function body and check parameters.

pp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {
  var isExpression = isArrowFunction && this.type !== types$1.braceL;
  var oldStrict = this.strict, useStrict = false;

  if (isExpression) {
    node.body = this.parseMaybeAssign(forInit);
    node.expression = true;
    this.checkParams(node, false);
  } else {
    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);
    if (!oldStrict || nonSimple) {
      useStrict = this.strictDirective(this.end);
      // If this is a strict mode function, verify that argument names
      // are not repeated, and it does not try to bind the words `eval`
      // or `arguments`.
      if (useStrict && nonSimple)
        { this.raiseRecoverable(node.start, "Illegal 'use strict' directive in function with non-simple parameter list"); }
    }
    // Start a new scope with regard to labels and the `inFunction`
    // flag (restore them to their old value afterwards).
    var oldLabels = this.labels;
    this.labels = [];
    if (useStrict) { this.strict = true; }

    // Add the params to varDeclaredNames to ensure that an error is thrown
    // if a let/const declaration in the function clashes with one of the params.
    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));
    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'
    if (this.strict && node.id) { this.checkLValSimple(node.id, BIND_OUTSIDE); }
    node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);
    node.expression = false;
    this.adaptDirectivePrologue(node.body.body);
    this.labels = oldLabels;
  }
  this.exitScope();
};

pp$5.isSimpleParamList = function(params) {
  for (var i = 0, list = params; i < list.length; i += 1)
    {
    var param = list[i];

    if (param.type !== "Identifier") { return false
  } }
  return true
};

// Checks function params for various disallowed patterns such as using "eval"
// or "arguments" and duplicate parameters.

pp$5.checkParams = function(node, allowDuplicates) {
  var nameHash = Object.create(null);
  for (var i = 0, list = node.params; i < list.length; i += 1)
    {
    var param = list[i];

    this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);
  }
};

// Parses a comma-separated list of expressions, and returns them as
// an array. `close` is the token type that ends the list, and
// `allowEmpty` can be turned on to allow subsequent commas with
// nothing in between them to be parsed as `null` (which is needed
// for array literals).

pp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {
  var elts = [], first = true;
  while (!this.eat(close)) {
    if (!first) {
      this.expect(types$1.comma);
      if (allowTrailingComma && this.afterTrailingComma(close)) { break }
    } else { first = false; }

    var elt = (void 0);
    if (allowEmpty && this.type === types$1.comma)
      { elt = null; }
    else if (this.type === types$1.ellipsis) {
      elt = this.parseSpread(refDestructuringErrors);
      if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0)
        { refDestructuringErrors.trailingComma = this.start; }
    } else {
      elt = this.parseMaybeAssign(false, refDestructuringErrors);
    }
    elts.push(elt);
  }
  return elts
};

pp$5.checkUnreserved = function(ref) {
  var start = ref.start;
  var end = ref.end;
  var name = ref.name;

  if (this.inGenerator && name === "yield")
    { this.raiseRecoverable(start, "Cannot use 'yield' as identifier inside a generator"); }
  if (this.inAsync && name === "await")
    { this.raiseRecoverable(start, "Cannot use 'await' as identifier inside an async function"); }
  if (!(this.currentThisScope().flags & SCOPE_VAR) && name === "arguments")
    { this.raiseRecoverable(start, "Cannot use 'arguments' in class field initializer"); }
  if (this.inClassStaticBlock && (name === "arguments" || name === "await"))
    { this.raise(start, ("Cannot use " + name + " in class static initialization block")); }
  if (this.keywords.test(name))
    { this.raise(start, ("Unexpected keyword '" + name + "'")); }
  if (this.options.ecmaVersion < 6 &&
    this.input.slice(start, end).indexOf("\\") !== -1) { return }
  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;
  if (re.test(name)) {
    if (!this.inAsync && name === "await")
      { this.raiseRecoverable(start, "Cannot use keyword 'await' outside an async function"); }
    this.raiseRecoverable(start, ("The keyword '" + name + "' is reserved"));
  }
};

// Parse the next token as an identifier. If `liberal` is true (used
// when parsing properties), it will also convert keywords into
// identifiers.

pp$5.parseIdent = function(liberal) {
  var node = this.parseIdentNode();
  this.next(!!liberal);
  this.finishNode(node, "Identifier");
  if (!liberal) {
    this.checkUnreserved(node);
    if (node.name === "await" && !this.awaitIdentPos)
      { this.awaitIdentPos = node.start; }
  }
  return node
};

pp$5.parseIdentNode = function() {
  var node = this.startNode();
  if (this.type === types$1.name) {
    node.name = this.value;
  } else if (this.type.keyword) {
    node.name = this.type.keyword;

    // To fix https://github.com/acornjs/acorn/issues/575
    // `class` and `function` keywords push new context into this.context.
    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.
    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword
    if ((node.name === "class" || node.name === "function") &&
      (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {
      this.context.pop();
    }
    this.type = types$1.name;
  } else {
    this.unexpected();
  }
  return node
};

pp$5.parsePrivateIdent = function() {
  var node = this.startNode();
  if (this.type === types$1.privateId) {
    node.name = this.value;
  } else {
    this.unexpected();
  }
  this.next();
  this.finishNode(node, "PrivateIdentifier");

  // For validating existence
  if (this.options.checkPrivateFields) {
    if (this.privateNameStack.length === 0) {
      this.raise(node.start, ("Private field '#" + (node.name) + "' must be declared in an enclosing class"));
    } else {
      this.privateNameStack[this.privateNameStack.length - 1].used.push(node);
    }
  }

  return node
};

// Parses yield expression inside generator.

pp$5.parseYield = function(forInit) {
  if (!this.yieldPos) { this.yieldPos = this.start; }

  var node = this.startNode();
  this.next();
  if (this.type === types$1.semi || this.canInsertSemicolon() || (this.type !== types$1.star && !this.type.startsExpr)) {
    node.delegate = false;
    node.argument = null;
  } else {
    node.delegate = this.eat(types$1.star);
    node.argument = this.parseMaybeAssign(forInit);
  }
  return this.finishNode(node, "YieldExpression")
};

pp$5.parseAwait = function(forInit) {
  if (!this.awaitPos) { this.awaitPos = this.start; }

  var node = this.startNode();
  this.next();
  node.argument = this.parseMaybeUnary(null, true, false, forInit);
  return this.finishNode(node, "AwaitExpression")
};

var pp$4 = Parser.prototype;

// This function is used to raise exceptions on parse errors. It
// takes an offset integer (into the current `input`) to indicate
// the location of the error, attaches the position to the end
// of the error message, and then raises a `SyntaxError` with that
// message.

pp$4.raise = function(pos, message) {
  var loc = getLineInfo(this.input, pos);
  message += " (" + loc.line + ":" + loc.column + ")";
  if (this.sourceFile) {
    message += " in " + this.sourceFile;
  }
  var err = new SyntaxError(message);
  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;
  throw err
};

pp$4.raiseRecoverable = pp$4.raise;

pp$4.curPosition = function() {
  if (this.options.locations) {
    return new Position(this.curLine, this.pos - this.lineStart)
  }
};

var pp$3 = Parser.prototype;

var Scope$1 = function Scope(flags) {
  this.flags = flags;
  // A list of var-declared names in the current lexical scope
  this.var = [];
  // A list of lexically-declared names in the current lexical scope
  this.lexical = [];
  // A list of lexically-declared FunctionDeclaration names in the current lexical scope
  this.functions = [];
};

// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.

pp$3.enterScope = function(flags) {
  this.scopeStack.push(new Scope$1(flags));
};

pp$3.exitScope = function() {
  this.scopeStack.pop();
};

// The spec says:
// > At the top level of a function, or script, function declarations are
// > treated like var declarations rather than like lexical declarations.
pp$3.treatFunctionsAsVarInScope = function(scope) {
  return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)
};

pp$3.declareName = function(name, bindingType, pos) {
  var redeclared = false;
  if (bindingType === BIND_LEXICAL) {
    var scope = this.currentScope();
    redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;
    scope.lexical.push(name);
    if (this.inModule && (scope.flags & SCOPE_TOP))
      { delete this.undefinedExports[name]; }
  } else if (bindingType === BIND_SIMPLE_CATCH) {
    var scope$1 = this.currentScope();
    scope$1.lexical.push(name);
  } else if (bindingType === BIND_FUNCTION) {
    var scope$2 = this.currentScope();
    if (this.treatFunctionsAsVar)
      { redeclared = scope$2.lexical.indexOf(name) > -1; }
    else
      { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }
    scope$2.functions.push(name);
  } else {
    for (var i = this.scopeStack.length - 1; i >= 0; --i) {
      var scope$3 = this.scopeStack[i];
      if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||
          !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {
        redeclared = true;
        break
      }
      scope$3.var.push(name);
      if (this.inModule && (scope$3.flags & SCOPE_TOP))
        { delete this.undefinedExports[name]; }
      if (scope$3.flags & SCOPE_VAR) { break }
    }
  }
  if (redeclared) { this.raiseRecoverable(pos, ("Identifier '" + name + "' has already been declared")); }
};

pp$3.checkLocalExport = function(id) {
  // scope.functions must be empty as Module code is always strict.
  if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&
      this.scopeStack[0].var.indexOf(id.name) === -1) {
    this.undefinedExports[id.name] = id;
  }
};

pp$3.currentScope = function() {
  return this.scopeStack[this.scopeStack.length - 1]
};

pp$3.currentVarScope = function() {
  for (var i = this.scopeStack.length - 1;; i--) {
    var scope = this.scopeStack[i];
    if (scope.flags & (SCOPE_VAR | SCOPE_CLASS_FIELD_INIT | SCOPE_CLASS_STATIC_BLOCK)) { return scope }
  }
};

// Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.
pp$3.currentThisScope = function() {
  for (var i = this.scopeStack.length - 1;; i--) {
    var scope = this.scopeStack[i];
    if (scope.flags & (SCOPE_VAR | SCOPE_CLASS_FIELD_INIT | SCOPE_CLASS_STATIC_BLOCK) &&
        !(scope.flags & SCOPE_ARROW)) { return scope }
  }
};

var Node = function Node(parser, pos, loc) {
  this.type = "";
  this.start = pos;
  this.end = 0;
  if (parser.options.locations)
    { this.loc = new SourceLocation(parser, loc); }
  if (parser.options.directSourceFile)
    { this.sourceFile = parser.options.directSourceFile; }
  if (parser.options.ranges)
    { this.range = [pos, 0]; }
};

// Start an AST node, attaching a start offset.

var pp$2 = Parser.prototype;

pp$2.startNode = function() {
  return new Node(this, this.start, this.startLoc)
};

pp$2.startNodeAt = function(pos, loc) {
  return new Node(this, pos, loc)
};

// Finish an AST node, adding `type` and `end` properties.

function finishNodeAt(node, type, pos, loc) {
  node.type = type;
  node.end = pos;
  if (this.options.locations)
    { node.loc.end = loc; }
  if (this.options.ranges)
    { node.range[1] = pos; }
  return node
}

pp$2.finishNode = function(node, type) {
  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)
};

// Finish node at given position

pp$2.finishNodeAt = function(node, type, pos, loc) {
  return finishNodeAt.call(this, node, type, pos, loc)
};

pp$2.copyNode = function(node) {
  var newNode = new Node(this, node.start, this.startLoc);
  for (var prop in node) { newNode[prop] = node[prop]; }
  return newNode
};

// This file was generated by "bin/generate-unicode-script-values.js". Do not modify manually!
var scriptValuesAddedInUnicode = "Gara Garay Gukh Gurung_Khema Hrkt Katakana_Or_Hiragana Kawi Kirat_Rai Krai Nag_Mundari Nagm Ol_Onal Onao Sunu Sunuwar Todhri Todr Tulu_Tigalari Tutg Unknown Zzzz";

// This file contains Unicode properties extracted from the ECMAScript specification.
// The lists are extracted like so:
// $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)

// #table-binary-unicode-properties
var ecma9BinaryProperties = "ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS";
var ecma10BinaryProperties = ecma9BinaryProperties + " Extended_Pictographic";
var ecma11BinaryProperties = ecma10BinaryProperties;
var ecma12BinaryProperties = ecma11BinaryProperties + " EBase EComp EMod EPres ExtPict";
var ecma13BinaryProperties = ecma12BinaryProperties;
var ecma14BinaryProperties = ecma13BinaryProperties;

var unicodeBinaryProperties = {
  9: ecma9BinaryProperties,
  10: ecma10BinaryProperties,
  11: ecma11BinaryProperties,
  12: ecma12BinaryProperties,
  13: ecma13BinaryProperties,
  14: ecma14BinaryProperties
};

// #table-binary-unicode-properties-of-strings
var ecma14BinaryPropertiesOfStrings = "Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequence RGI_Emoji";

var unicodeBinaryPropertiesOfStrings = {
  9: "",
  10: "",
  11: "",
  12: "",
  13: "",
  14: ecma14BinaryPropertiesOfStrings
};

// #table-unicode-general-category-values
var unicodeGeneralCategoryValues = "Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu";

// #table-unicode-script-values
var ecma9ScriptValues = "Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb";
var ecma10ScriptValues = ecma9ScriptValues + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd";
var ecma11ScriptValues = ecma10ScriptValues + " Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho";
var ecma12ScriptValues = ecma11ScriptValues + " Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi";
var ecma13ScriptValues = ecma12ScriptValues + " Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith";
var ecma14ScriptValues = ecma13ScriptValues + " " + scriptValuesAddedInUnicode;

var unicodeScriptValues = {
  9: ecma9ScriptValues,
  10: ecma10ScriptValues,
  11: ecma11ScriptValues,
  12: ecma12ScriptValues,
  13: ecma13ScriptValues,
  14: ecma14ScriptValues
};

var data = {};
function buildUnicodeData(ecmaVersion) {
  var d = data[ecmaVersion] = {
    binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + " " + unicodeGeneralCategoryValues),
    binaryOfStrings: wordsRegexp(unicodeBinaryPropertiesOfStrings[ecmaVersion]),
    nonBinary: {
      General_Category: wordsRegexp(unicodeGeneralCategoryValues),
      Script: wordsRegexp(unicodeScriptValues[ecmaVersion])
    }
  };
  d.nonBinary.Script_Extensions = d.nonBinary.Script;

  d.nonBinary.gc = d.nonBinary.General_Category;
  d.nonBinary.sc = d.nonBinary.Script;
  d.nonBinary.scx = d.nonBinary.Script_Extensions;
}

for (var i = 0, list = [9, 10, 11, 12, 13, 14]; i < list.length; i += 1) {
  var ecmaVersion = list[i];

  buildUnicodeData(ecmaVersion);
}

var pp$1 = Parser.prototype;

// Track disjunction structure to determine whether a duplicate
// capture group name is allowed because it is in a separate branch.
var BranchID = function BranchID(parent, base) {
  // Parent disjunction branch
  this.parent = parent;
  // Identifies this set of sibling branches
  this.base = base || this;
};

BranchID.prototype.separatedFrom = function separatedFrom (alt) {
  // A branch is separate from another branch if they or any of
  // their parents are siblings in a given disjunction
  for (var self = this; self; self = self.parent) {
    for (var other = alt; other; other = other.parent) {
      if (self.base === other.base && self !== other) { return true }
    }
  }
  return false
};

BranchID.prototype.sibling = function sibling () {
  return new BranchID(this.parent, this.base)
};

var RegExpValidationState = function RegExpValidationState(parser) {
  this.parser = parser;
  this.validFlags = "gim" + (parser.options.ecmaVersion >= 6 ? "uy" : "") + (parser.options.ecmaVersion >= 9 ? "s" : "") + (parser.options.ecmaVersion >= 13 ? "d" : "") + (parser.options.ecmaVersion >= 15 ? "v" : "");
  this.unicodeProperties = data[parser.options.ecmaVersion >= 14 ? 14 : parser.options.ecmaVersion];
  this.source = "";
  this.flags = "";
  this.start = 0;
  this.switchU = false;
  this.switchV = false;
  this.switchN = false;
  this.pos = 0;
  this.lastIntValue = 0;
  this.lastStringValue = "";
  this.lastAssertionIsQuantifiable = false;
  this.numCapturingParens = 0;
  this.maxBackReference = 0;
  this.groupNames = Object.create(null);
  this.backReferenceNames = [];
  this.branchID = null;
};

RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {
  var unicodeSets = flags.indexOf("v") !== -1;
  var unicode = flags.indexOf("u") !== -1;
  this.start = start | 0;
  this.source = pattern + "";
  this.flags = flags;
  if (unicodeSets && this.parser.options.ecmaVersion >= 15) {
    this.switchU = true;
    this.switchV = true;
    this.switchN = true;
  } else {
    this.switchU = unicode && this.parser.options.ecmaVersion >= 6;
    this.switchV = false;
    this.switchN = unicode && this.parser.options.ecmaVersion >= 9;
  }
};

RegExpValidationState.prototype.raise = function raise (message) {
  this.parser.raiseRecoverable(this.start, ("Invalid regular expression: /" + (this.source) + "/: " + message));
};

// If u flag is given, this returns the code point at the index (it combines a surrogate pair).
// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).
RegExpValidationState.prototype.at = function at (i, forceU) {
    if ( forceU === void 0 ) forceU = false;

  var s = this.source;
  var l = s.length;
  if (i >= l) {
    return -1
  }
  var c = s.charCodeAt(i);
  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {
    return c
  }
  var next = s.charCodeAt(i + 1);
  return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c
};

RegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {
    if ( forceU === void 0 ) forceU = false;

  var s = this.source;
  var l = s.length;
  if (i >= l) {
    return l
  }
  var c = s.charCodeAt(i), next;
  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||
      (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {
    return i + 1
  }
  return i + 2
};

RegExpValidationState.prototype.current = function current (forceU) {
    if ( forceU === void 0 ) forceU = false;

  return this.at(this.pos, forceU)
};

RegExpValidationState.prototype.lookahead = function lookahead (forceU) {
    if ( forceU === void 0 ) forceU = false;

  return this.at(this.nextIndex(this.pos, forceU), forceU)
};

RegExpValidationState.prototype.advance = function advance (forceU) {
    if ( forceU === void 0 ) forceU = false;

  this.pos = this.nextIndex(this.pos, forceU);
};

RegExpValidationState.prototype.eat = function eat (ch, forceU) {
    if ( forceU === void 0 ) forceU = false;

  if (this.current(forceU) === ch) {
    this.advance(forceU);
    return true
  }
  return false
};

RegExpValidationState.prototype.eatChars = function eatChars (chs, forceU) {
    if ( forceU === void 0 ) forceU = false;

  var pos = this.pos;
  for (var i = 0, list = chs; i < list.length; i += 1) {
    var ch = list[i];

      var current = this.at(pos, forceU);
    if (current === -1 || current !== ch) {
      return false
    }
    pos = this.nextIndex(pos, forceU);
  }
  this.pos = pos;
  return true
};

/**
 * Validate the flags part of a given RegExpLiteral.
 *
 * @param {RegExpValidationState} state The state to validate RegExp.
 * @returns {void}
 */
pp$1.validateRegExpFlags = function(state) {
  var validFlags = state.validFlags;
  var flags = state.flags;

  var u = false;
  var v = false;

  for (var i = 0; i < flags.length; i++) {
    var flag = flags.charAt(i);
    if (validFlags.indexOf(flag) === -1) {
      this.raise(state.start, "Invalid regular expression flag");
    }
    if (flags.indexOf(flag, i + 1) > -1) {
      this.raise(state.start, "Duplicate regular expression flag");
    }
    if (flag === "u") { u = true; }
    if (flag === "v") { v = true; }
  }
  if (this.options.ecmaVersion >= 15 && u && v) {
    this.raise(state.start, "Invalid regular expression flag");
  }
};

function hasProp(obj) {
  for (var _ in obj) { return true }
  return false
}

/**
 * Validate the pattern part of a given RegExpLiteral.
 *
 * @param {RegExpValidationState} state The state to validate RegExp.
 * @returns {void}
 */
pp$1.validateRegExpPattern = function(state) {
  this.regexp_pattern(state);

  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of
  // parsing contains a |GroupName|, reparse with the goal symbol
  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*
  // exception if _P_ did not conform to the grammar, if any elements of _P_
  // were not matched by the parse, or if any Early Error conditions exist.
  if (!state.switchN && this.options.ecmaVersion >= 9 && hasProp(state.groupNames)) {
    state.switchN = true;
    this.regexp_pattern(state);
  }
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern
pp$1.regexp_pattern = function(state) {
  state.pos = 0;
  state.lastIntValue = 0;
  state.lastStringValue = "";
  state.lastAssertionIsQuantifiable = false;
  state.numCapturingParens = 0;
  state.maxBackReference = 0;
  state.groupNames = Object.create(null);
  state.backReferenceNames.length = 0;
  state.branchID = null;

  this.regexp_disjunction(state);

  if (state.pos !== state.source.length) {
    // Make the same messages as V8.
    if (state.eat(0x29 /* ) */)) {
      state.raise("Unmatched ')'");
    }
    if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {
      state.raise("Lone quantifier brackets");
    }
  }
  if (state.maxBackReference > state.numCapturingParens) {
    state.raise("Invalid escape");
  }
  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {
    var name = list[i];

    if (!state.groupNames[name]) {
      state.raise("Invalid named capture referenced");
    }
  }
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction
pp$1.regexp_disjunction = function(state) {
  var trackDisjunction = this.options.ecmaVersion >= 16;
  if (trackDisjunction) { state.branchID = new BranchID(state.branchID, null); }
  this.regexp_alternative(state);
  while (state.eat(0x7C /* | */)) {
    if (trackDisjunction) { state.branchID = state.branchID.sibling(); }
    this.regexp_alternative(state);
  }
  if (trackDisjunction) { state.branchID = state.branchID.parent; }

  // Make the same message as V8.
  if (this.regexp_eatQuantifier(state, true)) {
    state.raise("Nothing to repeat");
  }
  if (state.eat(0x7B /* { */)) {
    state.raise("Lone quantifier brackets");
  }
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative
pp$1.regexp_alternative = function(state) {
  while (state.pos < state.source.length && this.regexp_eatTerm(state)) {}
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term
pp$1.regexp_eatTerm = function(state) {
  if (this.regexp_eatAssertion(state)) {
    // Handle `QuantifiableAssertion Quantifier` alternative.
    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion
    // is a QuantifiableAssertion.
    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {
      // Make the same message as V8.
      if (state.switchU) {
        state.raise("Invalid quantifier");
      }
    }
    return true
  }

  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {
    this.regexp_eatQuantifier(state);
    return true
  }

  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion
pp$1.regexp_eatAssertion = function(state) {
  var start = state.pos;
  state.lastAssertionIsQuantifiable = false;

  // ^, $
  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {
    return true
  }

  // \b \B
  if (state.eat(0x5C /* \ */)) {
    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {
      return true
    }
    state.pos = start;
  }

  // Lookahead / Lookbehind
  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {
    var lookbehind = false;
    if (this.options.ecmaVersion >= 9) {
      lookbehind = state.eat(0x3C /* < */);
    }
    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {
      this.regexp_disjunction(state);
      if (!state.eat(0x29 /* ) */)) {
        state.raise("Unterminated group");
      }
      state.lastAssertionIsQuantifiable = !lookbehind;
      return true
    }
  }

  state.pos = start;
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier
pp$1.regexp_eatQuantifier = function(state, noError) {
  if ( noError === void 0 ) noError = false;

  if (this.regexp_eatQuantifierPrefix(state, noError)) {
    state.eat(0x3F /* ? */);
    return true
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix
pp$1.regexp_eatQuantifierPrefix = function(state, noError) {
  return (
    state.eat(0x2A /* * */) ||
    state.eat(0x2B /* + */) ||
    state.eat(0x3F /* ? */) ||
    this.regexp_eatBracedQuantifier(state, noError)
  )
};
pp$1.regexp_eatBracedQuantifier = function(state, noError) {
  var start = state.pos;
  if (state.eat(0x7B /* { */)) {
    var min = 0, max = -1;
    if (this.regexp_eatDecimalDigits(state)) {
      min = state.lastIntValue;
      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {
        max = state.lastIntValue;
      }
      if (state.eat(0x7D /* } */)) {
        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term
        if (max !== -1 && max < min && !noError) {
          state.raise("numbers out of order in {} quantifier");
        }
        return true
      }
    }
    if (state.switchU && !noError) {
      state.raise("Incomplete quantifier");
    }
    state.pos = start;
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom
pp$1.regexp_eatAtom = function(state) {
  return (
    this.regexp_eatPatternCharacters(state) ||
    state.eat(0x2E /* . */) ||
    this.regexp_eatReverseSolidusAtomEscape(state) ||
    this.regexp_eatCharacterClass(state) ||
    this.regexp_eatUncapturingGroup(state) ||
    this.regexp_eatCapturingGroup(state)
  )
};
pp$1.regexp_eatReverseSolidusAtomEscape = function(state) {
  var start = state.pos;
  if (state.eat(0x5C /* \ */)) {
    if (this.regexp_eatAtomEscape(state)) {
      return true
    }
    state.pos = start;
  }
  return false
};
pp$1.regexp_eatUncapturingGroup = function(state) {
  var start = state.pos;
  if (state.eat(0x28 /* ( */)) {
    if (state.eat(0x3F /* ? */)) {
      if (this.options.ecmaVersion >= 16) {
        var addModifiers = this.regexp_eatModifiers(state);
        var hasHyphen = state.eat(0x2D /* - */);
        if (addModifiers || hasHyphen) {
          for (var i = 0; i < addModifiers.length; i++) {
            var modifier = addModifiers.charAt(i);
            if (addModifiers.indexOf(modifier, i + 1) > -1) {
              state.raise("Duplicate regular expression modifiers");
            }
          }
          if (hasHyphen) {
            var removeModifiers = this.regexp_eatModifiers(state);
            if (!addModifiers && !removeModifiers && state.current() === 0x3A /* : */) {
              state.raise("Invalid regular expression modifiers");
            }
            for (var i$1 = 0; i$1 < removeModifiers.length; i$1++) {
              var modifier$1 = removeModifiers.charAt(i$1);
              if (
                removeModifiers.indexOf(modifier$1, i$1 + 1) > -1 ||
                addModifiers.indexOf(modifier$1) > -1
              ) {
                state.raise("Duplicate regular expression modifiers");
              }
            }
          }
        }
      }
      if (state.eat(0x3A /* : */)) {
        this.regexp_disjunction(state);
        if (state.eat(0x29 /* ) */)) {
          return true
        }
        state.raise("Unterminated group");
      }
    }
    state.pos = start;
  }
  return false
};
pp$1.regexp_eatCapturingGroup = function(state) {
  if (state.eat(0x28 /* ( */)) {
    if (this.options.ecmaVersion >= 9) {
      this.regexp_groupSpecifier(state);
    } else if (state.current() === 0x3F /* ? */) {
      state.raise("Invalid group");
    }
    this.regexp_disjunction(state);
    if (state.eat(0x29 /* ) */)) {
      state.numCapturingParens += 1;
      return true
    }
    state.raise("Unterminated group");
  }
  return false
};
// RegularExpressionModifiers ::
//   [empty]
//   RegularExpressionModifiers RegularExpressionModifier
pp$1.regexp_eatModifiers = function(state) {
  var modifiers = "";
  var ch = 0;
  while ((ch = state.current()) !== -1 && isRegularExpressionModifier(ch)) {
    modifiers += codePointToString(ch);
    state.advance();
  }
  return modifiers
};
// RegularExpressionModifier :: one of
//   `i` `m` `s`
function isRegularExpressionModifier(ch) {
  return ch === 0x69 /* i */ || ch === 0x6d /* m */ || ch === 0x73 /* s */
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom
pp$1.regexp_eatExtendedAtom = function(state) {
  return (
    state.eat(0x2E /* . */) ||
    this.regexp_eatReverseSolidusAtomEscape(state) ||
    this.regexp_eatCharacterClass(state) ||
    this.regexp_eatUncapturingGroup(state) ||
    this.regexp_eatCapturingGroup(state) ||
    this.regexp_eatInvalidBracedQuantifier(state) ||
    this.regexp_eatExtendedPatternCharacter(state)
  )
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier
pp$1.regexp_eatInvalidBracedQuantifier = function(state) {
  if (this.regexp_eatBracedQuantifier(state, true)) {
    state.raise("Nothing to repeat");
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter
pp$1.regexp_eatSyntaxCharacter = function(state) {
  var ch = state.current();
  if (isSyntaxCharacter(ch)) {
    state.lastIntValue = ch;
    state.advance();
    return true
  }
  return false
};
function isSyntaxCharacter(ch) {
  return (
    ch === 0x24 /* $ */ ||
    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||
    ch === 0x2E /* . */ ||
    ch === 0x3F /* ? */ ||
    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||
    ch >= 0x7B /* { */ && ch <= 0x7D /* } */
  )
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter
// But eat eager.
pp$1.regexp_eatPatternCharacters = function(state) {
  var start = state.pos;
  var ch = 0;
  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {
    state.advance();
  }
  return state.pos !== start
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter
pp$1.regexp_eatExtendedPatternCharacter = function(state) {
  var ch = state.current();
  if (
    ch !== -1 &&
    ch !== 0x24 /* $ */ &&
    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&
    ch !== 0x2E /* . */ &&
    ch !== 0x3F /* ? */ &&
    ch !== 0x5B /* [ */ &&
    ch !== 0x5E /* ^ */ &&
    ch !== 0x7C /* | */
  ) {
    state.advance();
    return true
  }
  return false
};

// GroupSpecifier ::
//   [empty]
//   `?` GroupName
pp$1.regexp_groupSpecifier = function(state) {
  if (state.eat(0x3F /* ? */)) {
    if (!this.regexp_eatGroupName(state)) { state.raise("Invalid group"); }
    var trackDisjunction = this.options.ecmaVersion >= 16;
    var known = state.groupNames[state.lastStringValue];
    if (known) {
      if (trackDisjunction) {
        for (var i = 0, list = known; i < list.length; i += 1) {
          var altID = list[i];

          if (!altID.separatedFrom(state.branchID))
            { state.raise("Duplicate capture group name"); }
        }
      } else {
        state.raise("Duplicate capture group name");
      }
    }
    if (trackDisjunction) {
      (known || (state.groupNames[state.lastStringValue] = [])).push(state.branchID);
    } else {
      state.groupNames[state.lastStringValue] = true;
    }
  }
};

// GroupName ::
//   `<` RegExpIdentifierName `>`
// Note: this updates `state.lastStringValue` property with the eaten name.
pp$1.regexp_eatGroupName = function(state) {
  state.lastStringValue = "";
  if (state.eat(0x3C /* < */)) {
    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {
      return true
    }
    state.raise("Invalid capture group name");
  }
  return false
};

// RegExpIdentifierName ::
//   RegExpIdentifierStart
//   RegExpIdentifierName RegExpIdentifierPart
// Note: this updates `state.lastStringValue` property with the eaten name.
pp$1.regexp_eatRegExpIdentifierName = function(state) {
  state.lastStringValue = "";
  if (this.regexp_eatRegExpIdentifierStart(state)) {
    state.lastStringValue += codePointToString(state.lastIntValue);
    while (this.regexp_eatRegExpIdentifierPart(state)) {
      state.lastStringValue += codePointToString(state.lastIntValue);
    }
    return true
  }
  return false
};

// RegExpIdentifierStart ::
//   UnicodeIDStart
//   `$`
//   `_`
//   `\` RegExpUnicodeEscapeSequence[+U]
pp$1.regexp_eatRegExpIdentifierStart = function(state) {
  var start = state.pos;
  var forceU = this.options.ecmaVersion >= 11;
  var ch = state.current(forceU);
  state.advance(forceU);

  if (ch === 0x5C /* \ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {
    ch = state.lastIntValue;
  }
  if (isRegExpIdentifierStart(ch)) {
    state.lastIntValue = ch;
    return true
  }

  state.pos = start;
  return false
};
function isRegExpIdentifierStart(ch) {
  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */
}

// RegExpIdentifierPart ::
//   UnicodeIDContinue
//   `$`
//   `_`
//   `\` RegExpUnicodeEscapeSequence[+U]
//   <ZWNJ>
//   <ZWJ>
pp$1.regexp_eatRegExpIdentifierPart = function(state) {
  var start = state.pos;
  var forceU = this.options.ecmaVersion >= 11;
  var ch = state.current(forceU);
  state.advance(forceU);

  if (ch === 0x5C /* \ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {
    ch = state.lastIntValue;
  }
  if (isRegExpIdentifierPart(ch)) {
    state.lastIntValue = ch;
    return true
  }

  state.pos = start;
  return false
};
function isRegExpIdentifierPart(ch) {
  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape
pp$1.regexp_eatAtomEscape = function(state) {
  if (
    this.regexp_eatBackReference(state) ||
    this.regexp_eatCharacterClassEscape(state) ||
    this.regexp_eatCharacterEscape(state) ||
    (state.switchN && this.regexp_eatKGroupName(state))
  ) {
    return true
  }
  if (state.switchU) {
    // Make the same message as V8.
    if (state.current() === 0x63 /* c */) {
      state.raise("Invalid unicode escape");
    }
    state.raise("Invalid escape");
  }
  return false
};
pp$1.regexp_eatBackReference = function(state) {
  var start = state.pos;
  if (this.regexp_eatDecimalEscape(state)) {
    var n = state.lastIntValue;
    if (state.switchU) {
      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape
      if (n > state.maxBackReference) {
        state.maxBackReference = n;
      }
      return true
    }
    if (n <= state.numCapturingParens) {
      return true
    }
    state.pos = start;
  }
  return false
};
pp$1.regexp_eatKGroupName = function(state) {
  if (state.eat(0x6B /* k */)) {
    if (this.regexp_eatGroupName(state)) {
      state.backReferenceNames.push(state.lastStringValue);
      return true
    }
    state.raise("Invalid named reference");
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape
pp$1.regexp_eatCharacterEscape = function(state) {
  return (
    this.regexp_eatControlEscape(state) ||
    this.regexp_eatCControlLetter(state) ||
    this.regexp_eatZero(state) ||
    this.regexp_eatHexEscapeSequence(state) ||
    this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||
    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||
    this.regexp_eatIdentityEscape(state)
  )
};
pp$1.regexp_eatCControlLetter = function(state) {
  var start = state.pos;
  if (state.eat(0x63 /* c */)) {
    if (this.regexp_eatControlLetter(state)) {
      return true
    }
    state.pos = start;
  }
  return false
};
pp$1.regexp_eatZero = function(state) {
  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit$1(state.lookahead())) {
    state.lastIntValue = 0;
    state.advance();
    return true
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape
pp$1.regexp_eatControlEscape = function(state) {
  var ch = state.current();
  if (ch === 0x74 /* t */) {
    state.lastIntValue = 0x09; /* \t */
    state.advance();
    return true
  }
  if (ch === 0x6E /* n */) {
    state.lastIntValue = 0x0A; /* \n */
    state.advance();
    return true
  }
  if (ch === 0x76 /* v */) {
    state.lastIntValue = 0x0B; /* \v */
    state.advance();
    return true
  }
  if (ch === 0x66 /* f */) {
    state.lastIntValue = 0x0C; /* \f */
    state.advance();
    return true
  }
  if (ch === 0x72 /* r */) {
    state.lastIntValue = 0x0D; /* \r */
    state.advance();
    return true
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter
pp$1.regexp_eatControlLetter = function(state) {
  var ch = state.current();
  if (isControlLetter(ch)) {
    state.lastIntValue = ch % 0x20;
    state.advance();
    return true
  }
  return false
};
function isControlLetter(ch) {
  return (
    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||
    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)
  )
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence
pp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {
  if ( forceU === void 0 ) forceU = false;

  var start = state.pos;
  var switchU = forceU || state.switchU;

  if (state.eat(0x75 /* u */)) {
    if (this.regexp_eatFixedHexDigits(state, 4)) {
      var lead = state.lastIntValue;
      if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {
        var leadSurrogateEnd = state.pos;
        if (state.eat(0x5C /* \ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {
          var trail = state.lastIntValue;
          if (trail >= 0xDC00 && trail <= 0xDFFF) {
            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;
            return true
          }
        }
        state.pos = leadSurrogateEnd;
        state.lastIntValue = lead;
      }
      return true
    }
    if (
      switchU &&
      state.eat(0x7B /* { */) &&
      this.regexp_eatHexDigits(state) &&
      state.eat(0x7D /* } */) &&
      isValidUnicode(state.lastIntValue)
    ) {
      return true
    }
    if (switchU) {
      state.raise("Invalid unicode escape");
    }
    state.pos = start;
  }

  return false
};
function isValidUnicode(ch) {
  return ch >= 0 && ch <= 0x10FFFF
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape
pp$1.regexp_eatIdentityEscape = function(state) {
  if (state.switchU) {
    if (this.regexp_eatSyntaxCharacter(state)) {
      return true
    }
    if (state.eat(0x2F /* / */)) {
      state.lastIntValue = 0x2F; /* / */
      return true
    }
    return false
  }

  var ch = state.current();
  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {
    state.lastIntValue = ch;
    state.advance();
    return true
  }

  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape
pp$1.regexp_eatDecimalEscape = function(state) {
  state.lastIntValue = 0;
  var ch = state.current();
  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {
    do {
      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);
      state.advance();
    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)
    return true
  }
  return false
};

// Return values used by character set parsing methods, needed to
// forbid negation of sets that can match strings.
var CharSetNone = 0; // Nothing parsed
var CharSetOk = 1; // Construct parsed, cannot contain strings
var CharSetString = 2; // Construct parsed, can contain strings

// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape
pp$1.regexp_eatCharacterClassEscape = function(state) {
  var ch = state.current();

  if (isCharacterClassEscape(ch)) {
    state.lastIntValue = -1;
    state.advance();
    return CharSetOk
  }

  var negate = false;
  if (
    state.switchU &&
    this.options.ecmaVersion >= 9 &&
    ((negate = ch === 0x50 /* P */) || ch === 0x70 /* p */)
  ) {
    state.lastIntValue = -1;
    state.advance();
    var result;
    if (
      state.eat(0x7B /* { */) &&
      (result = this.regexp_eatUnicodePropertyValueExpression(state)) &&
      state.eat(0x7D /* } */)
    ) {
      if (negate && result === CharSetString) { state.raise("Invalid property name"); }
      return result
    }
    state.raise("Invalid property name");
  }

  return CharSetNone
};

function isCharacterClassEscape(ch) {
  return (
    ch === 0x64 /* d */ ||
    ch === 0x44 /* D */ ||
    ch === 0x73 /* s */ ||
    ch === 0x53 /* S */ ||
    ch === 0x77 /* w */ ||
    ch === 0x57 /* W */
  )
}

// UnicodePropertyValueExpression ::
//   UnicodePropertyName `=` UnicodePropertyValue
//   LoneUnicodePropertyNameOrValue
pp$1.regexp_eatUnicodePropertyValueExpression = function(state) {
  var start = state.pos;

  // UnicodePropertyName `=` UnicodePropertyValue
  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {
    var name = state.lastStringValue;
    if (this.regexp_eatUnicodePropertyValue(state)) {
      var value = state.lastStringValue;
      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);
      return CharSetOk
    }
  }
  state.pos = start;

  // LoneUnicodePropertyNameOrValue
  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {
    var nameOrValue = state.lastStringValue;
    return this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue)
  }
  return CharSetNone
};

pp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {
  if (!hasOwn(state.unicodeProperties.nonBinary, name))
    { state.raise("Invalid property name"); }
  if (!state.unicodeProperties.nonBinary[name].test(value))
    { state.raise("Invalid property value"); }
};

pp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {
  if (state.unicodeProperties.binary.test(nameOrValue)) { return CharSetOk }
  if (state.switchV && state.unicodeProperties.binaryOfStrings.test(nameOrValue)) { return CharSetString }
  state.raise("Invalid property name");
};

// UnicodePropertyName ::
//   UnicodePropertyNameCharacters
pp$1.regexp_eatUnicodePropertyName = function(state) {
  var ch = 0;
  state.lastStringValue = "";
  while (isUnicodePropertyNameCharacter(ch = state.current())) {
    state.lastStringValue += codePointToString(ch);
    state.advance();
  }
  return state.lastStringValue !== ""
};

function isUnicodePropertyNameCharacter(ch) {
  return isControlLetter(ch) || ch === 0x5F /* _ */
}

// UnicodePropertyValue ::
//   UnicodePropertyValueCharacters
pp$1.regexp_eatUnicodePropertyValue = function(state) {
  var ch = 0;
  state.lastStringValue = "";
  while (isUnicodePropertyValueCharacter(ch = state.current())) {
    state.lastStringValue += codePointToString(ch);
    state.advance();
  }
  return state.lastStringValue !== ""
};
function isUnicodePropertyValueCharacter(ch) {
  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit$1(ch)
}

// LoneUnicodePropertyNameOrValue ::
//   UnicodePropertyValueCharacters
pp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {
  return this.regexp_eatUnicodePropertyValue(state)
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass
pp$1.regexp_eatCharacterClass = function(state) {
  if (state.eat(0x5B /* [ */)) {
    var negate = state.eat(0x5E /* ^ */);
    var result = this.regexp_classContents(state);
    if (!state.eat(0x5D /* ] */))
      { state.raise("Unterminated character class"); }
    if (negate && result === CharSetString)
      { state.raise("Negated character class may contain strings"); }
    return true
  }
  return false
};

// https://tc39.es/ecma262/#prod-ClassContents
// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges
pp$1.regexp_classContents = function(state) {
  if (state.current() === 0x5D /* ] */) { return CharSetOk }
  if (state.switchV) { return this.regexp_classSetExpression(state) }
  this.regexp_nonEmptyClassRanges(state);
  return CharSetOk
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges
// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash
pp$1.regexp_nonEmptyClassRanges = function(state) {
  while (this.regexp_eatClassAtom(state)) {
    var left = state.lastIntValue;
    if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {
      var right = state.lastIntValue;
      if (state.switchU && (left === -1 || right === -1)) {
        state.raise("Invalid character class");
      }
      if (left !== -1 && right !== -1 && left > right) {
        state.raise("Range out of order in character class");
      }
    }
  }
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom
// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash
pp$1.regexp_eatClassAtom = function(state) {
  var start = state.pos;

  if (state.eat(0x5C /* \ */)) {
    if (this.regexp_eatClassEscape(state)) {
      return true
    }
    if (state.switchU) {
      // Make the same message as V8.
      var ch$1 = state.current();
      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {
        state.raise("Invalid class escape");
      }
      state.raise("Invalid escape");
    }
    state.pos = start;
  }

  var ch = state.current();
  if (ch !== 0x5D /* ] */) {
    state.lastIntValue = ch;
    state.advance();
    return true
  }

  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape
pp$1.regexp_eatClassEscape = function(state) {
  var start = state.pos;

  if (state.eat(0x62 /* b */)) {
    state.lastIntValue = 0x08; /* <BS> */
    return true
  }

  if (state.switchU && state.eat(0x2D /* - */)) {
    state.lastIntValue = 0x2D; /* - */
    return true
  }

  if (!state.switchU && state.eat(0x63 /* c */)) {
    if (this.regexp_eatClassControlLetter(state)) {
      return true
    }
    state.pos = start;
  }

  return (
    this.regexp_eatCharacterClassEscape(state) ||
    this.regexp_eatCharacterEscape(state)
  )
};

// https://tc39.es/ecma262/#prod-ClassSetExpression
// https://tc39.es/ecma262/#prod-ClassUnion
// https://tc39.es/ecma262/#prod-ClassIntersection
// https://tc39.es/ecma262/#prod-ClassSubtraction
pp$1.regexp_classSetExpression = function(state) {
  var result = CharSetOk, subResult;
  if (this.regexp_eatClassSetRange(state)) ; else if (subResult = this.regexp_eatClassSetOperand(state)) {
    if (subResult === CharSetString) { result = CharSetString; }
    // https://tc39.es/ecma262/#prod-ClassIntersection
    var start = state.pos;
    while (state.eatChars([0x26, 0x26] /* && */)) {
      if (
        state.current() !== 0x26 /* & */ &&
        (subResult = this.regexp_eatClassSetOperand(state))
      ) {
        if (subResult !== CharSetString) { result = CharSetOk; }
        continue
      }
      state.raise("Invalid character in character class");
    }
    if (start !== state.pos) { return result }
    // https://tc39.es/ecma262/#prod-ClassSubtraction
    while (state.eatChars([0x2D, 0x2D] /* -- */)) {
      if (this.regexp_eatClassSetOperand(state)) { continue }
      state.raise("Invalid character in character class");
    }
    if (start !== state.pos) { return result }
  } else {
    state.raise("Invalid character in character class");
  }
  // https://tc39.es/ecma262/#prod-ClassUnion
  for (;;) {
    if (this.regexp_eatClassSetRange(state)) { continue }
    subResult = this.regexp_eatClassSetOperand(state);
    if (!subResult) { return result }
    if (subResult === CharSetString) { result = CharSetString; }
  }
};

// https://tc39.es/ecma262/#prod-ClassSetRange
pp$1.regexp_eatClassSetRange = function(state) {
  var start = state.pos;
  if (this.regexp_eatClassSetCharacter(state)) {
    var left = state.lastIntValue;
    if (state.eat(0x2D /* - */) && this.regexp_eatClassSetCharacter(state)) {
      var right = state.lastIntValue;
      if (left !== -1 && right !== -1 && left > right) {
        state.raise("Range out of order in character class");
      }
      return true
    }
    state.pos = start;
  }
  return false
};

// https://tc39.es/ecma262/#prod-ClassSetOperand
pp$1.regexp_eatClassSetOperand = function(state) {
  if (this.regexp_eatClassSetCharacter(state)) { return CharSetOk }
  return this.regexp_eatClassStringDisjunction(state) || this.regexp_eatNestedClass(state)
};

// https://tc39.es/ecma262/#prod-NestedClass
pp$1.regexp_eatNestedClass = function(state) {
  var start = state.pos;
  if (state.eat(0x5B /* [ */)) {
    var negate = state.eat(0x5E /* ^ */);
    var result = this.regexp_classContents(state);
    if (state.eat(0x5D /* ] */)) {
      if (negate && result === CharSetString) {
        state.raise("Negated character class may contain strings");
      }
      return result
    }
    state.pos = start;
  }
  if (state.eat(0x5C /* \ */)) {
    var result$1 = this.regexp_eatCharacterClassEscape(state);
    if (result$1) {
      return result$1
    }
    state.pos = start;
  }
  return null
};

// https://tc39.es/ecma262/#prod-ClassStringDisjunction
pp$1.regexp_eatClassStringDisjunction = function(state) {
  var start = state.pos;
  if (state.eatChars([0x5C, 0x71] /* \q */)) {
    if (state.eat(0x7B /* { */)) {
      var result = this.regexp_classStringDisjunctionContents(state);
      if (state.eat(0x7D /* } */)) {
        return result
      }
    } else {
      // Make the same message as V8.
      state.raise("Invalid escape");
    }
    state.pos = start;
  }
  return null
};

// https://tc39.es/ecma262/#prod-ClassStringDisjunctionContents
pp$1.regexp_classStringDisjunctionContents = function(state) {
  var result = this.regexp_classString(state);
  while (state.eat(0x7C /* | */)) {
    if (this.regexp_classString(state) === CharSetString) { result = CharSetString; }
  }
  return result
};

// https://tc39.es/ecma262/#prod-ClassString
// https://tc39.es/ecma262/#prod-NonEmptyClassString
pp$1.regexp_classString = function(state) {
  var count = 0;
  while (this.regexp_eatClassSetCharacter(state)) { count++; }
  return count === 1 ? CharSetOk : CharSetString
};

// https://tc39.es/ecma262/#prod-ClassSetCharacter
pp$1.regexp_eatClassSetCharacter = function(state) {
  var start = state.pos;
  if (state.eat(0x5C /* \ */)) {
    if (
      this.regexp_eatCharacterEscape(state) ||
      this.regexp_eatClassSetReservedPunctuator(state)
    ) {
      return true
    }
    if (state.eat(0x62 /* b */)) {
      state.lastIntValue = 0x08; /* <BS> */
      return true
    }
    state.pos = start;
    return false
  }
  var ch = state.current();
  if (ch < 0 || ch === state.lookahead() && isClassSetReservedDoublePunctuatorCharacter(ch)) { return false }
  if (isClassSetSyntaxCharacter(ch)) { return false }
  state.advance();
  state.lastIntValue = ch;
  return true
};

// https://tc39.es/ecma262/#prod-ClassSetReservedDoublePunctuator
function isClassSetReservedDoublePunctuatorCharacter(ch) {
  return (
    ch === 0x21 /* ! */ ||
    ch >= 0x23 /* # */ && ch <= 0x26 /* & */ ||
    ch >= 0x2A /* * */ && ch <= 0x2C /* , */ ||
    ch === 0x2E /* . */ ||
    ch >= 0x3A /* : */ && ch <= 0x40 /* @ */ ||
    ch === 0x5E /* ^ */ ||
    ch === 0x60 /* ` */ ||
    ch === 0x7E /* ~ */
  )
}

// https://tc39.es/ecma262/#prod-ClassSetSyntaxCharacter
function isClassSetSyntaxCharacter(ch) {
  return (
    ch === 0x28 /* ( */ ||
    ch === 0x29 /* ) */ ||
    ch === 0x2D /* - */ ||
    ch === 0x2F /* / */ ||
    ch >= 0x5B /* [ */ && ch <= 0x5D /* ] */ ||
    ch >= 0x7B /* { */ && ch <= 0x7D /* } */
  )
}

// https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator
pp$1.regexp_eatClassSetReservedPunctuator = function(state) {
  var ch = state.current();
  if (isClassSetReservedPunctuator(ch)) {
    state.lastIntValue = ch;
    state.advance();
    return true
  }
  return false
};

// https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator
function isClassSetReservedPunctuator(ch) {
  return (
    ch === 0x21 /* ! */ ||
    ch === 0x23 /* # */ ||
    ch === 0x25 /* % */ ||
    ch === 0x26 /* & */ ||
    ch === 0x2C /* , */ ||
    ch === 0x2D /* - */ ||
    ch >= 0x3A /* : */ && ch <= 0x3E /* > */ ||
    ch === 0x40 /* @ */ ||
    ch === 0x60 /* ` */ ||
    ch === 0x7E /* ~ */
  )
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter
pp$1.regexp_eatClassControlLetter = function(state) {
  var ch = state.current();
  if (isDecimalDigit$1(ch) || ch === 0x5F /* _ */) {
    state.lastIntValue = ch % 0x20;
    state.advance();
    return true
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence
pp$1.regexp_eatHexEscapeSequence = function(state) {
  var start = state.pos;
  if (state.eat(0x78 /* x */)) {
    if (this.regexp_eatFixedHexDigits(state, 2)) {
      return true
    }
    if (state.switchU) {
      state.raise("Invalid escape");
    }
    state.pos = start;
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits
pp$1.regexp_eatDecimalDigits = function(state) {
  var start = state.pos;
  var ch = 0;
  state.lastIntValue = 0;
  while (isDecimalDigit$1(ch = state.current())) {
    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);
    state.advance();
  }
  return state.pos !== start
};
function isDecimalDigit$1(ch) {
  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits
pp$1.regexp_eatHexDigits = function(state) {
  var start = state.pos;
  var ch = 0;
  state.lastIntValue = 0;
  while (isHexDigit$1(ch = state.current())) {
    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);
    state.advance();
  }
  return state.pos !== start
};
function isHexDigit$1(ch) {
  return (
    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||
    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||
    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)
  )
}
function hexToInt(ch) {
  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {
    return 10 + (ch - 0x41 /* A */)
  }
  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {
    return 10 + (ch - 0x61 /* a */)
  }
  return ch - 0x30 /* 0 */
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence
// Allows only 0-377(octal) i.e. 0-255(decimal).
pp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {
  if (this.regexp_eatOctalDigit(state)) {
    var n1 = state.lastIntValue;
    if (this.regexp_eatOctalDigit(state)) {
      var n2 = state.lastIntValue;
      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {
        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;
      } else {
        state.lastIntValue = n1 * 8 + n2;
      }
    } else {
      state.lastIntValue = n1;
    }
    return true
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit
pp$1.regexp_eatOctalDigit = function(state) {
  var ch = state.current();
  if (isOctalDigit(ch)) {
    state.lastIntValue = ch - 0x30; /* 0 */
    state.advance();
    return true
  }
  state.lastIntValue = 0;
  return false
};
function isOctalDigit(ch) {
  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits
// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit
// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence
pp$1.regexp_eatFixedHexDigits = function(state, length) {
  var start = state.pos;
  state.lastIntValue = 0;
  for (var i = 0; i < length; ++i) {
    var ch = state.current();
    if (!isHexDigit$1(ch)) {
      state.pos = start;
      return false
    }
    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);
    state.advance();
  }
  return true
};

// Object type used to represent tokens. Note that normally, tokens
// simply exist as properties on the parser object. This is only
// used for the onToken callback and the external tokenizer.

var Token$1 = function Token(p) {
  this.type = p.type;
  this.value = p.value;
  this.start = p.start;
  this.end = p.end;
  if (p.options.locations)
    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }
  if (p.options.ranges)
    { this.range = [p.start, p.end]; }
};

// ## Tokenizer

var pp = Parser.prototype;

// Move to the next token

pp.next = function(ignoreEscapeSequenceInKeyword) {
  if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)
    { this.raiseRecoverable(this.start, "Escape sequence in keyword " + this.type.keyword); }
  if (this.options.onToken)
    { this.options.onToken(new Token$1(this)); }

  this.lastTokEnd = this.end;
  this.lastTokStart = this.start;
  this.lastTokEndLoc = this.endLoc;
  this.lastTokStartLoc = this.startLoc;
  this.nextToken();
};

pp.getToken = function() {
  this.next();
  return new Token$1(this)
};

// If we're in an ES6 environment, make parsers iterable
if (typeof Symbol !== "undefined")
  { pp[Symbol.iterator] = function() {
    var this$1$1 = this;

    return {
      next: function () {
        var token = this$1$1.getToken();
        return {
          done: token.type === types$1.eof,
          value: token
        }
      }
    }
  }; }

// Toggle strict mode. Re-reads the next number or string to please
// pedantic tests (`"use strict"; 010;` should fail).

// Read a single token, updating the parser object's token-related
// properties.

pp.nextToken = function() {
  var curContext = this.curContext();
  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }

  this.start = this.pos;
  if (this.options.locations) { this.startLoc = this.curPosition(); }
  if (this.pos >= this.input.length) { return this.finishToken(types$1.eof) }

  if (curContext.override) { return curContext.override(this) }
  else { this.readToken(this.fullCharCodeAtPos()); }
};

pp.readToken = function(code) {
  // Identifier or keyword. '\uXXXX' sequences are allowed in
  // identifiers, so '\' also dispatches to that.
  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\' */)
    { return this.readWord() }

  return this.getTokenFromCode(code)
};

pp.fullCharCodeAtPos = function() {
  var code = this.input.charCodeAt(this.pos);
  if (code <= 0xd7ff || code >= 0xdc00) { return code }
  var next = this.input.charCodeAt(this.pos + 1);
  return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00
};

pp.skipBlockComment = function() {
  var startLoc = this.options.onComment && this.curPosition();
  var start = this.pos, end = this.input.indexOf("*/", this.pos += 2);
  if (end === -1) { this.raise(this.pos - 2, "Unterminated comment"); }
  this.pos = end + 2;
  if (this.options.locations) {
    for (var nextBreak = (void 0), pos = start; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1;) {
      ++this.curLine;
      pos = this.lineStart = nextBreak;
    }
  }
  if (this.options.onComment)
    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,
                           startLoc, this.curPosition()); }
};

pp.skipLineComment = function(startSkip) {
  var start = this.pos;
  var startLoc = this.options.onComment && this.curPosition();
  var ch = this.input.charCodeAt(this.pos += startSkip);
  while (this.pos < this.input.length && !isNewLine(ch)) {
    ch = this.input.charCodeAt(++this.pos);
  }
  if (this.options.onComment)
    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,
                           startLoc, this.curPosition()); }
};

// Called at the start of the parse and after every token. Skips
// whitespace and comments, and.

pp.skipSpace = function() {
  loop: while (this.pos < this.input.length) {
    var ch = this.input.charCodeAt(this.pos);
    switch (ch) {
    case 32: case 160: // ' '
      ++this.pos;
      break
    case 13:
      if (this.input.charCodeAt(this.pos + 1) === 10) {
        ++this.pos;
      }
    case 10: case 8232: case 8233:
      ++this.pos;
      if (this.options.locations) {
        ++this.curLine;
        this.lineStart = this.pos;
      }
      break
    case 47: // '/'
      switch (this.input.charCodeAt(this.pos + 1)) {
      case 42: // '*'
        this.skipBlockComment();
        break
      case 47:
        this.skipLineComment(2);
        break
      default:
        break loop
      }
      break
    default:
      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {
        ++this.pos;
      } else {
        break loop
      }
    }
  }
};

// Called at the end of every token. Sets `end`, `val`, and
// maintains `context` and `exprAllowed`, and skips the space after
// the token, so that the next one's `start` will point at the
// right position.

pp.finishToken = function(type, val) {
  this.end = this.pos;
  if (this.options.locations) { this.endLoc = this.curPosition(); }
  var prevType = this.type;
  this.type = type;
  this.value = val;

  this.updateContext(prevType);
};

// ### Token reading

// This is the function that is called to fetch the next token. It
// is somewhat obscure, because it works in character codes rather
// than characters, and because operator parsing has been inlined
// into it.
//
// All in the name of speed.
//
pp.readToken_dot = function() {
  var next = this.input.charCodeAt(this.pos + 1);
  if (next >= 48 && next <= 57) { return this.readNumber(true) }
  var next2 = this.input.charCodeAt(this.pos + 2);
  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'
    this.pos += 3;
    return this.finishToken(types$1.ellipsis)
  } else {
    ++this.pos;
    return this.finishToken(types$1.dot)
  }
};

pp.readToken_slash = function() { // '/'
  var next = this.input.charCodeAt(this.pos + 1);
  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }
  if (next === 61) { return this.finishOp(types$1.assign, 2) }
  return this.finishOp(types$1.slash, 1)
};

pp.readToken_mult_modulo_exp = function(code) { // '%*'
  var next = this.input.charCodeAt(this.pos + 1);
  var size = 1;
  var tokentype = code === 42 ? types$1.star : types$1.modulo;

  // exponentiation operator ** and **=
  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {
    ++size;
    tokentype = types$1.starstar;
    next = this.input.charCodeAt(this.pos + 2);
  }

  if (next === 61) { return this.finishOp(types$1.assign, size + 1) }
  return this.finishOp(tokentype, size)
};

pp.readToken_pipe_amp = function(code) { // '|&'
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === code) {
    if (this.options.ecmaVersion >= 12) {
      var next2 = this.input.charCodeAt(this.pos + 2);
      if (next2 === 61) { return this.finishOp(types$1.assign, 3) }
    }
    return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2)
  }
  if (next === 61) { return this.finishOp(types$1.assign, 2) }
  return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1)
};

pp.readToken_caret = function() { // '^'
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === 61) { return this.finishOp(types$1.assign, 2) }
  return this.finishOp(types$1.bitwiseXOR, 1)
};

pp.readToken_plus_min = function(code) { // '+-'
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === code) {
    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&
        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {
      // A `-->` line comment
      this.skipLineComment(3);
      this.skipSpace();
      return this.nextToken()
    }
    return this.finishOp(types$1.incDec, 2)
  }
  if (next === 61) { return this.finishOp(types$1.assign, 2) }
  return this.finishOp(types$1.plusMin, 1)
};

pp.readToken_lt_gt = function(code) { // '<>'
  var next = this.input.charCodeAt(this.pos + 1);
  var size = 1;
  if (next === code) {
    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;
    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types$1.assign, size + 1) }
    return this.finishOp(types$1.bitShift, size)
  }
  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&
      this.input.charCodeAt(this.pos + 3) === 45) {
    // `<!--`, an XML-style comment that should be interpreted as a line comment
    this.skipLineComment(4);
    this.skipSpace();
    return this.nextToken()
  }
  if (next === 61) { size = 2; }
  return this.finishOp(types$1.relational, size)
};

pp.readToken_eq_excl = function(code) { // '=!'
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === 61) { return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }
  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'
    this.pos += 2;
    return this.finishToken(types$1.arrow)
  }
  return this.finishOp(code === 61 ? types$1.eq : types$1.prefix, 1)
};

pp.readToken_question = function() { // '?'
  var ecmaVersion = this.options.ecmaVersion;
  if (ecmaVersion >= 11) {
    var next = this.input.charCodeAt(this.pos + 1);
    if (next === 46) {
      var next2 = this.input.charCodeAt(this.pos + 2);
      if (next2 < 48 || next2 > 57) { return this.finishOp(types$1.questionDot, 2) }
    }
    if (next === 63) {
      if (ecmaVersion >= 12) {
        var next2$1 = this.input.charCodeAt(this.pos + 2);
        if (next2$1 === 61) { return this.finishOp(types$1.assign, 3) }
      }
      return this.finishOp(types$1.coalesce, 2)
    }
  }
  return this.finishOp(types$1.question, 1)
};

pp.readToken_numberSign = function() { // '#'
  var ecmaVersion = this.options.ecmaVersion;
  var code = 35; // '#'
  if (ecmaVersion >= 13) {
    ++this.pos;
    code = this.fullCharCodeAtPos();
    if (isIdentifierStart(code, true) || code === 92 /* '\' */) {
      return this.finishToken(types$1.privateId, this.readWord1())
    }
  }

  this.raise(this.pos, "Unexpected character '" + codePointToString(code) + "'");
};

pp.getTokenFromCode = function(code) {
  switch (code) {
  // The interpretation of a dot depends on whether it is followed
  // by a digit or another two dots.
  case 46: // '.'
    return this.readToken_dot()

  // Punctuation tokens.
  case 40: ++this.pos; return this.finishToken(types$1.parenL)
  case 41: ++this.pos; return this.finishToken(types$1.parenR)
  case 59: ++this.pos; return this.finishToken(types$1.semi)
  case 44: ++this.pos; return this.finishToken(types$1.comma)
  case 91: ++this.pos; return this.finishToken(types$1.bracketL)
  case 93: ++this.pos; return this.finishToken(types$1.bracketR)
  case 123: ++this.pos; return this.finishToken(types$1.braceL)
  case 125: ++this.pos; return this.finishToken(types$1.braceR)
  case 58: ++this.pos; return this.finishToken(types$1.colon)

  case 96: // '`'
    if (this.options.ecmaVersion < 6) { break }
    ++this.pos;
    return this.finishToken(types$1.backQuote)

  case 48: // '0'
    var next = this.input.charCodeAt(this.pos + 1);
    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number
    if (this.options.ecmaVersion >= 6) {
      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number
      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number
    }

  // Anything else beginning with a digit is an integer, octal
  // number, or float.
  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9
    return this.readNumber(false)

  // Quotes produce strings.
  case 34: case 39: // '"', "'"
    return this.readString(code)

  // Operators are parsed inline in tiny state machines. '=' (61) is
  // often referred to. `finishOp` simply skips the amount of
  // characters it is given as second argument, and returns a token
  // of the type given by its first argument.
  case 47: // '/'
    return this.readToken_slash()

  case 37: case 42: // '%*'
    return this.readToken_mult_modulo_exp(code)

  case 124: case 38: // '|&'
    return this.readToken_pipe_amp(code)

  case 94: // '^'
    return this.readToken_caret()

  case 43: case 45: // '+-'
    return this.readToken_plus_min(code)

  case 60: case 62: // '<>'
    return this.readToken_lt_gt(code)

  case 61: case 33: // '=!'
    return this.readToken_eq_excl(code)

  case 63: // '?'
    return this.readToken_question()

  case 126: // '~'
    return this.finishOp(types$1.prefix, 1)

  case 35: // '#'
    return this.readToken_numberSign()
  }

  this.raise(this.pos, "Unexpected character '" + codePointToString(code) + "'");
};

pp.finishOp = function(type, size) {
  var str = this.input.slice(this.pos, this.pos + size);
  this.pos += size;
  return this.finishToken(type, str)
};

pp.readRegexp = function() {
  var escaped, inClass, start = this.pos;
  for (;;) {
    if (this.pos >= this.input.length) { this.raise(start, "Unterminated regular expression"); }
    var ch = this.input.charAt(this.pos);
    if (lineBreak.test(ch)) { this.raise(start, "Unterminated regular expression"); }
    if (!escaped) {
      if (ch === "[") { inClass = true; }
      else if (ch === "]" && inClass) { inClass = false; }
      else if (ch === "/" && !inClass) { break }
      escaped = ch === "\\";
    } else { escaped = false; }
    ++this.pos;
  }
  var pattern = this.input.slice(start, this.pos);
  ++this.pos;
  var flagsStart = this.pos;
  var flags = this.readWord1();
  if (this.containsEsc) { this.unexpected(flagsStart); }

  // Validate pattern
  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));
  state.reset(start, pattern, flags);
  this.validateRegExpFlags(state);
  this.validateRegExpPattern(state);

  // Create Literal#value property value.
  var value = null;
  try {
    value = new RegExp(pattern, flags);
  } catch (e) {
    // ESTree requires null if it failed to instantiate RegExp object.
    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral
  }

  return this.finishToken(types$1.regexp, {pattern: pattern, flags: flags, value: value})
};

// Read an integer in the given radix. Return null if zero digits
// were read, the integer value otherwise. When `len` is given, this
// will return `null` unless the integer has exactly `len` digits.

pp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {
  // `len` is used for character escape sequences. In that case, disallow separators.
  var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;

  // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)
  // and isn't fraction part nor exponent part. In that case, if the first digit
  // is zero then disallow separators.
  var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;

  var start = this.pos, total = 0, lastCode = 0;
  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {
    var code = this.input.charCodeAt(this.pos), val = (void 0);

    if (allowSeparators && code === 95) {
      if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, "Numeric separator is not allowed in legacy octal numeric literals"); }
      if (lastCode === 95) { this.raiseRecoverable(this.pos, "Numeric separator must be exactly one underscore"); }
      if (i === 0) { this.raiseRecoverable(this.pos, "Numeric separator is not allowed at the first of digits"); }
      lastCode = code;
      continue
    }

    if (code >= 97) { val = code - 97 + 10; } // a
    else if (code >= 65) { val = code - 65 + 10; } // A
    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9
    else { val = Infinity; }
    if (val >= radix) { break }
    lastCode = code;
    total = total * radix + val;
  }

  if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, "Numeric separator is not allowed at the last of digits"); }
  if (this.pos === start || len != null && this.pos - start !== len) { return null }

  return total
};

function stringToNumber(str, isLegacyOctalNumericLiteral) {
  if (isLegacyOctalNumericLiteral) {
    return parseInt(str, 8)
  }

  // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.
  return parseFloat(str.replace(/_/g, ""))
}

function stringToBigInt(str) {
  if (typeof BigInt !== "function") {
    return null
  }

  // `BigInt(value)` throws syntax error if the string contains numeric separators.
  return BigInt(str.replace(/_/g, ""))
}

pp.readRadixNumber = function(radix) {
  var start = this.pos;
  this.pos += 2; // 0x
  var val = this.readInt(radix);
  if (val == null) { this.raise(this.start + 2, "Expected number in radix " + radix); }
  if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {
    val = stringToBigInt(this.input.slice(start, this.pos));
    ++this.pos;
  } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, "Identifier directly after number"); }
  return this.finishToken(types$1.num, val)
};

// Read an integer, octal integer, or floating-point number.

pp.readNumber = function(startsWithDot) {
  var start = this.pos;
  if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, "Invalid number"); }
  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;
  if (octal && this.strict) { this.raise(start, "Invalid number"); }
  var next = this.input.charCodeAt(this.pos);
  if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {
    var val$1 = stringToBigInt(this.input.slice(start, this.pos));
    ++this.pos;
    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, "Identifier directly after number"); }
    return this.finishToken(types$1.num, val$1)
  }
  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }
  if (next === 46 && !octal) { // '.'
    ++this.pos;
    this.readInt(10);
    next = this.input.charCodeAt(this.pos);
  }
  if ((next === 69 || next === 101) && !octal) { // 'eE'
    next = this.input.charCodeAt(++this.pos);
    if (next === 43 || next === 45) { ++this.pos; } // '+-'
    if (this.readInt(10) === null) { this.raise(start, "Invalid number"); }
  }
  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, "Identifier directly after number"); }

  var val = stringToNumber(this.input.slice(start, this.pos), octal);
  return this.finishToken(types$1.num, val)
};

// Read a string value, interpreting backslash-escapes.

pp.readCodePoint = function() {
  var ch = this.input.charCodeAt(this.pos), code;

  if (ch === 123) { // '{'
    if (this.options.ecmaVersion < 6) { this.unexpected(); }
    var codePos = ++this.pos;
    code = this.readHexChar(this.input.indexOf("}", this.pos) - this.pos);
    ++this.pos;
    if (code > 0x10FFFF) { this.invalidStringToken(codePos, "Code point out of bounds"); }
  } else {
    code = this.readHexChar(4);
  }
  return code
};

pp.readString = function(quote) {
  var out = "", chunkStart = ++this.pos;
  for (;;) {
    if (this.pos >= this.input.length) { this.raise(this.start, "Unterminated string constant"); }
    var ch = this.input.charCodeAt(this.pos);
    if (ch === quote) { break }
    if (ch === 92) { // '\'
      out += this.input.slice(chunkStart, this.pos);
      out += this.readEscapedChar(false);
      chunkStart = this.pos;
    } else if (ch === 0x2028 || ch === 0x2029) {
      if (this.options.ecmaVersion < 10) { this.raise(this.start, "Unterminated string constant"); }
      ++this.pos;
      if (this.options.locations) {
        this.curLine++;
        this.lineStart = this.pos;
      }
    } else {
      if (isNewLine(ch)) { this.raise(this.start, "Unterminated string constant"); }
      ++this.pos;
    }
  }
  out += this.input.slice(chunkStart, this.pos++);
  return this.finishToken(types$1.string, out)
};

// Reads template string tokens.

var INVALID_TEMPLATE_ESCAPE_ERROR = {};

pp.tryReadTemplateToken = function() {
  this.inTemplateElement = true;
  try {
    this.readTmplToken();
  } catch (err) {
    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {
      this.readInvalidTemplateToken();
    } else {
      throw err
    }
  }

  this.inTemplateElement = false;
};

pp.invalidStringToken = function(position, message) {
  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {
    throw INVALID_TEMPLATE_ESCAPE_ERROR
  } else {
    this.raise(position, message);
  }
};

pp.readTmplToken = function() {
  var out = "", chunkStart = this.pos;
  for (;;) {
    if (this.pos >= this.input.length) { this.raise(this.start, "Unterminated template"); }
    var ch = this.input.charCodeAt(this.pos);
    if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'
      if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {
        if (ch === 36) {
          this.pos += 2;
          return this.finishToken(types$1.dollarBraceL)
        } else {
          ++this.pos;
          return this.finishToken(types$1.backQuote)
        }
      }
      out += this.input.slice(chunkStart, this.pos);
      return this.finishToken(types$1.template, out)
    }
    if (ch === 92) { // '\'
      out += this.input.slice(chunkStart, this.pos);
      out += this.readEscapedChar(true);
      chunkStart = this.pos;
    } else if (isNewLine(ch)) {
      out += this.input.slice(chunkStart, this.pos);
      ++this.pos;
      switch (ch) {
      case 13:
        if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }
      case 10:
        out += "\n";
        break
      default:
        out += String.fromCharCode(ch);
        break
      }
      if (this.options.locations) {
        ++this.curLine;
        this.lineStart = this.pos;
      }
      chunkStart = this.pos;
    } else {
      ++this.pos;
    }
  }
};

// Reads a template token to search for the end, without validating any escape sequences
pp.readInvalidTemplateToken = function() {
  for (; this.pos < this.input.length; this.pos++) {
    switch (this.input[this.pos]) {
    case "\\":
      ++this.pos;
      break

    case "$":
      if (this.input[this.pos + 1] !== "{") { break }
      // fall through
    case "`":
      return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos))

    case "\r":
      if (this.input[this.pos + 1] === "\n") { ++this.pos; }
      // fall through
    case "\n": case "\u2028": case "\u2029":
      ++this.curLine;
      this.lineStart = this.pos + 1;
      break
    }
  }
  this.raise(this.start, "Unterminated template");
};

// Used to read escaped characters

pp.readEscapedChar = function(inTemplate) {
  var ch = this.input.charCodeAt(++this.pos);
  ++this.pos;
  switch (ch) {
  case 110: return "\n" // 'n' -> '\n'
  case 114: return "\r" // 'r' -> '\r'
  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'
  case 117: return codePointToString(this.readCodePoint()) // 'u'
  case 116: return "\t" // 't' -> '\t'
  case 98: return "\b" // 'b' -> '\b'
  case 118: return "\u000b" // 'v' -> '\u000b'
  case 102: return "\f" // 'f' -> '\f'
  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\r\n'
  case 10: // ' \n'
    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }
    return ""
  case 56:
  case 57:
    if (this.strict) {
      this.invalidStringToken(
        this.pos - 1,
        "Invalid escape sequence"
      );
    }
    if (inTemplate) {
      var codePos = this.pos - 1;

      this.invalidStringToken(
        codePos,
        "Invalid escape sequence in template string"
      );
    }
  default:
    if (ch >= 48 && ch <= 55) {
      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];
      var octal = parseInt(octalStr, 8);
      if (octal > 255) {
        octalStr = octalStr.slice(0, -1);
        octal = parseInt(octalStr, 8);
      }
      this.pos += octalStr.length - 1;
      ch = this.input.charCodeAt(this.pos);
      if ((octalStr !== "0" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {
        this.invalidStringToken(
          this.pos - 1 - octalStr.length,
          inTemplate
            ? "Octal literal in template string"
            : "Octal literal in strict mode"
        );
      }
      return String.fromCharCode(octal)
    }
    if (isNewLine(ch)) {
      // Unicode new line characters after \ get removed from output in both
      // template literals and strings
      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }
      return ""
    }
    return String.fromCharCode(ch)
  }
};

// Used to read character escape sequences ('\x', '\u', '\U').

pp.readHexChar = function(len) {
  var codePos = this.pos;
  var n = this.readInt(16, len);
  if (n === null) { this.invalidStringToken(codePos, "Bad character escape sequence"); }
  return n
};

// Read an identifier, and return it as a string. Sets `this.containsEsc`
// to whether the word contained a '\u' escape.
//
// Incrementally adds only escaped chars, adding other chunks as-is
// as a micro-optimization.

pp.readWord1 = function() {
  this.containsEsc = false;
  var word = "", first = true, chunkStart = this.pos;
  var astral = this.options.ecmaVersion >= 6;
  while (this.pos < this.input.length) {
    var ch = this.fullCharCodeAtPos();
    if (isIdentifierChar(ch, astral)) {
      this.pos += ch <= 0xffff ? 1 : 2;
    } else if (ch === 92) { // "\"
      this.containsEsc = true;
      word += this.input.slice(chunkStart, this.pos);
      var escStart = this.pos;
      if (this.input.charCodeAt(++this.pos) !== 117) // "u"
        { this.invalidStringToken(this.pos, "Expecting Unicode escape sequence \\uXXXX"); }
      ++this.pos;
      var esc = this.readCodePoint();
      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))
        { this.invalidStringToken(escStart, "Invalid Unicode escape"); }
      word += codePointToString(esc);
      chunkStart = this.pos;
    } else {
      break
    }
    first = false;
  }
  return word + this.input.slice(chunkStart, this.pos)
};

// Read an identifier or keyword token. Will check for reserved
// words when necessary.

pp.readWord = function() {
  var word = this.readWord1();
  var type = types$1.name;
  if (this.keywords.test(word)) {
    type = keywords[word];
  }
  return this.finishToken(type, word)
};

// Acorn is a tiny, fast JavaScript parser written in JavaScript.
//
// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and
// various contributors and released under an MIT license.
//
// Git repositories for Acorn are available at
//
//     http://marijnhaverbeke.nl/git/acorn
//     https://github.com/acornjs/acorn.git
//
// Please use the [github bug tracker][ghbt] to report issues.
//
// [ghbt]: https://github.com/acornjs/acorn/issues
//
// [walk]: util/walk.js


var version = "8.14.1";

Parser.acorn = {
  Parser: Parser,
  version: version,
  defaultOptions: defaultOptions,
  Position: Position,
  SourceLocation: SourceLocation,
  getLineInfo: getLineInfo,
  Node: Node,
  TokenType: TokenType$1,
  tokTypes: types$1,
  keywordTypes: keywords,
  TokContext: TokContext,
  tokContexts: types$2,
  isIdentifierChar: isIdentifierChar,
  isIdentifierStart: isIdentifierStart,
  Token: Token$1,
  isNewLine: isNewLine,
  lineBreak: lineBreak,
  lineBreakG: lineBreakG,
  nonASCIIwhitespace: nonASCIIwhitespace
};

// The main exported interface (under `self.acorn` when in the
// browser) is a `parse` function that takes a code string and returns
// an abstract syntax tree as specified by the [ESTree spec][estree].
//
// [estree]: https://github.com/estree/estree

function parse$1(input, options) {
  return Parser.parse(input, options)
}

// This function tries to parse a single expression at a given
// offset in a string. Useful for parsing mixed-language formats
// that embed JavaScript expressions.

function parseExpressionAt(input, pos, options) {
  return Parser.parseExpressionAt(input, pos, options)
}

// Acorn is organized as a tokenizer and a recursive-descent parser.
// The `tokenizer` export provides an interface to the tokenizer.

function tokenizer(input, options) {
  return Parser.tokenizer(input, options)
}

var acorn = /*#__PURE__*/Object.freeze({
    __proto__: null,
    Node: Node,
    Parser: Parser,
    Position: Position,
    SourceLocation: SourceLocation,
    TokContext: TokContext,
    Token: Token$1,
    TokenType: TokenType$1,
    defaultOptions: defaultOptions,
    getLineInfo: getLineInfo,
    isIdentifierChar: isIdentifierChar,
    isIdentifierStart: isIdentifierStart,
    isNewLine: isNewLine,
    keywordTypes: keywords,
    lineBreak: lineBreak,
    lineBreakG: lineBreakG,
    nonASCIIwhitespace: nonASCIIwhitespace,
    parse: parse$1,
    parseExpressionAt: parseExpressionAt,
    tokContexts: types$2,
    tokTypes: types$1,
    tokenizer: tokenizer,
    version: version
});

// AST walker module for ESTree compatible trees

// A simple walk is one where you simply specify callbacks to be
// called on specific nodes. The last two arguments are optional. A
// simple use would be
//
//     walk.simple(myTree, {
//         Expression: function(node) { ... }
//     });
//
// to do something with all expressions. All ESTree node types
// can be used to identify node types, as well as Expression and
// Statement, which denote categories of nodes.
//
// The base argument can be used to pass a custom (recursive)
// walker, and state can be used to give this walked an initial
// state.

function simple(node, visitors, baseVisitor, state, override) {
  if (!baseVisitor) { baseVisitor = base
  ; }(function c(node, st, override) {
    var type = override || node.type;
    baseVisitor[type](node, st, c);
    if (visitors[type]) { visitors[type](node, st); }
  })(node, state, override);
}

function skipThrough(node, st, c) { c(node, st); }
function ignore(_node, _st, _c) {}

// Node walkers.

var base = {};

base.Program = base.BlockStatement = base.StaticBlock = function (node, st, c) {
  for (var i = 0, list = node.body; i < list.length; i += 1)
    {
    var stmt = list[i];

    c(stmt, st, "Statement");
  }
};
base.Statement = skipThrough;
base.EmptyStatement = ignore;
base.ExpressionStatement = base.ParenthesizedExpression = base.ChainExpression =
  function (node, st, c) { return c(node.expression, st, "Expression"); };
base.IfStatement = function (node, st, c) {
  c(node.test, st, "Expression");
  c(node.consequent, st, "Statement");
  if (node.alternate) { c(node.alternate, st, "Statement"); }
};
base.LabeledStatement = function (node, st, c) { return c(node.body, st, "Statement"); };
base.BreakStatement = base.ContinueStatement = ignore;
base.WithStatement = function (node, st, c) {
  c(node.object, st, "Expression");
  c(node.body, st, "Statement");
};
base.SwitchStatement = function (node, st, c) {
  c(node.discriminant, st, "Expression");
  for (var i = 0, list = node.cases; i < list.length; i += 1) {
    var cs = list[i];

    c(cs, st);
  }
};
base.SwitchCase = function (node, st, c) {
  if (node.test) { c(node.test, st, "Expression"); }
  for (var i = 0, list = node.consequent; i < list.length; i += 1)
    {
    var cons = list[i];

    c(cons, st, "Statement");
  }
};
base.ReturnStatement = base.YieldExpression = base.AwaitExpression = function (node, st, c) {
  if (node.argument) { c(node.argument, st, "Expression"); }
};
base.ThrowStatement = base.SpreadElement =
  function (node, st, c) { return c(node.argument, st, "Expression"); };
base.TryStatement = function (node, st, c) {
  c(node.block, st, "Statement");
  if (node.handler) { c(node.handler, st); }
  if (node.finalizer) { c(node.finalizer, st, "Statement"); }
};
base.CatchClause = function (node, st, c) {
  if (node.param) { c(node.param, st, "Pattern"); }
  c(node.body, st, "Statement");
};
base.WhileStatement = base.DoWhileStatement = function (node, st, c) {
  c(node.test, st, "Expression");
  c(node.body, st, "Statement");
};
base.ForStatement = function (node, st, c) {
  if (node.init) { c(node.init, st, "ForInit"); }
  if (node.test) { c(node.test, st, "Expression"); }
  if (node.update) { c(node.update, st, "Expression"); }
  c(node.body, st, "Statement");
};
base.ForInStatement = base.ForOfStatement = function (node, st, c) {
  c(node.left, st, "ForInit");
  c(node.right, st, "Expression");
  c(node.body, st, "Statement");
};
base.ForInit = function (node, st, c) {
  if (node.type === "VariableDeclaration") { c(node, st); }
  else { c(node, st, "Expression"); }
};
base.DebuggerStatement = ignore;

base.FunctionDeclaration = function (node, st, c) { return c(node, st, "Function"); };
base.VariableDeclaration = function (node, st, c) {
  for (var i = 0, list = node.declarations; i < list.length; i += 1)
    {
    var decl = list[i];

    c(decl, st);
  }
};
base.VariableDeclarator = function (node, st, c) {
  c(node.id, st, "Pattern");
  if (node.init) { c(node.init, st, "Expression"); }
};

base.Function = function (node, st, c) {
  if (node.id) { c(node.id, st, "Pattern"); }
  for (var i = 0, list = node.params; i < list.length; i += 1)
    {
    var param = list[i];

    c(param, st, "Pattern");
  }
  c(node.body, st, node.expression ? "Expression" : "Statement");
};

base.Pattern = function (node, st, c) {
  if (node.type === "Identifier")
    { c(node, st, "VariablePattern"); }
  else if (node.type === "MemberExpression")
    { c(node, st, "MemberPattern"); }
  else
    { c(node, st); }
};
base.VariablePattern = ignore;
base.MemberPattern = skipThrough;
base.RestElement = function (node, st, c) { return c(node.argument, st, "Pattern"); };
base.ArrayPattern = function (node, st, c) {
  for (var i = 0, list = node.elements; i < list.length; i += 1) {
    var elt = list[i];

    if (elt) { c(elt, st, "Pattern"); }
  }
};
base.ObjectPattern = function (node, st, c) {
  for (var i = 0, list = node.properties; i < list.length; i += 1) {
    var prop = list[i];

    if (prop.type === "Property") {
      if (prop.computed) { c(prop.key, st, "Expression"); }
      c(prop.value, st, "Pattern");
    } else if (prop.type === "RestElement") {
      c(prop.argument, st, "Pattern");
    }
  }
};

base.Expression = skipThrough;
base.ThisExpression = base.Super = base.MetaProperty = ignore;
base.ArrayExpression = function (node, st, c) {
  for (var i = 0, list = node.elements; i < list.length; i += 1) {
    var elt = list[i];

    if (elt) { c(elt, st, "Expression"); }
  }
};
base.ObjectExpression = function (node, st, c) {
  for (var i = 0, list = node.properties; i < list.length; i += 1)
    {
    var prop = list[i];

    c(prop, st);
  }
};
base.FunctionExpression = base.ArrowFunctionExpression = base.FunctionDeclaration;
base.SequenceExpression = function (node, st, c) {
  for (var i = 0, list = node.expressions; i < list.length; i += 1)
    {
    var expr = list[i];

    c(expr, st, "Expression");
  }
};
base.TemplateLiteral = function (node, st, c) {
  for (var i = 0, list = node.quasis; i < list.length; i += 1)
    {
    var quasi = list[i];

    c(quasi, st);
  }

  for (var i$1 = 0, list$1 = node.expressions; i$1 < list$1.length; i$1 += 1)
    {
    var expr = list$1[i$1];

    c(expr, st, "Expression");
  }
};
base.TemplateElement = ignore;
base.UnaryExpression = base.UpdateExpression = function (node, st, c) {
  c(node.argument, st, "Expression");
};
base.BinaryExpression = base.LogicalExpression = function (node, st, c) {
  c(node.left, st, "Expression");
  c(node.right, st, "Expression");
};
base.AssignmentExpression = base.AssignmentPattern = function (node, st, c) {
  c(node.left, st, "Pattern");
  c(node.right, st, "Expression");
};
base.ConditionalExpression = function (node, st, c) {
  c(node.test, st, "Expression");
  c(node.consequent, st, "Expression");
  c(node.alternate, st, "Expression");
};
base.NewExpression = base.CallExpression = function (node, st, c) {
  c(node.callee, st, "Expression");
  if (node.arguments)
    { for (var i = 0, list = node.arguments; i < list.length; i += 1)
      {
        var arg = list[i];

        c(arg, st, "Expression");
      } }
};
base.MemberExpression = function (node, st, c) {
  c(node.object, st, "Expression");
  if (node.computed) { c(node.property, st, "Expression"); }
};
base.ExportNamedDeclaration = base.ExportDefaultDeclaration = function (node, st, c) {
  if (node.declaration)
    { c(node.declaration, st, node.type === "ExportNamedDeclaration" || node.declaration.id ? "Statement" : "Expression"); }
  if (node.source) { c(node.source, st, "Expression"); }
};
base.ExportAllDeclaration = function (node, st, c) {
  if (node.exported)
    { c(node.exported, st); }
  c(node.source, st, "Expression");
};
base.ImportDeclaration = function (node, st, c) {
  for (var i = 0, list = node.specifiers; i < list.length; i += 1)
    {
    var spec = list[i];

    c(spec, st);
  }
  c(node.source, st, "Expression");
};
base.ImportExpression = function (node, st, c) {
  c(node.source, st, "Expression");
};
base.ImportSpecifier = base.ImportDefaultSpecifier = base.ImportNamespaceSpecifier = base.Identifier = base.PrivateIdentifier = base.Literal = ignore;

base.TaggedTemplateExpression = function (node, st, c) {
  c(node.tag, st, "Expression");
  c(node.quasi, st, "Expression");
};
base.ClassDeclaration = base.ClassExpression = function (node, st, c) { return c(node, st, "Class"); };
base.Class = function (node, st, c) {
  if (node.id) { c(node.id, st, "Pattern"); }
  if (node.superClass) { c(node.superClass, st, "Expression"); }
  c(node.body, st);
};
base.ClassBody = function (node, st, c) {
  for (var i = 0, list = node.body; i < list.length; i += 1)
    {
    var elt = list[i];

    c(elt, st);
  }
};
base.MethodDefinition = base.PropertyDefinition = base.Property = function (node, st, c) {
  if (node.computed) { c(node.key, st, "Expression"); }
  if (node.value) { c(node.value, st, "Expression"); }
};

// Astring is a tiny and fast JavaScript code generator from an ESTree-compliant AST.
//
// Astring was written by David Bonnet and released under an MIT license.
//
// The Git repository for Astring is available at:
// https://github.com/davidbonnet/astring.git
//
// Please use the GitHub bug tracker to report issues:
// https://github.com/davidbonnet/astring/issues

const { stringify } = JSON;

/* c8 ignore if */
if (!String.prototype.repeat) {
  /* c8 ignore next */
  throw new Error(
    'String.prototype.repeat is undefined, see https://github.com/davidbonnet/astring#installation',
  )
}

/* c8 ignore if */
if (!String.prototype.endsWith) {
  /* c8 ignore next */
  throw new Error(
    'String.prototype.endsWith is undefined, see https://github.com/davidbonnet/astring#installation',
  )
}

const OPERATOR_PRECEDENCE = {
  '||': 2,
  '??': 3,
  '&&': 4,
  '|': 5,
  '^': 6,
  '&': 7,
  '==': 8,
  '!=': 8,
  '===': 8,
  '!==': 8,
  '<': 9,
  '>': 9,
  '<=': 9,
  '>=': 9,
  in: 9,
  instanceof: 9,
  '<<': 10,
  '>>': 10,
  '>>>': 10,
  '+': 11,
  '-': 11,
  '*': 12,
  '%': 12,
  '/': 12,
  '**': 13,
};

// Enables parenthesis regardless of precedence
const NEEDS_PARENTHESES = 17;

const EXPRESSIONS_PRECEDENCE = {
  // Definitions
  ArrayExpression: 20,
  TaggedTemplateExpression: 20,
  ThisExpression: 20,
  Identifier: 20,
  PrivateIdentifier: 20,
  Literal: 18,
  TemplateLiteral: 20,
  Super: 20,
  SequenceExpression: 20,
  // Operations
  MemberExpression: 19,
  ChainExpression: 19,
  CallExpression: 19,
  NewExpression: 19,
  // Other definitions
  ArrowFunctionExpression: NEEDS_PARENTHESES,
  ClassExpression: NEEDS_PARENTHESES,
  FunctionExpression: NEEDS_PARENTHESES,
  ObjectExpression: NEEDS_PARENTHESES,
  // Other operations
  UpdateExpression: 16,
  UnaryExpression: 15,
  AwaitExpression: 15,
  BinaryExpression: 14,
  LogicalExpression: 13,
  ConditionalExpression: 4,
  AssignmentExpression: 3,
  YieldExpression: 2,
  RestElement: 1,
};

function formatSequence(state, nodes) {
  /*
  Writes into `state` a sequence of `nodes`.
  */
  const { generator } = state;
  state.write('(');
  if (nodes != null && nodes.length > 0) {
    generator[nodes[0].type](nodes[0], state);
    const { length } = nodes;
    for (let i = 1; i < length; i++) {
      const param = nodes[i];
      state.write(', ');
      generator[param.type](param, state);
    }
  }
  state.write(')');
}

function expressionNeedsParenthesis(state, node, parentNode, isRightHand) {
  const nodePrecedence = state.expressionsPrecedence[node.type];
  if (nodePrecedence === NEEDS_PARENTHESES) {
    return true
  }
  const parentNodePrecedence = state.expressionsPrecedence[parentNode.type];
  if (nodePrecedence !== parentNodePrecedence) {
    // Different node types
    return (
      (!isRightHand &&
        nodePrecedence === 15 &&
        parentNodePrecedence === 14 &&
        parentNode.operator === '**') ||
      nodePrecedence < parentNodePrecedence
    )
  }
  if (nodePrecedence !== 13 && nodePrecedence !== 14) {
    // Not a `LogicalExpression` or `BinaryExpression`
    return false
  }
  if (node.operator === '**' && parentNode.operator === '**') {
    // Exponentiation operator has right-to-left associativity
    return !isRightHand
  }
  if (
    nodePrecedence === 13 &&
    parentNodePrecedence === 13 &&
    (node.operator === '??' || parentNode.operator === '??')
  ) {
    // Nullish coalescing and boolean operators cannot be combined
    return true
  }
  if (isRightHand) {
    // Parenthesis are used if both operators have the same precedence
    return (
      OPERATOR_PRECEDENCE[node.operator] <=
      OPERATOR_PRECEDENCE[parentNode.operator]
    )
  }
  return (
    OPERATOR_PRECEDENCE[node.operator] <
    OPERATOR_PRECEDENCE[parentNode.operator]
  )
}

function formatExpression(state, node, parentNode, isRightHand) {
  /*
  Writes into `state` the provided `node`, adding parenthesis around if the provided `parentNode` needs it. If `node` is a right-hand argument, the provided `isRightHand` parameter should be `true`.
  */
  const { generator } = state;
  if (expressionNeedsParenthesis(state, node, parentNode, isRightHand)) {
    state.write('(');
    generator[node.type](node, state);
    state.write(')');
  } else {
    generator[node.type](node, state);
  }
}

function reindent(state, text, indent, lineEnd) {
  /*
  Writes into `state` the `text` string reindented with the provided `indent`.
  */
  const lines = text.split('\n');
  const end = lines.length - 1;
  state.write(lines[0].trim());
  if (end > 0) {
    state.write(lineEnd);
    for (let i = 1; i < end; i++) {
      state.write(indent + lines[i].trim() + lineEnd);
    }
    state.write(indent + lines[end].trim());
  }
}

function formatComments(state, comments, indent, lineEnd) {
  /*
  Writes into `state` the provided list of `comments`, with the given `indent` and `lineEnd` strings.
  Line comments will end with `"\n"` regardless of the value of `lineEnd`.
  Expects to start on a new unindented line.
  */
  const { length } = comments;
  for (let i = 0; i < length; i++) {
    const comment = comments[i];
    state.write(indent);
    if (comment.type[0] === 'L') {
      // Line comment
      state.write('// ' + comment.value.trim() + '\n', comment);
    } else {
      // Block comment
      state.write('/*');
      reindent(state, comment.value, indent, lineEnd);
      state.write('*/' + lineEnd);
    }
  }
}

function hasCallExpression(node) {
  /*
  Returns `true` if the provided `node` contains a call expression and `false` otherwise.
  */
  let currentNode = node;
  while (currentNode != null) {
    const { type } = currentNode;
    if (type[0] === 'C' && type[1] === 'a') {
      // Is CallExpression
      return true
    } else if (type[0] === 'M' && type[1] === 'e' && type[2] === 'm') {
      // Is MemberExpression
      currentNode = currentNode.object;
    } else {
      return false
    }
  }
}

function formatVariableDeclaration(state, node) {
  /*
  Writes into `state` a variable declaration.
  */
  const { generator } = state;
  const { declarations } = node;
  state.write(node.kind + ' ');
  const { length } = declarations;
  if (length > 0) {
    generator.VariableDeclarator(declarations[0], state);
    for (let i = 1; i < length; i++) {
      state.write(', ');
      generator.VariableDeclarator(declarations[i], state);
    }
  }
}

let ForInStatement,
  FunctionDeclaration,
  RestElement,
  BinaryExpression,
  ArrayExpression,
  BlockStatement;

const GENERATOR = {
  /*
  Default generator.
  */
  Program(node, state) {
    const indent = state.indent.repeat(state.indentLevel);
    const { lineEnd, writeComments } = state;
    if (writeComments && node.comments != null) {
      formatComments(state, node.comments, indent, lineEnd);
    }
    const statements = node.body;
    const { length } = statements;
    for (let i = 0; i < length; i++) {
      const statement = statements[i];
      if (writeComments && statement.comments != null) {
        formatComments(state, statement.comments, indent, lineEnd);
      }
      state.write(indent);
      this[statement.type](statement, state);
      state.write(lineEnd);
    }
    if (writeComments && node.trailingComments != null) {
      formatComments(state, node.trailingComments, indent, lineEnd);
    }
  },
  BlockStatement: (BlockStatement = function (node, state) {
    const indent = state.indent.repeat(state.indentLevel++);
    const { lineEnd, writeComments } = state;
    const statementIndent = indent + state.indent;
    state.write('{');
    const statements = node.body;
    if (statements != null && statements.length > 0) {
      state.write(lineEnd);
      if (writeComments && node.comments != null) {
        formatComments(state, node.comments, statementIndent, lineEnd);
      }
      const { length } = statements;
      for (let i = 0; i < length; i++) {
        const statement = statements[i];
        if (writeComments && statement.comments != null) {
          formatComments(state, statement.comments, statementIndent, lineEnd);
        }
        state.write(statementIndent);
        this[statement.type](statement, state);
        state.write(lineEnd);
      }
      state.write(indent);
    } else {
      if (writeComments && node.comments != null) {
        state.write(lineEnd);
        formatComments(state, node.comments, statementIndent, lineEnd);
        state.write(indent);
      }
    }
    if (writeComments && node.trailingComments != null) {
      formatComments(state, node.trailingComments, statementIndent, lineEnd);
    }
    state.write('}');
    state.indentLevel--;
  }),
  ClassBody: BlockStatement,
  StaticBlock(node, state) {
    state.write('static ');
    this.BlockStatement(node, state);
  },
  EmptyStatement(node, state) {
    state.write(';');
  },
  ExpressionStatement(node, state) {
    const precedence = state.expressionsPrecedence[node.expression.type];
    if (
      precedence === NEEDS_PARENTHESES ||
      (precedence === 3 && node.expression.left.type[0] === 'O')
    ) {
      // Should always have parentheses or is an AssignmentExpression to an ObjectPattern
      state.write('(');
      this[node.expression.type](node.expression, state);
      state.write(')');
    } else {
      this[node.expression.type](node.expression, state);
    }
    state.write(';');
  },
  IfStatement(node, state) {
    state.write('if (');
    this[node.test.type](node.test, state);
    state.write(') ');
    this[node.consequent.type](node.consequent, state);
    if (node.alternate != null) {
      state.write(' else ');
      this[node.alternate.type](node.alternate, state);
    }
  },
  LabeledStatement(node, state) {
    this[node.label.type](node.label, state);
    state.write(': ');
    this[node.body.type](node.body, state);
  },
  BreakStatement(node, state) {
    state.write('break');
    if (node.label != null) {
      state.write(' ');
      this[node.label.type](node.label, state);
    }
    state.write(';');
  },
  ContinueStatement(node, state) {
    state.write('continue');
    if (node.label != null) {
      state.write(' ');
      this[node.label.type](node.label, state);
    }
    state.write(';');
  },
  WithStatement(node, state) {
    state.write('with (');
    this[node.object.type](node.object, state);
    state.write(') ');
    this[node.body.type](node.body, state);
  },
  SwitchStatement(node, state) {
    const indent = state.indent.repeat(state.indentLevel++);
    const { lineEnd, writeComments } = state;
    state.indentLevel++;
    const caseIndent = indent + state.indent;
    const statementIndent = caseIndent + state.indent;
    state.write('switch (');
    this[node.discriminant.type](node.discriminant, state);
    state.write(') {' + lineEnd);
    const { cases: occurences } = node;
    const { length: occurencesCount } = occurences;
    for (let i = 0; i < occurencesCount; i++) {
      const occurence = occurences[i];
      if (writeComments && occurence.comments != null) {
        formatComments(state, occurence.comments, caseIndent, lineEnd);
      }
      if (occurence.test) {
        state.write(caseIndent + 'case ');
        this[occurence.test.type](occurence.test, state);
        state.write(':' + lineEnd);
      } else {
        state.write(caseIndent + 'default:' + lineEnd);
      }
      const { consequent } = occurence;
      const { length: consequentCount } = consequent;
      for (let i = 0; i < consequentCount; i++) {
        const statement = consequent[i];
        if (writeComments && statement.comments != null) {
          formatComments(state, statement.comments, statementIndent, lineEnd);
        }
        state.write(statementIndent);
        this[statement.type](statement, state);
        state.write(lineEnd);
      }
    }
    state.indentLevel -= 2;
    state.write(indent + '}');
  },
  ReturnStatement(node, state) {
    state.write('return');
    if (node.argument) {
      state.write(' ');
      this[node.argument.type](node.argument, state);
    }
    state.write(';');
  },
  ThrowStatement(node, state) {
    state.write('throw ');
    this[node.argument.type](node.argument, state);
    state.write(';');
  },
  TryStatement(node, state) {
    state.write('try ');
    this[node.block.type](node.block, state);
    if (node.handler) {
      const { handler } = node;
      if (handler.param == null) {
        state.write(' catch ');
      } else {
        state.write(' catch (');
        this[handler.param.type](handler.param, state);
        state.write(') ');
      }
      this[handler.body.type](handler.body, state);
    }
    if (node.finalizer) {
      state.write(' finally ');
      this[node.finalizer.type](node.finalizer, state);
    }
  },
  WhileStatement(node, state) {
    state.write('while (');
    this[node.test.type](node.test, state);
    state.write(') ');
    this[node.body.type](node.body, state);
  },
  DoWhileStatement(node, state) {
    state.write('do ');
    this[node.body.type](node.body, state);
    state.write(' while (');
    this[node.test.type](node.test, state);
    state.write(');');
  },
  ForStatement(node, state) {
    state.write('for (');
    if (node.init != null) {
      const { init } = node;
      if (init.type[0] === 'V') {
        formatVariableDeclaration(state, init);
      } else {
        this[init.type](init, state);
      }
    }
    state.write('; ');
    if (node.test) {
      this[node.test.type](node.test, state);
    }
    state.write('; ');
    if (node.update) {
      this[node.update.type](node.update, state);
    }
    state.write(') ');
    this[node.body.type](node.body, state);
  },
  ForInStatement: (ForInStatement = function (node, state) {
    state.write(`for ${node.await ? 'await ' : ''}(`);
    const { left } = node;
    if (left.type[0] === 'V') {
      formatVariableDeclaration(state, left);
    } else {
      this[left.type](left, state);
    }
    // Identifying whether node.type is `ForInStatement` or `ForOfStatement`
    state.write(node.type[3] === 'I' ? ' in ' : ' of ');
    this[node.right.type](node.right, state);
    state.write(') ');
    this[node.body.type](node.body, state);
  }),
  ForOfStatement: ForInStatement,
  DebuggerStatement(node, state) {
    state.write('debugger;', node);
  },
  FunctionDeclaration: (FunctionDeclaration = function (node, state) {
    state.write(
      (node.async ? 'async ' : '') +
        (node.generator ? 'function* ' : 'function ') +
        (node.id ? node.id.name : ''),
      node,
    );
    formatSequence(state, node.params);
    state.write(' ');
    this[node.body.type](node.body, state);
  }),
  FunctionExpression: FunctionDeclaration,
  VariableDeclaration(node, state) {
    formatVariableDeclaration(state, node);
    state.write(';');
  },
  VariableDeclarator(node, state) {
    this[node.id.type](node.id, state);
    if (node.init != null) {
      state.write(' = ');
      this[node.init.type](node.init, state);
    }
  },
  ClassDeclaration(node, state) {
    state.write('class ' + (node.id ? `${node.id.name} ` : ''), node);
    if (node.superClass) {
      state.write('extends ');
      const { superClass } = node;
      const { type } = superClass;
      const precedence = state.expressionsPrecedence[type];
      if (
        (type[0] !== 'C' || type[1] !== 'l' || type[5] !== 'E') &&
        (precedence === NEEDS_PARENTHESES ||
          precedence < state.expressionsPrecedence.ClassExpression)
      ) {
        // Not a ClassExpression that needs parentheses
        state.write('(');
        this[node.superClass.type](superClass, state);
        state.write(')');
      } else {
        this[superClass.type](superClass, state);
      }
      state.write(' ');
    }
    this.ClassBody(node.body, state);
  },
  ImportDeclaration(node, state) {
    state.write('import ');
    const { specifiers, attributes } = node;
    const { length } = specifiers;
    // TODO: Once babili is fixed, put this after condition
    // https://github.com/babel/babili/issues/430
    let i = 0;
    if (length > 0) {
      for (; i < length; ) {
        if (i > 0) {
          state.write(', ');
        }
        const specifier = specifiers[i];
        const type = specifier.type[6];
        if (type === 'D') {
          // ImportDefaultSpecifier
          state.write(specifier.local.name, specifier);
          i++;
        } else if (type === 'N') {
          // ImportNamespaceSpecifier
          state.write('* as ' + specifier.local.name, specifier);
          i++;
        } else {
          // ImportSpecifier
          break
        }
      }
      if (i < length) {
        state.write('{');
        for (;;) {
          const specifier = specifiers[i];
          const { name } = specifier.imported;
          state.write(name, specifier);
          if (name !== specifier.local.name) {
            state.write(' as ' + specifier.local.name);
          }
          if (++i < length) {
            state.write(', ');
          } else {
            break
          }
        }
        state.write('}');
      }
      state.write(' from ');
    }
    this.Literal(node.source, state);

    if (attributes && attributes.length > 0) {
      state.write(' with { ');
      for (let i = 0; i < attributes.length; i++) {
        this.ImportAttribute(attributes[i], state);
        if (i < attributes.length - 1) state.write(', ');
      }

      state.write(' }');
    }
    state.write(';');
  },
  ImportAttribute(node, state) {
    this.Identifier(node.key, state);
    state.write(': ');
    this.Literal(node.value, state);
  },
  ImportExpression(node, state) {
    state.write('import(');
    this[node.source.type](node.source, state);
    state.write(')');
  },
  ExportDefaultDeclaration(node, state) {
    state.write('export default ');
    this[node.declaration.type](node.declaration, state);
    if (
      state.expressionsPrecedence[node.declaration.type] != null &&
      node.declaration.type[0] !== 'F'
    ) {
      // All expression nodes except `FunctionExpression`
      state.write(';');
    }
  },
  ExportNamedDeclaration(node, state) {
    state.write('export ');
    if (node.declaration) {
      this[node.declaration.type](node.declaration, state);
    } else {
      state.write('{');
      const { specifiers } = node,
        { length } = specifiers;
      if (length > 0) {
        for (let i = 0; ; ) {
          const specifier = specifiers[i];
          const { name } = specifier.local;
          state.write(name, specifier);
          if (name !== specifier.exported.name) {
            state.write(' as ' + specifier.exported.name);
          }
          if (++i < length) {
            state.write(', ');
          } else {
            break
          }
        }
      }
      state.write('}');
      if (node.source) {
        state.write(' from ');
        this.Literal(node.source, state);
      }

      if (node.attributes && node.attributes.length > 0) {
        state.write(' with { ');
        for (let i = 0; i < node.attributes.length; i++) {
          this.ImportAttribute(node.attributes[i], state);
          if (i < node.attributes.length - 1) state.write(', ');
        }

        state.write(' }');
      }

      state.write(';');
    }
  },
  ExportAllDeclaration(node, state) {
    if (node.exported != null) {
      state.write('export * as ' + node.exported.name + ' from ');
    } else {
      state.write('export * from ');
    }
    this.Literal(node.source, state);

    if (node.attributes && node.attributes.length > 0) {
      state.write(' with { ');
      for (let i = 0; i < node.attributes.length; i++) {
        this.ImportAttribute(node.attributes[i], state);
        if (i < node.attributes.length - 1) state.write(', ');
      }

      state.write(' }');
    }

    state.write(';');
  },
  MethodDefinition(node, state) {
    if (node.static) {
      state.write('static ');
    }
    const kind = node.kind[0];
    if (kind === 'g' || kind === 's') {
      // Getter or setter
      state.write(node.kind + ' ');
    }
    if (node.value.async) {
      state.write('async ');
    }
    if (node.value.generator) {
      state.write('*');
    }
    if (node.computed) {
      state.write('[');
      this[node.key.type](node.key, state);
      state.write(']');
    } else {
      this[node.key.type](node.key, state);
    }
    formatSequence(state, node.value.params);
    state.write(' ');
    this[node.value.body.type](node.value.body, state);
  },
  ClassExpression(node, state) {
    this.ClassDeclaration(node, state);
  },
  ArrowFunctionExpression(node, state) {
    state.write(node.async ? 'async ' : '', node);
    const { params } = node;
    if (params != null) {
      // Omit parenthesis if only one named parameter
      if (params.length === 1 && params[0].type[0] === 'I') {
        // If params[0].type[0] starts with 'I', it can't be `ImportDeclaration` nor `IfStatement` and thus is `Identifier`
        state.write(params[0].name, params[0]);
      } else {
        formatSequence(state, node.params);
      }
    }
    state.write(' => ');
    if (node.body.type[0] === 'O') {
      // Body is an object expression
      state.write('(');
      this.ObjectExpression(node.body, state);
      state.write(')');
    } else {
      this[node.body.type](node.body, state);
    }
  },
  ThisExpression(node, state) {
    state.write('this', node);
  },
  Super(node, state) {
    state.write('super', node);
  },
  RestElement: (RestElement = function (node, state) {
    state.write('...');
    this[node.argument.type](node.argument, state);
  }),
  SpreadElement: RestElement,
  YieldExpression(node, state) {
    state.write(node.delegate ? 'yield*' : 'yield');
    if (node.argument) {
      state.write(' ');
      this[node.argument.type](node.argument, state);
    }
  },
  AwaitExpression(node, state) {
    state.write('await ', node);
    formatExpression(state, node.argument, node);
  },
  TemplateLiteral(node, state) {
    const { quasis, expressions } = node;
    state.write('`');
    const { length } = expressions;
    for (let i = 0; i < length; i++) {
      const expression = expressions[i];
      const quasi = quasis[i];
      state.write(quasi.value.raw, quasi);
      state.write('${');
      this[expression.type](expression, state);
      state.write('}');
    }
    const quasi = quasis[quasis.length - 1];
    state.write(quasi.value.raw, quasi);
    state.write('`');
  },
  TemplateElement(node, state) {
    state.write(node.value.raw, node);
  },
  TaggedTemplateExpression(node, state) {
    formatExpression(state, node.tag, node);
    this[node.quasi.type](node.quasi, state);
  },
  ArrayExpression: (ArrayExpression = function (node, state) {
    state.write('[');
    if (node.elements.length > 0) {
      const { elements } = node,
        { length } = elements;
      for (let i = 0; ; ) {
        const element = elements[i];
        if (element != null) {
          this[element.type](element, state);
        }
        if (++i < length) {
          state.write(', ');
        } else {
          if (element == null) {
            state.write(', ');
          }
          break
        }
      }
    }
    state.write(']');
  }),
  ArrayPattern: ArrayExpression,
  ObjectExpression(node, state) {
    const indent = state.indent.repeat(state.indentLevel++);
    const { lineEnd, writeComments } = state;
    const propertyIndent = indent + state.indent;
    state.write('{');
    if (node.properties.length > 0) {
      state.write(lineEnd);
      if (writeComments && node.comments != null) {
        formatComments(state, node.comments, propertyIndent, lineEnd);
      }
      const comma = ',' + lineEnd;
      const { properties } = node,
        { length } = properties;
      for (let i = 0; ; ) {
        const property = properties[i];
        if (writeComments && property.comments != null) {
          formatComments(state, property.comments, propertyIndent, lineEnd);
        }
        state.write(propertyIndent);
        this[property.type](property, state);
        if (++i < length) {
          state.write(comma);
        } else {
          break
        }
      }
      state.write(lineEnd);
      if (writeComments && node.trailingComments != null) {
        formatComments(state, node.trailingComments, propertyIndent, lineEnd);
      }
      state.write(indent + '}');
    } else if (writeComments) {
      if (node.comments != null) {
        state.write(lineEnd);
        formatComments(state, node.comments, propertyIndent, lineEnd);
        if (node.trailingComments != null) {
          formatComments(state, node.trailingComments, propertyIndent, lineEnd);
        }
        state.write(indent + '}');
      } else if (node.trailingComments != null) {
        state.write(lineEnd);
        formatComments(state, node.trailingComments, propertyIndent, lineEnd);
        state.write(indent + '}');
      } else {
        state.write('}');
      }
    } else {
      state.write('}');
    }
    state.indentLevel--;
  },
  Property(node, state) {
    if (node.method || node.kind[0] !== 'i') {
      // Either a method or of kind `set` or `get` (not `init`)
      this.MethodDefinition(node, state);
    } else {
      if (!node.shorthand) {
        if (node.computed) {
          state.write('[');
          this[node.key.type](node.key, state);
          state.write(']');
        } else {
          this[node.key.type](node.key, state);
        }
        state.write(': ');
      }
      this[node.value.type](node.value, state);
    }
  },
  PropertyDefinition(node, state) {
    if (node.static) {
      state.write('static ');
    }
    if (node.computed) {
      state.write('[');
    }
    this[node.key.type](node.key, state);
    if (node.computed) {
      state.write(']');
    }
    if (node.value == null) {
      if (node.key.type[0] !== 'F') {
        state.write(';');
      }
      return
    }
    state.write(' = ');
    this[node.value.type](node.value, state);
    state.write(';');
  },
  ObjectPattern(node, state) {
    state.write('{');
    if (node.properties.length > 0) {
      const { properties } = node,
        { length } = properties;
      for (let i = 0; ; ) {
        this[properties[i].type](properties[i], state);
        if (++i < length) {
          state.write(', ');
        } else {
          break
        }
      }
    }
    state.write('}');
  },
  SequenceExpression(node, state) {
    formatSequence(state, node.expressions);
  },
  UnaryExpression(node, state) {
    if (node.prefix) {
      const {
        operator,
        argument,
        argument: { type },
      } = node;
      state.write(operator);
      const needsParentheses = expressionNeedsParenthesis(state, argument, node);
      if (
        !needsParentheses &&
        (operator.length > 1 ||
          (type[0] === 'U' &&
            (type[1] === 'n' || type[1] === 'p') &&
            argument.prefix &&
            argument.operator[0] === operator &&
            (operator === '+' || operator === '-')))
      ) {
        // Large operator or argument is UnaryExpression or UpdateExpression node
        state.write(' ');
      }
      if (needsParentheses) {
        state.write(operator.length > 1 ? ' (' : '(');
        this[type](argument, state);
        state.write(')');
      } else {
        this[type](argument, state);
      }
    } else {
      // FIXME: This case never occurs
      this[node.argument.type](node.argument, state);
      state.write(node.operator);
    }
  },
  UpdateExpression(node, state) {
    // Always applied to identifiers or members, no parenthesis check needed
    if (node.prefix) {
      state.write(node.operator);
      this[node.argument.type](node.argument, state);
    } else {
      this[node.argument.type](node.argument, state);
      state.write(node.operator);
    }
  },
  AssignmentExpression(node, state) {
    this[node.left.type](node.left, state);
    state.write(' ' + node.operator + ' ');
    this[node.right.type](node.right, state);
  },
  AssignmentPattern(node, state) {
    this[node.left.type](node.left, state);
    state.write(' = ');
    this[node.right.type](node.right, state);
  },
  BinaryExpression: (BinaryExpression = function (node, state) {
    const isIn = node.operator === 'in';
    if (isIn) {
      // Avoids confusion in `for` loops initializers
      state.write('(');
    }
    formatExpression(state, node.left, node, false);
    state.write(' ' + node.operator + ' ');
    formatExpression(state, node.right, node, true);
    if (isIn) {
      state.write(')');
    }
  }),
  LogicalExpression: BinaryExpression,
  ConditionalExpression(node, state) {
    const { test } = node;
    const precedence = state.expressionsPrecedence[test.type];
    if (
      precedence === NEEDS_PARENTHESES ||
      precedence <= state.expressionsPrecedence.ConditionalExpression
    ) {
      state.write('(');
      this[test.type](test, state);
      state.write(')');
    } else {
      this[test.type](test, state);
    }
    state.write(' ? ');
    this[node.consequent.type](node.consequent, state);
    state.write(' : ');
    this[node.alternate.type](node.alternate, state);
  },
  NewExpression(node, state) {
    state.write('new ');
    const precedence = state.expressionsPrecedence[node.callee.type];
    if (
      precedence === NEEDS_PARENTHESES ||
      precedence < state.expressionsPrecedence.CallExpression ||
      hasCallExpression(node.callee)
    ) {
      state.write('(');
      this[node.callee.type](node.callee, state);
      state.write(')');
    } else {
      this[node.callee.type](node.callee, state);
    }
    formatSequence(state, node['arguments']);
  },
  CallExpression(node, state) {
    const precedence = state.expressionsPrecedence[node.callee.type];
    if (
      precedence === NEEDS_PARENTHESES ||
      precedence < state.expressionsPrecedence.CallExpression
    ) {
      state.write('(');
      this[node.callee.type](node.callee, state);
      state.write(')');
    } else {
      this[node.callee.type](node.callee, state);
    }
    if (node.optional) {
      state.write('?.');
    }
    formatSequence(state, node['arguments']);
  },
  ChainExpression(node, state) {
    this[node.expression.type](node.expression, state);
  },
  MemberExpression(node, state) {
    const precedence = state.expressionsPrecedence[node.object.type];
    if (
      precedence === NEEDS_PARENTHESES ||
      precedence < state.expressionsPrecedence.MemberExpression
    ) {
      state.write('(');
      this[node.object.type](node.object, state);
      state.write(')');
    } else {
      this[node.object.type](node.object, state);
    }
    if (node.computed) {
      if (node.optional) {
        state.write('?.');
      }
      state.write('[');
      this[node.property.type](node.property, state);
      state.write(']');
    } else {
      if (node.optional) {
        state.write('?.');
      } else {
        state.write('.');
      }
      this[node.property.type](node.property, state);
    }
  },
  MetaProperty(node, state) {
    state.write(node.meta.name + '.' + node.property.name, node);
  },
  Identifier(node, state) {
    state.write(node.name, node);
  },
  PrivateIdentifier(node, state) {
    state.write(`#${node.name}`, node);
  },
  Literal(node, state) {
    if (node.raw != null) {
      // Non-standard property
      state.write(node.raw, node);
    } else if (node.regex != null) {
      this.RegExpLiteral(node, state);
    } else if (node.bigint != null) {
      state.write(node.bigint + 'n', node);
    } else {
      state.write(stringify(node.value), node);
    }
  },
  RegExpLiteral(node, state) {
    const { regex } = node;
    state.write(`/${regex.pattern}/${regex.flags}`, node);
  },
};

const EMPTY_OBJECT = {};

let State$1 = class State {
  constructor(options) {
    const setup = options == null ? EMPTY_OBJECT : options;
    this.output = '';
    // Functional options
    if (setup.output != null) {
      this.output = setup.output;
      this.write = this.writeToStream;
    } else {
      this.output = '';
    }
    this.generator = setup.generator != null ? setup.generator : GENERATOR;
    this.expressionsPrecedence =
      setup.expressionsPrecedence != null
        ? setup.expressionsPrecedence
        : EXPRESSIONS_PRECEDENCE;
    // Formating setup
    this.indent = setup.indent != null ? setup.indent : '  ';
    this.lineEnd = setup.lineEnd != null ? setup.lineEnd : '\n';
    this.indentLevel =
      setup.startingIndentLevel != null ? setup.startingIndentLevel : 0;
    this.writeComments = setup.comments ? setup.comments : false;
    // Source map
    if (setup.sourceMap != null) {
      this.write =
        setup.output == null ? this.writeAndMap : this.writeToStreamAndMap;
      this.sourceMap = setup.sourceMap;
      this.line = 1;
      this.column = 0;
      this.lineEndSize = this.lineEnd.split('\n').length - 1;
      this.mapping = {
        original: null,
        // Uses the entire state to avoid generating ephemeral objects
        generated: this,
        name: undefined,
        source: setup.sourceMap.file || setup.sourceMap._file,
      };
    }
  }

  write(code) {
    this.output += code;
  }

  writeToStream(code) {
    this.output.write(code);
  }

  writeAndMap(code, node) {
    this.output += code;
    this.map(code, node);
  }

  writeToStreamAndMap(code, node) {
    this.output.write(code);
    this.map(code, node);
  }

  map(code, node) {
    if (node != null) {
      const { type } = node;
      if (type[0] === 'L' && type[2] === 'n') {
        // LineComment
        this.column = 0;
        this.line++;
        return
      }
      if (node.loc != null) {
        const { mapping } = this;
        mapping.original = node.loc.start;
        mapping.name = node.name;
        this.sourceMap.addMapping(mapping);
      }
      if (
        (type[0] === 'T' && type[8] === 'E') ||
        (type[0] === 'L' && type[1] === 'i' && typeof node.value === 'string')
      ) {
        // TemplateElement or Literal string node
        const { length } = code;
        let { column, line } = this;
        for (let i = 0; i < length; i++) {
          if (code[i] === '\n') {
            column = 0;
            line++;
          } else {
            column++;
          }
        }
        this.column = column;
        this.line = line;
        return
      }
    }
    const { length } = code;
    const { lineEnd } = this;
    if (length > 0) {
      if (
        this.lineEndSize > 0 &&
        (lineEnd.length === 1
          ? code[length - 1] === lineEnd
          : code.endsWith(lineEnd))
      ) {
        this.line += this.lineEndSize;
        this.column = 0;
      } else {
        this.column += length;
      }
    }
  }

  toString() {
    return this.output
  }
};

function generate(node, options) {
  /*
  Returns a string representing the rendered code of the provided AST `node`.
  The `options` are:

  - `indent`: string to use for indentation (defaults to `␣␣`)
  - `lineEnd`: string to use for line endings (defaults to `\n`)
  - `startingIndentLevel`: indent level to start from (defaults to `0`)
  - `comments`: generate comments if `true` (defaults to `false`)
  - `output`: output stream to write the rendered code to (defaults to `null`)
  - `generator`: custom code generator (defaults to `GENERATOR`)
  - `expressionsPrecedence`: custom map of node types and their precedence level (defaults to `EXPRESSIONS_PRECEDENCE`)
  */
  const state = new State$1(options);
  // Travel through the AST node and generate the code
  state.generator[node.type](node, state);
  return state.output
}

var XHTMLEntities$1 = {
  quot: '\u0022',
  amp: '&',
  apos: '\u0027',
  lt: '<',
  gt: '>',
  nbsp: '\u00A0',
  iexcl: '\u00A1',
  cent: '\u00A2',
  pound: '\u00A3',
  curren: '\u00A4',
  yen: '\u00A5',
  brvbar: '\u00A6',
  sect: '\u00A7',
  uml: '\u00A8',
  copy: '\u00A9',
  ordf: '\u00AA',
  laquo: '\u00AB',
  not: '\u00AC',
  shy: '\u00AD',
  reg: '\u00AE',
  macr: '\u00AF',
  deg: '\u00B0',
  plusmn: '\u00B1',
  sup2: '\u00B2',
  sup3: '\u00B3',
  acute: '\u00B4',
  micro: '\u00B5',
  para: '\u00B6',
  middot: '\u00B7',
  cedil: '\u00B8',
  sup1: '\u00B9',
  ordm: '\u00BA',
  raquo: '\u00BB',
  frac14: '\u00BC',
  frac12: '\u00BD',
  frac34: '\u00BE',
  iquest: '\u00BF',
  Agrave: '\u00C0',
  Aacute: '\u00C1',
  Acirc: '\u00C2',
  Atilde: '\u00C3',
  Auml: '\u00C4',
  Aring: '\u00C5',
  AElig: '\u00C6',
  Ccedil: '\u00C7',
  Egrave: '\u00C8',
  Eacute: '\u00C9',
  Ecirc: '\u00CA',
  Euml: '\u00CB',
  Igrave: '\u00CC',
  Iacute: '\u00CD',
  Icirc: '\u00CE',
  Iuml: '\u00CF',
  ETH: '\u00D0',
  Ntilde: '\u00D1',
  Ograve: '\u00D2',
  Oacute: '\u00D3',
  Ocirc: '\u00D4',
  Otilde: '\u00D5',
  Ouml: '\u00D6',
  times: '\u00D7',
  Oslash: '\u00D8',
  Ugrave: '\u00D9',
  Uacute: '\u00DA',
  Ucirc: '\u00DB',
  Uuml: '\u00DC',
  Yacute: '\u00DD',
  THORN: '\u00DE',
  szlig: '\u00DF',
  agrave: '\u00E0',
  aacute: '\u00E1',
  acirc: '\u00E2',
  atilde: '\u00E3',
  auml: '\u00E4',
  aring: '\u00E5',
  aelig: '\u00E6',
  ccedil: '\u00E7',
  egrave: '\u00E8',
  eacute: '\u00E9',
  ecirc: '\u00EA',
  euml: '\u00EB',
  igrave: '\u00EC',
  iacute: '\u00ED',
  icirc: '\u00EE',
  iuml: '\u00EF',
  eth: '\u00F0',
  ntilde: '\u00F1',
  ograve: '\u00F2',
  oacute: '\u00F3',
  ocirc: '\u00F4',
  otilde: '\u00F5',
  ouml: '\u00F6',
  divide: '\u00F7',
  oslash: '\u00F8',
  ugrave: '\u00F9',
  uacute: '\u00FA',
  ucirc: '\u00FB',
  uuml: '\u00FC',
  yacute: '\u00FD',
  thorn: '\u00FE',
  yuml: '\u00FF',
  OElig: '\u0152',
  oelig: '\u0153',
  Scaron: '\u0160',
  scaron: '\u0161',
  Yuml: '\u0178',
  fnof: '\u0192',
  circ: '\u02C6',
  tilde: '\u02DC',
  Alpha: '\u0391',
  Beta: '\u0392',
  Gamma: '\u0393',
  Delta: '\u0394',
  Epsilon: '\u0395',
  Zeta: '\u0396',
  Eta: '\u0397',
  Theta: '\u0398',
  Iota: '\u0399',
  Kappa: '\u039A',
  Lambda: '\u039B',
  Mu: '\u039C',
  Nu: '\u039D',
  Xi: '\u039E',
  Omicron: '\u039F',
  Pi: '\u03A0',
  Rho: '\u03A1',
  Sigma: '\u03A3',
  Tau: '\u03A4',
  Upsilon: '\u03A5',
  Phi: '\u03A6',
  Chi: '\u03A7',
  Psi: '\u03A8',
  Omega: '\u03A9',
  alpha: '\u03B1',
  beta: '\u03B2',
  gamma: '\u03B3',
  delta: '\u03B4',
  epsilon: '\u03B5',
  zeta: '\u03B6',
  eta: '\u03B7',
  theta: '\u03B8',
  iota: '\u03B9',
  kappa: '\u03BA',
  lambda: '\u03BB',
  mu: '\u03BC',
  nu: '\u03BD',
  xi: '\u03BE',
  omicron: '\u03BF',
  pi: '\u03C0',
  rho: '\u03C1',
  sigmaf: '\u03C2',
  sigma: '\u03C3',
  tau: '\u03C4',
  upsilon: '\u03C5',
  phi: '\u03C6',
  chi: '\u03C7',
  psi: '\u03C8',
  omega: '\u03C9',
  thetasym: '\u03D1',
  upsih: '\u03D2',
  piv: '\u03D6',
  ensp: '\u2002',
  emsp: '\u2003',
  thinsp: '\u2009',
  zwnj: '\u200C',
  zwj: '\u200D',
  lrm: '\u200E',
  rlm: '\u200F',
  ndash: '\u2013',
  mdash: '\u2014',
  lsquo: '\u2018',
  rsquo: '\u2019',
  sbquo: '\u201A',
  ldquo: '\u201C',
  rdquo: '\u201D',
  bdquo: '\u201E',
  dagger: '\u2020',
  Dagger: '\u2021',
  bull: '\u2022',
  hellip: '\u2026',
  permil: '\u2030',
  prime: '\u2032',
  Prime: '\u2033',
  lsaquo: '\u2039',
  rsaquo: '\u203A',
  oline: '\u203E',
  frasl: '\u2044',
  euro: '\u20AC',
  image: '\u2111',
  weierp: '\u2118',
  real: '\u211C',
  trade: '\u2122',
  alefsym: '\u2135',
  larr: '\u2190',
  uarr: '\u2191',
  rarr: '\u2192',
  darr: '\u2193',
  harr: '\u2194',
  crarr: '\u21B5',
  lArr: '\u21D0',
  uArr: '\u21D1',
  rArr: '\u21D2',
  dArr: '\u21D3',
  hArr: '\u21D4',
  forall: '\u2200',
  part: '\u2202',
  exist: '\u2203',
  empty: '\u2205',
  nabla: '\u2207',
  isin: '\u2208',
  notin: '\u2209',
  ni: '\u220B',
  prod: '\u220F',
  sum: '\u2211',
  minus: '\u2212',
  lowast: '\u2217',
  radic: '\u221A',
  prop: '\u221D',
  infin: '\u221E',
  ang: '\u2220',
  and: '\u2227',
  or: '\u2228',
  cap: '\u2229',
  cup: '\u222A',
  'int': '\u222B',
  there4: '\u2234',
  sim: '\u223C',
  cong: '\u2245',
  asymp: '\u2248',
  ne: '\u2260',
  equiv: '\u2261',
  le: '\u2264',
  ge: '\u2265',
  sub: '\u2282',
  sup: '\u2283',
  nsub: '\u2284',
  sube: '\u2286',
  supe: '\u2287',
  oplus: '\u2295',
  otimes: '\u2297',
  perp: '\u22A5',
  sdot: '\u22C5',
  lceil: '\u2308',
  rceil: '\u2309',
  lfloor: '\u230A',
  rfloor: '\u230B',
  lang: '\u2329',
  rang: '\u232A',
  loz: '\u25CA',
  spades: '\u2660',
  clubs: '\u2663',
  hearts: '\u2665',
  diams: '\u2666'
};

const hexNumber = /^[\da-fA-F]+$/;
const decimalNumber = /^\d+$/;

// The map to `acorn-jsx` tokens from `acorn` namespace objects.
const acornJsxMap = new WeakMap();

// Get the original tokens for the given `acorn` namespace object.
function getJsxTokens(acorn) {
  acorn = acorn.Parser.acorn || acorn;
  let acornJsx = acornJsxMap.get(acorn);
  if (!acornJsx) {
    const tt = acorn.tokTypes;
    const TokContext = acorn.TokContext;
    const TokenType = acorn.TokenType;
    const tc_oTag = new TokContext('<tag', false);
    const tc_cTag = new TokContext('</tag', false);
    const tc_expr = new TokContext('<tag>...</tag>', true, true);
    const tokContexts = {
      tc_oTag: tc_oTag,
      tc_cTag: tc_cTag,
      tc_expr: tc_expr
    };
    const tokTypes = {
      jsxName: new TokenType('jsxName'),
      jsxText: new TokenType('jsxText', {beforeExpr: true}),
      jsxTagStart: new TokenType('jsxTagStart', {startsExpr: true}),
      jsxTagEnd: new TokenType('jsxTagEnd')
    };

    tokTypes.jsxTagStart.updateContext = function() {
      this.context.push(tc_expr); // treat as beginning of JSX expression
      this.context.push(tc_oTag); // start opening tag context
      this.exprAllowed = false;
    };
    tokTypes.jsxTagEnd.updateContext = function(prevType) {
      let out = this.context.pop();
      if (out === tc_oTag && prevType === tt.slash || out === tc_cTag) {
        this.context.pop();
        this.exprAllowed = this.curContext() === tc_expr;
      } else {
        this.exprAllowed = true;
      }
    };

    acornJsx = { tokContexts: tokContexts, tokTypes: tokTypes };
    acornJsxMap.set(acorn, acornJsx);
  }

  return acornJsx;
}

// Transforms JSX element name to string.

function getQualifiedJSXName(object) {
  if (!object)
    return object;

  if (object.type === 'JSXIdentifier')
    return object.name;

  if (object.type === 'JSXNamespacedName')
    return object.namespace.name + ':' + object.name.name;

  if (object.type === 'JSXMemberExpression')
    return getQualifiedJSXName(object.object) + '.' +
    getQualifiedJSXName(object.property);
}

function acornJsx(options) {
  options = options || {};
  return function(Parser) {
    return plugin({
      allowNamespaces: options.allowNamespaces !== false,
      allowNamespacedObjects: !!options.allowNamespacedObjects
    }, Parser);
  };
}
// This is `tokTypes` of the peer dep.
// This can be different instances from the actual `tokTypes` this plugin uses.
Object.defineProperty(acornJsx, "tokTypes", {
  get: function get_tokTypes() {
    return getJsxTokens(acorn).tokTypes
  },
  configurable: true,
  enumerable: true
});

function plugin(options, Parser) {
  const acorn = Parser.acorn || require("acorn");
  const acornJsx = getJsxTokens(acorn);
  const tt = acorn.tokTypes;
  const tok = acornJsx.tokTypes;
  const tokContexts = acorn.tokContexts;
  const tc_oTag = acornJsx.tokContexts.tc_oTag;
  const tc_cTag = acornJsx.tokContexts.tc_cTag;
  const tc_expr = acornJsx.tokContexts.tc_expr;
  const isNewLine = acorn.isNewLine;
  const isIdentifierStart = acorn.isIdentifierStart;
  const isIdentifierChar = acorn.isIdentifierChar;

  return class extends Parser {
    // Expose actual `tokTypes` and `tokContexts` to other plugins.
    static get acornJsx() {
      return acornJsx;
    }

    // Reads inline JSX contents token.
    jsx_readToken() {
      let out = '', chunkStart = this.pos;
      for (;;) {
        if (this.pos >= this.input.length)
          this.raise(this.start, 'Unterminated JSX contents');
        let ch = this.input.charCodeAt(this.pos);

        switch (ch) {
        case 60: // '<'
        case 123: // '{'
          if (this.pos === this.start) {
            if (ch === 60 && this.exprAllowed) {
              ++this.pos;
              return this.finishToken(tok.jsxTagStart);
            }
            return this.getTokenFromCode(ch);
          }
          out += this.input.slice(chunkStart, this.pos);
          return this.finishToken(tok.jsxText, out);

        case 38: // '&'
          out += this.input.slice(chunkStart, this.pos);
          out += this.jsx_readEntity();
          chunkStart = this.pos;
          break;

        case 62: // '>'
        case 125: // '}'
          this.raise(
            this.pos,
            "Unexpected token `" + this.input[this.pos] + "`. Did you mean `" +
              (ch === 62 ? "&gt;" : "&rbrace;") + "` or " + "`{\"" + this.input[this.pos] + "\"}" + "`?"
          );

        default:
          if (isNewLine(ch)) {
            out += this.input.slice(chunkStart, this.pos);
            out += this.jsx_readNewLine(true);
            chunkStart = this.pos;
          } else {
            ++this.pos;
          }
        }
      }
    }

    jsx_readNewLine(normalizeCRLF) {
      let ch = this.input.charCodeAt(this.pos);
      let out;
      ++this.pos;
      if (ch === 13 && this.input.charCodeAt(this.pos) === 10) {
        ++this.pos;
        out = normalizeCRLF ? '\n' : '\r\n';
      } else {
        out = String.fromCharCode(ch);
      }
      if (this.options.locations) {
        ++this.curLine;
        this.lineStart = this.pos;
      }

      return out;
    }

    jsx_readString(quote) {
      let out = '', chunkStart = ++this.pos;
      for (;;) {
        if (this.pos >= this.input.length)
          this.raise(this.start, 'Unterminated string constant');
        let ch = this.input.charCodeAt(this.pos);
        if (ch === quote) break;
        if (ch === 38) { // '&'
          out += this.input.slice(chunkStart, this.pos);
          out += this.jsx_readEntity();
          chunkStart = this.pos;
        } else if (isNewLine(ch)) {
          out += this.input.slice(chunkStart, this.pos);
          out += this.jsx_readNewLine(false);
          chunkStart = this.pos;
        } else {
          ++this.pos;
        }
      }
      out += this.input.slice(chunkStart, this.pos++);
      return this.finishToken(tt.string, out);
    }

    jsx_readEntity() {
      let str = '', count = 0, entity;
      let ch = this.input[this.pos];
      if (ch !== '&')
        this.raise(this.pos, 'Entity must start with an ampersand');
      let startPos = ++this.pos;
      while (this.pos < this.input.length && count++ < 10) {
        ch = this.input[this.pos++];
        if (ch === ';') {
          if (str[0] === '#') {
            if (str[1] === 'x') {
              str = str.substr(2);
              if (hexNumber.test(str))
                entity = String.fromCharCode(parseInt(str, 16));
            } else {
              str = str.substr(1);
              if (decimalNumber.test(str))
                entity = String.fromCharCode(parseInt(str, 10));
            }
          } else {
            entity = XHTMLEntities$1[str];
          }
          break;
        }
        str += ch;
      }
      if (!entity) {
        this.pos = startPos;
        return '&';
      }
      return entity;
    }

    // Read a JSX identifier (valid tag or attribute name).
    //
    // Optimized version since JSX identifiers can't contain
    // escape characters and so can be read as single slice.
    // Also assumes that first character was already checked
    // by isIdentifierStart in readToken.

    jsx_readWord() {
      let ch, start = this.pos;
      do {
        ch = this.input.charCodeAt(++this.pos);
      } while (isIdentifierChar(ch) || ch === 45); // '-'
      return this.finishToken(tok.jsxName, this.input.slice(start, this.pos));
    }

    // Parse next token as JSX identifier

    jsx_parseIdentifier() {
      let node = this.startNode();
      if (this.type === tok.jsxName)
        node.name = this.value;
      else if (this.type.keyword)
        node.name = this.type.keyword;
      else
        this.unexpected();
      this.next();
      return this.finishNode(node, 'JSXIdentifier');
    }

    // Parse namespaced identifier.

    jsx_parseNamespacedName() {
      let startPos = this.start, startLoc = this.startLoc;
      let name = this.jsx_parseIdentifier();
      if (!options.allowNamespaces || !this.eat(tt.colon)) return name;
      var node = this.startNodeAt(startPos, startLoc);
      node.namespace = name;
      node.name = this.jsx_parseIdentifier();
      return this.finishNode(node, 'JSXNamespacedName');
    }

    // Parses element name in any form - namespaced, member
    // or single identifier.

    jsx_parseElementName() {
      if (this.type === tok.jsxTagEnd) return '';
      let startPos = this.start, startLoc = this.startLoc;
      let node = this.jsx_parseNamespacedName();
      if (this.type === tt.dot && node.type === 'JSXNamespacedName' && !options.allowNamespacedObjects) {
        this.unexpected();
      }
      while (this.eat(tt.dot)) {
        let newNode = this.startNodeAt(startPos, startLoc);
        newNode.object = node;
        newNode.property = this.jsx_parseIdentifier();
        node = this.finishNode(newNode, 'JSXMemberExpression');
      }
      return node;
    }

    // Parses any type of JSX attribute value.

    jsx_parseAttributeValue() {
      switch (this.type) {
      case tt.braceL:
        let node = this.jsx_parseExpressionContainer();
        if (node.expression.type === 'JSXEmptyExpression')
          this.raise(node.start, 'JSX attributes must only be assigned a non-empty expression');
        return node;

      case tok.jsxTagStart:
      case tt.string:
        return this.parseExprAtom();

      default:
        this.raise(this.start, 'JSX value should be either an expression or a quoted JSX text');
      }
    }

    // JSXEmptyExpression is unique type since it doesn't actually parse anything,
    // and so it should start at the end of last read token (left brace) and finish
    // at the beginning of the next one (right brace).

    jsx_parseEmptyExpression() {
      let node = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);
      return this.finishNodeAt(node, 'JSXEmptyExpression', this.start, this.startLoc);
    }

    // Parses JSX expression enclosed into curly brackets.

    jsx_parseExpressionContainer() {
      let node = this.startNode();
      this.next();
      node.expression = this.type === tt.braceR
        ? this.jsx_parseEmptyExpression()
        : this.parseExpression();
      this.expect(tt.braceR);
      return this.finishNode(node, 'JSXExpressionContainer');
    }

    // Parses following JSX attribute name-value pair.

    jsx_parseAttribute() {
      let node = this.startNode();
      if (this.eat(tt.braceL)) {
        this.expect(tt.ellipsis);
        node.argument = this.parseMaybeAssign();
        this.expect(tt.braceR);
        return this.finishNode(node, 'JSXSpreadAttribute');
      }
      node.name = this.jsx_parseNamespacedName();
      node.value = this.eat(tt.eq) ? this.jsx_parseAttributeValue() : null;
      return this.finishNode(node, 'JSXAttribute');
    }

    // Parses JSX opening tag starting after '<'.

    jsx_parseOpeningElementAt(startPos, startLoc) {
      let node = this.startNodeAt(startPos, startLoc);
      node.attributes = [];
      let nodeName = this.jsx_parseElementName();
      if (nodeName) node.name = nodeName;
      while (this.type !== tt.slash && this.type !== tok.jsxTagEnd)
        node.attributes.push(this.jsx_parseAttribute());
      node.selfClosing = this.eat(tt.slash);
      this.expect(tok.jsxTagEnd);
      return this.finishNode(node, nodeName ? 'JSXOpeningElement' : 'JSXOpeningFragment');
    }

    // Parses JSX closing tag starting after '</'.

    jsx_parseClosingElementAt(startPos, startLoc) {
      let node = this.startNodeAt(startPos, startLoc);
      let nodeName = this.jsx_parseElementName();
      if (nodeName) node.name = nodeName;
      this.expect(tok.jsxTagEnd);
      return this.finishNode(node, nodeName ? 'JSXClosingElement' : 'JSXClosingFragment');
    }

    // Parses entire JSX element, including it's opening tag
    // (starting after '<'), attributes, contents and closing tag.

    jsx_parseElementAt(startPos, startLoc) {
      let node = this.startNodeAt(startPos, startLoc);
      let children = [];
      let openingElement = this.jsx_parseOpeningElementAt(startPos, startLoc);
      let closingElement = null;

      if (!openingElement.selfClosing) {
        contents: for (;;) {
          switch (this.type) {
          case tok.jsxTagStart:
            startPos = this.start; startLoc = this.startLoc;
            this.next();
            if (this.eat(tt.slash)) {
              closingElement = this.jsx_parseClosingElementAt(startPos, startLoc);
              break contents;
            }
            children.push(this.jsx_parseElementAt(startPos, startLoc));
            break;

          case tok.jsxText:
            children.push(this.parseExprAtom());
            break;

          case tt.braceL:
            children.push(this.jsx_parseExpressionContainer());
            break;

          default:
            this.unexpected();
          }
        }
        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {
          this.raise(
            closingElement.start,
            'Expected corresponding JSX closing tag for <' + getQualifiedJSXName(openingElement.name) + '>');
        }
      }
      let fragmentOrElement = openingElement.name ? 'Element' : 'Fragment';

      node['opening' + fragmentOrElement] = openingElement;
      node['closing' + fragmentOrElement] = closingElement;
      node.children = children;
      if (this.type === tt.relational && this.value === "<") {
        this.raise(this.start, "Adjacent JSX elements must be wrapped in an enclosing tag");
      }
      return this.finishNode(node, 'JSX' + fragmentOrElement);
    }

    // Parse JSX text

    jsx_parseText() {
      let node = this.parseLiteral(this.value);
      node.type = "JSXText";
      return node;
    }

    // Parses entire JSX element from current position.

    jsx_parseElement() {
      let startPos = this.start, startLoc = this.startLoc;
      this.next();
      return this.jsx_parseElementAt(startPos, startLoc);
    }

    parseExprAtom(refShortHandDefaultPos) {
      if (this.type === tok.jsxText)
        return this.jsx_parseText();
      else if (this.type === tok.jsxTagStart)
        return this.jsx_parseElement();
      else
        return super.parseExprAtom(refShortHandDefaultPos);
    }

    readToken(code) {
      let context = this.curContext();

      if (context === tc_expr) return this.jsx_readToken();

      if (context === tc_oTag || context === tc_cTag) {
        if (isIdentifierStart(code)) return this.jsx_readWord();

        if (code == 62) {
          ++this.pos;
          return this.finishToken(tok.jsxTagEnd);
        }

        if ((code === 34 || code === 39) && context == tc_oTag)
          return this.jsx_readString(code);
      }

      if (code === 60 && this.exprAllowed && this.input.charCodeAt(this.pos + 1) !== 33) {
        ++this.pos;
        return this.finishToken(tok.jsxTagStart);
      }
      return super.readToken(code);
    }

    updateContext(prevType) {
      if (this.type == tt.braceL) {
        var curContext = this.curContext();
        if (curContext == tc_oTag) this.context.push(tokContexts.b_expr);
        else if (curContext == tc_expr) this.context.push(tokContexts.b_tmpl);
        else super.updateContext(prevType);
        this.exprAllowed = true;
      } else if (this.type === tt.slash && prevType === tok.jsxTagStart) {
        this.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore
        this.context.push(tc_cTag); // reconsider as closing tag context
        this.exprAllowed = false;
      } else {
        return super.updateContext(prevType);
      }
    }
  };
}

var ContextualKeyword; (function (ContextualKeyword) {
  const NONE = 0; ContextualKeyword[ContextualKeyword["NONE"] = NONE] = "NONE";
  const _abstract = NONE + 1; ContextualKeyword[ContextualKeyword["_abstract"] = _abstract] = "_abstract";
  const _accessor = _abstract + 1; ContextualKeyword[ContextualKeyword["_accessor"] = _accessor] = "_accessor";
  const _as = _accessor + 1; ContextualKeyword[ContextualKeyword["_as"] = _as] = "_as";
  const _assert = _as + 1; ContextualKeyword[ContextualKeyword["_assert"] = _assert] = "_assert";
  const _asserts = _assert + 1; ContextualKeyword[ContextualKeyword["_asserts"] = _asserts] = "_asserts";
  const _async = _asserts + 1; ContextualKeyword[ContextualKeyword["_async"] = _async] = "_async";
  const _await = _async + 1; ContextualKeyword[ContextualKeyword["_await"] = _await] = "_await";
  const _checks = _await + 1; ContextualKeyword[ContextualKeyword["_checks"] = _checks] = "_checks";
  const _constructor = _checks + 1; ContextualKeyword[ContextualKeyword["_constructor"] = _constructor] = "_constructor";
  const _declare = _constructor + 1; ContextualKeyword[ContextualKeyword["_declare"] = _declare] = "_declare";
  const _enum = _declare + 1; ContextualKeyword[ContextualKeyword["_enum"] = _enum] = "_enum";
  const _exports = _enum + 1; ContextualKeyword[ContextualKeyword["_exports"] = _exports] = "_exports";
  const _from = _exports + 1; ContextualKeyword[ContextualKeyword["_from"] = _from] = "_from";
  const _get = _from + 1; ContextualKeyword[ContextualKeyword["_get"] = _get] = "_get";
  const _global = _get + 1; ContextualKeyword[ContextualKeyword["_global"] = _global] = "_global";
  const _implements = _global + 1; ContextualKeyword[ContextualKeyword["_implements"] = _implements] = "_implements";
  const _infer = _implements + 1; ContextualKeyword[ContextualKeyword["_infer"] = _infer] = "_infer";
  const _interface = _infer + 1; ContextualKeyword[ContextualKeyword["_interface"] = _interface] = "_interface";
  const _is = _interface + 1; ContextualKeyword[ContextualKeyword["_is"] = _is] = "_is";
  const _keyof = _is + 1; ContextualKeyword[ContextualKeyword["_keyof"] = _keyof] = "_keyof";
  const _mixins = _keyof + 1; ContextualKeyword[ContextualKeyword["_mixins"] = _mixins] = "_mixins";
  const _module = _mixins + 1; ContextualKeyword[ContextualKeyword["_module"] = _module] = "_module";
  const _namespace = _module + 1; ContextualKeyword[ContextualKeyword["_namespace"] = _namespace] = "_namespace";
  const _of = _namespace + 1; ContextualKeyword[ContextualKeyword["_of"] = _of] = "_of";
  const _opaque = _of + 1; ContextualKeyword[ContextualKeyword["_opaque"] = _opaque] = "_opaque";
  const _out = _opaque + 1; ContextualKeyword[ContextualKeyword["_out"] = _out] = "_out";
  const _override = _out + 1; ContextualKeyword[ContextualKeyword["_override"] = _override] = "_override";
  const _private = _override + 1; ContextualKeyword[ContextualKeyword["_private"] = _private] = "_private";
  const _protected = _private + 1; ContextualKeyword[ContextualKeyword["_protected"] = _protected] = "_protected";
  const _proto = _protected + 1; ContextualKeyword[ContextualKeyword["_proto"] = _proto] = "_proto";
  const _public = _proto + 1; ContextualKeyword[ContextualKeyword["_public"] = _public] = "_public";
  const _readonly = _public + 1; ContextualKeyword[ContextualKeyword["_readonly"] = _readonly] = "_readonly";
  const _require = _readonly + 1; ContextualKeyword[ContextualKeyword["_require"] = _require] = "_require";
  const _satisfies = _require + 1; ContextualKeyword[ContextualKeyword["_satisfies"] = _satisfies] = "_satisfies";
  const _set = _satisfies + 1; ContextualKeyword[ContextualKeyword["_set"] = _set] = "_set";
  const _static = _set + 1; ContextualKeyword[ContextualKeyword["_static"] = _static] = "_static";
  const _symbol = _static + 1; ContextualKeyword[ContextualKeyword["_symbol"] = _symbol] = "_symbol";
  const _type = _symbol + 1; ContextualKeyword[ContextualKeyword["_type"] = _type] = "_type";
  const _unique = _type + 1; ContextualKeyword[ContextualKeyword["_unique"] = _unique] = "_unique";
  const _using = _unique + 1; ContextualKeyword[ContextualKeyword["_using"] = _using] = "_using";
})(ContextualKeyword || (ContextualKeyword = {}));

// Generated file, do not edit! Run "yarn generate" to re-generate this file.
/* istanbul ignore file */
/**
 * Enum of all token types, with bit fields to signify meaningful properties.
 */
var TokenType; (function (TokenType) {
  // Precedence 0 means not an operator; otherwise it is a positive number up to 12.
  const PRECEDENCE_MASK = 0xf; TokenType[TokenType["PRECEDENCE_MASK"] = PRECEDENCE_MASK] = "PRECEDENCE_MASK";
  const IS_KEYWORD = 1 << 4; TokenType[TokenType["IS_KEYWORD"] = IS_KEYWORD] = "IS_KEYWORD";
  const IS_ASSIGN = 1 << 5; TokenType[TokenType["IS_ASSIGN"] = IS_ASSIGN] = "IS_ASSIGN";
  const IS_RIGHT_ASSOCIATIVE = 1 << 6; TokenType[TokenType["IS_RIGHT_ASSOCIATIVE"] = IS_RIGHT_ASSOCIATIVE] = "IS_RIGHT_ASSOCIATIVE";
  const IS_PREFIX = 1 << 7; TokenType[TokenType["IS_PREFIX"] = IS_PREFIX] = "IS_PREFIX";
  const IS_POSTFIX = 1 << 8; TokenType[TokenType["IS_POSTFIX"] = IS_POSTFIX] = "IS_POSTFIX";
  const IS_EXPRESSION_START = 1 << 9; TokenType[TokenType["IS_EXPRESSION_START"] = IS_EXPRESSION_START] = "IS_EXPRESSION_START";

  const num = 512; TokenType[TokenType["num"] = num] = "num"; // num startsExpr
  const bigint = 1536; TokenType[TokenType["bigint"] = bigint] = "bigint"; // bigint startsExpr
  const decimal = 2560; TokenType[TokenType["decimal"] = decimal] = "decimal"; // decimal startsExpr
  const regexp = 3584; TokenType[TokenType["regexp"] = regexp] = "regexp"; // regexp startsExpr
  const string = 4608; TokenType[TokenType["string"] = string] = "string"; // string startsExpr
  const name = 5632; TokenType[TokenType["name"] = name] = "name"; // name startsExpr
  const eof = 6144; TokenType[TokenType["eof"] = eof] = "eof"; // eof
  const bracketL = 7680; TokenType[TokenType["bracketL"] = bracketL] = "bracketL"; // [ startsExpr
  const bracketR = 8192; TokenType[TokenType["bracketR"] = bracketR] = "bracketR"; // ]
  const braceL = 9728; TokenType[TokenType["braceL"] = braceL] = "braceL"; // { startsExpr
  const braceBarL = 10752; TokenType[TokenType["braceBarL"] = braceBarL] = "braceBarL"; // {| startsExpr
  const braceR = 11264; TokenType[TokenType["braceR"] = braceR] = "braceR"; // }
  const braceBarR = 12288; TokenType[TokenType["braceBarR"] = braceBarR] = "braceBarR"; // |}
  const parenL = 13824; TokenType[TokenType["parenL"] = parenL] = "parenL"; // ( startsExpr
  const parenR = 14336; TokenType[TokenType["parenR"] = parenR] = "parenR"; // )
  const comma = 15360; TokenType[TokenType["comma"] = comma] = "comma"; // ,
  const semi = 16384; TokenType[TokenType["semi"] = semi] = "semi"; // ;
  const colon = 17408; TokenType[TokenType["colon"] = colon] = "colon"; // :
  const doubleColon = 18432; TokenType[TokenType["doubleColon"] = doubleColon] = "doubleColon"; // ::
  const dot = 19456; TokenType[TokenType["dot"] = dot] = "dot"; // .
  const question = 20480; TokenType[TokenType["question"] = question] = "question"; // ?
  const questionDot = 21504; TokenType[TokenType["questionDot"] = questionDot] = "questionDot"; // ?.
  const arrow = 22528; TokenType[TokenType["arrow"] = arrow] = "arrow"; // =>
  const template = 23552; TokenType[TokenType["template"] = template] = "template"; // template
  const ellipsis = 24576; TokenType[TokenType["ellipsis"] = ellipsis] = "ellipsis"; // ...
  const backQuote = 25600; TokenType[TokenType["backQuote"] = backQuote] = "backQuote"; // `
  const dollarBraceL = 27136; TokenType[TokenType["dollarBraceL"] = dollarBraceL] = "dollarBraceL"; // ${ startsExpr
  const at = 27648; TokenType[TokenType["at"] = at] = "at"; // @
  const hash = 29184; TokenType[TokenType["hash"] = hash] = "hash"; // # startsExpr
  const eq = 29728; TokenType[TokenType["eq"] = eq] = "eq"; // = isAssign
  const assign = 30752; TokenType[TokenType["assign"] = assign] = "assign"; // _= isAssign
  const preIncDec = 32640; TokenType[TokenType["preIncDec"] = preIncDec] = "preIncDec"; // ++/-- prefix postfix startsExpr
  const postIncDec = 33664; TokenType[TokenType["postIncDec"] = postIncDec] = "postIncDec"; // ++/-- prefix postfix startsExpr
  const bang = 34432; TokenType[TokenType["bang"] = bang] = "bang"; // ! prefix startsExpr
  const tilde = 35456; TokenType[TokenType["tilde"] = tilde] = "tilde"; // ~ prefix startsExpr
  const pipeline = 35841; TokenType[TokenType["pipeline"] = pipeline] = "pipeline"; // |> prec:1
  const nullishCoalescing = 36866; TokenType[TokenType["nullishCoalescing"] = nullishCoalescing] = "nullishCoalescing"; // ?? prec:2
  const logicalOR = 37890; TokenType[TokenType["logicalOR"] = logicalOR] = "logicalOR"; // || prec:2
  const logicalAND = 38915; TokenType[TokenType["logicalAND"] = logicalAND] = "logicalAND"; // && prec:3
  const bitwiseOR = 39940; TokenType[TokenType["bitwiseOR"] = bitwiseOR] = "bitwiseOR"; // | prec:4
  const bitwiseXOR = 40965; TokenType[TokenType["bitwiseXOR"] = bitwiseXOR] = "bitwiseXOR"; // ^ prec:5
  const bitwiseAND = 41990; TokenType[TokenType["bitwiseAND"] = bitwiseAND] = "bitwiseAND"; // & prec:6
  const equality = 43015; TokenType[TokenType["equality"] = equality] = "equality"; // ==/!= prec:7
  const lessThan = 44040; TokenType[TokenType["lessThan"] = lessThan] = "lessThan"; // < prec:8
  const greaterThan = 45064; TokenType[TokenType["greaterThan"] = greaterThan] = "greaterThan"; // > prec:8
  const relationalOrEqual = 46088; TokenType[TokenType["relationalOrEqual"] = relationalOrEqual] = "relationalOrEqual"; // <=/>= prec:8
  const bitShiftL = 47113; TokenType[TokenType["bitShiftL"] = bitShiftL] = "bitShiftL"; // << prec:9
  const bitShiftR = 48137; TokenType[TokenType["bitShiftR"] = bitShiftR] = "bitShiftR"; // >>/>>> prec:9
  const plus = 49802; TokenType[TokenType["plus"] = plus] = "plus"; // + prec:10 prefix startsExpr
  const minus = 50826; TokenType[TokenType["minus"] = minus] = "minus"; // - prec:10 prefix startsExpr
  const modulo = 51723; TokenType[TokenType["modulo"] = modulo] = "modulo"; // % prec:11 startsExpr
  const star = 52235; TokenType[TokenType["star"] = star] = "star"; // * prec:11
  const slash = 53259; TokenType[TokenType["slash"] = slash] = "slash"; // / prec:11
  const exponent = 54348; TokenType[TokenType["exponent"] = exponent] = "exponent"; // ** prec:12 rightAssociative
  const jsxName = 55296; TokenType[TokenType["jsxName"] = jsxName] = "jsxName"; // jsxName
  const jsxText = 56320; TokenType[TokenType["jsxText"] = jsxText] = "jsxText"; // jsxText
  const jsxEmptyText = 57344; TokenType[TokenType["jsxEmptyText"] = jsxEmptyText] = "jsxEmptyText"; // jsxEmptyText
  const jsxTagStart = 58880; TokenType[TokenType["jsxTagStart"] = jsxTagStart] = "jsxTagStart"; // jsxTagStart startsExpr
  const jsxTagEnd = 59392; TokenType[TokenType["jsxTagEnd"] = jsxTagEnd] = "jsxTagEnd"; // jsxTagEnd
  const typeParameterStart = 60928; TokenType[TokenType["typeParameterStart"] = typeParameterStart] = "typeParameterStart"; // typeParameterStart startsExpr
  const nonNullAssertion = 61440; TokenType[TokenType["nonNullAssertion"] = nonNullAssertion] = "nonNullAssertion"; // nonNullAssertion
  const _break = 62480; TokenType[TokenType["_break"] = _break] = "_break"; // break keyword
  const _case = 63504; TokenType[TokenType["_case"] = _case] = "_case"; // case keyword
  const _catch = 64528; TokenType[TokenType["_catch"] = _catch] = "_catch"; // catch keyword
  const _continue = 65552; TokenType[TokenType["_continue"] = _continue] = "_continue"; // continue keyword
  const _debugger = 66576; TokenType[TokenType["_debugger"] = _debugger] = "_debugger"; // debugger keyword
  const _default = 67600; TokenType[TokenType["_default"] = _default] = "_default"; // default keyword
  const _do = 68624; TokenType[TokenType["_do"] = _do] = "_do"; // do keyword
  const _else = 69648; TokenType[TokenType["_else"] = _else] = "_else"; // else keyword
  const _finally = 70672; TokenType[TokenType["_finally"] = _finally] = "_finally"; // finally keyword
  const _for = 71696; TokenType[TokenType["_for"] = _for] = "_for"; // for keyword
  const _function = 73232; TokenType[TokenType["_function"] = _function] = "_function"; // function keyword startsExpr
  const _if = 73744; TokenType[TokenType["_if"] = _if] = "_if"; // if keyword
  const _return = 74768; TokenType[TokenType["_return"] = _return] = "_return"; // return keyword
  const _switch = 75792; TokenType[TokenType["_switch"] = _switch] = "_switch"; // switch keyword
  const _throw = 77456; TokenType[TokenType["_throw"] = _throw] = "_throw"; // throw keyword prefix startsExpr
  const _try = 77840; TokenType[TokenType["_try"] = _try] = "_try"; // try keyword
  const _var = 78864; TokenType[TokenType["_var"] = _var] = "_var"; // var keyword
  const _let = 79888; TokenType[TokenType["_let"] = _let] = "_let"; // let keyword
  const _const = 80912; TokenType[TokenType["_const"] = _const] = "_const"; // const keyword
  const _while = 81936; TokenType[TokenType["_while"] = _while] = "_while"; // while keyword
  const _with = 82960; TokenType[TokenType["_with"] = _with] = "_with"; // with keyword
  const _new = 84496; TokenType[TokenType["_new"] = _new] = "_new"; // new keyword startsExpr
  const _this = 85520; TokenType[TokenType["_this"] = _this] = "_this"; // this keyword startsExpr
  const _super = 86544; TokenType[TokenType["_super"] = _super] = "_super"; // super keyword startsExpr
  const _class = 87568; TokenType[TokenType["_class"] = _class] = "_class"; // class keyword startsExpr
  const _extends = 88080; TokenType[TokenType["_extends"] = _extends] = "_extends"; // extends keyword
  const _export = 89104; TokenType[TokenType["_export"] = _export] = "_export"; // export keyword
  const _import = 90640; TokenType[TokenType["_import"] = _import] = "_import"; // import keyword startsExpr
  const _yield = 91664; TokenType[TokenType["_yield"] = _yield] = "_yield"; // yield keyword startsExpr
  const _null = 92688; TokenType[TokenType["_null"] = _null] = "_null"; // null keyword startsExpr
  const _true = 93712; TokenType[TokenType["_true"] = _true] = "_true"; // true keyword startsExpr
  const _false = 94736; TokenType[TokenType["_false"] = _false] = "_false"; // false keyword startsExpr
  const _in = 95256; TokenType[TokenType["_in"] = _in] = "_in"; // in prec:8 keyword
  const _instanceof = 96280; TokenType[TokenType["_instanceof"] = _instanceof] = "_instanceof"; // instanceof prec:8 keyword
  const _typeof = 97936; TokenType[TokenType["_typeof"] = _typeof] = "_typeof"; // typeof keyword prefix startsExpr
  const _void = 98960; TokenType[TokenType["_void"] = _void] = "_void"; // void keyword prefix startsExpr
  const _delete = 99984; TokenType[TokenType["_delete"] = _delete] = "_delete"; // delete keyword prefix startsExpr
  const _async = 100880; TokenType[TokenType["_async"] = _async] = "_async"; // async keyword startsExpr
  const _get = 101904; TokenType[TokenType["_get"] = _get] = "_get"; // get keyword startsExpr
  const _set = 102928; TokenType[TokenType["_set"] = _set] = "_set"; // set keyword startsExpr
  const _declare = 103952; TokenType[TokenType["_declare"] = _declare] = "_declare"; // declare keyword startsExpr
  const _readonly = 104976; TokenType[TokenType["_readonly"] = _readonly] = "_readonly"; // readonly keyword startsExpr
  const _abstract = 106000; TokenType[TokenType["_abstract"] = _abstract] = "_abstract"; // abstract keyword startsExpr
  const _static = 107024; TokenType[TokenType["_static"] = _static] = "_static"; // static keyword startsExpr
  const _public = 107536; TokenType[TokenType["_public"] = _public] = "_public"; // public keyword
  const _private = 108560; TokenType[TokenType["_private"] = _private] = "_private"; // private keyword
  const _protected = 109584; TokenType[TokenType["_protected"] = _protected] = "_protected"; // protected keyword
  const _override = 110608; TokenType[TokenType["_override"] = _override] = "_override"; // override keyword
  const _as = 112144; TokenType[TokenType["_as"] = _as] = "_as"; // as keyword startsExpr
  const _enum = 113168; TokenType[TokenType["_enum"] = _enum] = "_enum"; // enum keyword startsExpr
  const _type = 114192; TokenType[TokenType["_type"] = _type] = "_type"; // type keyword startsExpr
  const _implements = 115216; TokenType[TokenType["_implements"] = _implements] = "_implements"; // implements keyword startsExpr
})(TokenType || (TokenType = {}));
function formatTokenType(tokenType) {
  switch (tokenType) {
    case TokenType.num:
      return "num";
    case TokenType.bigint:
      return "bigint";
    case TokenType.decimal:
      return "decimal";
    case TokenType.regexp:
      return "regexp";
    case TokenType.string:
      return "string";
    case TokenType.name:
      return "name";
    case TokenType.eof:
      return "eof";
    case TokenType.bracketL:
      return "[";
    case TokenType.bracketR:
      return "]";
    case TokenType.braceL:
      return "{";
    case TokenType.braceBarL:
      return "{|";
    case TokenType.braceR:
      return "}";
    case TokenType.braceBarR:
      return "|}";
    case TokenType.parenL:
      return "(";
    case TokenType.parenR:
      return ")";
    case TokenType.comma:
      return ",";
    case TokenType.semi:
      return ";";
    case TokenType.colon:
      return ":";
    case TokenType.doubleColon:
      return "::";
    case TokenType.dot:
      return ".";
    case TokenType.question:
      return "?";
    case TokenType.questionDot:
      return "?.";
    case TokenType.arrow:
      return "=>";
    case TokenType.template:
      return "template";
    case TokenType.ellipsis:
      return "...";
    case TokenType.backQuote:
      return "`";
    case TokenType.dollarBraceL:
      return "${";
    case TokenType.at:
      return "@";
    case TokenType.hash:
      return "#";
    case TokenType.eq:
      return "=";
    case TokenType.assign:
      return "_=";
    case TokenType.preIncDec:
      return "++/--";
    case TokenType.postIncDec:
      return "++/--";
    case TokenType.bang:
      return "!";
    case TokenType.tilde:
      return "~";
    case TokenType.pipeline:
      return "|>";
    case TokenType.nullishCoalescing:
      return "??";
    case TokenType.logicalOR:
      return "||";
    case TokenType.logicalAND:
      return "&&";
    case TokenType.bitwiseOR:
      return "|";
    case TokenType.bitwiseXOR:
      return "^";
    case TokenType.bitwiseAND:
      return "&";
    case TokenType.equality:
      return "==/!=";
    case TokenType.lessThan:
      return "<";
    case TokenType.greaterThan:
      return ">";
    case TokenType.relationalOrEqual:
      return "<=/>=";
    case TokenType.bitShiftL:
      return "<<";
    case TokenType.bitShiftR:
      return ">>/>>>";
    case TokenType.plus:
      return "+";
    case TokenType.minus:
      return "-";
    case TokenType.modulo:
      return "%";
    case TokenType.star:
      return "*";
    case TokenType.slash:
      return "/";
    case TokenType.exponent:
      return "**";
    case TokenType.jsxName:
      return "jsxName";
    case TokenType.jsxText:
      return "jsxText";
    case TokenType.jsxEmptyText:
      return "jsxEmptyText";
    case TokenType.jsxTagStart:
      return "jsxTagStart";
    case TokenType.jsxTagEnd:
      return "jsxTagEnd";
    case TokenType.typeParameterStart:
      return "typeParameterStart";
    case TokenType.nonNullAssertion:
      return "nonNullAssertion";
    case TokenType._break:
      return "break";
    case TokenType._case:
      return "case";
    case TokenType._catch:
      return "catch";
    case TokenType._continue:
      return "continue";
    case TokenType._debugger:
      return "debugger";
    case TokenType._default:
      return "default";
    case TokenType._do:
      return "do";
    case TokenType._else:
      return "else";
    case TokenType._finally:
      return "finally";
    case TokenType._for:
      return "for";
    case TokenType._function:
      return "function";
    case TokenType._if:
      return "if";
    case TokenType._return:
      return "return";
    case TokenType._switch:
      return "switch";
    case TokenType._throw:
      return "throw";
    case TokenType._try:
      return "try";
    case TokenType._var:
      return "var";
    case TokenType._let:
      return "let";
    case TokenType._const:
      return "const";
    case TokenType._while:
      return "while";
    case TokenType._with:
      return "with";
    case TokenType._new:
      return "new";
    case TokenType._this:
      return "this";
    case TokenType._super:
      return "super";
    case TokenType._class:
      return "class";
    case TokenType._extends:
      return "extends";
    case TokenType._export:
      return "export";
    case TokenType._import:
      return "import";
    case TokenType._yield:
      return "yield";
    case TokenType._null:
      return "null";
    case TokenType._true:
      return "true";
    case TokenType._false:
      return "false";
    case TokenType._in:
      return "in";
    case TokenType._instanceof:
      return "instanceof";
    case TokenType._typeof:
      return "typeof";
    case TokenType._void:
      return "void";
    case TokenType._delete:
      return "delete";
    case TokenType._async:
      return "async";
    case TokenType._get:
      return "get";
    case TokenType._set:
      return "set";
    case TokenType._declare:
      return "declare";
    case TokenType._readonly:
      return "readonly";
    case TokenType._abstract:
      return "abstract";
    case TokenType._static:
      return "static";
    case TokenType._public:
      return "public";
    case TokenType._private:
      return "private";
    case TokenType._protected:
      return "protected";
    case TokenType._override:
      return "override";
    case TokenType._as:
      return "as";
    case TokenType._enum:
      return "enum";
    case TokenType._type:
      return "type";
    case TokenType._implements:
      return "implements";
    default:
      return "";
  }
}

class Scope {
  
  
  

  constructor(startTokenIndex, endTokenIndex, isFunctionScope) {
    this.startTokenIndex = startTokenIndex;
    this.endTokenIndex = endTokenIndex;
    this.isFunctionScope = isFunctionScope;
  }
}

class StateSnapshot {
  constructor(
     potentialArrowAt,
     noAnonFunctionType,
     inDisallowConditionalTypesContext,
     tokensLength,
     scopesLength,
     pos,
     type,
     contextualKeyword,
     start,
     end,
     isType,
     scopeDepth,
     error,
  ) {this.potentialArrowAt = potentialArrowAt;this.noAnonFunctionType = noAnonFunctionType;this.inDisallowConditionalTypesContext = inDisallowConditionalTypesContext;this.tokensLength = tokensLength;this.scopesLength = scopesLength;this.pos = pos;this.type = type;this.contextualKeyword = contextualKeyword;this.start = start;this.end = end;this.isType = isType;this.scopeDepth = scopeDepth;this.error = error;}
}

class State {constructor() { State.prototype.__init.call(this);State.prototype.__init2.call(this);State.prototype.__init3.call(this);State.prototype.__init4.call(this);State.prototype.__init5.call(this);State.prototype.__init6.call(this);State.prototype.__init7.call(this);State.prototype.__init8.call(this);State.prototype.__init9.call(this);State.prototype.__init10.call(this);State.prototype.__init11.call(this);State.prototype.__init12.call(this);State.prototype.__init13.call(this); }
  // Used to signify the start of a potential arrow function
  __init() {this.potentialArrowAt = -1;}

  // Used by Flow to handle an edge case involving function type parsing.
  __init2() {this.noAnonFunctionType = false;}

  // Used by TypeScript to handle ambiguities when parsing conditional types.
  __init3() {this.inDisallowConditionalTypesContext = false;}

  // Token store.
  __init4() {this.tokens = [];}

  // Array of all observed scopes, ordered by their ending position.
  __init5() {this.scopes = [];}

  // The current position of the tokenizer in the input.
  __init6() {this.pos = 0;}

  // Information about the current token.
  __init7() {this.type = TokenType.eof;}
  __init8() {this.contextualKeyword = ContextualKeyword.NONE;}
  __init9() {this.start = 0;}
  __init10() {this.end = 0;}

  __init11() {this.isType = false;}
  __init12() {this.scopeDepth = 0;}

  /**
   * If the parser is in an error state, then the token is always tt.eof and all functions can
   * keep executing but should be written so they don't get into an infinite loop in this situation.
   *
   * This approach, combined with the ability to snapshot and restore state, allows us to implement
   * backtracking without exceptions and without needing to explicitly propagate error states
   * everywhere.
   */
  __init13() {this.error = null;}

  snapshot() {
    return new StateSnapshot(
      this.potentialArrowAt,
      this.noAnonFunctionType,
      this.inDisallowConditionalTypesContext,
      this.tokens.length,
      this.scopes.length,
      this.pos,
      this.type,
      this.contextualKeyword,
      this.start,
      this.end,
      this.isType,
      this.scopeDepth,
      this.error,
    );
  }

  restoreFromSnapshot(snapshot) {
    this.potentialArrowAt = snapshot.potentialArrowAt;
    this.noAnonFunctionType = snapshot.noAnonFunctionType;
    this.inDisallowConditionalTypesContext = snapshot.inDisallowConditionalTypesContext;
    this.tokens.length = snapshot.tokensLength;
    this.scopes.length = snapshot.scopesLength;
    this.pos = snapshot.pos;
    this.type = snapshot.type;
    this.contextualKeyword = snapshot.contextualKeyword;
    this.start = snapshot.start;
    this.end = snapshot.end;
    this.isType = snapshot.isType;
    this.scopeDepth = snapshot.scopeDepth;
    this.error = snapshot.error;
  }
}

var charCodes; (function (charCodes) {
  const backSpace = 8; charCodes[charCodes["backSpace"] = backSpace] = "backSpace";
  const lineFeed = 10; charCodes[charCodes["lineFeed"] = lineFeed] = "lineFeed"; //  '\n'
  const tab = 9; charCodes[charCodes["tab"] = tab] = "tab"; //  '\t'
  const carriageReturn = 13; charCodes[charCodes["carriageReturn"] = carriageReturn] = "carriageReturn"; //  '\r'
  const shiftOut = 14; charCodes[charCodes["shiftOut"] = shiftOut] = "shiftOut";
  const space = 32; charCodes[charCodes["space"] = space] = "space";
  const exclamationMark = 33; charCodes[charCodes["exclamationMark"] = exclamationMark] = "exclamationMark"; //  '!'
  const quotationMark = 34; charCodes[charCodes["quotationMark"] = quotationMark] = "quotationMark"; //  '"'
  const numberSign = 35; charCodes[charCodes["numberSign"] = numberSign] = "numberSign"; //  '#'
  const dollarSign = 36; charCodes[charCodes["dollarSign"] = dollarSign] = "dollarSign"; //  '$'
  const percentSign = 37; charCodes[charCodes["percentSign"] = percentSign] = "percentSign"; //  '%'
  const ampersand = 38; charCodes[charCodes["ampersand"] = ampersand] = "ampersand"; //  '&'
  const apostrophe = 39; charCodes[charCodes["apostrophe"] = apostrophe] = "apostrophe"; //  '''
  const leftParenthesis = 40; charCodes[charCodes["leftParenthesis"] = leftParenthesis] = "leftParenthesis"; //  '('
  const rightParenthesis = 41; charCodes[charCodes["rightParenthesis"] = rightParenthesis] = "rightParenthesis"; //  ')'
  const asterisk = 42; charCodes[charCodes["asterisk"] = asterisk] = "asterisk"; //  '*'
  const plusSign = 43; charCodes[charCodes["plusSign"] = plusSign] = "plusSign"; //  '+'
  const comma = 44; charCodes[charCodes["comma"] = comma] = "comma"; //  ','
  const dash = 45; charCodes[charCodes["dash"] = dash] = "dash"; //  '-'
  const dot = 46; charCodes[charCodes["dot"] = dot] = "dot"; //  '.'
  const slash = 47; charCodes[charCodes["slash"] = slash] = "slash"; //  '/'
  const digit0 = 48; charCodes[charCodes["digit0"] = digit0] = "digit0"; //  '0'
  const digit1 = 49; charCodes[charCodes["digit1"] = digit1] = "digit1"; //  '1'
  const digit2 = 50; charCodes[charCodes["digit2"] = digit2] = "digit2"; //  '2'
  const digit3 = 51; charCodes[charCodes["digit3"] = digit3] = "digit3"; //  '3'
  const digit4 = 52; charCodes[charCodes["digit4"] = digit4] = "digit4"; //  '4'
  const digit5 = 53; charCodes[charCodes["digit5"] = digit5] = "digit5"; //  '5'
  const digit6 = 54; charCodes[charCodes["digit6"] = digit6] = "digit6"; //  '6'
  const digit7 = 55; charCodes[charCodes["digit7"] = digit7] = "digit7"; //  '7'
  const digit8 = 56; charCodes[charCodes["digit8"] = digit8] = "digit8"; //  '8'
  const digit9 = 57; charCodes[charCodes["digit9"] = digit9] = "digit9"; //  '9'
  const colon = 58; charCodes[charCodes["colon"] = colon] = "colon"; //  ':'
  const semicolon = 59; charCodes[charCodes["semicolon"] = semicolon] = "semicolon"; //  ';'
  const lessThan = 60; charCodes[charCodes["lessThan"] = lessThan] = "lessThan"; //  '<'
  const equalsTo = 61; charCodes[charCodes["equalsTo"] = equalsTo] = "equalsTo"; //  '='
  const greaterThan = 62; charCodes[charCodes["greaterThan"] = greaterThan] = "greaterThan"; //  '>'
  const questionMark = 63; charCodes[charCodes["questionMark"] = questionMark] = "questionMark"; //  '?'
  const atSign = 64; charCodes[charCodes["atSign"] = atSign] = "atSign"; //  '@'
  const uppercaseA = 65; charCodes[charCodes["uppercaseA"] = uppercaseA] = "uppercaseA"; //  'A'
  const uppercaseB = 66; charCodes[charCodes["uppercaseB"] = uppercaseB] = "uppercaseB"; //  'B'
  const uppercaseC = 67; charCodes[charCodes["uppercaseC"] = uppercaseC] = "uppercaseC"; //  'C'
  const uppercaseD = 68; charCodes[charCodes["uppercaseD"] = uppercaseD] = "uppercaseD"; //  'D'
  const uppercaseE = 69; charCodes[charCodes["uppercaseE"] = uppercaseE] = "uppercaseE"; //  'E'
  const uppercaseF = 70; charCodes[charCodes["uppercaseF"] = uppercaseF] = "uppercaseF"; //  'F'
  const uppercaseG = 71; charCodes[charCodes["uppercaseG"] = uppercaseG] = "uppercaseG"; //  'G'
  const uppercaseH = 72; charCodes[charCodes["uppercaseH"] = uppercaseH] = "uppercaseH"; //  'H'
  const uppercaseI = 73; charCodes[charCodes["uppercaseI"] = uppercaseI] = "uppercaseI"; //  'I'
  const uppercaseJ = 74; charCodes[charCodes["uppercaseJ"] = uppercaseJ] = "uppercaseJ"; //  'J'
  const uppercaseK = 75; charCodes[charCodes["uppercaseK"] = uppercaseK] = "uppercaseK"; //  'K'
  const uppercaseL = 76; charCodes[charCodes["uppercaseL"] = uppercaseL] = "uppercaseL"; //  'L'
  const uppercaseM = 77; charCodes[charCodes["uppercaseM"] = uppercaseM] = "uppercaseM"; //  'M'
  const uppercaseN = 78; charCodes[charCodes["uppercaseN"] = uppercaseN] = "uppercaseN"; //  'N'
  const uppercaseO = 79; charCodes[charCodes["uppercaseO"] = uppercaseO] = "uppercaseO"; //  'O'
  const uppercaseP = 80; charCodes[charCodes["uppercaseP"] = uppercaseP] = "uppercaseP"; //  'P'
  const uppercaseQ = 81; charCodes[charCodes["uppercaseQ"] = uppercaseQ] = "uppercaseQ"; //  'Q'
  const uppercaseR = 82; charCodes[charCodes["uppercaseR"] = uppercaseR] = "uppercaseR"; //  'R'
  const uppercaseS = 83; charCodes[charCodes["uppercaseS"] = uppercaseS] = "uppercaseS"; //  'S'
  const uppercaseT = 84; charCodes[charCodes["uppercaseT"] = uppercaseT] = "uppercaseT"; //  'T'
  const uppercaseU = 85; charCodes[charCodes["uppercaseU"] = uppercaseU] = "uppercaseU"; //  'U'
  const uppercaseV = 86; charCodes[charCodes["uppercaseV"] = uppercaseV] = "uppercaseV"; //  'V'
  const uppercaseW = 87; charCodes[charCodes["uppercaseW"] = uppercaseW] = "uppercaseW"; //  'W'
  const uppercaseX = 88; charCodes[charCodes["uppercaseX"] = uppercaseX] = "uppercaseX"; //  'X'
  const uppercaseY = 89; charCodes[charCodes["uppercaseY"] = uppercaseY] = "uppercaseY"; //  'Y'
  const uppercaseZ = 90; charCodes[charCodes["uppercaseZ"] = uppercaseZ] = "uppercaseZ"; //  'Z'
  const leftSquareBracket = 91; charCodes[charCodes["leftSquareBracket"] = leftSquareBracket] = "leftSquareBracket"; //  '['
  const backslash = 92; charCodes[charCodes["backslash"] = backslash] = "backslash"; //  '\    '
  const rightSquareBracket = 93; charCodes[charCodes["rightSquareBracket"] = rightSquareBracket] = "rightSquareBracket"; //  ']'
  const caret = 94; charCodes[charCodes["caret"] = caret] = "caret"; //  '^'
  const underscore = 95; charCodes[charCodes["underscore"] = underscore] = "underscore"; //  '_'
  const graveAccent = 96; charCodes[charCodes["graveAccent"] = graveAccent] = "graveAccent"; //  '`'
  const lowercaseA = 97; charCodes[charCodes["lowercaseA"] = lowercaseA] = "lowercaseA"; //  'a'
  const lowercaseB = 98; charCodes[charCodes["lowercaseB"] = lowercaseB] = "lowercaseB"; //  'b'
  const lowercaseC = 99; charCodes[charCodes["lowercaseC"] = lowercaseC] = "lowercaseC"; //  'c'
  const lowercaseD = 100; charCodes[charCodes["lowercaseD"] = lowercaseD] = "lowercaseD"; //  'd'
  const lowercaseE = 101; charCodes[charCodes["lowercaseE"] = lowercaseE] = "lowercaseE"; //  'e'
  const lowercaseF = 102; charCodes[charCodes["lowercaseF"] = lowercaseF] = "lowercaseF"; //  'f'
  const lowercaseG = 103; charCodes[charCodes["lowercaseG"] = lowercaseG] = "lowercaseG"; //  'g'
  const lowercaseH = 104; charCodes[charCodes["lowercaseH"] = lowercaseH] = "lowercaseH"; //  'h'
  const lowercaseI = 105; charCodes[charCodes["lowercaseI"] = lowercaseI] = "lowercaseI"; //  'i'
  const lowercaseJ = 106; charCodes[charCodes["lowercaseJ"] = lowercaseJ] = "lowercaseJ"; //  'j'
  const lowercaseK = 107; charCodes[charCodes["lowercaseK"] = lowercaseK] = "lowercaseK"; //  'k'
  const lowercaseL = 108; charCodes[charCodes["lowercaseL"] = lowercaseL] = "lowercaseL"; //  'l'
  const lowercaseM = 109; charCodes[charCodes["lowercaseM"] = lowercaseM] = "lowercaseM"; //  'm'
  const lowercaseN = 110; charCodes[charCodes["lowercaseN"] = lowercaseN] = "lowercaseN"; //  'n'
  const lowercaseO = 111; charCodes[charCodes["lowercaseO"] = lowercaseO] = "lowercaseO"; //  'o'
  const lowercaseP = 112; charCodes[charCodes["lowercaseP"] = lowercaseP] = "lowercaseP"; //  'p'
  const lowercaseQ = 113; charCodes[charCodes["lowercaseQ"] = lowercaseQ] = "lowercaseQ"; //  'q'
  const lowercaseR = 114; charCodes[charCodes["lowercaseR"] = lowercaseR] = "lowercaseR"; //  'r'
  const lowercaseS = 115; charCodes[charCodes["lowercaseS"] = lowercaseS] = "lowercaseS"; //  's'
  const lowercaseT = 116; charCodes[charCodes["lowercaseT"] = lowercaseT] = "lowercaseT"; //  't'
  const lowercaseU = 117; charCodes[charCodes["lowercaseU"] = lowercaseU] = "lowercaseU"; //  'u'
  const lowercaseV = 118; charCodes[charCodes["lowercaseV"] = lowercaseV] = "lowercaseV"; //  'v'
  const lowercaseW = 119; charCodes[charCodes["lowercaseW"] = lowercaseW] = "lowercaseW"; //  'w'
  const lowercaseX = 120; charCodes[charCodes["lowercaseX"] = lowercaseX] = "lowercaseX"; //  'x'
  const lowercaseY = 121; charCodes[charCodes["lowercaseY"] = lowercaseY] = "lowercaseY"; //  'y'
  const lowercaseZ = 122; charCodes[charCodes["lowercaseZ"] = lowercaseZ] = "lowercaseZ"; //  'z'
  const leftCurlyBrace = 123; charCodes[charCodes["leftCurlyBrace"] = leftCurlyBrace] = "leftCurlyBrace"; //  '{'
  const verticalBar = 124; charCodes[charCodes["verticalBar"] = verticalBar] = "verticalBar"; //  '|'
  const rightCurlyBrace = 125; charCodes[charCodes["rightCurlyBrace"] = rightCurlyBrace] = "rightCurlyBrace"; //  '}'
  const tilde = 126; charCodes[charCodes["tilde"] = tilde] = "tilde"; //  '~'
  const nonBreakingSpace = 160; charCodes[charCodes["nonBreakingSpace"] = nonBreakingSpace] = "nonBreakingSpace";
  // eslint-disable-next-line no-irregular-whitespace
  const oghamSpaceMark = 5760; charCodes[charCodes["oghamSpaceMark"] = oghamSpaceMark] = "oghamSpaceMark"; // ' '
  const lineSeparator = 8232; charCodes[charCodes["lineSeparator"] = lineSeparator] = "lineSeparator";
  const paragraphSeparator = 8233; charCodes[charCodes["paragraphSeparator"] = paragraphSeparator] = "paragraphSeparator";
})(charCodes || (charCodes = {}));

let isJSXEnabled;
let isTypeScriptEnabled;
let isFlowEnabled;
let state;
let input;
let nextContextId;

function getNextContextId() {
  return nextContextId++;
}

// eslint-disable-next-line @typescript-eslint/no-explicit-any
function augmentError(error) {
  if ("pos" in error) {
    const loc = locationForIndex(error.pos);
    error.message += ` (${loc.line}:${loc.column})`;
    error.loc = loc;
  }
  return error;
}

class Loc {
  
  
  constructor(line, column) {
    this.line = line;
    this.column = column;
  }
}

function locationForIndex(pos) {
  let line = 1;
  let column = 1;
  for (let i = 0; i < pos; i++) {
    if (input.charCodeAt(i) === charCodes.lineFeed) {
      line++;
      column = 1;
    } else {
      column++;
    }
  }
  return new Loc(line, column);
}

function initParser(
  inputCode,
  isJSXEnabledArg,
  isTypeScriptEnabledArg,
  isFlowEnabledArg,
) {
  input = inputCode;
  state = new State();
  nextContextId = 1;
  isJSXEnabled = isJSXEnabledArg;
  isTypeScriptEnabled = isTypeScriptEnabledArg;
  isFlowEnabled = isFlowEnabledArg;
}

// ## Parser utilities

// Tests whether parsed token is a contextual keyword.
function isContextual(contextualKeyword) {
  return state.contextualKeyword === contextualKeyword;
}

function isLookaheadContextual(contextualKeyword) {
  const l = lookaheadTypeAndKeyword();
  return l.type === TokenType.name && l.contextualKeyword === contextualKeyword;
}

// Consumes contextual keyword if possible.
function eatContextual(contextualKeyword) {
  return state.contextualKeyword === contextualKeyword && eat(TokenType.name);
}

// Asserts that following token is given contextual keyword.
function expectContextual(contextualKeyword) {
  if (!eatContextual(contextualKeyword)) {
    unexpected();
  }
}

// Test whether a semicolon can be inserted at the current position.
function canInsertSemicolon() {
  return match(TokenType.eof) || match(TokenType.braceR) || hasPrecedingLineBreak();
}

function hasPrecedingLineBreak() {
  const prevToken = state.tokens[state.tokens.length - 1];
  const lastTokEnd = prevToken ? prevToken.end : 0;
  for (let i = lastTokEnd; i < state.start; i++) {
    const code = input.charCodeAt(i);
    if (
      code === charCodes.lineFeed ||
      code === charCodes.carriageReturn ||
      code === 0x2028 ||
      code === 0x2029
    ) {
      return true;
    }
  }
  return false;
}

function hasFollowingLineBreak() {
  const nextStart = nextTokenStart();
  for (let i = state.end; i < nextStart; i++) {
    const code = input.charCodeAt(i);
    if (
      code === charCodes.lineFeed ||
      code === charCodes.carriageReturn ||
      code === 0x2028 ||
      code === 0x2029
    ) {
      return true;
    }
  }
  return false;
}

function isLineTerminator() {
  return eat(TokenType.semi) || canInsertSemicolon();
}

// Consume a semicolon, or, failing that, see if we are allowed to
// pretend that there is a semicolon at this position.
function semicolon$1() {
  if (!isLineTerminator()) {
    unexpected('Unexpected token, expected ";"');
  }
}

// Expect a token of a given type. If found, consume it, otherwise,
// raise an unexpected token error at given pos.
function expect(type) {
  const matched = eat(type);
  if (!matched) {
    unexpected(`Unexpected token, expected "${formatTokenType(type)}"`);
  }
}

/**
 * Transition the parser to an error state. All code needs to be written to naturally unwind in this
 * state, which allows us to backtrack without exceptions and without error plumbing everywhere.
 */
function unexpected(message = "Unexpected token", pos = state.start) {
  if (state.error) {
    return;
  }
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const err = new SyntaxError(message);
  err.pos = pos;
  state.error = err;
  state.pos = input.length;
  finishToken(TokenType.eof);
}

// https://tc39.github.io/ecma262/#sec-white-space
const WHITESPACE_CHARS = [
  0x0009,
  0x000b,
  0x000c,
  charCodes.space,
  charCodes.nonBreakingSpace,
  charCodes.oghamSpaceMark,
  0x2000, // EN QUAD
  0x2001, // EM QUAD
  0x2002, // EN SPACE
  0x2003, // EM SPACE
  0x2004, // THREE-PER-EM SPACE
  0x2005, // FOUR-PER-EM SPACE
  0x2006, // SIX-PER-EM SPACE
  0x2007, // FIGURE SPACE
  0x2008, // PUNCTUATION SPACE
  0x2009, // THIN SPACE
  0x200a, // HAIR SPACE
  0x202f, // NARROW NO-BREAK SPACE
  0x205f, // MEDIUM MATHEMATICAL SPACE
  0x3000, // IDEOGRAPHIC SPACE
  0xfeff, // ZERO WIDTH NO-BREAK SPACE
];

const skipWhiteSpace = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;

const IS_WHITESPACE = new Uint8Array(65536);
for (const char of WHITESPACE_CHARS) {
  IS_WHITESPACE[char] = 1;
}

function computeIsIdentifierChar(code) {
  if (code < 48) return code === 36;
  if (code < 58) return true;
  if (code < 65) return false;
  if (code < 91) return true;
  if (code < 97) return code === 95;
  if (code < 123) return true;
  if (code < 128) return false;
  throw new Error("Should not be called with non-ASCII char code.");
}

const IS_IDENTIFIER_CHAR = new Uint8Array(65536);
for (let i = 0; i < 128; i++) {
  IS_IDENTIFIER_CHAR[i] = computeIsIdentifierChar(i) ? 1 : 0;
}
for (let i = 128; i < 65536; i++) {
  IS_IDENTIFIER_CHAR[i] = 1;
}
// Aside from whitespace and newlines, all characters outside the ASCII space are either
// identifier characters or invalid. Since we're not performing code validation, we can just
// treat all invalid characters as identifier characters.
for (const whitespaceChar of WHITESPACE_CHARS) {
  IS_IDENTIFIER_CHAR[whitespaceChar] = 0;
}
IS_IDENTIFIER_CHAR[0x2028] = 0;
IS_IDENTIFIER_CHAR[0x2029] = 0;

const IS_IDENTIFIER_START = IS_IDENTIFIER_CHAR.slice();
for (let numChar = charCodes.digit0; numChar <= charCodes.digit9; numChar++) {
  IS_IDENTIFIER_START[numChar] = 0;
}

// Generated file, do not edit! Run "yarn generate" to re-generate this file.

// prettier-ignore
const READ_WORD_TREE = new Int32Array([
  // ""
  -1, 27, 783, 918, 1755, 2376, 2862, 3483, -1, 3699, -1, 4617, 4752, 4833, 5130, 5508, 5940, -1, 6480, 6939, 7749, 8181, 8451, 8613, -1, 8829, -1,
  // "a"
  -1, -1, 54, 243, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 432, -1, -1, -1, 675, -1, -1, -1,
  // "ab"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 81, -1, -1, -1, -1, -1, -1, -1,
  // "abs"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 108, -1, -1, -1, -1, -1, -1,
  // "abst"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 135, -1, -1, -1, -1, -1, -1, -1, -1,
  // "abstr"
  -1, 162, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "abstra"
  -1, -1, -1, 189, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "abstrac"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 216, -1, -1, -1, -1, -1, -1,
  // "abstract"
  ContextualKeyword._abstract << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "ac"
  -1, -1, -1, 270, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "acc"
  -1, -1, -1, -1, -1, 297, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "acce"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 324, -1, -1, -1, -1, -1, -1, -1,
  // "acces"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 351, -1, -1, -1, -1, -1, -1, -1,
  // "access"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 378, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "accesso"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 405, -1, -1, -1, -1, -1, -1, -1, -1,
  // "accessor"
  ContextualKeyword._accessor << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "as"
  ContextualKeyword._as << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 459, -1, -1, -1, -1, -1, 594, -1,
  // "ass"
  -1, -1, -1, -1, -1, 486, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "asse"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 513, -1, -1, -1, -1, -1, -1, -1, -1,
  // "asser"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 540, -1, -1, -1, -1, -1, -1,
  // "assert"
  ContextualKeyword._assert << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 567, -1, -1, -1, -1, -1, -1, -1,
  // "asserts"
  ContextualKeyword._asserts << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "asy"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 621, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "asyn"
  -1, -1, -1, 648, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "async"
  ContextualKeyword._async << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "aw"
  -1, 702, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "awa"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, 729, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "awai"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 756, -1, -1, -1, -1, -1, -1,
  // "await"
  ContextualKeyword._await << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "b"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 810, -1, -1, -1, -1, -1, -1, -1, -1,
  // "br"
  -1, -1, -1, -1, -1, 837, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "bre"
  -1, 864, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "brea"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 891, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "break"
  (TokenType._break << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "c"
  -1, 945, -1, -1, -1, -1, -1, -1, 1107, -1, -1, -1, 1242, -1, -1, 1350, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "ca"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 972, 1026, -1, -1, -1, -1, -1, -1,
  // "cas"
  -1, -1, -1, -1, -1, 999, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "case"
  (TokenType._case << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "cat"
  -1, -1, -1, 1053, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "catc"
  -1, -1, -1, -1, -1, -1, -1, -1, 1080, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "catch"
  (TokenType._catch << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "ch"
  -1, -1, -1, -1, -1, 1134, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "che"
  -1, -1, -1, 1161, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "chec"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1188, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "check"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1215, -1, -1, -1, -1, -1, -1, -1,
  // "checks"
  ContextualKeyword._checks << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "cl"
  -1, 1269, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "cla"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1296, -1, -1, -1, -1, -1, -1, -1,
  // "clas"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1323, -1, -1, -1, -1, -1, -1, -1,
  // "class"
  (TokenType._class << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "co"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1377, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "con"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1404, 1620, -1, -1, -1, -1, -1, -1,
  // "cons"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1431, -1, -1, -1, -1, -1, -1,
  // "const"
  (TokenType._const << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1458, -1, -1, -1, -1, -1, -1, -1, -1,
  // "constr"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1485, -1, -1, -1, -1, -1,
  // "constru"
  -1, -1, -1, 1512, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "construc"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1539, -1, -1, -1, -1, -1, -1,
  // "construct"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1566, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "constructo"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1593, -1, -1, -1, -1, -1, -1, -1, -1,
  // "constructor"
  ContextualKeyword._constructor << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "cont"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, 1647, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "conti"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1674, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "contin"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1701, -1, -1, -1, -1, -1,
  // "continu"
  -1, -1, -1, -1, -1, 1728, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "continue"
  (TokenType._continue << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "d"
  -1, -1, -1, -1, -1, 1782, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2349, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "de"
  -1, -1, 1809, 1971, -1, -1, 2106, -1, -1, -1, -1, -1, 2241, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "deb"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1836, -1, -1, -1, -1, -1,
  // "debu"
  -1, -1, -1, -1, -1, -1, -1, 1863, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "debug"
  -1, -1, -1, -1, -1, -1, -1, 1890, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "debugg"
  -1, -1, -1, -1, -1, 1917, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "debugge"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1944, -1, -1, -1, -1, -1, -1, -1, -1,
  // "debugger"
  (TokenType._debugger << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "dec"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1998, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "decl"
  -1, 2025, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "decla"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2052, -1, -1, -1, -1, -1, -1, -1, -1,
  // "declar"
  -1, -1, -1, -1, -1, 2079, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "declare"
  ContextualKeyword._declare << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "def"
  -1, 2133, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "defa"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2160, -1, -1, -1, -1, -1,
  // "defau"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2187, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "defaul"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2214, -1, -1, -1, -1, -1, -1,
  // "default"
  (TokenType._default << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "del"
  -1, -1, -1, -1, -1, 2268, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "dele"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2295, -1, -1, -1, -1, -1, -1,
  // "delet"
  -1, -1, -1, -1, -1, 2322, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "delete"
  (TokenType._delete << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "do"
  (TokenType._do << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "e"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2403, -1, 2484, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2565, -1, -1,
  // "el"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2430, -1, -1, -1, -1, -1, -1, -1,
  // "els"
  -1, -1, -1, -1, -1, 2457, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "else"
  (TokenType._else << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "en"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2511, -1, -1, -1, -1, -1,
  // "enu"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2538, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "enum"
  ContextualKeyword._enum << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "ex"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2592, -1, -1, -1, 2727, -1, -1, -1, -1, -1, -1,
  // "exp"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2619, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "expo"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2646, -1, -1, -1, -1, -1, -1, -1, -1,
  // "expor"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2673, -1, -1, -1, -1, -1, -1,
  // "export"
  (TokenType._export << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2700, -1, -1, -1, -1, -1, -1, -1,
  // "exports"
  ContextualKeyword._exports << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "ext"
  -1, -1, -1, -1, -1, 2754, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "exte"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2781, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "exten"
  -1, -1, -1, -1, 2808, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "extend"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2835, -1, -1, -1, -1, -1, -1, -1,
  // "extends"
  (TokenType._extends << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "f"
  -1, 2889, -1, -1, -1, -1, -1, -1, -1, 2997, -1, -1, -1, -1, -1, 3159, -1, -1, 3213, -1, -1, 3294, -1, -1, -1, -1, -1,
  // "fa"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2916, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "fal"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2943, -1, -1, -1, -1, -1, -1, -1,
  // "fals"
  -1, -1, -1, -1, -1, 2970, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "false"
  (TokenType._false << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "fi"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3024, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "fin"
  -1, 3051, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "fina"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3078, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "final"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3105, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "finall"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3132, -1,
  // "finally"
  (TokenType._finally << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "fo"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3186, -1, -1, -1, -1, -1, -1, -1, -1,
  // "for"
  (TokenType._for << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "fr"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3240, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "fro"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3267, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "from"
  ContextualKeyword._from << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "fu"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3321, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "fun"
  -1, -1, -1, 3348, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "func"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3375, -1, -1, -1, -1, -1, -1,
  // "funct"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, 3402, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "functi"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3429, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "functio"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3456, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "function"
  (TokenType._function << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "g"
  -1, -1, -1, -1, -1, 3510, -1, -1, -1, -1, -1, -1, 3564, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "ge"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3537, -1, -1, -1, -1, -1, -1,
  // "get"
  ContextualKeyword._get << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "gl"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3591, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "glo"
  -1, -1, 3618, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "glob"
  -1, 3645, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "globa"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3672, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "global"
  ContextualKeyword._global << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "i"
  -1, -1, -1, -1, -1, -1, 3726, -1, -1, -1, -1, -1, -1, 3753, 4077, -1, -1, -1, -1, 4590, -1, -1, -1, -1, -1, -1, -1,
  // "if"
  (TokenType._if << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "im"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3780, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "imp"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3807, -1, -1, 3996, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "impl"
  -1, -1, -1, -1, -1, 3834, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "imple"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3861, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "implem"
  -1, -1, -1, -1, -1, 3888, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "impleme"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3915, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "implemen"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3942, -1, -1, -1, -1, -1, -1,
  // "implement"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3969, -1, -1, -1, -1, -1, -1, -1,
  // "implements"
  ContextualKeyword._implements << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "impo"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4023, -1, -1, -1, -1, -1, -1, -1, -1,
  // "impor"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4050, -1, -1, -1, -1, -1, -1,
  // "import"
  (TokenType._import << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "in"
  (TokenType._in << 1) + 1, -1, -1, -1, -1, -1, 4104, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4185, 4401, -1, -1, -1, -1, -1, -1,
  // "inf"
  -1, -1, -1, -1, -1, 4131, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "infe"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4158, -1, -1, -1, -1, -1, -1, -1, -1,
  // "infer"
  ContextualKeyword._infer << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "ins"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4212, -1, -1, -1, -1, -1, -1,
  // "inst"
  -1, 4239, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "insta"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4266, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "instan"
  -1, -1, -1, 4293, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "instanc"
  -1, -1, -1, -1, -1, 4320, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "instance"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4347, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "instanceo"
  -1, -1, -1, -1, -1, -1, 4374, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "instanceof"
  (TokenType._instanceof << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "int"
  -1, -1, -1, -1, -1, 4428, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "inte"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4455, -1, -1, -1, -1, -1, -1, -1, -1,
  // "inter"
  -1, -1, -1, -1, -1, -1, 4482, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "interf"
  -1, 4509, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "interfa"
  -1, -1, -1, 4536, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "interfac"
  -1, -1, -1, -1, -1, 4563, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "interface"
  ContextualKeyword._interface << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "is"
  ContextualKeyword._is << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "k"
  -1, -1, -1, -1, -1, 4644, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "ke"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4671, -1,
  // "key"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4698, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "keyo"
  -1, -1, -1, -1, -1, -1, 4725, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "keyof"
  ContextualKeyword._keyof << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "l"
  -1, -1, -1, -1, -1, 4779, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "le"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4806, -1, -1, -1, -1, -1, -1,
  // "let"
  (TokenType._let << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "m"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, 4860, -1, -1, -1, -1, -1, 4995, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "mi"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4887, -1, -1,
  // "mix"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, 4914, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "mixi"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4941, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "mixin"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4968, -1, -1, -1, -1, -1, -1, -1,
  // "mixins"
  ContextualKeyword._mixins << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "mo"
  -1, -1, -1, -1, 5022, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "mod"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5049, -1, -1, -1, -1, -1,
  // "modu"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5076, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "modul"
  -1, -1, -1, -1, -1, 5103, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "module"
  ContextualKeyword._module << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "n"
  -1, 5157, -1, -1, -1, 5373, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5427, -1, -1, -1, -1, -1,
  // "na"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5184, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "nam"
  -1, -1, -1, -1, -1, 5211, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "name"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5238, -1, -1, -1, -1, -1, -1, -1,
  // "names"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5265, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "namesp"
  -1, 5292, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "namespa"
  -1, -1, -1, 5319, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "namespac"
  -1, -1, -1, -1, -1, 5346, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "namespace"
  ContextualKeyword._namespace << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "ne"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5400, -1, -1, -1,
  // "new"
  (TokenType._new << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "nu"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5454, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "nul"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5481, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "null"
  (TokenType._null << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "o"
  -1, -1, -1, -1, -1, -1, 5535, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5562, -1, -1, -1, -1, 5697, 5751, -1, -1, -1, -1,
  // "of"
  ContextualKeyword._of << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "op"
  -1, 5589, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "opa"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5616, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "opaq"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5643, -1, -1, -1, -1, -1,
  // "opaqu"
  -1, -1, -1, -1, -1, 5670, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "opaque"
  ContextualKeyword._opaque << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "ou"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5724, -1, -1, -1, -1, -1, -1,
  // "out"
  ContextualKeyword._out << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "ov"
  -1, -1, -1, -1, -1, 5778, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "ove"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5805, -1, -1, -1, -1, -1, -1, -1, -1,
  // "over"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5832, -1, -1, -1, -1, -1, -1, -1, -1,
  // "overr"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, 5859, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "overri"
  -1, -1, -1, -1, 5886, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "overrid"
  -1, -1, -1, -1, -1, 5913, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "override"
  ContextualKeyword._override << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "p"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5967, -1, -1, 6345, -1, -1, -1, -1, -1,
  // "pr"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, 5994, -1, -1, -1, -1, -1, 6129, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "pri"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6021, -1, -1, -1, -1,
  // "priv"
  -1, 6048, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "priva"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6075, -1, -1, -1, -1, -1, -1,
  // "privat"
  -1, -1, -1, -1, -1, 6102, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "private"
  ContextualKeyword._private << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "pro"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6156, -1, -1, -1, -1, -1, -1,
  // "prot"
  -1, -1, -1, -1, -1, 6183, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6318, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "prote"
  -1, -1, -1, 6210, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "protec"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6237, -1, -1, -1, -1, -1, -1,
  // "protect"
  -1, -1, -1, -1, -1, 6264, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "protecte"
  -1, -1, -1, -1, 6291, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "protected"
  ContextualKeyword._protected << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "proto"
  ContextualKeyword._proto << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "pu"
  -1, -1, 6372, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "pub"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6399, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "publ"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, 6426, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "publi"
  -1, -1, -1, 6453, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "public"
  ContextualKeyword._public << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "r"
  -1, -1, -1, -1, -1, 6507, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "re"
  -1, 6534, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6696, -1, -1, 6831, -1, -1, -1, -1, -1, -1,
  // "rea"
  -1, -1, -1, -1, 6561, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "read"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6588, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "reado"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6615, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "readon"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6642, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "readonl"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6669, -1,
  // "readonly"
  ContextualKeyword._readonly << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "req"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6723, -1, -1, -1, -1, -1,
  // "requ"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, 6750, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "requi"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6777, -1, -1, -1, -1, -1, -1, -1, -1,
  // "requir"
  -1, -1, -1, -1, -1, 6804, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "require"
  ContextualKeyword._require << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "ret"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6858, -1, -1, -1, -1, -1,
  // "retu"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6885, -1, -1, -1, -1, -1, -1, -1, -1,
  // "retur"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6912, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "return"
  (TokenType._return << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "s"
  -1, 6966, -1, -1, -1, 7182, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7236, 7371, -1, 7479, -1, 7614, -1,
  // "sa"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6993, -1, -1, -1, -1, -1, -1,
  // "sat"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, 7020, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "sati"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7047, -1, -1, -1, -1, -1, -1, -1,
  // "satis"
  -1, -1, -1, -1, -1, -1, 7074, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "satisf"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, 7101, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "satisfi"
  -1, -1, -1, -1, -1, 7128, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "satisfie"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7155, -1, -1, -1, -1, -1, -1, -1,
  // "satisfies"
  ContextualKeyword._satisfies << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "se"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7209, -1, -1, -1, -1, -1, -1,
  // "set"
  ContextualKeyword._set << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "st"
  -1, 7263, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "sta"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7290, -1, -1, -1, -1, -1, -1,
  // "stat"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, 7317, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "stati"
  -1, -1, -1, 7344, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "static"
  ContextualKeyword._static << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "su"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7398, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "sup"
  -1, -1, -1, -1, -1, 7425, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "supe"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7452, -1, -1, -1, -1, -1, -1, -1, -1,
  // "super"
  (TokenType._super << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "sw"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, 7506, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "swi"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7533, -1, -1, -1, -1, -1, -1,
  // "swit"
  -1, -1, -1, 7560, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "switc"
  -1, -1, -1, -1, -1, -1, -1, -1, 7587, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "switch"
  (TokenType._switch << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "sy"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7641, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "sym"
  -1, -1, 7668, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "symb"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7695, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "symbo"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7722, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "symbol"
  ContextualKeyword._symbol << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "t"
  -1, -1, -1, -1, -1, -1, -1, -1, 7776, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7938, -1, -1, -1, -1, -1, -1, 8046, -1,
  // "th"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, 7803, -1, -1, -1, -1, -1, -1, -1, -1, 7857, -1, -1, -1, -1, -1, -1, -1, -1,
  // "thi"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7830, -1, -1, -1, -1, -1, -1, -1,
  // "this"
  (TokenType._this << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "thr"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7884, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "thro"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7911, -1, -1, -1,
  // "throw"
  (TokenType._throw << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "tr"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7965, -1, -1, -1, 8019, -1,
  // "tru"
  -1, -1, -1, -1, -1, 7992, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "true"
  (TokenType._true << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "try"
  (TokenType._try << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "ty"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8073, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "typ"
  -1, -1, -1, -1, -1, 8100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "type"
  ContextualKeyword._type << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8127, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "typeo"
  -1, -1, -1, -1, -1, -1, 8154, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "typeof"
  (TokenType._typeof << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "u"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8208, -1, -1, -1, -1, 8343, -1, -1, -1, -1, -1, -1, -1,
  // "un"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, 8235, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "uni"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8262, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "uniq"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8289, -1, -1, -1, -1, -1,
  // "uniqu"
  -1, -1, -1, -1, -1, 8316, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "unique"
  ContextualKeyword._unique << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "us"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, 8370, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "usi"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8397, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "usin"
  -1, -1, -1, -1, -1, -1, -1, 8424, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "using"
  ContextualKeyword._using << 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "v"
  -1, 8478, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8532, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "va"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8505, -1, -1, -1, -1, -1, -1, -1, -1,
  // "var"
  (TokenType._var << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "vo"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, 8559, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "voi"
  -1, -1, -1, -1, 8586, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "void"
  (TokenType._void << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "w"
  -1, -1, -1, -1, -1, -1, -1, -1, 8640, 8748, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "wh"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, 8667, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "whi"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8694, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "whil"
  -1, -1, -1, -1, -1, 8721, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "while"
  (TokenType._while << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "wi"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8775, -1, -1, -1, -1, -1, -1,
  // "wit"
  -1, -1, -1, -1, -1, -1, -1, -1, 8802, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "with"
  (TokenType._with << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "y"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, 8856, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "yi"
  -1, -1, -1, -1, -1, 8883, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "yie"
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8910, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "yiel"
  -1, -1, -1, -1, 8937, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  // "yield"
  (TokenType._yield << 1) + 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
]);

/**
 * Read an identifier, producing either a name token or matching on one of the existing keywords.
 * For performance, we pre-generate big decision tree that we traverse. Each node represents a
 * prefix and has 27 values, where the first value is the token or contextual token, if any (-1 if
 * not), and the other 26 values are the transitions to other nodes, or -1 to stop.
 */
function readWord() {
  let treePos = 0;
  let code = 0;
  let pos = state.pos;
  while (pos < input.length) {
    code = input.charCodeAt(pos);
    if (code < charCodes.lowercaseA || code > charCodes.lowercaseZ) {
      break;
    }
    const next = READ_WORD_TREE[treePos + (code - charCodes.lowercaseA) + 1];
    if (next === -1) {
      break;
    } else {
      treePos = next;
      pos++;
    }
  }

  const keywordValue = READ_WORD_TREE[treePos];
  if (keywordValue > -1 && !IS_IDENTIFIER_CHAR[code]) {
    state.pos = pos;
    if (keywordValue & 1) {
      finishToken(keywordValue >>> 1);
    } else {
      finishToken(TokenType.name, keywordValue >>> 1);
    }
    return;
  }

  while (pos < input.length) {
    const ch = input.charCodeAt(pos);
    if (IS_IDENTIFIER_CHAR[ch]) {
      pos++;
    } else if (ch === charCodes.backslash) {
      // \u
      pos += 2;
      if (input.charCodeAt(pos) === charCodes.leftCurlyBrace) {
        while (pos < input.length && input.charCodeAt(pos) !== charCodes.rightCurlyBrace) {
          pos++;
        }
        pos++;
      }
    } else if (ch === charCodes.atSign && input.charCodeAt(pos + 1) === charCodes.atSign) {
      pos += 2;
    } else {
      break;
    }
  }
  state.pos = pos;
  finishToken(TokenType.name);
}

/* eslint max-len: 0 */


var IdentifierRole; (function (IdentifierRole) {
  const Access = 0; IdentifierRole[IdentifierRole["Access"] = Access] = "Access";
  const ExportAccess = Access + 1; IdentifierRole[IdentifierRole["ExportAccess"] = ExportAccess] = "ExportAccess";
  const TopLevelDeclaration = ExportAccess + 1; IdentifierRole[IdentifierRole["TopLevelDeclaration"] = TopLevelDeclaration] = "TopLevelDeclaration";
  const FunctionScopedDeclaration = TopLevelDeclaration + 1; IdentifierRole[IdentifierRole["FunctionScopedDeclaration"] = FunctionScopedDeclaration] = "FunctionScopedDeclaration";
  const BlockScopedDeclaration = FunctionScopedDeclaration + 1; IdentifierRole[IdentifierRole["BlockScopedDeclaration"] = BlockScopedDeclaration] = "BlockScopedDeclaration";
  const ObjectShorthandTopLevelDeclaration = BlockScopedDeclaration + 1; IdentifierRole[IdentifierRole["ObjectShorthandTopLevelDeclaration"] = ObjectShorthandTopLevelDeclaration] = "ObjectShorthandTopLevelDeclaration";
  const ObjectShorthandFunctionScopedDeclaration = ObjectShorthandTopLevelDeclaration + 1; IdentifierRole[IdentifierRole["ObjectShorthandFunctionScopedDeclaration"] = ObjectShorthandFunctionScopedDeclaration] = "ObjectShorthandFunctionScopedDeclaration";
  const ObjectShorthandBlockScopedDeclaration = ObjectShorthandFunctionScopedDeclaration + 1; IdentifierRole[IdentifierRole["ObjectShorthandBlockScopedDeclaration"] = ObjectShorthandBlockScopedDeclaration] = "ObjectShorthandBlockScopedDeclaration";
  const ObjectShorthand = ObjectShorthandBlockScopedDeclaration + 1; IdentifierRole[IdentifierRole["ObjectShorthand"] = ObjectShorthand] = "ObjectShorthand";
  // Any identifier bound in an import statement, e.g. both A and b from
  // `import A, * as b from 'A';`
  const ImportDeclaration = ObjectShorthand + 1; IdentifierRole[IdentifierRole["ImportDeclaration"] = ImportDeclaration] = "ImportDeclaration";
  const ObjectKey = ImportDeclaration + 1; IdentifierRole[IdentifierRole["ObjectKey"] = ObjectKey] = "ObjectKey";
  // The `foo` in `import {foo as bar} from "./abc";`.
  const ImportAccess = ObjectKey + 1; IdentifierRole[IdentifierRole["ImportAccess"] = ImportAccess] = "ImportAccess";
})(IdentifierRole || (IdentifierRole = {}));

/**
 * Extra information on jsxTagStart tokens, used to determine which of the three
 * jsx functions are called in the automatic transform.
 */
var JSXRole; (function (JSXRole) {
  // The element is self-closing or has a body that resolves to empty. We
  // shouldn't emit children at all in this case.
  const NoChildren = 0; JSXRole[JSXRole["NoChildren"] = NoChildren] = "NoChildren";
  // The element has a single explicit child, which might still be an arbitrary
  // expression like an array. We should emit that expression as the children.
  const OneChild = NoChildren + 1; JSXRole[JSXRole["OneChild"] = OneChild] = "OneChild";
  // The element has at least two explicitly-specified children or has spread
  // children, so child positions are assumed to be "static". We should wrap
  // these children in an array.
  const StaticChildren = OneChild + 1; JSXRole[JSXRole["StaticChildren"] = StaticChildren] = "StaticChildren";
  // The element has a prop named "key" after a prop spread, so we should fall
  // back to the createElement function.
  const KeyAfterPropSpread = StaticChildren + 1; JSXRole[JSXRole["KeyAfterPropSpread"] = KeyAfterPropSpread] = "KeyAfterPropSpread";
})(JSXRole || (JSXRole = {}));

function isDeclaration(token) {
  const role = token.identifierRole;
  return (
    role === IdentifierRole.TopLevelDeclaration ||
    role === IdentifierRole.FunctionScopedDeclaration ||
    role === IdentifierRole.BlockScopedDeclaration ||
    role === IdentifierRole.ObjectShorthandTopLevelDeclaration ||
    role === IdentifierRole.ObjectShorthandFunctionScopedDeclaration ||
    role === IdentifierRole.ObjectShorthandBlockScopedDeclaration
  );
}

function isNonTopLevelDeclaration(token) {
  const role = token.identifierRole;
  return (
    role === IdentifierRole.FunctionScopedDeclaration ||
    role === IdentifierRole.BlockScopedDeclaration ||
    role === IdentifierRole.ObjectShorthandFunctionScopedDeclaration ||
    role === IdentifierRole.ObjectShorthandBlockScopedDeclaration
  );
}

function isTopLevelDeclaration(token) {
  const role = token.identifierRole;
  return (
    role === IdentifierRole.TopLevelDeclaration ||
    role === IdentifierRole.ObjectShorthandTopLevelDeclaration ||
    role === IdentifierRole.ImportDeclaration
  );
}

function isBlockScopedDeclaration(token) {
  const role = token.identifierRole;
  // Treat top-level declarations as block scope since the distinction doesn't matter here.
  return (
    role === IdentifierRole.TopLevelDeclaration ||
    role === IdentifierRole.BlockScopedDeclaration ||
    role === IdentifierRole.ObjectShorthandTopLevelDeclaration ||
    role === IdentifierRole.ObjectShorthandBlockScopedDeclaration
  );
}

function isFunctionScopedDeclaration(token) {
  const role = token.identifierRole;
  return (
    role === IdentifierRole.FunctionScopedDeclaration ||
    role === IdentifierRole.ObjectShorthandFunctionScopedDeclaration
  );
}

function isObjectShorthandDeclaration(token) {
  return (
    token.identifierRole === IdentifierRole.ObjectShorthandTopLevelDeclaration ||
    token.identifierRole === IdentifierRole.ObjectShorthandBlockScopedDeclaration ||
    token.identifierRole === IdentifierRole.ObjectShorthandFunctionScopedDeclaration
  );
}

// Object type used to represent tokens. Note that normally, tokens
// simply exist as properties on the parser object. This is only
// used for the onToken callback and the external tokenizer.
class Token {
  constructor() {
    this.type = state.type;
    this.contextualKeyword = state.contextualKeyword;
    this.start = state.start;
    this.end = state.end;
    this.scopeDepth = state.scopeDepth;
    this.isType = state.isType;
    this.identifierRole = null;
    this.jsxRole = null;
    this.shadowsGlobal = false;
    this.isAsyncOperation = false;
    this.contextId = null;
    this.rhsEndIndex = null;
    this.isExpression = false;
    this.numNullishCoalesceStarts = 0;
    this.numNullishCoalesceEnds = 0;
    this.isOptionalChainStart = false;
    this.isOptionalChainEnd = false;
    this.subscriptStartIndex = null;
    this.nullishStartIndex = null;
  }

  
  
  
  
  
  
  
  
  // Initially false for all tokens, then may be computed in a follow-up step that does scope
  // analysis.
  
  // Initially false for all tokens, but may be set during transform to mark it as containing an
  // await operation.
  
  
  // For assignments, the index of the RHS. For export tokens, the end of the export.
  
  // For class tokens, records if the class is a class expression or a class statement.
  
  // Number of times to insert a `nullishCoalesce(` snippet before this token.
  
  // Number of times to insert a `)` snippet after this token.
  
  // If true, insert an `optionalChain([` snippet before this token.
  
  // If true, insert a `])` snippet after this token.
  
  // Tag for `.`, `?.`, `[`, `?.[`, `(`, and `?.(` to denote the "root" token for this
  // subscript chain. This can be used to determine if this chain is an optional chain.
  
  // Tag for `??` operators to denote the root token for this nullish coalescing call.
  
}

// ## Tokenizer

// Move to the next token
function next() {
  state.tokens.push(new Token());
  nextToken();
}

// Call instead of next when inside a template, since that needs to be handled differently.
function nextTemplateToken() {
  state.tokens.push(new Token());
  state.start = state.pos;
  readTmplToken();
}

// The tokenizer never parses regexes by default. Instead, the parser is responsible for
// instructing it to parse a regex when we see a slash at the start of an expression.
function retokenizeSlashAsRegex() {
  if (state.type === TokenType.assign) {
    --state.pos;
  }
  readRegexp();
}

function pushTypeContext(existingTokensInType) {
  for (let i = state.tokens.length - existingTokensInType; i < state.tokens.length; i++) {
    state.tokens[i].isType = true;
  }
  const oldIsType = state.isType;
  state.isType = true;
  return oldIsType;
}

function popTypeContext(oldIsType) {
  state.isType = oldIsType;
}

function eat(type) {
  if (match(type)) {
    next();
    return true;
  } else {
    return false;
  }
}

function eatTypeToken(tokenType) {
  const oldIsType = state.isType;
  state.isType = true;
  eat(tokenType);
  state.isType = oldIsType;
}

function match(type) {
  return state.type === type;
}

function lookaheadType() {
  const snapshot = state.snapshot();
  next();
  const type = state.type;
  state.restoreFromSnapshot(snapshot);
  return type;
}

class TypeAndKeyword {
  
  
  constructor(type, contextualKeyword) {
    this.type = type;
    this.contextualKeyword = contextualKeyword;
  }
}

function lookaheadTypeAndKeyword() {
  const snapshot = state.snapshot();
  next();
  const type = state.type;
  const contextualKeyword = state.contextualKeyword;
  state.restoreFromSnapshot(snapshot);
  return new TypeAndKeyword(type, contextualKeyword);
}

function nextTokenStart() {
  return nextTokenStartSince(state.pos);
}

function nextTokenStartSince(pos) {
  skipWhiteSpace.lastIndex = pos;
  const skip = skipWhiteSpace.exec(input);
  return pos + skip[0].length;
}

function lookaheadCharCode() {
  return input.charCodeAt(nextTokenStart());
}

// Read a single token, updating the parser object's token-related
// properties.
function nextToken() {
  skipSpace();
  state.start = state.pos;
  if (state.pos >= input.length) {
    const tokens = state.tokens;
    // We normally run past the end a bit, but if we're way past the end, avoid an infinite loop.
    // Also check the token positions rather than the types since sometimes we rewrite the token
    // type to something else.
    if (
      tokens.length >= 2 &&
      tokens[tokens.length - 1].start >= input.length &&
      tokens[tokens.length - 2].start >= input.length
    ) {
      unexpected("Unexpectedly reached the end of input.");
    }
    finishToken(TokenType.eof);
    return;
  }
  readToken(input.charCodeAt(state.pos));
}

function readToken(code) {
  // Identifier or keyword. '\uXXXX' sequences are allowed in
  // identifiers, so '\' also dispatches to that.
  if (
    IS_IDENTIFIER_START[code] ||
    code === charCodes.backslash ||
    (code === charCodes.atSign && input.charCodeAt(state.pos + 1) === charCodes.atSign)
  ) {
    readWord();
  } else {
    getTokenFromCode(code);
  }
}

function skipBlockComment() {
  while (
    input.charCodeAt(state.pos) !== charCodes.asterisk ||
    input.charCodeAt(state.pos + 1) !== charCodes.slash
  ) {
    state.pos++;
    if (state.pos > input.length) {
      unexpected("Unterminated comment", state.pos - 2);
      return;
    }
  }
  state.pos += 2;
}

function skipLineComment(startSkip) {
  let ch = input.charCodeAt((state.pos += startSkip));
  if (state.pos < input.length) {
    while (
      ch !== charCodes.lineFeed &&
      ch !== charCodes.carriageReturn &&
      ch !== charCodes.lineSeparator &&
      ch !== charCodes.paragraphSeparator &&
      ++state.pos < input.length
    ) {
      ch = input.charCodeAt(state.pos);
    }
  }
}

// Called at the start of the parse and after every token. Skips
// whitespace and comments.
function skipSpace() {
  while (state.pos < input.length) {
    const ch = input.charCodeAt(state.pos);
    switch (ch) {
      case charCodes.carriageReturn:
        if (input.charCodeAt(state.pos + 1) === charCodes.lineFeed) {
          ++state.pos;
        }

      case charCodes.lineFeed:
      case charCodes.lineSeparator:
      case charCodes.paragraphSeparator:
        ++state.pos;
        break;

      case charCodes.slash:
        switch (input.charCodeAt(state.pos + 1)) {
          case charCodes.asterisk:
            state.pos += 2;
            skipBlockComment();
            break;

          case charCodes.slash:
            skipLineComment(2);
            break;

          default:
            return;
        }
        break;

      default:
        if (IS_WHITESPACE[ch]) {
          ++state.pos;
        } else {
          return;
        }
    }
  }
}

// Called at the end of every token. Sets various fields, and skips the space after the token, so
// that the next one's `start` will point at the right position.
function finishToken(
  type,
  contextualKeyword = ContextualKeyword.NONE,
) {
  state.end = state.pos;
  state.type = type;
  state.contextualKeyword = contextualKeyword;
}

// ### Token reading

// This is the function that is called to fetch the next token. It
// is somewhat obscure, because it works in character codes rather
// than characters, and because operator parsing has been inlined
// into it.
//
// All in the name of speed.
function readToken_dot() {
  const nextChar = input.charCodeAt(state.pos + 1);
  if (nextChar >= charCodes.digit0 && nextChar <= charCodes.digit9) {
    readNumber(true);
    return;
  }

  if (nextChar === charCodes.dot && input.charCodeAt(state.pos + 2) === charCodes.dot) {
    state.pos += 3;
    finishToken(TokenType.ellipsis);
  } else {
    ++state.pos;
    finishToken(TokenType.dot);
  }
}

function readToken_slash() {
  const nextChar = input.charCodeAt(state.pos + 1);
  if (nextChar === charCodes.equalsTo) {
    finishOp(TokenType.assign, 2);
  } else {
    finishOp(TokenType.slash, 1);
  }
}

function readToken_mult_modulo(code) {
  // '%*'
  let tokenType = code === charCodes.asterisk ? TokenType.star : TokenType.modulo;
  let width = 1;
  let nextChar = input.charCodeAt(state.pos + 1);

  // Exponentiation operator **
  if (code === charCodes.asterisk && nextChar === charCodes.asterisk) {
    width++;
    nextChar = input.charCodeAt(state.pos + 2);
    tokenType = TokenType.exponent;
  }

  // Match *= or %=, disallowing *=> which can be valid in flow.
  if (
    nextChar === charCodes.equalsTo &&
    input.charCodeAt(state.pos + 2) !== charCodes.greaterThan
  ) {
    width++;
    tokenType = TokenType.assign;
  }

  finishOp(tokenType, width);
}

function readToken_pipe_amp(code) {
  // '|&'
  const nextChar = input.charCodeAt(state.pos + 1);

  if (nextChar === code) {
    if (input.charCodeAt(state.pos + 2) === charCodes.equalsTo) {
      // ||= or &&=
      finishOp(TokenType.assign, 3);
    } else {
      // || or &&
      finishOp(code === charCodes.verticalBar ? TokenType.logicalOR : TokenType.logicalAND, 2);
    }
    return;
  }

  if (code === charCodes.verticalBar) {
    // '|>'
    if (nextChar === charCodes.greaterThan) {
      finishOp(TokenType.pipeline, 2);
      return;
    } else if (nextChar === charCodes.rightCurlyBrace && isFlowEnabled) {
      // '|}'
      finishOp(TokenType.braceBarR, 2);
      return;
    }
  }

  if (nextChar === charCodes.equalsTo) {
    finishOp(TokenType.assign, 2);
    return;
  }

  finishOp(code === charCodes.verticalBar ? TokenType.bitwiseOR : TokenType.bitwiseAND, 1);
}

function readToken_caret() {
  // '^'
  const nextChar = input.charCodeAt(state.pos + 1);
  if (nextChar === charCodes.equalsTo) {
    finishOp(TokenType.assign, 2);
  } else {
    finishOp(TokenType.bitwiseXOR, 1);
  }
}

function readToken_plus_min(code) {
  // '+-'
  const nextChar = input.charCodeAt(state.pos + 1);

  if (nextChar === code) {
    // Tentatively call this a prefix operator, but it might be changed to postfix later.
    finishOp(TokenType.preIncDec, 2);
    return;
  }

  if (nextChar === charCodes.equalsTo) {
    finishOp(TokenType.assign, 2);
  } else if (code === charCodes.plusSign) {
    finishOp(TokenType.plus, 1);
  } else {
    finishOp(TokenType.minus, 1);
  }
}

function readToken_lt() {
  const nextChar = input.charCodeAt(state.pos + 1);

  if (nextChar === charCodes.lessThan) {
    if (input.charCodeAt(state.pos + 2) === charCodes.equalsTo) {
      finishOp(TokenType.assign, 3);
      return;
    }
    // We see <<, but need to be really careful about whether to treat it as a
    // true left-shift or as two < tokens.
    if (state.isType) {
      // Within a type, << might come up in a snippet like `Array<<T>() => void>`,
      // so treat it as two < tokens. Importantly, this should only override <<
      // rather than other tokens like <= . If we treated <= as < in a type
      // context, then the snippet `a as T <= 1` would incorrectly start parsing
      // a type argument on T. We don't need to worry about `a as T << 1`
      // because TypeScript disallows that syntax.
      finishOp(TokenType.lessThan, 1);
    } else {
      // Outside a type, this might be a true left-shift operator, or it might
      // still be two open-type-arg tokens, such as in `f<<T>() => void>()`. We
      // look at the token while considering the `f`, so we don't yet know that
      // we're in a type context. In this case, we initially tokenize as a
      // left-shift and correct after-the-fact as necessary in
      // tsParseTypeArgumentsWithPossibleBitshift .
      finishOp(TokenType.bitShiftL, 2);
    }
    return;
  }

  if (nextChar === charCodes.equalsTo) {
    // <=
    finishOp(TokenType.relationalOrEqual, 2);
  } else {
    finishOp(TokenType.lessThan, 1);
  }
}

function readToken_gt() {
  if (state.isType) {
    // Avoid right-shift for things like `Array<Array<string>>` and
    // greater-than-or-equal for things like `const a: Array<number>=[];`.
    finishOp(TokenType.greaterThan, 1);
    return;
  }

  const nextChar = input.charCodeAt(state.pos + 1);

  if (nextChar === charCodes.greaterThan) {
    const size = input.charCodeAt(state.pos + 2) === charCodes.greaterThan ? 3 : 2;
    if (input.charCodeAt(state.pos + size) === charCodes.equalsTo) {
      finishOp(TokenType.assign, size + 1);
      return;
    }
    finishOp(TokenType.bitShiftR, size);
    return;
  }

  if (nextChar === charCodes.equalsTo) {
    // >=
    finishOp(TokenType.relationalOrEqual, 2);
  } else {
    finishOp(TokenType.greaterThan, 1);
  }
}

/**
 * Reinterpret a possible > token when transitioning from a type to a non-type
 * context.
 *
 * This comes up in two situations where >= needs to be treated as one token:
 * - After an `as` expression, like in the code `a as T >= 1`.
 * - In a type argument in an expression context, e.g. `f(a < b, c >= d)`, we
 *   need to see the token as >= so that we get an error and backtrack to
 *   normal expression parsing.
 *
 * Other situations require >= to be seen as two tokens, e.g.
 * `const x: Array<T>=[];`, so it's important to treat > as its own token in
 * typical type parsing situations.
 */
function rescan_gt() {
  if (state.type === TokenType.greaterThan) {
    state.pos -= 1;
    readToken_gt();
  }
}

function readToken_eq_excl(code) {
  // '=!'
  const nextChar = input.charCodeAt(state.pos + 1);
  if (nextChar === charCodes.equalsTo) {
    finishOp(TokenType.equality, input.charCodeAt(state.pos + 2) === charCodes.equalsTo ? 3 : 2);
    return;
  }
  if (code === charCodes.equalsTo && nextChar === charCodes.greaterThan) {
    // '=>'
    state.pos += 2;
    finishToken(TokenType.arrow);
    return;
  }
  finishOp(code === charCodes.equalsTo ? TokenType.eq : TokenType.bang, 1);
}

function readToken_question() {
  // '?'
  const nextChar = input.charCodeAt(state.pos + 1);
  const nextChar2 = input.charCodeAt(state.pos + 2);
  if (
    nextChar === charCodes.questionMark &&
    // In Flow (but not TypeScript), ??string is a valid type that should be
    // tokenized as two individual ? tokens.
    !(isFlowEnabled && state.isType)
  ) {
    if (nextChar2 === charCodes.equalsTo) {
      // '??='
      finishOp(TokenType.assign, 3);
    } else {
      // '??'
      finishOp(TokenType.nullishCoalescing, 2);
    }
  } else if (
    nextChar === charCodes.dot &&
    !(nextChar2 >= charCodes.digit0 && nextChar2 <= charCodes.digit9)
  ) {
    // '.' not followed by a number
    state.pos += 2;
    finishToken(TokenType.questionDot);
  } else {
    ++state.pos;
    finishToken(TokenType.question);
  }
}

function getTokenFromCode(code) {
  switch (code) {
    case charCodes.numberSign:
      ++state.pos;
      finishToken(TokenType.hash);
      return;

    // The interpretation of a dot depends on whether it is followed
    // by a digit or another two dots.

    case charCodes.dot:
      readToken_dot();
      return;

    // Punctuation tokens.
    case charCodes.leftParenthesis:
      ++state.pos;
      finishToken(TokenType.parenL);
      return;
    case charCodes.rightParenthesis:
      ++state.pos;
      finishToken(TokenType.parenR);
      return;
    case charCodes.semicolon:
      ++state.pos;
      finishToken(TokenType.semi);
      return;
    case charCodes.comma:
      ++state.pos;
      finishToken(TokenType.comma);
      return;
    case charCodes.leftSquareBracket:
      ++state.pos;
      finishToken(TokenType.bracketL);
      return;
    case charCodes.rightSquareBracket:
      ++state.pos;
      finishToken(TokenType.bracketR);
      return;

    case charCodes.leftCurlyBrace:
      if (isFlowEnabled && input.charCodeAt(state.pos + 1) === charCodes.verticalBar) {
        finishOp(TokenType.braceBarL, 2);
      } else {
        ++state.pos;
        finishToken(TokenType.braceL);
      }
      return;

    case charCodes.rightCurlyBrace:
      ++state.pos;
      finishToken(TokenType.braceR);
      return;

    case charCodes.colon:
      if (input.charCodeAt(state.pos + 1) === charCodes.colon) {
        finishOp(TokenType.doubleColon, 2);
      } else {
        ++state.pos;
        finishToken(TokenType.colon);
      }
      return;

    case charCodes.questionMark:
      readToken_question();
      return;
    case charCodes.atSign:
      ++state.pos;
      finishToken(TokenType.at);
      return;

    case charCodes.graveAccent:
      ++state.pos;
      finishToken(TokenType.backQuote);
      return;

    case charCodes.digit0: {
      const nextChar = input.charCodeAt(state.pos + 1);
      // '0x', '0X', '0o', '0O', '0b', '0B'
      if (
        nextChar === charCodes.lowercaseX ||
        nextChar === charCodes.uppercaseX ||
        nextChar === charCodes.lowercaseO ||
        nextChar === charCodes.uppercaseO ||
        nextChar === charCodes.lowercaseB ||
        nextChar === charCodes.uppercaseB
      ) {
        readRadixNumber();
        return;
      }
    }
    // Anything else beginning with a digit is an integer, octal
    // number, or float.
    case charCodes.digit1:
    case charCodes.digit2:
    case charCodes.digit3:
    case charCodes.digit4:
    case charCodes.digit5:
    case charCodes.digit6:
    case charCodes.digit7:
    case charCodes.digit8:
    case charCodes.digit9:
      readNumber(false);
      return;

    // Quotes produce strings.
    case charCodes.quotationMark:
    case charCodes.apostrophe:
      readString(code);
      return;

    // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is
    // often referred to. `finishOp` simply skips the amount of
    // characters it is given as second argument, and returns a token
    // of the type given by its first argument.

    case charCodes.slash:
      readToken_slash();
      return;

    case charCodes.percentSign:
    case charCodes.asterisk:
      readToken_mult_modulo(code);
      return;

    case charCodes.verticalBar:
    case charCodes.ampersand:
      readToken_pipe_amp(code);
      return;

    case charCodes.caret:
      readToken_caret();
      return;

    case charCodes.plusSign:
    case charCodes.dash:
      readToken_plus_min(code);
      return;

    case charCodes.lessThan:
      readToken_lt();
      return;

    case charCodes.greaterThan:
      readToken_gt();
      return;

    case charCodes.equalsTo:
    case charCodes.exclamationMark:
      readToken_eq_excl(code);
      return;

    case charCodes.tilde:
      finishOp(TokenType.tilde, 1);
      return;
  }

  unexpected(`Unexpected character '${String.fromCharCode(code)}'`, state.pos);
}

function finishOp(type, size) {
  state.pos += size;
  finishToken(type);
}

function readRegexp() {
  const start = state.pos;
  let escaped = false;
  let inClass = false;
  for (;;) {
    if (state.pos >= input.length) {
      unexpected("Unterminated regular expression", start);
      return;
    }
    const code = input.charCodeAt(state.pos);
    if (escaped) {
      escaped = false;
    } else {
      if (code === charCodes.leftSquareBracket) {
        inClass = true;
      } else if (code === charCodes.rightSquareBracket && inClass) {
        inClass = false;
      } else if (code === charCodes.slash && !inClass) {
        break;
      }
      escaped = code === charCodes.backslash;
    }
    ++state.pos;
  }
  ++state.pos;
  // Need to use `skipWord` because '\uXXXX' sequences are allowed here (don't ask).
  skipWord();

  finishToken(TokenType.regexp);
}

/**
 * Read a decimal integer. Note that this can't be unified with the similar code
 * in readRadixNumber (which also handles hex digits) because "e" needs to be
 * the end of the integer so that we can properly handle scientific notation.
 */
function readInt() {
  while (true) {
    const code = input.charCodeAt(state.pos);
    if ((code >= charCodes.digit0 && code <= charCodes.digit9) || code === charCodes.underscore) {
      state.pos++;
    } else {
      break;
    }
  }
}

function readRadixNumber() {
  state.pos += 2; // 0x

  // Walk to the end of the number, allowing hex digits.
  while (true) {
    const code = input.charCodeAt(state.pos);
    if (
      (code >= charCodes.digit0 && code <= charCodes.digit9) ||
      (code >= charCodes.lowercaseA && code <= charCodes.lowercaseF) ||
      (code >= charCodes.uppercaseA && code <= charCodes.uppercaseF) ||
      code === charCodes.underscore
    ) {
      state.pos++;
    } else {
      break;
    }
  }

  const nextChar = input.charCodeAt(state.pos);
  if (nextChar === charCodes.lowercaseN) {
    ++state.pos;
    finishToken(TokenType.bigint);
  } else {
    finishToken(TokenType.num);
  }
}

// Read an integer, octal integer, or floating-point number.
function readNumber(startsWithDot) {
  let isBigInt = false;
  let isDecimal = false;

  if (!startsWithDot) {
    readInt();
  }

  let nextChar = input.charCodeAt(state.pos);
  if (nextChar === charCodes.dot) {
    ++state.pos;
    readInt();
    nextChar = input.charCodeAt(state.pos);
  }

  if (nextChar === charCodes.uppercaseE || nextChar === charCodes.lowercaseE) {
    nextChar = input.charCodeAt(++state.pos);
    if (nextChar === charCodes.plusSign || nextChar === charCodes.dash) {
      ++state.pos;
    }
    readInt();
    nextChar = input.charCodeAt(state.pos);
  }

  if (nextChar === charCodes.lowercaseN) {
    ++state.pos;
    isBigInt = true;
  } else if (nextChar === charCodes.lowercaseM) {
    ++state.pos;
    isDecimal = true;
  }

  if (isBigInt) {
    finishToken(TokenType.bigint);
    return;
  }

  if (isDecimal) {
    finishToken(TokenType.decimal);
    return;
  }

  finishToken(TokenType.num);
}

function readString(quote) {
  state.pos++;
  for (;;) {
    if (state.pos >= input.length) {
      unexpected("Unterminated string constant");
      return;
    }
    const ch = input.charCodeAt(state.pos);
    if (ch === charCodes.backslash) {
      state.pos++;
    } else if (ch === quote) {
      break;
    }
    state.pos++;
  }
  state.pos++;
  finishToken(TokenType.string);
}

// Reads template string tokens.
function readTmplToken() {
  for (;;) {
    if (state.pos >= input.length) {
      unexpected("Unterminated template");
      return;
    }
    const ch = input.charCodeAt(state.pos);
    if (
      ch === charCodes.graveAccent ||
      (ch === charCodes.dollarSign && input.charCodeAt(state.pos + 1) === charCodes.leftCurlyBrace)
    ) {
      if (state.pos === state.start && match(TokenType.template)) {
        if (ch === charCodes.dollarSign) {
          state.pos += 2;
          finishToken(TokenType.dollarBraceL);
          return;
        } else {
          ++state.pos;
          finishToken(TokenType.backQuote);
          return;
        }
      }
      finishToken(TokenType.template);
      return;
    }
    if (ch === charCodes.backslash) {
      state.pos++;
    }
    state.pos++;
  }
}

// Skip to the end of the current word. Note that this is the same as the snippet at the end of
// readWord, but calling skipWord from readWord seems to slightly hurt performance from some rough
// measurements.
function skipWord() {
  while (state.pos < input.length) {
    const ch = input.charCodeAt(state.pos);
    if (IS_IDENTIFIER_CHAR[ch]) {
      state.pos++;
    } else if (ch === charCodes.backslash) {
      // \u
      state.pos += 2;
      if (input.charCodeAt(state.pos) === charCodes.leftCurlyBrace) {
        while (
          state.pos < input.length &&
          input.charCodeAt(state.pos) !== charCodes.rightCurlyBrace
        ) {
          state.pos++;
        }
        state.pos++;
      }
    } else {
      break;
    }
  }
}

/**
 * Determine information about this named import or named export specifier.
 *
 * This syntax is the `a` from statements like these:
 * import {A} from "./foo";
 * export {A};
 * export {A} from "./foo";
 *
 * As it turns out, we can exactly characterize the syntax meaning by simply
 * counting the number of tokens, which can be from 1 to 4:
 * {A}
 * {type A}
 * {A as B}
 * {type A as B}
 *
 * In the type case, we never actually need the names in practice, so don't get
 * them.
 *
 * TODO: There's some redundancy with the type detection here and the isType
 * flag that's already present on tokens in TS mode. This function could
 * potentially be simplified and/or pushed to the call sites to avoid the object
 * allocation.
 */
function getImportExportSpecifierInfo(
  tokens,
  index = tokens.currentIndex(),
) {
  let endIndex = index + 1;
  if (isSpecifierEnd(tokens, endIndex)) {
    // import {A}
    const name = tokens.identifierNameAtIndex(index);
    return {
      isType: false,
      leftName: name,
      rightName: name,
      endIndex,
    };
  }
  endIndex++;
  if (isSpecifierEnd(tokens, endIndex)) {
    // import {type A}
    return {
      isType: true,
      leftName: null,
      rightName: null,
      endIndex,
    };
  }
  endIndex++;
  if (isSpecifierEnd(tokens, endIndex)) {
    // import {A as B}
    return {
      isType: false,
      leftName: tokens.identifierNameAtIndex(index),
      rightName: tokens.identifierNameAtIndex(index + 2),
      endIndex,
    };
  }
  endIndex++;
  if (isSpecifierEnd(tokens, endIndex)) {
    // import {type A as B}
    return {
      isType: true,
      leftName: null,
      rightName: null,
      endIndex,
    };
  }
  throw new Error(`Unexpected import/export specifier at ${index}`);
}

function isSpecifierEnd(tokens, index) {
  const token = tokens.tokens[index];
  return token.type === TokenType.braceR || token.type === TokenType.comma;
}

// Use a Map rather than object to avoid unexpected __proto__ access.
var XHTMLEntities = new Map([
  ["quot", "\u0022"],
  ["amp", "&"],
  ["apos", "\u0027"],
  ["lt", "<"],
  ["gt", ">"],
  ["nbsp", "\u00A0"],
  ["iexcl", "\u00A1"],
  ["cent", "\u00A2"],
  ["pound", "\u00A3"],
  ["curren", "\u00A4"],
  ["yen", "\u00A5"],
  ["brvbar", "\u00A6"],
  ["sect", "\u00A7"],
  ["uml", "\u00A8"],
  ["copy", "\u00A9"],
  ["ordf", "\u00AA"],
  ["laquo", "\u00AB"],
  ["not", "\u00AC"],
  ["shy", "\u00AD"],
  ["reg", "\u00AE"],
  ["macr", "\u00AF"],
  ["deg", "\u00B0"],
  ["plusmn", "\u00B1"],
  ["sup2", "\u00B2"],
  ["sup3", "\u00B3"],
  ["acute", "\u00B4"],
  ["micro", "\u00B5"],
  ["para", "\u00B6"],
  ["middot", "\u00B7"],
  ["cedil", "\u00B8"],
  ["sup1", "\u00B9"],
  ["ordm", "\u00BA"],
  ["raquo", "\u00BB"],
  ["frac14", "\u00BC"],
  ["frac12", "\u00BD"],
  ["frac34", "\u00BE"],
  ["iquest", "\u00BF"],
  ["Agrave", "\u00C0"],
  ["Aacute", "\u00C1"],
  ["Acirc", "\u00C2"],
  ["Atilde", "\u00C3"],
  ["Auml", "\u00C4"],
  ["Aring", "\u00C5"],
  ["AElig", "\u00C6"],
  ["Ccedil", "\u00C7"],
  ["Egrave", "\u00C8"],
  ["Eacute", "\u00C9"],
  ["Ecirc", "\u00CA"],
  ["Euml", "\u00CB"],
  ["Igrave", "\u00CC"],
  ["Iacute", "\u00CD"],
  ["Icirc", "\u00CE"],
  ["Iuml", "\u00CF"],
  ["ETH", "\u00D0"],
  ["Ntilde", "\u00D1"],
  ["Ograve", "\u00D2"],
  ["Oacute", "\u00D3"],
  ["Ocirc", "\u00D4"],
  ["Otilde", "\u00D5"],
  ["Ouml", "\u00D6"],
  ["times", "\u00D7"],
  ["Oslash", "\u00D8"],
  ["Ugrave", "\u00D9"],
  ["Uacute", "\u00DA"],
  ["Ucirc", "\u00DB"],
  ["Uuml", "\u00DC"],
  ["Yacute", "\u00DD"],
  ["THORN", "\u00DE"],
  ["szlig", "\u00DF"],
  ["agrave", "\u00E0"],
  ["aacute", "\u00E1"],
  ["acirc", "\u00E2"],
  ["atilde", "\u00E3"],
  ["auml", "\u00E4"],
  ["aring", "\u00E5"],
  ["aelig", "\u00E6"],
  ["ccedil", "\u00E7"],
  ["egrave", "\u00E8"],
  ["eacute", "\u00E9"],
  ["ecirc", "\u00EA"],
  ["euml", "\u00EB"],
  ["igrave", "\u00EC"],
  ["iacute", "\u00ED"],
  ["icirc", "\u00EE"],
  ["iuml", "\u00EF"],
  ["eth", "\u00F0"],
  ["ntilde", "\u00F1"],
  ["ograve", "\u00F2"],
  ["oacute", "\u00F3"],
  ["ocirc", "\u00F4"],
  ["otilde", "\u00F5"],
  ["ouml", "\u00F6"],
  ["divide", "\u00F7"],
  ["oslash", "\u00F8"],
  ["ugrave", "\u00F9"],
  ["uacute", "\u00FA"],
  ["ucirc", "\u00FB"],
  ["uuml", "\u00FC"],
  ["yacute", "\u00FD"],
  ["thorn", "\u00FE"],
  ["yuml", "\u00FF"],
  ["OElig", "\u0152"],
  ["oelig", "\u0153"],
  ["Scaron", "\u0160"],
  ["scaron", "\u0161"],
  ["Yuml", "\u0178"],
  ["fnof", "\u0192"],
  ["circ", "\u02C6"],
  ["tilde", "\u02DC"],
  ["Alpha", "\u0391"],
  ["Beta", "\u0392"],
  ["Gamma", "\u0393"],
  ["Delta", "\u0394"],
  ["Epsilon", "\u0395"],
  ["Zeta", "\u0396"],
  ["Eta", "\u0397"],
  ["Theta", "\u0398"],
  ["Iota", "\u0399"],
  ["Kappa", "\u039A"],
  ["Lambda", "\u039B"],
  ["Mu", "\u039C"],
  ["Nu", "\u039D"],
  ["Xi", "\u039E"],
  ["Omicron", "\u039F"],
  ["Pi", "\u03A0"],
  ["Rho", "\u03A1"],
  ["Sigma", "\u03A3"],
  ["Tau", "\u03A4"],
  ["Upsilon", "\u03A5"],
  ["Phi", "\u03A6"],
  ["Chi", "\u03A7"],
  ["Psi", "\u03A8"],
  ["Omega", "\u03A9"],
  ["alpha", "\u03B1"],
  ["beta", "\u03B2"],
  ["gamma", "\u03B3"],
  ["delta", "\u03B4"],
  ["epsilon", "\u03B5"],
  ["zeta", "\u03B6"],
  ["eta", "\u03B7"],
  ["theta", "\u03B8"],
  ["iota", "\u03B9"],
  ["kappa", "\u03BA"],
  ["lambda", "\u03BB"],
  ["mu", "\u03BC"],
  ["nu", "\u03BD"],
  ["xi", "\u03BE"],
  ["omicron", "\u03BF"],
  ["pi", "\u03C0"],
  ["rho", "\u03C1"],
  ["sigmaf", "\u03C2"],
  ["sigma", "\u03C3"],
  ["tau", "\u03C4"],
  ["upsilon", "\u03C5"],
  ["phi", "\u03C6"],
  ["chi", "\u03C7"],
  ["psi", "\u03C8"],
  ["omega", "\u03C9"],
  ["thetasym", "\u03D1"],
  ["upsih", "\u03D2"],
  ["piv", "\u03D6"],
  ["ensp", "\u2002"],
  ["emsp", "\u2003"],
  ["thinsp", "\u2009"],
  ["zwnj", "\u200C"],
  ["zwj", "\u200D"],
  ["lrm", "\u200E"],
  ["rlm", "\u200F"],
  ["ndash", "\u2013"],
  ["mdash", "\u2014"],
  ["lsquo", "\u2018"],
  ["rsquo", "\u2019"],
  ["sbquo", "\u201A"],
  ["ldquo", "\u201C"],
  ["rdquo", "\u201D"],
  ["bdquo", "\u201E"],
  ["dagger", "\u2020"],
  ["Dagger", "\u2021"],
  ["bull", "\u2022"],
  ["hellip", "\u2026"],
  ["permil", "\u2030"],
  ["prime", "\u2032"],
  ["Prime", "\u2033"],
  ["lsaquo", "\u2039"],
  ["rsaquo", "\u203A"],
  ["oline", "\u203E"],
  ["frasl", "\u2044"],
  ["euro", "\u20AC"],
  ["image", "\u2111"],
  ["weierp", "\u2118"],
  ["real", "\u211C"],
  ["trade", "\u2122"],
  ["alefsym", "\u2135"],
  ["larr", "\u2190"],
  ["uarr", "\u2191"],
  ["rarr", "\u2192"],
  ["darr", "\u2193"],
  ["harr", "\u2194"],
  ["crarr", "\u21B5"],
  ["lArr", "\u21D0"],
  ["uArr", "\u21D1"],
  ["rArr", "\u21D2"],
  ["dArr", "\u21D3"],
  ["hArr", "\u21D4"],
  ["forall", "\u2200"],
  ["part", "\u2202"],
  ["exist", "\u2203"],
  ["empty", "\u2205"],
  ["nabla", "\u2207"],
  ["isin", "\u2208"],
  ["notin", "\u2209"],
  ["ni", "\u220B"],
  ["prod", "\u220F"],
  ["sum", "\u2211"],
  ["minus", "\u2212"],
  ["lowast", "\u2217"],
  ["radic", "\u221A"],
  ["prop", "\u221D"],
  ["infin", "\u221E"],
  ["ang", "\u2220"],
  ["and", "\u2227"],
  ["or", "\u2228"],
  ["cap", "\u2229"],
  ["cup", "\u222A"],
  ["int", "\u222B"],
  ["there4", "\u2234"],
  ["sim", "\u223C"],
  ["cong", "\u2245"],
  ["asymp", "\u2248"],
  ["ne", "\u2260"],
  ["equiv", "\u2261"],
  ["le", "\u2264"],
  ["ge", "\u2265"],
  ["sub", "\u2282"],
  ["sup", "\u2283"],
  ["nsub", "\u2284"],
  ["sube", "\u2286"],
  ["supe", "\u2287"],
  ["oplus", "\u2295"],
  ["otimes", "\u2297"],
  ["perp", "\u22A5"],
  ["sdot", "\u22C5"],
  ["lceil", "\u2308"],
  ["rceil", "\u2309"],
  ["lfloor", "\u230A"],
  ["rfloor", "\u230B"],
  ["lang", "\u2329"],
  ["rang", "\u232A"],
  ["loz", "\u25CA"],
  ["spades", "\u2660"],
  ["clubs", "\u2663"],
  ["hearts", "\u2665"],
  ["diams", "\u2666"],
]);

function getJSXPragmaInfo(options) {
  const [base, suffix] = splitPragma(options.jsxPragma || "React.createElement");
  const [fragmentBase, fragmentSuffix] = splitPragma(options.jsxFragmentPragma || "React.Fragment");
  return {base, suffix, fragmentBase, fragmentSuffix};
}

function splitPragma(pragma) {
  let dotIndex = pragma.indexOf(".");
  if (dotIndex === -1) {
    dotIndex = pragma.length;
  }
  return [pragma.slice(0, dotIndex), pragma.slice(dotIndex)];
}

class Transformer {
  // Return true if anything was processed, false otherwise.
  

  getPrefixCode() {
    return "";
  }

  getHoistedCode() {
    return "";
  }

  getSuffixCode() {
    return "";
  }
}

class JSXTransformer extends Transformer {
  
  
  

  // State for calculating the line number of each JSX tag in development.
  __init() {this.lastLineNumber = 1;}
  __init2() {this.lastIndex = 0;}

  // In development, variable name holding the name of the current file.
  __init3() {this.filenameVarName = null;}
  // Mapping of claimed names for imports in the automatic transform, e,g.
  // {jsx: "_jsx"}. This determines which imports to generate in the prefix.
  __init4() {this.esmAutomaticImportNameResolutions = {};}
  // When automatically adding imports in CJS mode, we store the variable name
  // holding the imported CJS module so we can require it in the prefix.
  __init5() {this.cjsAutomaticModuleNameResolutions = {};}

  constructor(
     rootTransformer,
     tokens,
     importProcessor,
     nameManager,
     options,
  ) {
    super();this.rootTransformer = rootTransformer;this.tokens = tokens;this.importProcessor = importProcessor;this.nameManager = nameManager;this.options = options;JSXTransformer.prototype.__init.call(this);JSXTransformer.prototype.__init2.call(this);JSXTransformer.prototype.__init3.call(this);JSXTransformer.prototype.__init4.call(this);JSXTransformer.prototype.__init5.call(this);    this.jsxPragmaInfo = getJSXPragmaInfo(options);
    this.isAutomaticRuntime = options.jsxRuntime === "automatic";
    this.jsxImportSource = options.jsxImportSource || "react";
  }

  process() {
    if (this.tokens.matches1(TokenType.jsxTagStart)) {
      this.processJSXTag();
      return true;
    }
    return false;
  }

  getPrefixCode() {
    let prefix = "";
    if (this.filenameVarName) {
      prefix += `const ${this.filenameVarName} = ${JSON.stringify(this.options.filePath || "")};`;
    }
    if (this.isAutomaticRuntime) {
      if (this.importProcessor) {
        // CJS mode: emit require statements for all modules that were referenced.
        for (const [path, resolvedName] of Object.entries(this.cjsAutomaticModuleNameResolutions)) {
          prefix += `var ${resolvedName} = require("${path}");`;
        }
      } else {
        // ESM mode: consolidate and emit import statements for referenced names.
        const {createElement: createElementResolution, ...otherResolutions} =
          this.esmAutomaticImportNameResolutions;
        if (createElementResolution) {
          prefix += `import {createElement as ${createElementResolution}} from "${this.jsxImportSource}";`;
        }
        const importSpecifiers = Object.entries(otherResolutions)
          .map(([name, resolvedName]) => `${name} as ${resolvedName}`)
          .join(", ");
        if (importSpecifiers) {
          const importPath =
            this.jsxImportSource + (this.options.production ? "/jsx-runtime" : "/jsx-dev-runtime");
          prefix += `import {${importSpecifiers}} from "${importPath}";`;
        }
      }
    }
    return prefix;
  }

  processJSXTag() {
    const {jsxRole, start} = this.tokens.currentToken();
    // Calculate line number information at the very start (if in development
    // mode) so that the information is guaranteed to be queried in token order.
    const elementLocationCode = this.options.production ? null : this.getElementLocationCode(start);
    if (this.isAutomaticRuntime && jsxRole !== JSXRole.KeyAfterPropSpread) {
      this.transformTagToJSXFunc(elementLocationCode, jsxRole);
    } else {
      this.transformTagToCreateElement(elementLocationCode);
    }
  }

  getElementLocationCode(firstTokenStart) {
    const lineNumber = this.getLineNumberForIndex(firstTokenStart);
    return `lineNumber: ${lineNumber}`;
  }

  /**
   * Get the line number for this source position. This is calculated lazily and
   * must be called in increasing order by index.
   */
  getLineNumberForIndex(index) {
    const code = this.tokens.code;
    while (this.lastIndex < index && this.lastIndex < code.length) {
      if (code[this.lastIndex] === "\n") {
        this.lastLineNumber++;
      }
      this.lastIndex++;
    }
    return this.lastLineNumber;
  }

  /**
   * Convert the current JSX element to a call to jsx, jsxs, or jsxDEV. This is
   * the primary transformation for the automatic transform.
   *
   * Example:
   * <div a={1} key={2}>Hello{x}</div>
   * becomes
   * jsxs('div', {a: 1, children: ["Hello", x]}, 2)
   */
  transformTagToJSXFunc(elementLocationCode, jsxRole) {
    const isStatic = jsxRole === JSXRole.StaticChildren;
    // First tag is always jsxTagStart.
    this.tokens.replaceToken(this.getJSXFuncInvocationCode(isStatic));

    let keyCode = null;
    if (this.tokens.matches1(TokenType.jsxTagEnd)) {
      // Fragment syntax.
      this.tokens.replaceToken(`${this.getFragmentCode()}, {`);
      this.processAutomaticChildrenAndEndProps(jsxRole);
    } else {
      // Normal open tag or self-closing tag.
      this.processTagIntro();
      this.tokens.appendCode(", {");
      keyCode = this.processProps(true);

      if (this.tokens.matches2(TokenType.slash, TokenType.jsxTagEnd)) {
        // Self-closing tag, no children to add, so close the props.
        this.tokens.appendCode("}");
      } else if (this.tokens.matches1(TokenType.jsxTagEnd)) {
        // Tag with children.
        this.tokens.removeToken();
        this.processAutomaticChildrenAndEndProps(jsxRole);
      } else {
        throw new Error("Expected either /> or > at the end of the tag.");
      }
      // If a key was present, move it to its own arg. Note that moving code
      // like this will cause line numbers to get out of sync within the JSX
      // element if the key expression has a newline in it. This is unfortunate,
      // but hopefully should be rare.
      if (keyCode) {
        this.tokens.appendCode(`, ${keyCode}`);
      }
    }
    if (!this.options.production) {
      // If the key wasn't already added, add it now so we can correctly set
      // positional args for jsxDEV.
      if (keyCode === null) {
        this.tokens.appendCode(", void 0");
      }
      this.tokens.appendCode(`, ${isStatic}, ${this.getDevSource(elementLocationCode)}, this`);
    }
    // We're at the close-tag or the end of a self-closing tag, so remove
    // everything else and close the function call.
    this.tokens.removeInitialToken();
    while (!this.tokens.matches1(TokenType.jsxTagEnd)) {
      this.tokens.removeToken();
    }
    this.tokens.replaceToken(")");
  }

  /**
   * Convert the current JSX element to a createElement call. In the classic
   * runtime, this is the only case. In the automatic runtime, this is called
   * as a fallback in some situations.
   *
   * Example:
   * <div a={1} key={2}>Hello{x}</div>
   * becomes
   * React.createElement('div', {a: 1, key: 2}, "Hello", x)
   */
  transformTagToCreateElement(elementLocationCode) {
    // First tag is always jsxTagStart.
    this.tokens.replaceToken(this.getCreateElementInvocationCode());

    if (this.tokens.matches1(TokenType.jsxTagEnd)) {
      // Fragment syntax.
      this.tokens.replaceToken(`${this.getFragmentCode()}, null`);
      this.processChildren(true);
    } else {
      // Normal open tag or self-closing tag.
      this.processTagIntro();
      this.processPropsObjectWithDevInfo(elementLocationCode);

      if (this.tokens.matches2(TokenType.slash, TokenType.jsxTagEnd)) ; else if (this.tokens.matches1(TokenType.jsxTagEnd)) {
        // Tag with children and a close-tag; process the children as args.
        this.tokens.removeToken();
        this.processChildren(true);
      } else {
        throw new Error("Expected either /> or > at the end of the tag.");
      }
    }
    // We're at the close-tag or the end of a self-closing tag, so remove
    // everything else and close the function call.
    this.tokens.removeInitialToken();
    while (!this.tokens.matches1(TokenType.jsxTagEnd)) {
      this.tokens.removeToken();
    }
    this.tokens.replaceToken(")");
  }

  /**
   * Get the code for the relevant function for this context: jsx, jsxs,
   * or jsxDEV. The following open-paren is included as well.
   *
   * These functions are only used for the automatic runtime, so they are always
   * auto-imported, but the auto-import will be either CJS or ESM based on the
   * target module format.
   */
  getJSXFuncInvocationCode(isStatic) {
    if (this.options.production) {
      if (isStatic) {
        return this.claimAutoImportedFuncInvocation("jsxs", "/jsx-runtime");
      } else {
        return this.claimAutoImportedFuncInvocation("jsx", "/jsx-runtime");
      }
    } else {
      return this.claimAutoImportedFuncInvocation("jsxDEV", "/jsx-dev-runtime");
    }
  }

  /**
   * Return the code to use for the createElement function, e.g.
   * `React.createElement`, including the following open-paren.
   *
   * This is the main function to use for the classic runtime. For the
   * automatic runtime, this function is used as a fallback function to
   * preserve behavior when there is a prop spread followed by an explicit
   * key. In that automatic runtime case, the function should be automatically
   * imported.
   */
  getCreateElementInvocationCode() {
    if (this.isAutomaticRuntime) {
      return this.claimAutoImportedFuncInvocation("createElement", "");
    } else {
      const {jsxPragmaInfo} = this;
      const resolvedPragmaBaseName = this.importProcessor
        ? this.importProcessor.getIdentifierReplacement(jsxPragmaInfo.base) || jsxPragmaInfo.base
        : jsxPragmaInfo.base;
      return `${resolvedPragmaBaseName}${jsxPragmaInfo.suffix}(`;
    }
  }

  /**
   * Return the code to use as the component when compiling a shorthand
   * fragment, e.g. `React.Fragment`.
   *
   * This may be called from either the classic or automatic runtime, and
   * the value should be auto-imported for the automatic runtime.
   */
  getFragmentCode() {
    if (this.isAutomaticRuntime) {
      return this.claimAutoImportedName(
        "Fragment",
        this.options.production ? "/jsx-runtime" : "/jsx-dev-runtime",
      );
    } else {
      const {jsxPragmaInfo} = this;
      const resolvedFragmentPragmaBaseName = this.importProcessor
        ? this.importProcessor.getIdentifierReplacement(jsxPragmaInfo.fragmentBase) ||
          jsxPragmaInfo.fragmentBase
        : jsxPragmaInfo.fragmentBase;
      return resolvedFragmentPragmaBaseName + jsxPragmaInfo.fragmentSuffix;
    }
  }

  /**
   * Return code that invokes the given function.
   *
   * When the imports transform is enabled, use the CJSImportTransformer
   * strategy of using `.call(void 0, ...` to avoid passing a `this` value in a
   * situation that would otherwise look like a method call.
   */
  claimAutoImportedFuncInvocation(funcName, importPathSuffix) {
    const funcCode = this.claimAutoImportedName(funcName, importPathSuffix);
    if (this.importProcessor) {
      return `${funcCode}.call(void 0, `;
    } else {
      return `${funcCode}(`;
    }
  }

  claimAutoImportedName(funcName, importPathSuffix) {
    if (this.importProcessor) {
      // CJS mode: claim a name for the module and mark it for import.
      const path = this.jsxImportSource + importPathSuffix;
      if (!this.cjsAutomaticModuleNameResolutions[path]) {
        this.cjsAutomaticModuleNameResolutions[path] =
          this.importProcessor.getFreeIdentifierForPath(path);
      }
      return `${this.cjsAutomaticModuleNameResolutions[path]}.${funcName}`;
    } else {
      // ESM mode: claim a name for this function and add it to the names that
      // should be auto-imported when the prefix is generated.
      if (!this.esmAutomaticImportNameResolutions[funcName]) {
        this.esmAutomaticImportNameResolutions[funcName] = this.nameManager.claimFreeName(
          `_${funcName}`,
        );
      }
      return this.esmAutomaticImportNameResolutions[funcName];
    }
  }

  /**
   * Process the first part of a tag, before any props.
   */
  processTagIntro() {
    // Walk forward until we see one of these patterns:
    // jsxName to start the first prop, preceded by another jsxName to end the tag name.
    // jsxName to start the first prop, preceded by greaterThan to end the type argument.
    // [open brace] to start the first prop.
    // [jsxTagEnd] to end the open-tag.
    // [slash, jsxTagEnd] to end the self-closing tag.
    let introEnd = this.tokens.currentIndex() + 1;
    while (
      this.tokens.tokens[introEnd].isType ||
      (!this.tokens.matches2AtIndex(introEnd - 1, TokenType.jsxName, TokenType.jsxName) &&
        !this.tokens.matches2AtIndex(introEnd - 1, TokenType.greaterThan, TokenType.jsxName) &&
        !this.tokens.matches1AtIndex(introEnd, TokenType.braceL) &&
        !this.tokens.matches1AtIndex(introEnd, TokenType.jsxTagEnd) &&
        !this.tokens.matches2AtIndex(introEnd, TokenType.slash, TokenType.jsxTagEnd))
    ) {
      introEnd++;
    }
    if (introEnd === this.tokens.currentIndex() + 1) {
      const tagName = this.tokens.identifierName();
      if (startsWithLowerCase(tagName)) {
        this.tokens.replaceToken(`'${tagName}'`);
      }
    }
    while (this.tokens.currentIndex() < introEnd) {
      this.rootTransformer.processToken();
    }
  }

  /**
   * Starting at the beginning of the props, add the props argument to
   * React.createElement, including the comma before it.
   */
  processPropsObjectWithDevInfo(elementLocationCode) {
    const devProps = this.options.production
      ? ""
      : `__self: this, __source: ${this.getDevSource(elementLocationCode)}`;
    if (!this.tokens.matches1(TokenType.jsxName) && !this.tokens.matches1(TokenType.braceL)) {
      if (devProps) {
        this.tokens.appendCode(`, {${devProps}}`);
      } else {
        this.tokens.appendCode(`, null`);
      }
      return;
    }
    this.tokens.appendCode(`, {`);
    this.processProps(false);
    if (devProps) {
      this.tokens.appendCode(` ${devProps}}`);
    } else {
      this.tokens.appendCode("}");
    }
  }

  /**
   * Transform the core part of the props, assuming that a { has already been
   * inserted before us and that a } will be inserted after us.
   *
   * If extractKeyCode is true (i.e. when using any jsx... function), any prop
   * named "key" has its code captured and returned rather than being emitted to
   * the output code. This shifts line numbers, and emitting the code later will
   * correct line numbers again. If no key is found or if extractKeyCode is
   * false, this function returns null.
   */
  processProps(extractKeyCode) {
    let keyCode = null;
    while (true) {
      if (this.tokens.matches2(TokenType.jsxName, TokenType.eq)) {
        // This is a regular key={value} or key="value" prop.
        const propName = this.tokens.identifierName();
        if (extractKeyCode && propName === "key") {
          if (keyCode !== null) {
            // The props list has multiple keys. Different implementations are
            // inconsistent about what to do here: as of this writing, Babel and
            // swc keep the *last* key and completely remove the rest, while
            // TypeScript uses the *first* key and leaves the others as regular
            // props. The React team collaborated with Babel on the
            // implementation of this behavior, so presumably the Babel behavior
            // is the one to use.
            // Since we won't ever be emitting the previous key code, we need to
            // at least emit its newlines here so that the line numbers match up
            // in the long run.
            this.tokens.appendCode(keyCode.replace(/[^\n]/g, ""));
          }
          // key
          this.tokens.removeToken();
          // =
          this.tokens.removeToken();
          const snapshot = this.tokens.snapshot();
          this.processPropValue();
          keyCode = this.tokens.dangerouslyGetAndRemoveCodeSinceSnapshot(snapshot);
          // Don't add a comma
          continue;
        } else {
          this.processPropName(propName);
          this.tokens.replaceToken(": ");
          this.processPropValue();
        }
      } else if (this.tokens.matches1(TokenType.jsxName)) {
        // This is a shorthand prop like <input disabled />.
        const propName = this.tokens.identifierName();
        this.processPropName(propName);
        this.tokens.appendCode(": true");
      } else if (this.tokens.matches1(TokenType.braceL)) {
        // This is prop spread, like <div {...getProps()}>, which we can pass
        // through fairly directly as an object spread.
        this.tokens.replaceToken("");
        this.rootTransformer.processBalancedCode();
        this.tokens.replaceToken("");
      } else {
        break;
      }
      this.tokens.appendCode(",");
    }
    return keyCode;
  }

  processPropName(propName) {
    if (propName.includes("-")) {
      this.tokens.replaceToken(`'${propName}'`);
    } else {
      this.tokens.copyToken();
    }
  }

  processPropValue() {
    if (this.tokens.matches1(TokenType.braceL)) {
      this.tokens.replaceToken("");
      this.rootTransformer.processBalancedCode();
      this.tokens.replaceToken("");
    } else if (this.tokens.matches1(TokenType.jsxTagStart)) {
      this.processJSXTag();
    } else {
      this.processStringPropValue();
    }
  }

  processStringPropValue() {
    const token = this.tokens.currentToken();
    const valueCode = this.tokens.code.slice(token.start + 1, token.end - 1);
    const replacementCode = formatJSXTextReplacement(valueCode);
    const literalCode = formatJSXStringValueLiteral(valueCode);
    this.tokens.replaceToken(literalCode + replacementCode);
  }

  /**
   * Starting in the middle of the props object literal, produce an additional
   * prop for the children and close the object literal.
   */
  processAutomaticChildrenAndEndProps(jsxRole) {
    if (jsxRole === JSXRole.StaticChildren) {
      this.tokens.appendCode(" children: [");
      this.processChildren(false);
      this.tokens.appendCode("]}");
    } else {
      // The parser information tells us whether we will see a real child or if
      // all remaining children (if any) will resolve to empty. If there are no
      // non-empty children, don't emit a children prop at all, but still
      // process children so that we properly transform the code into nothing.
      if (jsxRole === JSXRole.OneChild) {
        this.tokens.appendCode(" children: ");
      }
      this.processChildren(false);
      this.tokens.appendCode("}");
    }
  }

  /**
   * Transform children into a comma-separated list, which will be either
   * arguments to createElement or array elements of a children prop.
   */
  processChildren(needsInitialComma) {
    let needsComma = needsInitialComma;
    while (true) {
      if (this.tokens.matches2(TokenType.jsxTagStart, TokenType.slash)) {
        // Closing tag, so no more children.
        return;
      }
      let didEmitElement = false;
      if (this.tokens.matches1(TokenType.braceL)) {
        if (this.tokens.matches2(TokenType.braceL, TokenType.braceR)) {
          // Empty interpolations and comment-only interpolations are allowed
          // and don't create an extra child arg.
          this.tokens.replaceToken("");
          this.tokens.replaceToken("");
        } else {
          // Interpolated expression.
          this.tokens.replaceToken(needsComma ? ", " : "");
          this.rootTransformer.processBalancedCode();
          this.tokens.replaceToken("");
          didEmitElement = true;
        }
      } else if (this.tokens.matches1(TokenType.jsxTagStart)) {
        // Child JSX element
        this.tokens.appendCode(needsComma ? ", " : "");
        this.processJSXTag();
        didEmitElement = true;
      } else if (this.tokens.matches1(TokenType.jsxText) || this.tokens.matches1(TokenType.jsxEmptyText)) {
        didEmitElement = this.processChildTextElement(needsComma);
      } else {
        throw new Error("Unexpected token when processing JSX children.");
      }
      if (didEmitElement) {
        needsComma = true;
      }
    }
  }

  /**
   * Turn a JSX text element into a string literal, or nothing at all if the JSX
   * text resolves to the empty string.
   *
   * Returns true if a string literal is emitted, false otherwise.
   */
  processChildTextElement(needsComma) {
    const token = this.tokens.currentToken();
    const valueCode = this.tokens.code.slice(token.start, token.end);
    const replacementCode = formatJSXTextReplacement(valueCode);
    const literalCode = formatJSXTextLiteral(valueCode);
    if (literalCode === '""') {
      this.tokens.replaceToken(replacementCode);
      return false;
    } else {
      this.tokens.replaceToken(`${needsComma ? ", " : ""}${literalCode}${replacementCode}`);
      return true;
    }
  }

  getDevSource(elementLocationCode) {
    return `{fileName: ${this.getFilenameVarName()}, ${elementLocationCode}}`;
  }

  getFilenameVarName() {
    if (!this.filenameVarName) {
      this.filenameVarName = this.nameManager.claimFreeName("_jsxFileName");
    }
    return this.filenameVarName;
  }
}

/**
 * Spec for identifiers: https://tc39.github.io/ecma262/#prod-IdentifierStart.
 *
 * Really only treat anything starting with a-z as tag names.  `_`, `$`, `é`
 * should be treated as component names
 */
function startsWithLowerCase(s) {
  const firstChar = s.charCodeAt(0);
  return firstChar >= charCodes.lowercaseA && firstChar <= charCodes.lowercaseZ;
}

/**
 * Turn the given jsxText string into a JS string literal. Leading and trailing
 * whitespace on lines is removed, except immediately after the open-tag and
 * before the close-tag. Empty lines are completely removed, and spaces are
 * added between lines after that.
 *
 * We use JSON.stringify to introduce escape characters as necessary, and trim
 * the start and end of each line and remove blank lines.
 */
function formatJSXTextLiteral(text) {
  let result = "";
  let whitespace = "";

  let isInInitialLineWhitespace = false;
  let seenNonWhitespace = false;
  for (let i = 0; i < text.length; i++) {
    const c = text[i];
    if (c === " " || c === "\t" || c === "\r") {
      if (!isInInitialLineWhitespace) {
        whitespace += c;
      }
    } else if (c === "\n") {
      whitespace = "";
      isInInitialLineWhitespace = true;
    } else {
      if (seenNonWhitespace && isInInitialLineWhitespace) {
        result += " ";
      }
      result += whitespace;
      whitespace = "";
      if (c === "&") {
        const {entity, newI} = processEntity(text, i + 1);
        i = newI - 1;
        result += entity;
      } else {
        result += c;
      }
      seenNonWhitespace = true;
      isInInitialLineWhitespace = false;
    }
  }
  if (!isInInitialLineWhitespace) {
    result += whitespace;
  }
  return JSON.stringify(result);
}

/**
 * Produce the code that should be printed after the JSX text string literal,
 * with most content removed, but all newlines preserved and all spacing at the
 * end preserved.
 */
function formatJSXTextReplacement(text) {
  let numNewlines = 0;
  let numSpaces = 0;
  for (const c of text) {
    if (c === "\n") {
      numNewlines++;
      numSpaces = 0;
    } else if (c === " ") {
      numSpaces++;
    }
  }
  return "\n".repeat(numNewlines) + " ".repeat(numSpaces);
}

/**
 * Format a string in the value position of a JSX prop.
 *
 * Use the same implementation as convertAttribute from
 * babel-helper-builder-react-jsx.
 */
function formatJSXStringValueLiteral(text) {
  let result = "";
  for (let i = 0; i < text.length; i++) {
    const c = text[i];
    if (c === "\n") {
      if (/\s/.test(text[i + 1])) {
        result += " ";
        while (i < text.length && /\s/.test(text[i + 1])) {
          i++;
        }
      } else {
        result += "\n";
      }
    } else if (c === "&") {
      const {entity, newI} = processEntity(text, i + 1);
      result += entity;
      i = newI - 1;
    } else {
      result += c;
    }
  }
  return JSON.stringify(result);
}

/**
 * Starting at a &, see if there's an HTML entity (specified by name, decimal
 * char code, or hex char code) and return it if so.
 *
 * Modified from jsxReadString in babel-parser.
 */
function processEntity(text, indexAfterAmpersand) {
  let str = "";
  let count = 0;
  let entity;
  let i = indexAfterAmpersand;

  if (text[i] === "#") {
    let radix = 10;
    i++;
    let numStart;
    if (text[i] === "x") {
      radix = 16;
      i++;
      numStart = i;
      while (i < text.length && isHexDigit(text.charCodeAt(i))) {
        i++;
      }
    } else {
      numStart = i;
      while (i < text.length && isDecimalDigit(text.charCodeAt(i))) {
        i++;
      }
    }
    if (text[i] === ";") {
      const numStr = text.slice(numStart, i);
      if (numStr) {
        i++;
        entity = String.fromCodePoint(parseInt(numStr, radix));
      }
    }
  } else {
    while (i < text.length && count++ < 10) {
      const ch = text[i];
      i++;
      if (ch === ";") {
        entity = XHTMLEntities.get(str);
        break;
      }
      str += ch;
    }
  }

  if (!entity) {
    return {entity: "&", newI: indexAfterAmpersand};
  }
  return {entity, newI: i};
}

function isDecimalDigit(code) {
  return code >= charCodes.digit0 && code <= charCodes.digit9;
}

function isHexDigit(code) {
  return (
    (code >= charCodes.digit0 && code <= charCodes.digit9) ||
    (code >= charCodes.lowercaseA && code <= charCodes.lowercaseF) ||
    (code >= charCodes.uppercaseA && code <= charCodes.uppercaseF)
  );
}

function getNonTypeIdentifiers(tokens, options) {
  const jsxPragmaInfo = getJSXPragmaInfo(options);
  const nonTypeIdentifiers = new Set();
  for (let i = 0; i < tokens.tokens.length; i++) {
    const token = tokens.tokens[i];
    if (
      token.type === TokenType.name &&
      !token.isType &&
      (token.identifierRole === IdentifierRole.Access ||
        token.identifierRole === IdentifierRole.ObjectShorthand ||
        token.identifierRole === IdentifierRole.ExportAccess) &&
      !token.shadowsGlobal
    ) {
      nonTypeIdentifiers.add(tokens.identifierNameForToken(token));
    }
    if (token.type === TokenType.jsxTagStart) {
      nonTypeIdentifiers.add(jsxPragmaInfo.base);
    }
    if (
      token.type === TokenType.jsxTagStart &&
      i + 1 < tokens.tokens.length &&
      tokens.tokens[i + 1].type === TokenType.jsxTagEnd
    ) {
      nonTypeIdentifiers.add(jsxPragmaInfo.base);
      nonTypeIdentifiers.add(jsxPragmaInfo.fragmentBase);
    }
    if (token.type === TokenType.jsxName && token.identifierRole === IdentifierRole.Access) {
      const identifierName = tokens.identifierNameForToken(token);
      // Lower-case single-component tag names like "div" don't count.
      if (!startsWithLowerCase(identifierName) || tokens.tokens[i + 1].type === TokenType.dot) {
        nonTypeIdentifiers.add(tokens.identifierNameForToken(token));
      }
    }
  }
  return nonTypeIdentifiers;
}

/**
 * Class responsible for preprocessing and bookkeeping import and export declarations within the
 * file.
 *
 * TypeScript uses a simpler mechanism that does not use functions like interopRequireDefault and
 * interopRequireWildcard, so we also allow that mode for compatibility.
 */
class CJSImportProcessor {
   __init() {this.nonTypeIdentifiers = new Set();}
   __init2() {this.importInfoByPath = new Map();}
   __init3() {this.importsToReplace = new Map();}
   __init4() {this.identifierReplacements = new Map();}
   __init5() {this.exportBindingsByLocalName = new Map();}

  constructor(
     nameManager,
     tokens,
     enableLegacyTypeScriptModuleInterop,
     options,
     isTypeScriptTransformEnabled,
     keepUnusedImports,
     helperManager,
  ) {this.nameManager = nameManager;this.tokens = tokens;this.enableLegacyTypeScriptModuleInterop = enableLegacyTypeScriptModuleInterop;this.options = options;this.isTypeScriptTransformEnabled = isTypeScriptTransformEnabled;this.keepUnusedImports = keepUnusedImports;this.helperManager = helperManager;CJSImportProcessor.prototype.__init.call(this);CJSImportProcessor.prototype.__init2.call(this);CJSImportProcessor.prototype.__init3.call(this);CJSImportProcessor.prototype.__init4.call(this);CJSImportProcessor.prototype.__init5.call(this);}

  preprocessTokens() {
    for (let i = 0; i < this.tokens.tokens.length; i++) {
      if (
        this.tokens.matches1AtIndex(i, TokenType._import) &&
        !this.tokens.matches3AtIndex(i, TokenType._import, TokenType.name, TokenType.eq)
      ) {
        this.preprocessImportAtIndex(i);
      }
      if (
        this.tokens.matches1AtIndex(i, TokenType._export) &&
        !this.tokens.matches2AtIndex(i, TokenType._export, TokenType.eq)
      ) {
        this.preprocessExportAtIndex(i);
      }
    }
    this.generateImportReplacements();
  }

  /**
   * In TypeScript, import statements that only import types should be removed.
   * This includes `import {} from 'foo';`, but not `import 'foo';`.
   */
  pruneTypeOnlyImports() {
    this.nonTypeIdentifiers = getNonTypeIdentifiers(this.tokens, this.options);
    for (const [path, importInfo] of this.importInfoByPath.entries()) {
      if (
        importInfo.hasBareImport ||
        importInfo.hasStarExport ||
        importInfo.exportStarNames.length > 0 ||
        importInfo.namedExports.length > 0
      ) {
        continue;
      }
      const names = [
        ...importInfo.defaultNames,
        ...importInfo.wildcardNames,
        ...importInfo.namedImports.map(({localName}) => localName),
      ];
      if (names.every((name) => this.shouldAutomaticallyElideImportedName(name))) {
        this.importsToReplace.set(path, "");
      }
    }
  }

  shouldAutomaticallyElideImportedName(name) {
    return (
      this.isTypeScriptTransformEnabled &&
      !this.keepUnusedImports &&
      !this.nonTypeIdentifiers.has(name)
    );
  }

   generateImportReplacements() {
    for (const [path, importInfo] of this.importInfoByPath.entries()) {
      const {
        defaultNames,
        wildcardNames,
        namedImports,
        namedExports,
        exportStarNames,
        hasStarExport,
      } = importInfo;

      if (
        defaultNames.length === 0 &&
        wildcardNames.length === 0 &&
        namedImports.length === 0 &&
        namedExports.length === 0 &&
        exportStarNames.length === 0 &&
        !hasStarExport
      ) {
        // Import is never used, so don't even assign a name.
        this.importsToReplace.set(path, `require('${path}');`);
        continue;
      }

      const primaryImportName = this.getFreeIdentifierForPath(path);
      let secondaryImportName;
      if (this.enableLegacyTypeScriptModuleInterop) {
        secondaryImportName = primaryImportName;
      } else {
        secondaryImportName =
          wildcardNames.length > 0 ? wildcardNames[0] : this.getFreeIdentifierForPath(path);
      }
      let requireCode = `var ${primaryImportName} = require('${path}');`;
      if (wildcardNames.length > 0) {
        for (const wildcardName of wildcardNames) {
          const moduleExpr = this.enableLegacyTypeScriptModuleInterop
            ? primaryImportName
            : `${this.helperManager.getHelperName("interopRequireWildcard")}(${primaryImportName})`;
          requireCode += ` var ${wildcardName} = ${moduleExpr};`;
        }
      } else if (exportStarNames.length > 0 && secondaryImportName !== primaryImportName) {
        requireCode += ` var ${secondaryImportName} = ${this.helperManager.getHelperName(
          "interopRequireWildcard",
        )}(${primaryImportName});`;
      } else if (defaultNames.length > 0 && secondaryImportName !== primaryImportName) {
        requireCode += ` var ${secondaryImportName} = ${this.helperManager.getHelperName(
          "interopRequireDefault",
        )}(${primaryImportName});`;
      }

      for (const {importedName, localName} of namedExports) {
        requireCode += ` ${this.helperManager.getHelperName(
          "createNamedExportFrom",
        )}(${primaryImportName}, '${localName}', '${importedName}');`;
      }
      for (const exportStarName of exportStarNames) {
        requireCode += ` exports.${exportStarName} = ${secondaryImportName};`;
      }
      if (hasStarExport) {
        requireCode += ` ${this.helperManager.getHelperName(
          "createStarExport",
        )}(${primaryImportName});`;
      }

      this.importsToReplace.set(path, requireCode);

      for (const defaultName of defaultNames) {
        this.identifierReplacements.set(defaultName, `${secondaryImportName}.default`);
      }
      for (const {importedName, localName} of namedImports) {
        this.identifierReplacements.set(localName, `${primaryImportName}.${importedName}`);
      }
    }
  }

  getFreeIdentifierForPath(path) {
    const components = path.split("/");
    const lastComponent = components[components.length - 1];
    const baseName = lastComponent.replace(/\W/g, "");
    return this.nameManager.claimFreeName(`_${baseName}`);
  }

   preprocessImportAtIndex(index) {
    const defaultNames = [];
    const wildcardNames = [];
    const namedImports = [];

    index++;
    if (
      (this.tokens.matchesContextualAtIndex(index, ContextualKeyword._type) ||
        this.tokens.matches1AtIndex(index, TokenType._typeof)) &&
      !this.tokens.matches1AtIndex(index + 1, TokenType.comma) &&
      !this.tokens.matchesContextualAtIndex(index + 1, ContextualKeyword._from)
    ) {
      // import type declaration, so no need to process anything.
      return;
    }

    if (this.tokens.matches1AtIndex(index, TokenType.parenL)) {
      // Dynamic import, so nothing to do
      return;
    }

    if (this.tokens.matches1AtIndex(index, TokenType.name)) {
      defaultNames.push(this.tokens.identifierNameAtIndex(index));
      index++;
      if (this.tokens.matches1AtIndex(index, TokenType.comma)) {
        index++;
      }
    }

    if (this.tokens.matches1AtIndex(index, TokenType.star)) {
      // * as
      index += 2;
      wildcardNames.push(this.tokens.identifierNameAtIndex(index));
      index++;
    }

    if (this.tokens.matches1AtIndex(index, TokenType.braceL)) {
      const result = this.getNamedImports(index + 1);
      index = result.newIndex;

      for (const namedImport of result.namedImports) {
        // Treat {default as X} as a default import to ensure usage of require interop helper
        if (namedImport.importedName === "default") {
          defaultNames.push(namedImport.localName);
        } else {
          namedImports.push(namedImport);
        }
      }
    }

    if (this.tokens.matchesContextualAtIndex(index, ContextualKeyword._from)) {
      index++;
    }

    if (!this.tokens.matches1AtIndex(index, TokenType.string)) {
      throw new Error("Expected string token at the end of import statement.");
    }
    const path = this.tokens.stringValueAtIndex(index);
    const importInfo = this.getImportInfo(path);
    importInfo.defaultNames.push(...defaultNames);
    importInfo.wildcardNames.push(...wildcardNames);
    importInfo.namedImports.push(...namedImports);
    if (defaultNames.length === 0 && wildcardNames.length === 0 && namedImports.length === 0) {
      importInfo.hasBareImport = true;
    }
  }

   preprocessExportAtIndex(index) {
    if (
      this.tokens.matches2AtIndex(index, TokenType._export, TokenType._var) ||
      this.tokens.matches2AtIndex(index, TokenType._export, TokenType._let) ||
      this.tokens.matches2AtIndex(index, TokenType._export, TokenType._const)
    ) {
      this.preprocessVarExportAtIndex(index);
    } else if (
      this.tokens.matches2AtIndex(index, TokenType._export, TokenType._function) ||
      this.tokens.matches2AtIndex(index, TokenType._export, TokenType._class)
    ) {
      const exportName = this.tokens.identifierNameAtIndex(index + 2);
      this.addExportBinding(exportName, exportName);
    } else if (this.tokens.matches3AtIndex(index, TokenType._export, TokenType.name, TokenType._function)) {
      const exportName = this.tokens.identifierNameAtIndex(index + 3);
      this.addExportBinding(exportName, exportName);
    } else if (this.tokens.matches2AtIndex(index, TokenType._export, TokenType.braceL)) {
      this.preprocessNamedExportAtIndex(index);
    } else if (this.tokens.matches2AtIndex(index, TokenType._export, TokenType.star)) {
      this.preprocessExportStarAtIndex(index);
    }
  }

   preprocessVarExportAtIndex(index) {
    let depth = 0;
    // Handle cases like `export let {x} = y;`, starting at the open-brace in that case.
    for (let i = index + 2; ; i++) {
      if (
        this.tokens.matches1AtIndex(i, TokenType.braceL) ||
        this.tokens.matches1AtIndex(i, TokenType.dollarBraceL) ||
        this.tokens.matches1AtIndex(i, TokenType.bracketL)
      ) {
        depth++;
      } else if (
        this.tokens.matches1AtIndex(i, TokenType.braceR) ||
        this.tokens.matches1AtIndex(i, TokenType.bracketR)
      ) {
        depth--;
      } else if (depth === 0 && !this.tokens.matches1AtIndex(i, TokenType.name)) {
        break;
      } else if (this.tokens.matches1AtIndex(1, TokenType.eq)) {
        const endIndex = this.tokens.currentToken().rhsEndIndex;
        if (endIndex == null) {
          throw new Error("Expected = token with an end index.");
        }
        i = endIndex - 1;
      } else {
        const token = this.tokens.tokens[i];
        if (isDeclaration(token)) {
          const exportName = this.tokens.identifierNameAtIndex(i);
          this.identifierReplacements.set(exportName, `exports.${exportName}`);
        }
      }
    }
  }

  /**
   * Walk this export statement just in case it's an export...from statement.
   * If it is, combine it into the import info for that path. Otherwise, just
   * bail out; it'll be handled later.
   */
   preprocessNamedExportAtIndex(index) {
    // export {
    index += 2;
    const {newIndex, namedImports} = this.getNamedImports(index);
    index = newIndex;

    if (this.tokens.matchesContextualAtIndex(index, ContextualKeyword._from)) {
      index++;
    } else {
      // Reinterpret "a as b" to be local/exported rather than imported/local.
      for (const {importedName: localName, localName: exportedName} of namedImports) {
        this.addExportBinding(localName, exportedName);
      }
      return;
    }

    if (!this.tokens.matches1AtIndex(index, TokenType.string)) {
      throw new Error("Expected string token at the end of import statement.");
    }
    const path = this.tokens.stringValueAtIndex(index);
    const importInfo = this.getImportInfo(path);
    importInfo.namedExports.push(...namedImports);
  }

   preprocessExportStarAtIndex(index) {
    let exportedName = null;
    if (this.tokens.matches3AtIndex(index, TokenType._export, TokenType.star, TokenType._as)) {
      // export * as
      index += 3;
      exportedName = this.tokens.identifierNameAtIndex(index);
      // foo from
      index += 2;
    } else {
      // export * from
      index += 3;
    }
    if (!this.tokens.matches1AtIndex(index, TokenType.string)) {
      throw new Error("Expected string token at the end of star export statement.");
    }
    const path = this.tokens.stringValueAtIndex(index);
    const importInfo = this.getImportInfo(path);
    if (exportedName !== null) {
      importInfo.exportStarNames.push(exportedName);
    } else {
      importInfo.hasStarExport = true;
    }
  }

   getNamedImports(index) {
    const namedImports = [];
    while (true) {
      if (this.tokens.matches1AtIndex(index, TokenType.braceR)) {
        index++;
        break;
      }

      const specifierInfo = getImportExportSpecifierInfo(this.tokens, index);
      index = specifierInfo.endIndex;
      if (!specifierInfo.isType) {
        namedImports.push({
          importedName: specifierInfo.leftName,
          localName: specifierInfo.rightName,
        });
      }

      if (this.tokens.matches2AtIndex(index, TokenType.comma, TokenType.braceR)) {
        index += 2;
        break;
      } else if (this.tokens.matches1AtIndex(index, TokenType.braceR)) {
        index++;
        break;
      } else if (this.tokens.matches1AtIndex(index, TokenType.comma)) {
        index++;
      } else {
        throw new Error(`Unexpected token: ${JSON.stringify(this.tokens.tokens[index])}`);
      }
    }
    return {newIndex: index, namedImports};
  }

  /**
   * Get a mutable import info object for this path, creating one if it doesn't
   * exist yet.
   */
   getImportInfo(path) {
    const existingInfo = this.importInfoByPath.get(path);
    if (existingInfo) {
      return existingInfo;
    }
    const newInfo = {
      defaultNames: [],
      wildcardNames: [],
      namedImports: [],
      namedExports: [],
      hasBareImport: false,
      exportStarNames: [],
      hasStarExport: false,
    };
    this.importInfoByPath.set(path, newInfo);
    return newInfo;
  }

   addExportBinding(localName, exportedName) {
    if (!this.exportBindingsByLocalName.has(localName)) {
      this.exportBindingsByLocalName.set(localName, []);
    }
    this.exportBindingsByLocalName.get(localName).push(exportedName);
  }

  /**
   * Return the code to use for the import for this path, or the empty string if
   * the code has already been "claimed" by a previous import.
   */
  claimImportCode(importPath) {
    const result = this.importsToReplace.get(importPath);
    this.importsToReplace.set(importPath, "");
    return result || "";
  }

  getIdentifierReplacement(identifierName) {
    return this.identifierReplacements.get(identifierName) || null;
  }

  /**
   * Return a string like `exports.foo = exports.bar`.
   */
  resolveExportBinding(assignedName) {
    const exportedNames = this.exportBindingsByLocalName.get(assignedName);
    if (!exportedNames || exportedNames.length === 0) {
      return null;
    }
    return exportedNames.map((exportedName) => `exports.${exportedName}`).join(" = ");
  }

  /**
   * Return all imported/exported names where we might be interested in whether usages of those
   * names are shadowed.
   */
  getGlobalNames() {
    return new Set([
      ...this.identifierReplacements.keys(),
      ...this.exportBindingsByLocalName.keys(),
    ]);
  }
}

/**
 * SetArray acts like a `Set` (allowing only one occurrence of a string `key`), but provides the
 * index of the `key` in the backing array.
 *
 * This is designed to allow synchronizing a second array with the contents of the backing array,
 * like how in a sourcemap `sourcesContent[i]` is the source content associated with `source[i]`,
 * and there are never duplicates.
 */
class SetArray {
    constructor() {
        this._indexes = { __proto__: null };
        this.array = [];
    }
}
/**
 * Typescript doesn't allow friend access to private fields, so this just casts the set into a type
 * with public access modifiers.
 */
function cast$1(set) {
    return set;
}
/**
 * Gets the index associated with `key` in the backing array, if it is already present.
 */
function get(setarr, key) {
    return cast$1(setarr)._indexes[key];
}
/**
 * Puts `key` into the backing array, if it is not already present. Returns
 * the index of the `key` in the backing array.
 */
function put(setarr, key) {
    // The key may or may not be present. If it is present, it's a number.
    const index = get(setarr, key);
    if (index !== undefined)
        return index;
    const { array, _indexes: indexes } = cast$1(setarr);
    const length = array.push(key);
    return (indexes[key] = length - 1);
}

const comma = ','.charCodeAt(0);
const semicolon = ';'.charCodeAt(0);
const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
const intToChar = new Uint8Array(64); // 64 possible chars.
const charToInt = new Uint8Array(128); // z is 122 in ASCII
for (let i = 0; i < chars.length; i++) {
    const c = chars.charCodeAt(i);
    intToChar[i] = c;
    charToInt[c] = i;
}
function encodeInteger(builder, num, relative) {
    let delta = num - relative;
    delta = delta < 0 ? (-delta << 1) | 1 : delta << 1;
    do {
        let clamped = delta & 0b011111;
        delta >>>= 5;
        if (delta > 0)
            clamped |= 0b100000;
        builder.write(intToChar[clamped]);
    } while (delta > 0);
    return num;
}

const bufLength = 1024 * 16;
// Provide a fallback for older environments.
const td = typeof TextDecoder !== 'undefined'
    ? /* #__PURE__ */ new TextDecoder()
    : typeof Buffer !== 'undefined'
        ? {
            decode(buf) {
                const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);
                return out.toString();
            },
        }
        : {
            decode(buf) {
                let out = '';
                for (let i = 0; i < buf.length; i++) {
                    out += String.fromCharCode(buf[i]);
                }
                return out;
            },
        };
class StringWriter {
    constructor() {
        this.pos = 0;
        this.out = '';
        this.buffer = new Uint8Array(bufLength);
    }
    write(v) {
        const { buffer } = this;
        buffer[this.pos++] = v;
        if (this.pos === bufLength) {
            this.out += td.decode(buffer);
            this.pos = 0;
        }
    }
    flush() {
        const { buffer, out, pos } = this;
        return pos > 0 ? out + td.decode(buffer.subarray(0, pos)) : out;
    }
}
function encode(decoded) {
    const writer = new StringWriter();
    let sourcesIndex = 0;
    let sourceLine = 0;
    let sourceColumn = 0;
    let namesIndex = 0;
    for (let i = 0; i < decoded.length; i++) {
        const line = decoded[i];
        if (i > 0)
            writer.write(semicolon);
        if (line.length === 0)
            continue;
        let genColumn = 0;
        for (let j = 0; j < line.length; j++) {
            const segment = line[j];
            if (j > 0)
                writer.write(comma);
            genColumn = encodeInteger(writer, segment[0], genColumn);
            if (segment.length === 1)
                continue;
            sourcesIndex = encodeInteger(writer, segment[1], sourcesIndex);
            sourceLine = encodeInteger(writer, segment[2], sourceLine);
            sourceColumn = encodeInteger(writer, segment[3], sourceColumn);
            if (segment.length === 4)
                continue;
            namesIndex = encodeInteger(writer, segment[4], namesIndex);
        }
    }
    return writer.flush();
}

const COLUMN = 0;
const SOURCES_INDEX = 1;
const SOURCE_LINE = 2;
const SOURCE_COLUMN = 3;
const NAMES_INDEX = 4;

const NO_NAME = -1;
/**
 * Provides the state to generate a sourcemap.
 */
class GenMapping {
    constructor({ file, sourceRoot } = {}) {
        this._names = new SetArray();
        this._sources = new SetArray();
        this._sourcesContent = [];
        this._mappings = [];
        this.file = file;
        this.sourceRoot = sourceRoot;
        this._ignoreList = new SetArray();
    }
}
/**
 * Typescript doesn't allow friend access to private fields, so this just casts the map into a type
 * with public access modifiers.
 */
function cast(map) {
    return map;
}
/**
 * Same as `addSegment`, but will only add the segment if it generates useful information in the
 * resulting map. This only works correctly if segments are added **in order**, meaning you should
 * not add a segment with a lower generated line/column than one that came before.
 */
const maybeAddSegment = (map, genLine, genColumn, source, sourceLine, sourceColumn, name, content) => {
    return addSegmentInternal(true, map, genLine, genColumn, source, sourceLine, sourceColumn);
};
/**
 * Returns a sourcemap object (with decoded mappings) suitable for passing to a library that expects
 * a sourcemap, or to JSON.stringify.
 */
function toDecodedMap(map) {
    const { _mappings: mappings, _sources: sources, _sourcesContent: sourcesContent, _names: names, _ignoreList: ignoreList, } = cast(map);
    removeEmptyFinalLines(mappings);
    return {
        version: 3,
        file: map.file || undefined,
        names: names.array,
        sourceRoot: map.sourceRoot || undefined,
        sources: sources.array,
        sourcesContent,
        mappings,
        ignoreList: ignoreList.array,
    };
}
/**
 * Returns a sourcemap object (with encoded mappings) suitable for passing to a library that expects
 * a sourcemap, or to JSON.stringify.
 */
function toEncodedMap(map) {
    const decoded = toDecodedMap(map);
    return Object.assign(Object.assign({}, decoded), { mappings: encode(decoded.mappings) });
}
// This split declaration is only so that terser can elminiate the static initialization block.
function addSegmentInternal(skipable, map, genLine, genColumn, source, sourceLine, sourceColumn, name, content) {
    const { _mappings: mappings, _sources: sources, _sourcesContent: sourcesContent, _names: names, } = cast(map);
    const line = getLine(mappings, genLine);
    const index = getColumnIndex(line, genColumn);
    if (!source) {
        if (skipSourceless(line, index))
            return;
        return insert(line, index, [genColumn]);
    }
    const sourcesIndex = put(sources, source);
    const namesIndex = NO_NAME;
    if (sourcesIndex === sourcesContent.length)
        sourcesContent[sourcesIndex] = null;
    if (skipSource(line, index, sourcesIndex, sourceLine, sourceColumn, namesIndex)) {
        return;
    }
    return insert(line, index, [genColumn, sourcesIndex, sourceLine, sourceColumn]);
}
function getLine(mappings, index) {
    for (let i = mappings.length; i <= index; i++) {
        mappings[i] = [];
    }
    return mappings[index];
}
function getColumnIndex(line, genColumn) {
    let index = line.length;
    for (let i = index - 1; i >= 0; index = i--) {
        const current = line[i];
        if (genColumn >= current[COLUMN])
            break;
    }
    return index;
}
function insert(array, index, value) {
    for (let i = array.length; i > index; i--) {
        array[i] = array[i - 1];
    }
    array[index] = value;
}
function removeEmptyFinalLines(mappings) {
    const { length } = mappings;
    let len = length;
    for (let i = len - 1; i >= 0; len = i, i--) {
        if (mappings[i].length > 0)
            break;
    }
    if (len < length)
        mappings.length = len;
}
function skipSourceless(line, index) {
    // The start of a line is already sourceless, so adding a sourceless segment to the beginning
    // doesn't generate any useful information.
    if (index === 0)
        return true;
    const prev = line[index - 1];
    // If the previous segment is also sourceless, then adding another sourceless segment doesn't
    // genrate any new information. Else, this segment will end the source/named segment and point to
    // a sourceless position, which is useful.
    return prev.length === 1;
}
function skipSource(line, index, sourcesIndex, sourceLine, sourceColumn, namesIndex) {
    // A source/named segment at the start of a line gives position at that genColumn
    if (index === 0)
        return false;
    const prev = line[index - 1];
    // If the previous segment is sourceless, then we're transitioning to a source.
    if (prev.length === 1)
        return false;
    // If the previous segment maps to the exact same source position, then this segment doesn't
    // provide any new position information.
    return (sourcesIndex === prev[SOURCES_INDEX] &&
        sourceLine === prev[SOURCE_LINE] &&
        sourceColumn === prev[SOURCE_COLUMN] &&
        namesIndex === (prev.length === 5 ? prev[NAMES_INDEX] : NO_NAME));
}

/**
 * Generate a source map indicating that each line maps directly to the original line,
 * with the tokens in their new positions.
 */
function computeSourceMap(
  {code: generatedCode, mappings: rawMappings},
  filePath,
  options,
  source,
  tokens,
) {
  const sourceColumns = computeSourceColumns(source, tokens);
  const map = new GenMapping({file: options.compiledFilename});
  let tokenIndex = 0;
  // currentMapping is the output source index for the current input token being
  // considered.
  let currentMapping = rawMappings[0];
  while (currentMapping === undefined && tokenIndex < rawMappings.length - 1) {
    tokenIndex++;
    currentMapping = rawMappings[tokenIndex];
  }
  let line = 0;
  let lineStart = 0;
  if (currentMapping !== lineStart) {
    maybeAddSegment(map, line, 0, filePath, line, 0);
  }
  for (let i = 0; i < generatedCode.length; i++) {
    if (i === currentMapping) {
      const genColumn = currentMapping - lineStart;
      const sourceColumn = sourceColumns[tokenIndex];
      maybeAddSegment(map, line, genColumn, filePath, line, sourceColumn);
      while (
        (currentMapping === i || currentMapping === undefined) &&
        tokenIndex < rawMappings.length - 1
      ) {
        tokenIndex++;
        currentMapping = rawMappings[tokenIndex];
      }
    }
    if (generatedCode.charCodeAt(i) === charCodes.lineFeed) {
      line++;
      lineStart = i + 1;
      if (currentMapping !== lineStart) {
        maybeAddSegment(map, line, 0, filePath, line, 0);
      }
    }
  }
  const {sourceRoot, sourcesContent, ...sourceMap} = toEncodedMap(map);
  return sourceMap ;
}

/**
 * Create an array mapping each token index to the 0-based column of the start
 * position of the token.
 */
function computeSourceColumns(code, tokens) {
  const sourceColumns = new Array(tokens.length);
  let tokenIndex = 0;
  let currentMapping = tokens[tokenIndex].start;
  let lineStart = 0;
  for (let i = 0; i < code.length; i++) {
    if (i === currentMapping) {
      sourceColumns[tokenIndex] = currentMapping - lineStart;
      tokenIndex++;
      currentMapping = tokens[tokenIndex].start;
    }
    if (code.charCodeAt(i) === charCodes.lineFeed) {
      lineStart = i + 1;
    }
  }
  return sourceColumns;
}

const HELPERS = {
  require: `
    import {createRequire as CREATE_REQUIRE_NAME} from "module";
    const require = CREATE_REQUIRE_NAME(import.meta.url);
  `,
  interopRequireWildcard: `
    function interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              newObj[key] = obj[key];
            }
          }
        }
        newObj.default = obj;
        return newObj;
      }
    }
  `,
  interopRequireDefault: `
    function interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
  `,
  createNamedExportFrom: `
    function createNamedExportFrom(obj, localName, importedName) {
      Object.defineProperty(exports, localName, {enumerable: true, configurable: true, get: () => obj[importedName]});
    }
  `,
  // Note that TypeScript and Babel do this differently; TypeScript does a simple existence
  // check in the exports object and does a plain assignment, whereas Babel uses
  // defineProperty and builds an object of explicitly-exported names so that star exports can
  // always take lower precedence. For now, we do the easier TypeScript thing.
  createStarExport: `
    function createStarExport(obj) {
      Object.keys(obj)
        .filter((key) => key !== "default" && key !== "__esModule")
        .forEach((key) => {
          if (exports.hasOwnProperty(key)) {
            return;
          }
          Object.defineProperty(exports, key, {enumerable: true, configurable: true, get: () => obj[key]});
        });
    }
  `,
  nullishCoalesce: `
    function nullishCoalesce(lhs, rhsFn) {
      if (lhs != null) {
        return lhs;
      } else {
        return rhsFn();
      }
    }
  `,
  asyncNullishCoalesce: `
    async function asyncNullishCoalesce(lhs, rhsFn) {
      if (lhs != null) {
        return lhs;
      } else {
        return await rhsFn();
      }
    }
  `,
  optionalChain: `
    function optionalChain(ops) {
      let lastAccessLHS = undefined;
      let value = ops[0];
      let i = 1;
      while (i < ops.length) {
        const op = ops[i];
        const fn = ops[i + 1];
        i += 2;
        if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {
          return undefined;
        }
        if (op === 'access' || op === 'optionalAccess') {
          lastAccessLHS = value;
          value = fn(value);
        } else if (op === 'call' || op === 'optionalCall') {
          value = fn((...args) => value.call(lastAccessLHS, ...args));
          lastAccessLHS = undefined;
        }
      }
      return value;
    }
  `,
  asyncOptionalChain: `
    async function asyncOptionalChain(ops) {
      let lastAccessLHS = undefined;
      let value = ops[0];
      let i = 1;
      while (i < ops.length) {
        const op = ops[i];
        const fn = ops[i + 1];
        i += 2;
        if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {
          return undefined;
        }
        if (op === 'access' || op === 'optionalAccess') {
          lastAccessLHS = value;
          value = await fn(value);
        } else if (op === 'call' || op === 'optionalCall') {
          value = await fn((...args) => value.call(lastAccessLHS, ...args));
          lastAccessLHS = undefined;
        }
      }
      return value;
    }
  `,
  optionalChainDelete: `
    function optionalChainDelete(ops) {
      const result = OPTIONAL_CHAIN_NAME(ops);
      return result == null ? true : result;
    }
  `,
  asyncOptionalChainDelete: `
    async function asyncOptionalChainDelete(ops) {
      const result = await ASYNC_OPTIONAL_CHAIN_NAME(ops);
      return result == null ? true : result;
    }
  `,
};

class HelperManager {
  __init() {this.helperNames = {};}
  __init2() {this.createRequireName = null;}
  constructor( nameManager) {this.nameManager = nameManager;HelperManager.prototype.__init.call(this);HelperManager.prototype.__init2.call(this);}

  getHelperName(baseName) {
    let helperName = this.helperNames[baseName];
    if (helperName) {
      return helperName;
    }
    helperName = this.nameManager.claimFreeName(`_${baseName}`);
    this.helperNames[baseName] = helperName;
    return helperName;
  }

  emitHelpers() {
    let resultCode = "";
    if (this.helperNames.optionalChainDelete) {
      this.getHelperName("optionalChain");
    }
    if (this.helperNames.asyncOptionalChainDelete) {
      this.getHelperName("asyncOptionalChain");
    }
    for (const [baseName, helperCodeTemplate] of Object.entries(HELPERS)) {
      const helperName = this.helperNames[baseName];
      let helperCode = helperCodeTemplate;
      if (baseName === "optionalChainDelete") {
        helperCode = helperCode.replace("OPTIONAL_CHAIN_NAME", this.helperNames.optionalChain);
      } else if (baseName === "asyncOptionalChainDelete") {
        helperCode = helperCode.replace(
          "ASYNC_OPTIONAL_CHAIN_NAME",
          this.helperNames.asyncOptionalChain,
        );
      } else if (baseName === "require") {
        if (this.createRequireName === null) {
          this.createRequireName = this.nameManager.claimFreeName("_createRequire");
        }
        helperCode = helperCode.replace(/CREATE_REQUIRE_NAME/g, this.createRequireName);
      }
      if (helperName) {
        resultCode += " ";
        resultCode += helperCode.replace(baseName, helperName).replace(/\s+/g, " ").trim();
      }
    }
    return resultCode;
  }
}

/**
 * Traverse the given tokens and modify them if necessary to indicate that some names shadow global
 * variables.
 */
function identifyShadowedGlobals(
  tokens,
  scopes,
  globalNames,
) {
  if (!hasShadowedGlobals(tokens, globalNames)) {
    return;
  }
  markShadowedGlobals(tokens, scopes, globalNames);
}

/**
 * We can do a fast up-front check to see if there are any declarations to global names. If not,
 * then there's no point in computing scope assignments.
 */
// Exported for testing.
function hasShadowedGlobals(tokens, globalNames) {
  for (const token of tokens.tokens) {
    if (
      token.type === TokenType.name &&
      !token.isType &&
      isNonTopLevelDeclaration(token) &&
      globalNames.has(tokens.identifierNameForToken(token))
    ) {
      return true;
    }
  }
  return false;
}

function markShadowedGlobals(
  tokens,
  scopes,
  globalNames,
) {
  const scopeStack = [];
  let scopeIndex = scopes.length - 1;
  // Scopes were generated at completion time, so they're sorted by end index, so we can maintain a
  // good stack by going backwards through them.
  for (let i = tokens.tokens.length - 1; ; i--) {
    while (scopeStack.length > 0 && scopeStack[scopeStack.length - 1].startTokenIndex === i + 1) {
      scopeStack.pop();
    }
    while (scopeIndex >= 0 && scopes[scopeIndex].endTokenIndex === i + 1) {
      scopeStack.push(scopes[scopeIndex]);
      scopeIndex--;
    }
    // Process scopes after the last iteration so we can make sure we pop all of them.
    if (i < 0) {
      break;
    }

    const token = tokens.tokens[i];
    const name = tokens.identifierNameForToken(token);
    if (scopeStack.length > 1 && !token.isType && token.type === TokenType.name && globalNames.has(name)) {
      if (isBlockScopedDeclaration(token)) {
        markShadowedForScope(scopeStack[scopeStack.length - 1], tokens, name);
      } else if (isFunctionScopedDeclaration(token)) {
        let stackIndex = scopeStack.length - 1;
        while (stackIndex > 0 && !scopeStack[stackIndex].isFunctionScope) {
          stackIndex--;
        }
        if (stackIndex < 0) {
          throw new Error("Did not find parent function scope.");
        }
        markShadowedForScope(scopeStack[stackIndex], tokens, name);
      }
    }
  }
  if (scopeStack.length > 0) {
    throw new Error("Expected empty scope stack after processing file.");
  }
}

function markShadowedForScope(scope, tokens, name) {
  for (let i = scope.startTokenIndex; i < scope.endTokenIndex; i++) {
    const token = tokens.tokens[i];
    if (
      (token.type === TokenType.name || token.type === TokenType.jsxName) &&
      tokens.identifierNameForToken(token) === name
    ) {
      token.shadowsGlobal = true;
    }
  }
}

/**
 * Get all identifier names in the code, in order, including duplicates.
 */
function getIdentifierNames(code, tokens) {
  const names = [];
  for (const token of tokens) {
    if (token.type === TokenType.name) {
      names.push(code.slice(token.start, token.end));
    }
  }
  return names;
}

class NameManager {
    __init() {this.usedNames = new Set();}

  constructor(code, tokens) {NameManager.prototype.__init.call(this);
    this.usedNames = new Set(getIdentifierNames(code, tokens));
  }

  claimFreeName(name) {
    const newName = this.findFreeName(name);
    this.usedNames.add(newName);
    return newName;
  }

  findFreeName(name) {
    if (!this.usedNames.has(name)) {
      return name;
    }
    let suffixNum = 2;
    while (this.usedNames.has(name + String(suffixNum))) {
      suffixNum++;
    }
    return name + String(suffixNum);
  }
}

var dist = {};

var types = {};

var util = {};

var hasRequiredUtil;

function requireUtil () {
	if (hasRequiredUtil) return util;
	hasRequiredUtil = 1;
	var __extends = (util && util.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(util, "__esModule", { value: true });
	util.DetailContext = util.NoopContext = util.VError = void 0;
	/**
	 * Error thrown by validation. Besides an informative message, it includes the path to the
	 * property which triggered the failure.
	 */
	var VError = /** @class */ (function (_super) {
	    __extends(VError, _super);
	    function VError(path, message) {
	        var _this = _super.call(this, message) || this;
	        _this.path = path;
	        // See https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work for info about this workaround.
	        Object.setPrototypeOf(_this, VError.prototype);
	        return _this;
	    }
	    return VError;
	}(Error));
	util.VError = VError;
	/**
	 * Fast implementation of IContext used for first-pass validation. If that fails, we can validate
	 * using DetailContext to collect error messages. That's faster for the common case when messages
	 * normally pass validation.
	 */
	var NoopContext = /** @class */ (function () {
	    function NoopContext() {
	    }
	    NoopContext.prototype.fail = function (relPath, message, score) {
	        return false;
	    };
	    NoopContext.prototype.unionResolver = function () { return this; };
	    NoopContext.prototype.createContext = function () { return this; };
	    NoopContext.prototype.resolveUnion = function (ur) { };
	    return NoopContext;
	}());
	util.NoopContext = NoopContext;
	/**
	 * Complete implementation of IContext that collects meaningfull errors.
	 */
	var DetailContext = /** @class */ (function () {
	    function DetailContext() {
	        // Stack of property names and associated messages for reporting helpful error messages.
	        this._propNames = [""];
	        this._messages = [null];
	        // Score is used to choose the best union member whose DetailContext to use for reporting.
	        // Higher score means better match (or rather less severe mismatch).
	        this._score = 0;
	    }
	    DetailContext.prototype.fail = function (relPath, message, score) {
	        this._propNames.push(relPath);
	        this._messages.push(message);
	        this._score += score;
	        return false;
	    };
	    DetailContext.prototype.unionResolver = function () {
	        return new DetailUnionResolver();
	    };
	    DetailContext.prototype.resolveUnion = function (unionResolver) {
	        var _a, _b;
	        var u = unionResolver;
	        var best = null;
	        for (var _i = 0, _c = u.contexts; _i < _c.length; _i++) {
	            var ctx = _c[_i];
	            if (!best || ctx._score >= best._score) {
	                best = ctx;
	            }
	        }
	        if (best && best._score > 0) {
	            (_a = this._propNames).push.apply(_a, best._propNames);
	            (_b = this._messages).push.apply(_b, best._messages);
	        }
	    };
	    DetailContext.prototype.getError = function (path) {
	        var msgParts = [];
	        for (var i = this._propNames.length - 1; i >= 0; i--) {
	            var p = this._propNames[i];
	            path += (typeof p === "number") ? "[" + p + "]" : (p ? "." + p : "");
	            var m = this._messages[i];
	            if (m) {
	                msgParts.push(path + " " + m);
	            }
	        }
	        return new VError(path, msgParts.join("; "));
	    };
	    DetailContext.prototype.getErrorDetail = function (path) {
	        var details = [];
	        for (var i = this._propNames.length - 1; i >= 0; i--) {
	            var p = this._propNames[i];
	            path += (typeof p === "number") ? "[" + p + "]" : (p ? "." + p : "");
	            var message = this._messages[i];
	            if (message) {
	                details.push({ path: path, message: message });
	            }
	        }
	        var detail = null;
	        for (var i = details.length - 1; i >= 0; i--) {
	            if (detail) {
	                details[i].nested = [detail];
	            }
	            detail = details[i];
	        }
	        return detail;
	    };
	    return DetailContext;
	}());
	util.DetailContext = DetailContext;
	var DetailUnionResolver = /** @class */ (function () {
	    function DetailUnionResolver() {
	        this.contexts = [];
	    }
	    DetailUnionResolver.prototype.createContext = function () {
	        var ctx = new DetailContext();
	        this.contexts.push(ctx);
	        return ctx;
	    };
	    return DetailUnionResolver;
	}());
	return util;
}

var hasRequiredTypes;

function requireTypes () {
	if (hasRequiredTypes) return types;
	hasRequiredTypes = 1;
	(function (exports) {
		/**
		 * This module defines nodes used to define types and validations for objects and interfaces.
		 */
		// tslint:disable:no-shadowed-variable prefer-for-of
		var __extends = (types && types.__extends) || (function () {
		    var extendStatics = function (d, b) {
		        extendStatics = Object.setPrototypeOf ||
		            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
		            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
		        return extendStatics(d, b);
		    };
		    return function (d, b) {
		        extendStatics(d, b);
		        function __() { this.constructor = d; }
		        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
		    };
		})();
		Object.defineProperty(exports, "__esModule", { value: true });
		exports.basicTypes = exports.BasicType = exports.TParamList = exports.TParam = exports.param = exports.TFunc = exports.func = exports.TProp = exports.TOptional = exports.opt = exports.TIface = exports.iface = exports.TEnumLiteral = exports.enumlit = exports.TEnumType = exports.enumtype = exports.TIntersection = exports.intersection = exports.TUnion = exports.union = exports.TTuple = exports.tuple = exports.TArray = exports.array = exports.TLiteral = exports.lit = exports.TName = exports.name = exports.TType = void 0;
		var util_1 = requireUtil();
		/** Node that represents a type. */
		var TType = /** @class */ (function () {
		    function TType() {
		    }
		    return TType;
		}());
		exports.TType = TType;
		/** Parses a type spec into a TType node. */
		function parseSpec(typeSpec) {
		    return typeof typeSpec === "string" ? name(typeSpec) : typeSpec;
		}
		function getNamedType(suite, name) {
		    var ttype = suite[name];
		    if (!ttype) {
		        throw new Error("Unknown type " + name);
		    }
		    return ttype;
		}
		/**
		 * Defines a type name, either built-in, or defined in this suite. It can typically be included in
		 * the specs as just a plain string.
		 */
		function name(value) { return new TName(value); }
		exports.name = name;
		var TName = /** @class */ (function (_super) {
		    __extends(TName, _super);
		    function TName(name) {
		        var _this = _super.call(this) || this;
		        _this.name = name;
		        _this._failMsg = "is not a " + name;
		        return _this;
		    }
		    TName.prototype.getChecker = function (suite, strict, allowedProps) {
		        var _this = this;
		        var ttype = getNamedType(suite, this.name);
		        var checker = ttype.getChecker(suite, strict, allowedProps);
		        if (ttype instanceof BasicType || ttype instanceof TName) {
		            return checker;
		        }
		        // For complex types, add an additional "is not a <Type>" message on failure.
		        return function (value, ctx) { return checker(value, ctx) ? true : ctx.fail(null, _this._failMsg, 0); };
		    };
		    return TName;
		}(TType));
		exports.TName = TName;
		/**
		 * Defines a literal value, e.g. lit('hello') or lit(123).
		 */
		function lit(value) { return new TLiteral(value); }
		exports.lit = lit;
		var TLiteral = /** @class */ (function (_super) {
		    __extends(TLiteral, _super);
		    function TLiteral(value) {
		        var _this = _super.call(this) || this;
		        _this.value = value;
		        _this.name = JSON.stringify(value);
		        _this._failMsg = "is not " + _this.name;
		        return _this;
		    }
		    TLiteral.prototype.getChecker = function (suite, strict) {
		        var _this = this;
		        return function (value, ctx) { return (value === _this.value) ? true : ctx.fail(null, _this._failMsg, -1); };
		    };
		    return TLiteral;
		}(TType));
		exports.TLiteral = TLiteral;
		/**
		 * Defines an array type, e.g. array('number').
		 */
		function array(typeSpec) { return new TArray(parseSpec(typeSpec)); }
		exports.array = array;
		var TArray = /** @class */ (function (_super) {
		    __extends(TArray, _super);
		    function TArray(ttype) {
		        var _this = _super.call(this) || this;
		        _this.ttype = ttype;
		        return _this;
		    }
		    TArray.prototype.getChecker = function (suite, strict) {
		        var itemChecker = this.ttype.getChecker(suite, strict);
		        return function (value, ctx) {
		            if (!Array.isArray(value)) {
		                return ctx.fail(null, "is not an array", 0);
		            }
		            for (var i = 0; i < value.length; i++) {
		                var ok = itemChecker(value[i], ctx);
		                if (!ok) {
		                    return ctx.fail(i, null, 1);
		                }
		            }
		            return true;
		        };
		    };
		    return TArray;
		}(TType));
		exports.TArray = TArray;
		/**
		 * Defines a tuple type, e.g. tuple('string', 'number').
		 */
		function tuple() {
		    var typeSpec = [];
		    for (var _i = 0; _i < arguments.length; _i++) {
		        typeSpec[_i] = arguments[_i];
		    }
		    return new TTuple(typeSpec.map(function (t) { return parseSpec(t); }));
		}
		exports.tuple = tuple;
		var TTuple = /** @class */ (function (_super) {
		    __extends(TTuple, _super);
		    function TTuple(ttypes) {
		        var _this = _super.call(this) || this;
		        _this.ttypes = ttypes;
		        return _this;
		    }
		    TTuple.prototype.getChecker = function (suite, strict) {
		        var itemCheckers = this.ttypes.map(function (t) { return t.getChecker(suite, strict); });
		        var checker = function (value, ctx) {
		            if (!Array.isArray(value)) {
		                return ctx.fail(null, "is not an array", 0);
		            }
		            for (var i = 0; i < itemCheckers.length; i++) {
		                var ok = itemCheckers[i](value[i], ctx);
		                if (!ok) {
		                    return ctx.fail(i, null, 1);
		                }
		            }
		            return true;
		        };
		        if (!strict) {
		            return checker;
		        }
		        return function (value, ctx) {
		            if (!checker(value, ctx)) {
		                return false;
		            }
		            return value.length <= itemCheckers.length ? true :
		                ctx.fail(itemCheckers.length, "is extraneous", 2);
		        };
		    };
		    return TTuple;
		}(TType));
		exports.TTuple = TTuple;
		/**
		 * Defines a union type, e.g. union('number', 'null').
		 */
		function union() {
		    var typeSpec = [];
		    for (var _i = 0; _i < arguments.length; _i++) {
		        typeSpec[_i] = arguments[_i];
		    }
		    return new TUnion(typeSpec.map(function (t) { return parseSpec(t); }));
		}
		exports.union = union;
		var TUnion = /** @class */ (function (_super) {
		    __extends(TUnion, _super);
		    function TUnion(ttypes) {
		        var _this = _super.call(this) || this;
		        _this.ttypes = ttypes;
		        var names = ttypes.map(function (t) { return t instanceof TName || t instanceof TLiteral ? t.name : null; })
		            .filter(function (n) { return n; });
		        var otherTypes = ttypes.length - names.length;
		        if (names.length) {
		            if (otherTypes > 0) {
		                names.push(otherTypes + " more");
		            }
		            _this._failMsg = "is none of " + names.join(", ");
		        }
		        else {
		            _this._failMsg = "is none of " + otherTypes + " types";
		        }
		        return _this;
		    }
		    TUnion.prototype.getChecker = function (suite, strict) {
		        var _this = this;
		        var itemCheckers = this.ttypes.map(function (t) { return t.getChecker(suite, strict); });
		        return function (value, ctx) {
		            var ur = ctx.unionResolver();
		            for (var i = 0; i < itemCheckers.length; i++) {
		                var ok = itemCheckers[i](value, ur.createContext());
		                if (ok) {
		                    return true;
		                }
		            }
		            ctx.resolveUnion(ur);
		            return ctx.fail(null, _this._failMsg, 0);
		        };
		    };
		    return TUnion;
		}(TType));
		exports.TUnion = TUnion;
		/**
		 * Defines an intersection type, e.g. intersection('number', 'null').
		 */
		function intersection() {
		    var typeSpec = [];
		    for (var _i = 0; _i < arguments.length; _i++) {
		        typeSpec[_i] = arguments[_i];
		    }
		    return new TIntersection(typeSpec.map(function (t) { return parseSpec(t); }));
		}
		exports.intersection = intersection;
		var TIntersection = /** @class */ (function (_super) {
		    __extends(TIntersection, _super);
		    function TIntersection(ttypes) {
		        var _this = _super.call(this) || this;
		        _this.ttypes = ttypes;
		        return _this;
		    }
		    TIntersection.prototype.getChecker = function (suite, strict) {
		        var allowedProps = new Set();
		        var itemCheckers = this.ttypes.map(function (t) { return t.getChecker(suite, strict, allowedProps); });
		        return function (value, ctx) {
		            var ok = itemCheckers.every(function (checker) { return checker(value, ctx); });
		            if (ok) {
		                return true;
		            }
		            return ctx.fail(null, null, 0);
		        };
		    };
		    return TIntersection;
		}(TType));
		exports.TIntersection = TIntersection;
		/**
		 * Defines an enum type, e.g. enum({'A': 1, 'B': 2}).
		 */
		function enumtype(values) {
		    return new TEnumType(values);
		}
		exports.enumtype = enumtype;
		var TEnumType = /** @class */ (function (_super) {
		    __extends(TEnumType, _super);
		    function TEnumType(members) {
		        var _this = _super.call(this) || this;
		        _this.members = members;
		        _this.validValues = new Set();
		        _this._failMsg = "is not a valid enum value";
		        _this.validValues = new Set(Object.keys(members).map(function (name) { return members[name]; }));
		        return _this;
		    }
		    TEnumType.prototype.getChecker = function (suite, strict) {
		        var _this = this;
		        return function (value, ctx) {
		            return (_this.validValues.has(value) ? true : ctx.fail(null, _this._failMsg, 0));
		        };
		    };
		    return TEnumType;
		}(TType));
		exports.TEnumType = TEnumType;
		/**
		 * Defines a literal enum value, such as Direction.Up, specified as enumlit("Direction", "Up").
		 */
		function enumlit(name, prop) {
		    return new TEnumLiteral(name, prop);
		}
		exports.enumlit = enumlit;
		var TEnumLiteral = /** @class */ (function (_super) {
		    __extends(TEnumLiteral, _super);
		    function TEnumLiteral(enumName, prop) {
		        var _this = _super.call(this) || this;
		        _this.enumName = enumName;
		        _this.prop = prop;
		        _this._failMsg = "is not " + enumName + "." + prop;
		        return _this;
		    }
		    TEnumLiteral.prototype.getChecker = function (suite, strict) {
		        var _this = this;
		        var ttype = getNamedType(suite, this.enumName);
		        if (!(ttype instanceof TEnumType)) {
		            throw new Error("Type " + this.enumName + " used in enumlit is not an enum type");
		        }
		        var val = ttype.members[this.prop];
		        if (!ttype.members.hasOwnProperty(this.prop)) {
		            throw new Error("Unknown value " + this.enumName + "." + this.prop + " used in enumlit");
		        }
		        return function (value, ctx) { return (value === val) ? true : ctx.fail(null, _this._failMsg, -1); };
		    };
		    return TEnumLiteral;
		}(TType));
		exports.TEnumLiteral = TEnumLiteral;
		function makeIfaceProps(props) {
		    return Object.keys(props).map(function (name) { return makeIfaceProp(name, props[name]); });
		}
		function makeIfaceProp(name, prop) {
		    return prop instanceof TOptional ?
		        new TProp(name, prop.ttype, true) :
		        new TProp(name, parseSpec(prop), false);
		}
		/**
		 * Defines an interface. The first argument is an array of interfaces that it extends, and the
		 * second is an array of properties.
		 */
		function iface(bases, props) {
		    return new TIface(bases, makeIfaceProps(props));
		}
		exports.iface = iface;
		var TIface = /** @class */ (function (_super) {
		    __extends(TIface, _super);
		    function TIface(bases, props) {
		        var _this = _super.call(this) || this;
		        _this.bases = bases;
		        _this.props = props;
		        _this.propSet = new Set(props.map(function (p) { return p.name; }));
		        return _this;
		    }
		    TIface.prototype.getChecker = function (suite, strict, allowedProps) {
		        var _this = this;
		        var baseCheckers = this.bases.map(function (b) { return getNamedType(suite, b).getChecker(suite, strict); });
		        var propCheckers = this.props.map(function (prop) { return prop.ttype.getChecker(suite, strict); });
		        var testCtx = new util_1.NoopContext();
		        // Consider a prop required if it's not optional AND does not allow for undefined as a value.
		        var isPropRequired = this.props.map(function (prop, i) {
		            return !prop.isOpt && !propCheckers[i](undefined, testCtx);
		        });
		        var checker = function (value, ctx) {
		            if (typeof value !== "object" || value === null) {
		                return ctx.fail(null, "is not an object", 0);
		            }
		            for (var i = 0; i < baseCheckers.length; i++) {
		                if (!baseCheckers[i](value, ctx)) {
		                    return false;
		                }
		            }
		            for (var i = 0; i < propCheckers.length; i++) {
		                var name_1 = _this.props[i].name;
		                var v = value[name_1];
		                if (v === undefined) {
		                    if (isPropRequired[i]) {
		                        return ctx.fail(name_1, "is missing", 1);
		                    }
		                }
		                else {
		                    var ok = propCheckers[i](v, ctx);
		                    if (!ok) {
		                        return ctx.fail(name_1, null, 1);
		                    }
		                }
		            }
		            return true;
		        };
		        if (!strict) {
		            return checker;
		        }
		        var propSet = this.propSet;
		        if (allowedProps) {
		            this.propSet.forEach(function (prop) { return allowedProps.add(prop); });
		            propSet = allowedProps;
		        }
		        // In strict mode, check also for unknown enumerable properties.
		        return function (value, ctx) {
		            if (!checker(value, ctx)) {
		                return false;
		            }
		            for (var prop in value) {
		                if (!propSet.has(prop)) {
		                    return ctx.fail(prop, "is extraneous", 2);
		                }
		            }
		            return true;
		        };
		    };
		    return TIface;
		}(TType));
		exports.TIface = TIface;
		/**
		 * Defines an optional property on an interface.
		 */
		function opt(typeSpec) { return new TOptional(parseSpec(typeSpec)); }
		exports.opt = opt;
		var TOptional = /** @class */ (function (_super) {
		    __extends(TOptional, _super);
		    function TOptional(ttype) {
		        var _this = _super.call(this) || this;
		        _this.ttype = ttype;
		        return _this;
		    }
		    TOptional.prototype.getChecker = function (suite, strict) {
		        var itemChecker = this.ttype.getChecker(suite, strict);
		        return function (value, ctx) {
		            return value === undefined || itemChecker(value, ctx);
		        };
		    };
		    return TOptional;
		}(TType));
		exports.TOptional = TOptional;
		/**
		 * Defines a property in an interface.
		 */
		var TProp = /** @class */ (function () {
		    function TProp(name, ttype, isOpt) {
		        this.name = name;
		        this.ttype = ttype;
		        this.isOpt = isOpt;
		    }
		    return TProp;
		}());
		exports.TProp = TProp;
		/**
		 * Defines a function. The first argument declares the function's return type, the rest declare
		 * its parameters.
		 */
		function func(resultSpec) {
		    var params = [];
		    for (var _i = 1; _i < arguments.length; _i++) {
		        params[_i - 1] = arguments[_i];
		    }
		    return new TFunc(new TParamList(params), parseSpec(resultSpec));
		}
		exports.func = func;
		var TFunc = /** @class */ (function (_super) {
		    __extends(TFunc, _super);
		    function TFunc(paramList, result) {
		        var _this = _super.call(this) || this;
		        _this.paramList = paramList;
		        _this.result = result;
		        return _this;
		    }
		    TFunc.prototype.getChecker = function (suite, strict) {
		        return function (value, ctx) {
		            return typeof value === "function" ? true : ctx.fail(null, "is not a function", 0);
		        };
		    };
		    return TFunc;
		}(TType));
		exports.TFunc = TFunc;
		/**
		 * Defines a function parameter.
		 */
		function param(name, typeSpec, isOpt) {
		    return new TParam(name, parseSpec(typeSpec), Boolean(isOpt));
		}
		exports.param = param;
		var TParam = /** @class */ (function () {
		    function TParam(name, ttype, isOpt) {
		        this.name = name;
		        this.ttype = ttype;
		        this.isOpt = isOpt;
		    }
		    return TParam;
		}());
		exports.TParam = TParam;
		/**
		 * Defines a function parameter list.
		 */
		var TParamList = /** @class */ (function (_super) {
		    __extends(TParamList, _super);
		    function TParamList(params) {
		        var _this = _super.call(this) || this;
		        _this.params = params;
		        return _this;
		    }
		    TParamList.prototype.getChecker = function (suite, strict) {
		        var _this = this;
		        var itemCheckers = this.params.map(function (t) { return t.ttype.getChecker(suite, strict); });
		        var testCtx = new util_1.NoopContext();
		        var isParamRequired = this.params.map(function (param, i) {
		            return !param.isOpt && !itemCheckers[i](undefined, testCtx);
		        });
		        var checker = function (value, ctx) {
		            if (!Array.isArray(value)) {
		                return ctx.fail(null, "is not an array", 0);
		            }
		            for (var i = 0; i < itemCheckers.length; i++) {
		                var p = _this.params[i];
		                if (value[i] === undefined) {
		                    if (isParamRequired[i]) {
		                        return ctx.fail(p.name, "is missing", 1);
		                    }
		                }
		                else {
		                    var ok = itemCheckers[i](value[i], ctx);
		                    if (!ok) {
		                        return ctx.fail(p.name, null, 1);
		                    }
		                }
		            }
		            return true;
		        };
		        if (!strict) {
		            return checker;
		        }
		        return function (value, ctx) {
		            if (!checker(value, ctx)) {
		                return false;
		            }
		            return value.length <= itemCheckers.length ? true :
		                ctx.fail(itemCheckers.length, "is extraneous", 2);
		        };
		    };
		    return TParamList;
		}(TType));
		exports.TParamList = TParamList;
		/**
		 * Single TType implementation for all basic built-in types.
		 */
		var BasicType = /** @class */ (function (_super) {
		    __extends(BasicType, _super);
		    function BasicType(validator, message) {
		        var _this = _super.call(this) || this;
		        _this.validator = validator;
		        _this.message = message;
		        return _this;
		    }
		    BasicType.prototype.getChecker = function (suite, strict) {
		        var _this = this;
		        return function (value, ctx) { return _this.validator(value) ? true : ctx.fail(null, _this.message, 0); };
		    };
		    return BasicType;
		}(TType));
		exports.BasicType = BasicType;
		/**
		 * Defines the suite of basic types.
		 */
		exports.basicTypes = {
		    any: new BasicType(function (v) { return true; }, "is invalid"),
		    number: new BasicType(function (v) { return (typeof v === "number"); }, "is not a number"),
		    object: new BasicType(function (v) { return (typeof v === "object" && v); }, "is not an object"),
		    boolean: new BasicType(function (v) { return (typeof v === "boolean"); }, "is not a boolean"),
		    string: new BasicType(function (v) { return (typeof v === "string"); }, "is not a string"),
		    symbol: new BasicType(function (v) { return (typeof v === "symbol"); }, "is not a symbol"),
		    void: new BasicType(function (v) { return (v == null); }, "is not void"),
		    undefined: new BasicType(function (v) { return (v === undefined); }, "is not undefined"),
		    null: new BasicType(function (v) { return (v === null); }, "is not null"),
		    never: new BasicType(function (v) { return false; }, "is unexpected"),
		    Date: new BasicType(getIsNativeChecker("[object Date]"), "is not a Date"),
		    RegExp: new BasicType(getIsNativeChecker("[object RegExp]"), "is not a RegExp"),
		};
		// This approach for checking native object types mirrors that of lodash. Its advantage over
		// `isinstance` is that it can still return true for native objects created in different JS
		// execution environments.
		var nativeToString = Object.prototype.toString;
		function getIsNativeChecker(tag) {
		    return function (v) { return typeof v === "object" && v && nativeToString.call(v) === tag; };
		}
		if (typeof Buffer !== "undefined") {
		    exports.basicTypes.Buffer = new BasicType(function (v) { return Buffer.isBuffer(v); }, "is not a Buffer");
		}
		var _loop_1 = function (array_1) {
		    exports.basicTypes[array_1.name] = new BasicType(function (v) { return (v instanceof array_1); }, "is not a " + array_1.name);
		};
		// Support typed arrays of various flavors
		for (var _i = 0, _a = [Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array,
		    Int32Array, Uint32Array, Float32Array, Float64Array, ArrayBuffer]; _i < _a.length; _i++) {
		    var array_1 = _a[_i];
		    _loop_1(array_1);
		} 
	} (types));
	return types;
}

var hasRequiredDist;

function requireDist () {
	if (hasRequiredDist) return dist;
	hasRequiredDist = 1;
	(function (exports) {
		var __spreadArrays = (dist && dist.__spreadArrays) || function () {
		    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
		    for (var r = Array(s), k = 0, i = 0; i < il; i++)
		        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
		            r[k] = a[j];
		    return r;
		};
		Object.defineProperty(exports, "__esModule", { value: true });
		exports.Checker = exports.createCheckers = void 0;
		var types_1 = requireTypes();
		var util_1 = requireUtil();
		/**
		 * Export functions used to define interfaces.
		 */
		var types_2 = requireTypes();
		Object.defineProperty(exports, "TArray", { enumerable: true, get: function () { return types_2.TArray; } });
		Object.defineProperty(exports, "TEnumType", { enumerable: true, get: function () { return types_2.TEnumType; } });
		Object.defineProperty(exports, "TEnumLiteral", { enumerable: true, get: function () { return types_2.TEnumLiteral; } });
		Object.defineProperty(exports, "TFunc", { enumerable: true, get: function () { return types_2.TFunc; } });
		Object.defineProperty(exports, "TIface", { enumerable: true, get: function () { return types_2.TIface; } });
		Object.defineProperty(exports, "TLiteral", { enumerable: true, get: function () { return types_2.TLiteral; } });
		Object.defineProperty(exports, "TName", { enumerable: true, get: function () { return types_2.TName; } });
		Object.defineProperty(exports, "TOptional", { enumerable: true, get: function () { return types_2.TOptional; } });
		Object.defineProperty(exports, "TParam", { enumerable: true, get: function () { return types_2.TParam; } });
		Object.defineProperty(exports, "TParamList", { enumerable: true, get: function () { return types_2.TParamList; } });
		Object.defineProperty(exports, "TProp", { enumerable: true, get: function () { return types_2.TProp; } });
		Object.defineProperty(exports, "TTuple", { enumerable: true, get: function () { return types_2.TTuple; } });
		Object.defineProperty(exports, "TType", { enumerable: true, get: function () { return types_2.TType; } });
		Object.defineProperty(exports, "TUnion", { enumerable: true, get: function () { return types_2.TUnion; } });
		Object.defineProperty(exports, "TIntersection", { enumerable: true, get: function () { return types_2.TIntersection; } });
		Object.defineProperty(exports, "array", { enumerable: true, get: function () { return types_2.array; } });
		Object.defineProperty(exports, "enumlit", { enumerable: true, get: function () { return types_2.enumlit; } });
		Object.defineProperty(exports, "enumtype", { enumerable: true, get: function () { return types_2.enumtype; } });
		Object.defineProperty(exports, "func", { enumerable: true, get: function () { return types_2.func; } });
		Object.defineProperty(exports, "iface", { enumerable: true, get: function () { return types_2.iface; } });
		Object.defineProperty(exports, "lit", { enumerable: true, get: function () { return types_2.lit; } });
		Object.defineProperty(exports, "name", { enumerable: true, get: function () { return types_2.name; } });
		Object.defineProperty(exports, "opt", { enumerable: true, get: function () { return types_2.opt; } });
		Object.defineProperty(exports, "param", { enumerable: true, get: function () { return types_2.param; } });
		Object.defineProperty(exports, "tuple", { enumerable: true, get: function () { return types_2.tuple; } });
		Object.defineProperty(exports, "union", { enumerable: true, get: function () { return types_2.union; } });
		Object.defineProperty(exports, "intersection", { enumerable: true, get: function () { return types_2.intersection; } });
		Object.defineProperty(exports, "BasicType", { enumerable: true, get: function () { return types_2.BasicType; } });
		var util_2 = requireUtil();
		Object.defineProperty(exports, "VError", { enumerable: true, get: function () { return util_2.VError; } });
		/**
		 * Takes one of more type suites (e.g. a module generated by `ts-interface-builder`), and combines
		 * them into a suite of interface checkers. If a type is used by name, that name should be present
		 * among the passed-in type suites.
		 *
		 * The returned object maps type names to Checker objects.
		 */
		function createCheckers() {
		    var typeSuite = [];
		    for (var _i = 0; _i < arguments.length; _i++) {
		        typeSuite[_i] = arguments[_i];
		    }
		    var fullSuite = Object.assign.apply(Object, __spreadArrays([{}, types_1.basicTypes], typeSuite));
		    var checkers = {};
		    for (var _a = 0, typeSuite_1 = typeSuite; _a < typeSuite_1.length; _a++) {
		        var suite_1 = typeSuite_1[_a];
		        for (var _b = 0, _c = Object.keys(suite_1); _b < _c.length; _b++) {
		            var name = _c[_b];
		            checkers[name] = new Checker(fullSuite, suite_1[name]);
		        }
		    }
		    return checkers;
		}
		exports.createCheckers = createCheckers;
		/**
		 * Checker implements validation of objects, and also includes accessors to validate method calls.
		 * Checkers should be created using `createCheckers()`.
		 */
		var Checker = /** @class */ (function () {
		    // Create checkers by using `createCheckers()` function.
		    function Checker(suite, ttype, _path) {
		        if (_path === void 0) { _path = 'value'; }
		        this.suite = suite;
		        this.ttype = ttype;
		        this._path = _path;
		        this.props = new Map();
		        if (ttype instanceof types_1.TIface) {
		            for (var _i = 0, _a = ttype.props; _i < _a.length; _i++) {
		                var p = _a[_i];
		                this.props.set(p.name, p.ttype);
		            }
		        }
		        this.checkerPlain = this.ttype.getChecker(suite, false);
		        this.checkerStrict = this.ttype.getChecker(suite, true);
		    }
		    /**
		     * Set the path to report in errors, instead of the default "value". (E.g. if the Checker is for
		     * a "person" interface, set path to "person" to report e.g. "person.name is not a string".)
		     */
		    Checker.prototype.setReportedPath = function (path) {
		        this._path = path;
		    };
		    /**
		     * Check that the given value satisfies this checker's type, or throw Error.
		     */
		    Checker.prototype.check = function (value) { return this._doCheck(this.checkerPlain, value); };
		    /**
		     * A fast check for whether or not the given value satisfies this Checker's type. This returns
		     * true or false, does not produce an error message, and is fast both on success and on failure.
		     */
		    Checker.prototype.test = function (value) {
		        return this.checkerPlain(value, new util_1.NoopContext());
		    };
		    /**
		     * Returns an error object describing the errors if the given value does not satisfy this
		     * Checker's type, or null if it does.
		     */
		    Checker.prototype.validate = function (value) {
		        return this._doValidate(this.checkerPlain, value);
		    };
		    /**
		     * Check that the given value satisfies this checker's type strictly. This checks that objects
		     * and tuples have no extra members. Note that this prevents backward compatibility, so usually
		     * a plain check() is more appropriate.
		     */
		    Checker.prototype.strictCheck = function (value) { return this._doCheck(this.checkerStrict, value); };
		    /**
		     * A fast strict check for whether or not the given value satisfies this Checker's type. Returns
		     * true or false, does not produce an error message, and is fast both on success and on failure.
		     */
		    Checker.prototype.strictTest = function (value) {
		        return this.checkerStrict(value, new util_1.NoopContext());
		    };
		    /**
		     * Returns an error object describing the errors if the given value does not satisfy this
		     * Checker's type strictly, or null if it does.
		     */
		    Checker.prototype.strictValidate = function (value) {
		        return this._doValidate(this.checkerStrict, value);
		    };
		    /**
		     * If this checker is for an interface, returns a Checker for the type required for the given
		     * property of this interface.
		     */
		    Checker.prototype.getProp = function (prop) {
		        var ttype = this.props.get(prop);
		        if (!ttype) {
		            throw new Error("Type has no property " + prop);
		        }
		        return new Checker(this.suite, ttype, this._path + "." + prop);
		    };
		    /**
		     * If this checker is for an interface, returns a Checker for the argument-list required to call
		     * the given method of this interface. E.g. if this Checker is for the interface:
		     *    interface Foo {
		     *      find(s: string, pos?: number): number;
		     *    }
		     * Then methodArgs("find").check(...) will succeed for ["foo"] and ["foo", 3], but not for [17].
		     */
		    Checker.prototype.methodArgs = function (methodName) {
		        var tfunc = this._getMethod(methodName);
		        return new Checker(this.suite, tfunc.paramList);
		    };
		    /**
		     * If this checker is for an interface, returns a Checker for the return value of the given
		     * method of this interface.
		     */
		    Checker.prototype.methodResult = function (methodName) {
		        var tfunc = this._getMethod(methodName);
		        return new Checker(this.suite, tfunc.result);
		    };
		    /**
		     * If this checker is for a function, returns a Checker for its argument-list.
		     */
		    Checker.prototype.getArgs = function () {
		        if (!(this.ttype instanceof types_1.TFunc)) {
		            throw new Error("getArgs() applied to non-function");
		        }
		        return new Checker(this.suite, this.ttype.paramList);
		    };
		    /**
		     * If this checker is for a function, returns a Checker for its result.
		     */
		    Checker.prototype.getResult = function () {
		        if (!(this.ttype instanceof types_1.TFunc)) {
		            throw new Error("getResult() applied to non-function");
		        }
		        return new Checker(this.suite, this.ttype.result);
		    };
		    /**
		     * Return the type for which this is a checker.
		     */
		    Checker.prototype.getType = function () {
		        return this.ttype;
		    };
		    /**
		     * Actual implementation of check() and strictCheck().
		     */
		    Checker.prototype._doCheck = function (checkerFunc, value) {
		        var noopCtx = new util_1.NoopContext();
		        if (!checkerFunc(value, noopCtx)) {
		            var detailCtx = new util_1.DetailContext();
		            checkerFunc(value, detailCtx);
		            throw detailCtx.getError(this._path);
		        }
		    };
		    Checker.prototype._doValidate = function (checkerFunc, value) {
		        var noopCtx = new util_1.NoopContext();
		        if (checkerFunc(value, noopCtx)) {
		            return null;
		        }
		        var detailCtx = new util_1.DetailContext();
		        checkerFunc(value, detailCtx);
		        return detailCtx.getErrorDetail(this._path);
		    };
		    Checker.prototype._getMethod = function (methodName) {
		        var ttype = this.props.get(methodName);
		        if (!ttype) {
		            throw new Error("Type has no property " + methodName);
		        }
		        if (!(ttype instanceof types_1.TFunc)) {
		            throw new Error("Property " + methodName + " is not a method");
		        }
		        return ttype;
		    };
		    return Checker;
		}());
		exports.Checker = Checker; 
	} (dist));
	return dist;
}

var distExports = requireDist();

/**
 * This module was automatically generated by `ts-interface-builder`
 */
// tslint:disable:object-literal-key-quotes

const Transform = distExports.union(
  distExports.lit("jsx"),
  distExports.lit("typescript"),
  distExports.lit("flow"),
  distExports.lit("imports"),
  distExports.lit("react-hot-loader"),
  distExports.lit("jest"),
);

const SourceMapOptions = distExports.iface([], {
  compiledFilename: "string",
});

const Options = distExports.iface([], {
  transforms: distExports.array("Transform"),
  disableESTransforms: distExports.opt("boolean"),
  jsxRuntime: distExports.opt(distExports.union(distExports.lit("classic"), distExports.lit("automatic"), distExports.lit("preserve"))),
  production: distExports.opt("boolean"),
  jsxImportSource: distExports.opt("string"),
  jsxPragma: distExports.opt("string"),
  jsxFragmentPragma: distExports.opt("string"),
  keepUnusedImports: distExports.opt("boolean"),
  preserveDynamicImport: distExports.opt("boolean"),
  injectCreateRequireForImportRequire: distExports.opt("boolean"),
  enableLegacyTypeScriptModuleInterop: distExports.opt("boolean"),
  enableLegacyBabel5ModuleInterop: distExports.opt("boolean"),
  sourceMapOptions: distExports.opt("SourceMapOptions"),
  filePath: distExports.opt("string"),
});

const exportedTypeSuite = {
  Transform,
  SourceMapOptions,
  Options,
};

const {Options: OptionsChecker} = distExports.createCheckers(exportedTypeSuite);

 



























































































function validateOptions(options) {
  OptionsChecker.strictCheck(options);
}

function parseSpread() {
  next();
  parseMaybeAssign(false);
}

function parseRest(isBlockScope) {
  next();
  parseBindingAtom(isBlockScope);
}

function parseBindingIdentifier(isBlockScope) {
  parseIdentifier();
  markPriorBindingIdentifier(isBlockScope);
}

function parseImportedIdentifier() {
  parseIdentifier();
  state.tokens[state.tokens.length - 1].identifierRole = IdentifierRole.ImportDeclaration;
}

function markPriorBindingIdentifier(isBlockScope) {
  let identifierRole;
  if (state.scopeDepth === 0) {
    identifierRole = IdentifierRole.TopLevelDeclaration;
  } else if (isBlockScope) {
    identifierRole = IdentifierRole.BlockScopedDeclaration;
  } else {
    identifierRole = IdentifierRole.FunctionScopedDeclaration;
  }
  state.tokens[state.tokens.length - 1].identifierRole = identifierRole;
}

// Parses lvalue (assignable) atom.
function parseBindingAtom(isBlockScope) {
  switch (state.type) {
    case TokenType._this: {
      // In TypeScript, "this" may be the name of a parameter, so allow it.
      const oldIsType = pushTypeContext(0);
      next();
      popTypeContext(oldIsType);
      return;
    }

    case TokenType._yield:
    case TokenType.name: {
      state.type = TokenType.name;
      parseBindingIdentifier(isBlockScope);
      return;
    }

    case TokenType.bracketL: {
      next();
      parseBindingList(TokenType.bracketR, isBlockScope, true /* allowEmpty */);
      return;
    }

    case TokenType.braceL:
      parseObj(true, isBlockScope);
      return;

    default:
      unexpected();
  }
}

function parseBindingList(
  close,
  isBlockScope,
  allowEmpty = false,
  allowModifiers = false,
  contextId = 0,
) {
  let first = true;

  let hasRemovedComma = false;
  const firstItemTokenIndex = state.tokens.length;

  while (!eat(close) && !state.error) {
    if (first) {
      first = false;
    } else {
      expect(TokenType.comma);
      state.tokens[state.tokens.length - 1].contextId = contextId;
      // After a "this" type in TypeScript, we need to set the following comma (if any) to also be
      // a type token so that it will be removed.
      if (!hasRemovedComma && state.tokens[firstItemTokenIndex].isType) {
        state.tokens[state.tokens.length - 1].isType = true;
        hasRemovedComma = true;
      }
    }
    if (allowEmpty && match(TokenType.comma)) ; else if (eat(close)) {
      break;
    } else if (match(TokenType.ellipsis)) {
      parseRest(isBlockScope);
      parseAssignableListItemTypes();
      // Support rest element trailing commas allowed by TypeScript <2.9.
      eat(TokenType.comma);
      expect(close);
      break;
    } else {
      parseAssignableListItem(allowModifiers, isBlockScope);
    }
  }
}

function parseAssignableListItem(allowModifiers, isBlockScope) {
  if (allowModifiers) {
    tsParseModifiers([
      ContextualKeyword._public,
      ContextualKeyword._protected,
      ContextualKeyword._private,
      ContextualKeyword._readonly,
      ContextualKeyword._override,
    ]);
  }

  parseMaybeDefault(isBlockScope);
  parseAssignableListItemTypes();
  parseMaybeDefault(isBlockScope, true /* leftAlreadyParsed */);
}

function parseAssignableListItemTypes() {
  if (isFlowEnabled) {
    flowParseAssignableListItemTypes();
  } else if (isTypeScriptEnabled) {
    tsParseAssignableListItemTypes();
  }
}

// Parses assignment pattern around given atom if possible.
function parseMaybeDefault(isBlockScope, leftAlreadyParsed = false) {
  if (!leftAlreadyParsed) {
    parseBindingAtom(isBlockScope);
  }
  if (!eat(TokenType.eq)) {
    return;
  }
  const eqIndex = state.tokens.length - 1;
  parseMaybeAssign();
  state.tokens[eqIndex].rhsEndIndex = state.tokens.length;
}

function tsIsIdentifier() {
  // TODO: actually a bit more complex in TypeScript, but shouldn't matter.
  // See https://github.com/Microsoft/TypeScript/issues/15008
  return match(TokenType.name);
}

function isLiteralPropertyName() {
  return (
    match(TokenType.name) ||
    Boolean(state.type & TokenType.IS_KEYWORD) ||
    match(TokenType.string) ||
    match(TokenType.num) ||
    match(TokenType.bigint) ||
    match(TokenType.decimal)
  );
}

function tsNextTokenCanFollowModifier() {
  // Note: TypeScript's implementation is much more complicated because
  // more things are considered modifiers there.
  // This implementation only handles modifiers not handled by babylon itself. And "static".
  // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...
  const snapshot = state.snapshot();

  next();
  const canFollowModifier =
    (match(TokenType.bracketL) ||
      match(TokenType.braceL) ||
      match(TokenType.star) ||
      match(TokenType.ellipsis) ||
      match(TokenType.hash) ||
      isLiteralPropertyName()) &&
    !hasPrecedingLineBreak();

  if (canFollowModifier) {
    return true;
  } else {
    state.restoreFromSnapshot(snapshot);
    return false;
  }
}

function tsParseModifiers(allowedModifiers) {
  while (true) {
    const modifier = tsParseModifier(allowedModifiers);
    if (modifier === null) {
      break;
    }
  }
}

/** Parses a modifier matching one the given modifier names. */
function tsParseModifier(
  allowedModifiers,
) {
  if (!match(TokenType.name)) {
    return null;
  }

  const modifier = state.contextualKeyword;
  if (allowedModifiers.indexOf(modifier) !== -1 && tsNextTokenCanFollowModifier()) {
    switch (modifier) {
      case ContextualKeyword._readonly:
        state.tokens[state.tokens.length - 1].type = TokenType._readonly;
        break;
      case ContextualKeyword._abstract:
        state.tokens[state.tokens.length - 1].type = TokenType._abstract;
        break;
      case ContextualKeyword._static:
        state.tokens[state.tokens.length - 1].type = TokenType._static;
        break;
      case ContextualKeyword._public:
        state.tokens[state.tokens.length - 1].type = TokenType._public;
        break;
      case ContextualKeyword._private:
        state.tokens[state.tokens.length - 1].type = TokenType._private;
        break;
      case ContextualKeyword._protected:
        state.tokens[state.tokens.length - 1].type = TokenType._protected;
        break;
      case ContextualKeyword._override:
        state.tokens[state.tokens.length - 1].type = TokenType._override;
        break;
      case ContextualKeyword._declare:
        state.tokens[state.tokens.length - 1].type = TokenType._declare;
        break;
    }
    return modifier;
  }
  return null;
}

function tsParseEntityName() {
  parseIdentifier();
  while (eat(TokenType.dot)) {
    parseIdentifier();
  }
}

function tsParseTypeReference() {
  tsParseEntityName();
  if (!hasPrecedingLineBreak() && match(TokenType.lessThan)) {
    tsParseTypeArguments();
  }
}

function tsParseThisTypePredicate() {
  next();
  tsParseTypeAnnotation();
}

function tsParseThisTypeNode() {
  next();
}

function tsParseTypeQuery() {
  expect(TokenType._typeof);
  if (match(TokenType._import)) {
    tsParseImportType();
  } else {
    tsParseEntityName();
  }
  if (!hasPrecedingLineBreak() && match(TokenType.lessThan)) {
    tsParseTypeArguments();
  }
}

function tsParseImportType() {
  expect(TokenType._import);
  expect(TokenType.parenL);
  expect(TokenType.string);
  expect(TokenType.parenR);
  if (eat(TokenType.dot)) {
    tsParseEntityName();
  }
  if (match(TokenType.lessThan)) {
    tsParseTypeArguments();
  }
}

function tsParseTypeParameter() {
  eat(TokenType._const);
  const hadIn = eat(TokenType._in);
  const hadOut = eatContextual(ContextualKeyword._out);
  eat(TokenType._const);
  if ((hadIn || hadOut) && !match(TokenType.name)) {
    // The "in" or "out" keyword must have actually been the type parameter
    // name, so set it as the name.
    state.tokens[state.tokens.length - 1].type = TokenType.name;
  } else {
    parseIdentifier();
  }

  if (eat(TokenType._extends)) {
    tsParseType();
  }
  if (eat(TokenType.eq)) {
    tsParseType();
  }
}

function tsTryParseTypeParameters() {
  if (match(TokenType.lessThan)) {
    tsParseTypeParameters();
  }
}

function tsParseTypeParameters() {
  const oldIsType = pushTypeContext(0);
  if (match(TokenType.lessThan) || match(TokenType.typeParameterStart)) {
    next();
  } else {
    unexpected();
  }

  while (!eat(TokenType.greaterThan) && !state.error) {
    tsParseTypeParameter();
    eat(TokenType.comma);
  }
  popTypeContext(oldIsType);
}

// Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,
// but here it's always false, because this is only used for types.
function tsFillSignature(returnToken) {
  // Arrow fns *must* have return token (`=>`). Normal functions can omit it.
  const returnTokenRequired = returnToken === TokenType.arrow;
  tsTryParseTypeParameters();
  expect(TokenType.parenL);
  // Create a scope even though we're doing type parsing so we don't accidentally
  // treat params as top-level bindings.
  state.scopeDepth++;
  tsParseBindingListForSignature(false /* isBlockScope */);
  state.scopeDepth--;
  if (returnTokenRequired) {
    tsParseTypeOrTypePredicateAnnotation(returnToken);
  } else if (match(returnToken)) {
    tsParseTypeOrTypePredicateAnnotation(returnToken);
  }
}

function tsParseBindingListForSignature(isBlockScope) {
  parseBindingList(TokenType.parenR, isBlockScope);
}

function tsParseTypeMemberSemicolon() {
  if (!eat(TokenType.comma)) {
    semicolon$1();
  }
}

function tsParseSignatureMember() {
  tsFillSignature(TokenType.colon);
  tsParseTypeMemberSemicolon();
}

function tsIsUnambiguouslyIndexSignature() {
  const snapshot = state.snapshot();
  next(); // Skip '{'
  const isIndexSignature = eat(TokenType.name) && match(TokenType.colon);
  state.restoreFromSnapshot(snapshot);
  return isIndexSignature;
}

function tsTryParseIndexSignature() {
  if (!(match(TokenType.bracketL) && tsIsUnambiguouslyIndexSignature())) {
    return false;
  }

  const oldIsType = pushTypeContext(0);

  expect(TokenType.bracketL);
  parseIdentifier();
  tsParseTypeAnnotation();
  expect(TokenType.bracketR);

  tsTryParseTypeAnnotation();
  tsParseTypeMemberSemicolon();

  popTypeContext(oldIsType);
  return true;
}

function tsParsePropertyOrMethodSignature(isReadonly) {
  eat(TokenType.question);

  if (!isReadonly && (match(TokenType.parenL) || match(TokenType.lessThan))) {
    tsFillSignature(TokenType.colon);
    tsParseTypeMemberSemicolon();
  } else {
    tsTryParseTypeAnnotation();
    tsParseTypeMemberSemicolon();
  }
}

function tsParseTypeMember() {
  if (match(TokenType.parenL) || match(TokenType.lessThan)) {
    // call signature
    tsParseSignatureMember();
    return;
  }
  if (match(TokenType._new)) {
    next();
    if (match(TokenType.parenL) || match(TokenType.lessThan)) {
      // constructor signature
      tsParseSignatureMember();
    } else {
      tsParsePropertyOrMethodSignature(false);
    }
    return;
  }
  const readonly = !!tsParseModifier([ContextualKeyword._readonly]);

  const found = tsTryParseIndexSignature();
  if (found) {
    return;
  }
  if (
    (isContextual(ContextualKeyword._get) || isContextual(ContextualKeyword._set)) &&
    tsNextTokenCanFollowModifier()
  ) ;
  parsePropertyName(-1 /* Types don't need context IDs. */);
  tsParsePropertyOrMethodSignature(readonly);
}

function tsParseTypeLiteral() {
  tsParseObjectTypeMembers();
}

function tsParseObjectTypeMembers() {
  expect(TokenType.braceL);
  while (!eat(TokenType.braceR) && !state.error) {
    tsParseTypeMember();
  }
}

function tsLookaheadIsStartOfMappedType() {
  const snapshot = state.snapshot();
  const isStartOfMappedType = tsIsStartOfMappedType();
  state.restoreFromSnapshot(snapshot);
  return isStartOfMappedType;
}

function tsIsStartOfMappedType() {
  next();
  if (eat(TokenType.plus) || eat(TokenType.minus)) {
    return isContextual(ContextualKeyword._readonly);
  }
  if (isContextual(ContextualKeyword._readonly)) {
    next();
  }
  if (!match(TokenType.bracketL)) {
    return false;
  }
  next();
  if (!tsIsIdentifier()) {
    return false;
  }
  next();
  return match(TokenType._in);
}

function tsParseMappedTypeParameter() {
  parseIdentifier();
  expect(TokenType._in);
  tsParseType();
}

function tsParseMappedType() {
  expect(TokenType.braceL);
  if (match(TokenType.plus) || match(TokenType.minus)) {
    next();
    expectContextual(ContextualKeyword._readonly);
  } else {
    eatContextual(ContextualKeyword._readonly);
  }
  expect(TokenType.bracketL);
  tsParseMappedTypeParameter();
  if (eatContextual(ContextualKeyword._as)) {
    tsParseType();
  }
  expect(TokenType.bracketR);
  if (match(TokenType.plus) || match(TokenType.minus)) {
    next();
    expect(TokenType.question);
  } else {
    eat(TokenType.question);
  }
  tsTryParseType();
  semicolon$1();
  expect(TokenType.braceR);
}

function tsParseTupleType() {
  expect(TokenType.bracketL);
  while (!eat(TokenType.bracketR) && !state.error) {
    // Do not validate presence of either none or only labeled elements
    tsParseTupleElementType();
    eat(TokenType.comma);
  }
}

function tsParseTupleElementType() {
  // parses `...TsType[]`
  if (eat(TokenType.ellipsis)) {
    tsParseType();
  } else {
    // parses `TsType?`
    tsParseType();
    eat(TokenType.question);
  }

  // The type we parsed above was actually a label
  if (eat(TokenType.colon)) {
    // Labeled tuple types must affix the label with `...` or `?`, so no need to handle those here
    tsParseType();
  }
}

function tsParseParenthesizedType() {
  expect(TokenType.parenL);
  tsParseType();
  expect(TokenType.parenR);
}

function tsParseTemplateLiteralType() {
  // Finish `, read quasi
  nextTemplateToken();
  // Finish quasi, read ${
  nextTemplateToken();
  while (!match(TokenType.backQuote) && !state.error) {
    expect(TokenType.dollarBraceL);
    tsParseType();
    // Finish }, read quasi
    nextTemplateToken();
    // Finish quasi, read either ${ or `
    nextTemplateToken();
  }
  next();
}

var FunctionType; (function (FunctionType) {
  const TSFunctionType = 0; FunctionType[FunctionType["TSFunctionType"] = TSFunctionType] = "TSFunctionType";
  const TSConstructorType = TSFunctionType + 1; FunctionType[FunctionType["TSConstructorType"] = TSConstructorType] = "TSConstructorType";
  const TSAbstractConstructorType = TSConstructorType + 1; FunctionType[FunctionType["TSAbstractConstructorType"] = TSAbstractConstructorType] = "TSAbstractConstructorType";
})(FunctionType || (FunctionType = {}));

function tsParseFunctionOrConstructorType(type) {
  if (type === FunctionType.TSAbstractConstructorType) {
    expectContextual(ContextualKeyword._abstract);
  }
  if (type === FunctionType.TSConstructorType || type === FunctionType.TSAbstractConstructorType) {
    expect(TokenType._new);
  }
  const oldInDisallowConditionalTypesContext = state.inDisallowConditionalTypesContext;
  state.inDisallowConditionalTypesContext = false;
  tsFillSignature(TokenType.arrow);
  state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;
}

function tsParseNonArrayType() {
  switch (state.type) {
    case TokenType.name:
      tsParseTypeReference();
      return;
    case TokenType._void:
    case TokenType._null:
      next();
      return;
    case TokenType.string:
    case TokenType.num:
    case TokenType.bigint:
    case TokenType.decimal:
    case TokenType._true:
    case TokenType._false:
      parseLiteral();
      return;
    case TokenType.minus:
      next();
      parseLiteral();
      return;
    case TokenType._this: {
      tsParseThisTypeNode();
      if (isContextual(ContextualKeyword._is) && !hasPrecedingLineBreak()) {
        tsParseThisTypePredicate();
      }
      return;
    }
    case TokenType._typeof:
      tsParseTypeQuery();
      return;
    case TokenType._import:
      tsParseImportType();
      return;
    case TokenType.braceL:
      if (tsLookaheadIsStartOfMappedType()) {
        tsParseMappedType();
      } else {
        tsParseTypeLiteral();
      }
      return;
    case TokenType.bracketL:
      tsParseTupleType();
      return;
    case TokenType.parenL:
      tsParseParenthesizedType();
      return;
    case TokenType.backQuote:
      tsParseTemplateLiteralType();
      return;
    default:
      if (state.type & TokenType.IS_KEYWORD) {
        next();
        state.tokens[state.tokens.length - 1].type = TokenType.name;
        return;
      }
      break;
  }

  unexpected();
}

function tsParseArrayTypeOrHigher() {
  tsParseNonArrayType();
  while (!hasPrecedingLineBreak() && eat(TokenType.bracketL)) {
    if (!eat(TokenType.bracketR)) {
      // If we hit ] immediately, this is an array type, otherwise it's an indexed access type.
      tsParseType();
      expect(TokenType.bracketR);
    }
  }
}

function tsParseInferType() {
  expectContextual(ContextualKeyword._infer);
  parseIdentifier();
  if (match(TokenType._extends)) {
    // Infer type constraints introduce an ambiguity about whether the "extends"
    // is a constraint for this infer type or is another conditional type.
    const snapshot = state.snapshot();
    expect(TokenType._extends);
    const oldInDisallowConditionalTypesContext = state.inDisallowConditionalTypesContext;
    state.inDisallowConditionalTypesContext = true;
    tsParseType();
    state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;
    if (state.error || (!state.inDisallowConditionalTypesContext && match(TokenType.question))) {
      state.restoreFromSnapshot(snapshot);
    }
  }
}

function tsParseTypeOperatorOrHigher() {
  if (
    isContextual(ContextualKeyword._keyof) ||
    isContextual(ContextualKeyword._unique) ||
    isContextual(ContextualKeyword._readonly)
  ) {
    next();
    tsParseTypeOperatorOrHigher();
  } else if (isContextual(ContextualKeyword._infer)) {
    tsParseInferType();
  } else {
    const oldInDisallowConditionalTypesContext = state.inDisallowConditionalTypesContext;
    state.inDisallowConditionalTypesContext = false;
    tsParseArrayTypeOrHigher();
    state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;
  }
}

function tsParseIntersectionTypeOrHigher() {
  eat(TokenType.bitwiseAND);
  tsParseTypeOperatorOrHigher();
  if (match(TokenType.bitwiseAND)) {
    while (eat(TokenType.bitwiseAND)) {
      tsParseTypeOperatorOrHigher();
    }
  }
}

function tsParseUnionTypeOrHigher() {
  eat(TokenType.bitwiseOR);
  tsParseIntersectionTypeOrHigher();
  if (match(TokenType.bitwiseOR)) {
    while (eat(TokenType.bitwiseOR)) {
      tsParseIntersectionTypeOrHigher();
    }
  }
}

function tsIsStartOfFunctionType() {
  if (match(TokenType.lessThan)) {
    return true;
  }
  return match(TokenType.parenL) && tsLookaheadIsUnambiguouslyStartOfFunctionType();
}

function tsSkipParameterStart() {
  if (match(TokenType.name) || match(TokenType._this)) {
    next();
    return true;
  }
  // If this is a possible array/object destructure, walk to the matching bracket/brace.
  // The next token after will tell us definitively whether this is a function param.
  if (match(TokenType.braceL) || match(TokenType.bracketL)) {
    let depth = 1;
    next();
    while (depth > 0 && !state.error) {
      if (match(TokenType.braceL) || match(TokenType.bracketL)) {
        depth++;
      } else if (match(TokenType.braceR) || match(TokenType.bracketR)) {
        depth--;
      }
      next();
    }
    return true;
  }
  return false;
}

function tsLookaheadIsUnambiguouslyStartOfFunctionType() {
  const snapshot = state.snapshot();
  const isUnambiguouslyStartOfFunctionType = tsIsUnambiguouslyStartOfFunctionType();
  state.restoreFromSnapshot(snapshot);
  return isUnambiguouslyStartOfFunctionType;
}

function tsIsUnambiguouslyStartOfFunctionType() {
  next();
  if (match(TokenType.parenR) || match(TokenType.ellipsis)) {
    // ( )
    // ( ...
    return true;
  }
  if (tsSkipParameterStart()) {
    if (match(TokenType.colon) || match(TokenType.comma) || match(TokenType.question) || match(TokenType.eq)) {
      // ( xxx :
      // ( xxx ,
      // ( xxx ?
      // ( xxx =
      return true;
    }
    if (match(TokenType.parenR)) {
      next();
      if (match(TokenType.arrow)) {
        // ( xxx ) =>
        return true;
      }
    }
  }
  return false;
}

function tsParseTypeOrTypePredicateAnnotation(returnToken) {
  const oldIsType = pushTypeContext(0);
  expect(returnToken);
  const finishedReturn = tsParseTypePredicateOrAssertsPrefix();
  if (!finishedReturn) {
    tsParseType();
  }
  popTypeContext(oldIsType);
}

function tsTryParseTypeOrTypePredicateAnnotation() {
  if (match(TokenType.colon)) {
    tsParseTypeOrTypePredicateAnnotation(TokenType.colon);
  }
}

function tsTryParseTypeAnnotation() {
  if (match(TokenType.colon)) {
    tsParseTypeAnnotation();
  }
}

function tsTryParseType() {
  if (eat(TokenType.colon)) {
    tsParseType();
  }
}

/**
 * Detect a few special return syntax cases: `x is T`, `asserts x`, `asserts x is T`,
 * `asserts this is T`.
 *
 * Returns true if we parsed the return type, false if there's still a type to be parsed.
 */
function tsParseTypePredicateOrAssertsPrefix() {
  const snapshot = state.snapshot();
  if (isContextual(ContextualKeyword._asserts)) {
    // Normally this is `asserts x is T`, but at this point, it might be `asserts is T` (a user-
    // defined type guard on the `asserts` variable) or just a type called `asserts`.
    next();
    if (eatContextual(ContextualKeyword._is)) {
      // If we see `asserts is`, then this must be of the form `asserts is T`, since
      // `asserts is is T` isn't valid.
      tsParseType();
      return true;
    } else if (tsIsIdentifier() || match(TokenType._this)) {
      next();
      if (eatContextual(ContextualKeyword._is)) {
        // If we see `is`, then this is `asserts x is T`. Otherwise, it's `asserts x`.
        tsParseType();
      }
      return true;
    } else {
      // Regular type, so bail out and start type parsing from scratch.
      state.restoreFromSnapshot(snapshot);
      return false;
    }
  } else if (tsIsIdentifier() || match(TokenType._this)) {
    // This is a regular identifier, which may or may not have "is" after it.
    next();
    if (isContextual(ContextualKeyword._is) && !hasPrecedingLineBreak()) {
      next();
      tsParseType();
      return true;
    } else {
      // Regular type, so bail out and start type parsing from scratch.
      state.restoreFromSnapshot(snapshot);
      return false;
    }
  }
  return false;
}

function tsParseTypeAnnotation() {
  const oldIsType = pushTypeContext(0);
  expect(TokenType.colon);
  tsParseType();
  popTypeContext(oldIsType);
}

function tsParseType() {
  tsParseNonConditionalType();
  if (state.inDisallowConditionalTypesContext || hasPrecedingLineBreak() || !eat(TokenType._extends)) {
    return;
  }
  // extends type
  const oldInDisallowConditionalTypesContext = state.inDisallowConditionalTypesContext;
  state.inDisallowConditionalTypesContext = true;
  tsParseNonConditionalType();
  state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;

  expect(TokenType.question);
  // true type
  tsParseType();
  expect(TokenType.colon);
  // false type
  tsParseType();
}

function isAbstractConstructorSignature() {
  return isContextual(ContextualKeyword._abstract) && lookaheadType() === TokenType._new;
}

function tsParseNonConditionalType() {
  if (tsIsStartOfFunctionType()) {
    tsParseFunctionOrConstructorType(FunctionType.TSFunctionType);
    return;
  }
  if (match(TokenType._new)) {
    // As in `new () => Date`
    tsParseFunctionOrConstructorType(FunctionType.TSConstructorType);
    return;
  } else if (isAbstractConstructorSignature()) {
    // As in `abstract new () => Date`
    tsParseFunctionOrConstructorType(FunctionType.TSAbstractConstructorType);
    return;
  }
  tsParseUnionTypeOrHigher();
}

function tsParseTypeAssertion() {
  const oldIsType = pushTypeContext(1);
  tsParseType();
  expect(TokenType.greaterThan);
  popTypeContext(oldIsType);
  parseMaybeUnary();
}

function tsTryParseJSXTypeArgument() {
  if (eat(TokenType.jsxTagStart)) {
    state.tokens[state.tokens.length - 1].type = TokenType.typeParameterStart;
    const oldIsType = pushTypeContext(1);
    while (!match(TokenType.greaterThan) && !state.error) {
      tsParseType();
      eat(TokenType.comma);
    }
    // Process >, but the one after needs to be parsed JSX-style.
    nextJSXTagToken();
    popTypeContext(oldIsType);
  }
}

function tsParseHeritageClause() {
  while (!match(TokenType.braceL) && !state.error) {
    tsParseExpressionWithTypeArguments();
    eat(TokenType.comma);
  }
}

function tsParseExpressionWithTypeArguments() {
  // Note: TS uses parseLeftHandSideExpressionOrHigher,
  // then has grammar errors later if it's not an EntityName.
  tsParseEntityName();
  if (match(TokenType.lessThan)) {
    tsParseTypeArguments();
  }
}

function tsParseInterfaceDeclaration() {
  parseBindingIdentifier(false);
  tsTryParseTypeParameters();
  if (eat(TokenType._extends)) {
    tsParseHeritageClause();
  }
  tsParseObjectTypeMembers();
}

function tsParseTypeAliasDeclaration() {
  parseBindingIdentifier(false);
  tsTryParseTypeParameters();
  expect(TokenType.eq);
  tsParseType();
  semicolon$1();
}

function tsParseEnumMember() {
  // Computed property names are grammar errors in an enum, so accept just string literal or identifier.
  if (match(TokenType.string)) {
    parseLiteral();
  } else {
    parseIdentifier();
  }
  if (eat(TokenType.eq)) {
    const eqIndex = state.tokens.length - 1;
    parseMaybeAssign();
    state.tokens[eqIndex].rhsEndIndex = state.tokens.length;
  }
}

function tsParseEnumDeclaration() {
  parseBindingIdentifier(false);
  expect(TokenType.braceL);
  while (!eat(TokenType.braceR) && !state.error) {
    tsParseEnumMember();
    eat(TokenType.comma);
  }
}

function tsParseModuleBlock() {
  expect(TokenType.braceL);
  parseBlockBody(/* end */ TokenType.braceR);
}

function tsParseModuleOrNamespaceDeclaration() {
  parseBindingIdentifier(false);
  if (eat(TokenType.dot)) {
    tsParseModuleOrNamespaceDeclaration();
  } else {
    tsParseModuleBlock();
  }
}

function tsParseAmbientExternalModuleDeclaration() {
  if (isContextual(ContextualKeyword._global)) {
    parseIdentifier();
  } else if (match(TokenType.string)) {
    parseExprAtom();
  } else {
    unexpected();
  }

  if (match(TokenType.braceL)) {
    tsParseModuleBlock();
  } else {
    semicolon$1();
  }
}

function tsParseImportEqualsDeclaration() {
  parseImportedIdentifier();
  expect(TokenType.eq);
  tsParseModuleReference();
  semicolon$1();
}

function tsIsExternalModuleReference() {
  return isContextual(ContextualKeyword._require) && lookaheadType() === TokenType.parenL;
}

function tsParseModuleReference() {
  if (tsIsExternalModuleReference()) {
    tsParseExternalModuleReference();
  } else {
    tsParseEntityName();
  }
}

function tsParseExternalModuleReference() {
  expectContextual(ContextualKeyword._require);
  expect(TokenType.parenL);
  if (!match(TokenType.string)) {
    unexpected();
  }
  parseLiteral();
  expect(TokenType.parenR);
}

// Utilities

// Returns true if a statement matched.
function tsTryParseDeclare() {
  if (isLineTerminator()) {
    return false;
  }
  switch (state.type) {
    case TokenType._function: {
      const oldIsType = pushTypeContext(1);
      next();
      // We don't need to precisely get the function start here, since it's only used to mark
      // the function as a type if it's bodiless, and it's already a type here.
      const functionStart = state.start;
      parseFunction(functionStart, /* isStatement */ true);
      popTypeContext(oldIsType);
      return true;
    }
    case TokenType._class: {
      const oldIsType = pushTypeContext(1);
      parseClass(/* isStatement */ true, /* optionalId */ false);
      popTypeContext(oldIsType);
      return true;
    }
    case TokenType._const: {
      if (match(TokenType._const) && isLookaheadContextual(ContextualKeyword._enum)) {
        const oldIsType = pushTypeContext(1);
        // `const enum = 0;` not allowed because "enum" is a strict mode reserved word.
        expect(TokenType._const);
        expectContextual(ContextualKeyword._enum);
        state.tokens[state.tokens.length - 1].type = TokenType._enum;
        tsParseEnumDeclaration();
        popTypeContext(oldIsType);
        return true;
      }
    }
    // falls through
    case TokenType._var:
    case TokenType._let: {
      const oldIsType = pushTypeContext(1);
      parseVarStatement(state.type !== TokenType._var);
      popTypeContext(oldIsType);
      return true;
    }
    case TokenType.name: {
      const oldIsType = pushTypeContext(1);
      const contextualKeyword = state.contextualKeyword;
      let matched = false;
      if (contextualKeyword === ContextualKeyword._global) {
        tsParseAmbientExternalModuleDeclaration();
        matched = true;
      } else {
        matched = tsParseDeclaration(contextualKeyword, /* isBeforeToken */ true);
      }
      popTypeContext(oldIsType);
      return matched;
    }
    default:
      return false;
  }
}

// Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.
// Returns true if it matched a declaration.
function tsTryParseExportDeclaration() {
  return tsParseDeclaration(state.contextualKeyword, /* isBeforeToken */ true);
}

// Returns true if it matched a statement.
function tsParseExpressionStatement(contextualKeyword) {
  switch (contextualKeyword) {
    case ContextualKeyword._declare: {
      const declareTokenIndex = state.tokens.length - 1;
      const matched = tsTryParseDeclare();
      if (matched) {
        state.tokens[declareTokenIndex].type = TokenType._declare;
        return true;
      }
      break;
    }
    case ContextualKeyword._global:
      // `global { }` (with no `declare`) may appear inside an ambient module declaration.
      // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past "global".
      if (match(TokenType.braceL)) {
        tsParseModuleBlock();
        return true;
      }
      break;

    default:
      return tsParseDeclaration(contextualKeyword, /* isBeforeToken */ false);
  }
  return false;
}

/**
 * Common code for parsing a declaration.
 *
 * isBeforeToken indicates that the current parser state is at the contextual
 * keyword (and that it is not yet emitted) rather than reading the token after
 * it. When isBeforeToken is true, we may be preceded by an `export` token and
 * should include that token in a type context we create, e.g. to handle
 * `export interface` or `export type`. (This is a bit of a hack and should be
 * cleaned up at some point.)
 *
 * Returns true if it matched a declaration.
 */
function tsParseDeclaration(contextualKeyword, isBeforeToken) {
  switch (contextualKeyword) {
    case ContextualKeyword._abstract:
      if (tsCheckLineTerminator(isBeforeToken) && match(TokenType._class)) {
        state.tokens[state.tokens.length - 1].type = TokenType._abstract;
        parseClass(/* isStatement */ true, /* optionalId */ false);
        return true;
      }
      break;

    case ContextualKeyword._enum:
      if (tsCheckLineTerminator(isBeforeToken) && match(TokenType.name)) {
        state.tokens[state.tokens.length - 1].type = TokenType._enum;
        tsParseEnumDeclaration();
        return true;
      }
      break;

    case ContextualKeyword._interface:
      if (tsCheckLineTerminator(isBeforeToken) && match(TokenType.name)) {
        // `next` is true in "export" and "declare" contexts, so we want to remove that token
        // as well.
        const oldIsType = pushTypeContext(isBeforeToken ? 2 : 1);
        tsParseInterfaceDeclaration();
        popTypeContext(oldIsType);
        return true;
      }
      break;

    case ContextualKeyword._module:
      if (tsCheckLineTerminator(isBeforeToken)) {
        if (match(TokenType.string)) {
          const oldIsType = pushTypeContext(isBeforeToken ? 2 : 1);
          tsParseAmbientExternalModuleDeclaration();
          popTypeContext(oldIsType);
          return true;
        } else if (match(TokenType.name)) {
          const oldIsType = pushTypeContext(isBeforeToken ? 2 : 1);
          tsParseModuleOrNamespaceDeclaration();
          popTypeContext(oldIsType);
          return true;
        }
      }
      break;

    case ContextualKeyword._namespace:
      if (tsCheckLineTerminator(isBeforeToken) && match(TokenType.name)) {
        const oldIsType = pushTypeContext(isBeforeToken ? 2 : 1);
        tsParseModuleOrNamespaceDeclaration();
        popTypeContext(oldIsType);
        return true;
      }
      break;

    case ContextualKeyword._type:
      if (tsCheckLineTerminator(isBeforeToken) && match(TokenType.name)) {
        const oldIsType = pushTypeContext(isBeforeToken ? 2 : 1);
        tsParseTypeAliasDeclaration();
        popTypeContext(oldIsType);
        return true;
      }
      break;
  }
  return false;
}

function tsCheckLineTerminator(isBeforeToken) {
  if (isBeforeToken) {
    // Babel checks hasFollowingLineBreak here and returns false, but this
    // doesn't actually come up, e.g. `export interface` can never be on its own
    // line in valid code.
    next();
    return true;
  } else {
    return !isLineTerminator();
  }
}

// Returns true if there was a generic async arrow function.
function tsTryParseGenericAsyncArrowFunction() {
  const snapshot = state.snapshot();

  tsParseTypeParameters();
  parseFunctionParams();
  tsTryParseTypeOrTypePredicateAnnotation();
  expect(TokenType.arrow);

  if (state.error) {
    state.restoreFromSnapshot(snapshot);
    return false;
  }

  parseFunctionBody(true);
  return true;
}

/**
 * If necessary, hack the tokenizer state so that this bitshift was actually a
 * less-than token, then keep parsing. This should only be used in situations
 * where we restore from snapshot on error (which reverts this change) or
 * where bitshift would be illegal anyway (e.g. in a class "extends" clause).
 *
 * This hack is useful to handle situations like foo<<T>() => void>() where
 * there can legitimately be two open-angle-brackets in a row in TS.
 */
function tsParseTypeArgumentsWithPossibleBitshift() {
  if (state.type === TokenType.bitShiftL) {
    state.pos -= 1;
    finishToken(TokenType.lessThan);
  }
  tsParseTypeArguments();
}

function tsParseTypeArguments() {
  const oldIsType = pushTypeContext(0);
  expect(TokenType.lessThan);
  while (!match(TokenType.greaterThan) && !state.error) {
    tsParseType();
    eat(TokenType.comma);
  }
  if (!oldIsType) {
    // If the type arguments are present in an expression context, e.g.
    // f<number>(), then the > sign should be tokenized as a non-type token.
    // In particular, f(a < b, c >= d) should parse the >= as a single token,
    // resulting in a syntax error and fallback to the non-type-args
    // interpretation. In the success case, even though the > is tokenized as a
    // non-type token, it still must be marked as a type token so that it is
    // erased.
    popTypeContext(oldIsType);
    rescan_gt();
    expect(TokenType.greaterThan);
    state.tokens[state.tokens.length - 1].isType = true;
  } else {
    expect(TokenType.greaterThan);
    popTypeContext(oldIsType);
  }
}

function tsIsDeclarationStart() {
  if (match(TokenType.name)) {
    switch (state.contextualKeyword) {
      case ContextualKeyword._abstract:
      case ContextualKeyword._declare:
      case ContextualKeyword._enum:
      case ContextualKeyword._interface:
      case ContextualKeyword._module:
      case ContextualKeyword._namespace:
      case ContextualKeyword._type:
        return true;
    }
  }

  return false;
}

// ======================================================
// OVERRIDES
// ======================================================

function tsParseFunctionBodyAndFinish(functionStart, funcContextId) {
  // For arrow functions, `parseArrow` handles the return type itself.
  if (match(TokenType.colon)) {
    tsParseTypeOrTypePredicateAnnotation(TokenType.colon);
  }

  // The original code checked the node type to make sure this function type allows a missing
  // body, but we skip that to avoid sending around the node type. We instead just use the
  // allowExpressionBody boolean to make sure it's not an arrow function.
  if (!match(TokenType.braceL) && isLineTerminator()) {
    // Retroactively mark the function declaration as a type.
    let i = state.tokens.length - 1;
    while (
      i >= 0 &&
      (state.tokens[i].start >= functionStart ||
        state.tokens[i].type === TokenType._default ||
        state.tokens[i].type === TokenType._export)
    ) {
      state.tokens[i].isType = true;
      i--;
    }
    return;
  }

  parseFunctionBody(false, funcContextId);
}

function tsParseSubscript(
  startTokenIndex,
  noCalls,
  stopState,
) {
  if (!hasPrecedingLineBreak() && eat(TokenType.bang)) {
    state.tokens[state.tokens.length - 1].type = TokenType.nonNullAssertion;
    return;
  }

  if (match(TokenType.lessThan) || match(TokenType.bitShiftL)) {
    // There are number of things we are going to "maybe" parse, like type arguments on
    // tagged template expressions. If any of them fail, walk it back and continue.
    const snapshot = state.snapshot();

    if (!noCalls && atPossibleAsync()) {
      // Almost certainly this is a generic async function `async <T>() => ...
      // But it might be a call with a type argument `async<T>();`
      const asyncArrowFn = tsTryParseGenericAsyncArrowFunction();
      if (asyncArrowFn) {
        return;
      }
    }
    tsParseTypeArgumentsWithPossibleBitshift();
    if (!noCalls && eat(TokenType.parenL)) {
      // With f<T>(), the subscriptStartIndex marker is on the ( token.
      state.tokens[state.tokens.length - 1].subscriptStartIndex = startTokenIndex;
      parseCallExpressionArguments();
    } else if (match(TokenType.backQuote)) {
      // Tagged template with a type argument.
      parseTemplate();
    } else if (
      // The remaining possible case is an instantiation expression, e.g.
      // Array<number> . Check for a few cases that would disqualify it and
      // cause us to bail out.
      // a<b>>c is not (a<b>)>c, but a<(b>>c)
      state.type === TokenType.greaterThan ||
      // a<b>c is (a<b)>c
      (state.type !== TokenType.parenL &&
        Boolean(state.type & TokenType.IS_EXPRESSION_START) &&
        !hasPrecedingLineBreak())
    ) {
      // Bail out. We have something like a<b>c, which is not an expression with
      // type arguments but an (a < b) > c comparison.
      unexpected();
    }

    if (state.error) {
      state.restoreFromSnapshot(snapshot);
    } else {
      return;
    }
  } else if (!noCalls && match(TokenType.questionDot) && lookaheadType() === TokenType.lessThan) {
    // If we see f?.<, then this must be an optional call with a type argument.
    next();
    state.tokens[startTokenIndex].isOptionalChainStart = true;
    // With f?.<T>(), the subscriptStartIndex marker is on the ?. token.
    state.tokens[state.tokens.length - 1].subscriptStartIndex = startTokenIndex;

    tsParseTypeArguments();
    expect(TokenType.parenL);
    parseCallExpressionArguments();
  }
  baseParseSubscript(startTokenIndex, noCalls, stopState);
}

function tsTryParseExport() {
  if (eat(TokenType._import)) {
    // One of these cases:
    // export import A = B;
    // export import type A = require("A");
    if (isContextual(ContextualKeyword._type) && lookaheadType() !== TokenType.eq) {
      // Eat a `type` token, unless it's actually an identifier name.
      expectContextual(ContextualKeyword._type);
    }
    tsParseImportEqualsDeclaration();
    return true;
  } else if (eat(TokenType.eq)) {
    // `export = x;`
    parseExpression();
    semicolon$1();
    return true;
  } else if (eatContextual(ContextualKeyword._as)) {
    // `export as namespace A;`
    // See `parseNamespaceExportDeclaration` in TypeScript's own parser
    expectContextual(ContextualKeyword._namespace);
    parseIdentifier();
    semicolon$1();
    return true;
  } else {
    if (isContextual(ContextualKeyword._type)) {
      const nextType = lookaheadType();
      // export type {foo} from 'a';
      // export type * from 'a';'
      // export type * as ns from 'a';'
      if (nextType === TokenType.braceL || nextType === TokenType.star) {
        next();
      }
    }
    return false;
  }
}

/**
 * Parse a TS import specifier, which may be prefixed with "type" and may be of
 * the form `foo as bar`.
 *
 * The number of identifier-like tokens we see happens to be enough to uniquely
 * identify the form, so simply count the number of identifiers rather than
 * matching the words `type` or `as`. This is particularly important because
 * `type` and `as` could each actually be plain identifiers rather than
 * keywords.
 */
function tsParseImportSpecifier() {
  parseIdentifier();
  if (match(TokenType.comma) || match(TokenType.braceR)) {
    // import {foo}
    state.tokens[state.tokens.length - 1].identifierRole = IdentifierRole.ImportDeclaration;
    return;
  }
  parseIdentifier();
  if (match(TokenType.comma) || match(TokenType.braceR)) {
    // import {type foo}
    state.tokens[state.tokens.length - 1].identifierRole = IdentifierRole.ImportDeclaration;
    state.tokens[state.tokens.length - 2].isType = true;
    state.tokens[state.tokens.length - 1].isType = true;
    return;
  }
  parseIdentifier();
  if (match(TokenType.comma) || match(TokenType.braceR)) {
    // import {foo as bar}
    state.tokens[state.tokens.length - 3].identifierRole = IdentifierRole.ImportAccess;
    state.tokens[state.tokens.length - 1].identifierRole = IdentifierRole.ImportDeclaration;
    return;
  }
  parseIdentifier();
  // import {type foo as bar}
  state.tokens[state.tokens.length - 3].identifierRole = IdentifierRole.ImportAccess;
  state.tokens[state.tokens.length - 1].identifierRole = IdentifierRole.ImportDeclaration;
  state.tokens[state.tokens.length - 4].isType = true;
  state.tokens[state.tokens.length - 3].isType = true;
  state.tokens[state.tokens.length - 2].isType = true;
  state.tokens[state.tokens.length - 1].isType = true;
}

/**
 * Just like named import specifiers, export specifiers can have from 1 to 4
 * tokens, inclusive, and the number of tokens determines the role of each token.
 */
function tsParseExportSpecifier() {
  parseIdentifier();
  if (match(TokenType.comma) || match(TokenType.braceR)) {
    // export {foo}
    state.tokens[state.tokens.length - 1].identifierRole = IdentifierRole.ExportAccess;
    return;
  }
  parseIdentifier();
  if (match(TokenType.comma) || match(TokenType.braceR)) {
    // export {type foo}
    state.tokens[state.tokens.length - 1].identifierRole = IdentifierRole.ExportAccess;
    state.tokens[state.tokens.length - 2].isType = true;
    state.tokens[state.tokens.length - 1].isType = true;
    return;
  }
  parseIdentifier();
  if (match(TokenType.comma) || match(TokenType.braceR)) {
    // export {foo as bar}
    state.tokens[state.tokens.length - 3].identifierRole = IdentifierRole.ExportAccess;
    return;
  }
  parseIdentifier();
  // export {type foo as bar}
  state.tokens[state.tokens.length - 3].identifierRole = IdentifierRole.ExportAccess;
  state.tokens[state.tokens.length - 4].isType = true;
  state.tokens[state.tokens.length - 3].isType = true;
  state.tokens[state.tokens.length - 2].isType = true;
  state.tokens[state.tokens.length - 1].isType = true;
}

function tsTryParseExportDefaultExpression() {
  if (isContextual(ContextualKeyword._abstract) && lookaheadType() === TokenType._class) {
    state.type = TokenType._abstract;
    next(); // Skip "abstract"
    parseClass(true, true);
    return true;
  }
  if (isContextual(ContextualKeyword._interface)) {
    // Make sure "export default" are considered type tokens so the whole thing is removed.
    const oldIsType = pushTypeContext(2);
    tsParseDeclaration(ContextualKeyword._interface, true);
    popTypeContext(oldIsType);
    return true;
  }
  return false;
}

function tsTryParseStatementContent() {
  if (state.type === TokenType._const) {
    const ahead = lookaheadTypeAndKeyword();
    if (ahead.type === TokenType.name && ahead.contextualKeyword === ContextualKeyword._enum) {
      expect(TokenType._const);
      expectContextual(ContextualKeyword._enum);
      state.tokens[state.tokens.length - 1].type = TokenType._enum;
      tsParseEnumDeclaration();
      return true;
    }
  }
  return false;
}

function tsTryParseClassMemberWithIsStatic(isStatic) {
  const memberStartIndexAfterStatic = state.tokens.length;
  tsParseModifiers([
    ContextualKeyword._abstract,
    ContextualKeyword._readonly,
    ContextualKeyword._declare,
    ContextualKeyword._static,
    ContextualKeyword._override,
  ]);

  const modifiersEndIndex = state.tokens.length;
  const found = tsTryParseIndexSignature();
  if (found) {
    // Index signatures are type declarations, so set the modifier tokens as
    // type tokens. Most tokens could be assumed to be type tokens, but `static`
    // is ambiguous unless we set it explicitly here.
    const memberStartIndex = isStatic
      ? memberStartIndexAfterStatic - 1
      : memberStartIndexAfterStatic;
    for (let i = memberStartIndex; i < modifiersEndIndex; i++) {
      state.tokens[i].isType = true;
    }
    return true;
  }
  return false;
}

// Note: The reason we do this in `parseIdentifierStatement` and not `parseStatement`
// is that e.g. `type()` is valid JS, so we must try parsing that first.
// If it's really a type, we will parse `type` as the statement, and can correct it here
// by parsing the rest.
function tsParseIdentifierStatement(contextualKeyword) {
  const matched = tsParseExpressionStatement(contextualKeyword);
  if (!matched) {
    semicolon$1();
  }
}

function tsParseExportDeclaration() {
  // "export declare" is equivalent to just "export".
  const isDeclare = eatContextual(ContextualKeyword._declare);
  if (isDeclare) {
    state.tokens[state.tokens.length - 1].type = TokenType._declare;
  }

  let matchedDeclaration = false;
  if (match(TokenType.name)) {
    if (isDeclare) {
      const oldIsType = pushTypeContext(2);
      matchedDeclaration = tsTryParseExportDeclaration();
      popTypeContext(oldIsType);
    } else {
      matchedDeclaration = tsTryParseExportDeclaration();
    }
  }
  if (!matchedDeclaration) {
    if (isDeclare) {
      const oldIsType = pushTypeContext(2);
      parseStatement(true);
      popTypeContext(oldIsType);
    } else {
      parseStatement(true);
    }
  }
}

function tsAfterParseClassSuper(hasSuper) {
  if (hasSuper && (match(TokenType.lessThan) || match(TokenType.bitShiftL))) {
    tsParseTypeArgumentsWithPossibleBitshift();
  }
  if (eatContextual(ContextualKeyword._implements)) {
    state.tokens[state.tokens.length - 1].type = TokenType._implements;
    const oldIsType = pushTypeContext(1);
    tsParseHeritageClause();
    popTypeContext(oldIsType);
  }
}

function tsStartParseObjPropValue() {
  tsTryParseTypeParameters();
}

function tsStartParseFunctionParams() {
  tsTryParseTypeParameters();
}

// `let x: number;`
function tsAfterParseVarHead() {
  const oldIsType = pushTypeContext(0);
  if (!hasPrecedingLineBreak()) {
    eat(TokenType.bang);
  }
  tsTryParseTypeAnnotation();
  popTypeContext(oldIsType);
}

// parse the return type of an async arrow function - let foo = (async (): number => {});
function tsStartParseAsyncArrowFromCallExpression() {
  if (match(TokenType.colon)) {
    tsParseTypeAnnotation();
  }
}

// Returns true if the expression was an arrow function.
function tsParseMaybeAssign(noIn, isWithinParens) {
  // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.
  if (isJSXEnabled) {
    return tsParseMaybeAssignWithJSX(noIn, isWithinParens);
  } else {
    return tsParseMaybeAssignWithoutJSX(noIn, isWithinParens);
  }
}

function tsParseMaybeAssignWithJSX(noIn, isWithinParens) {
  if (!match(TokenType.lessThan)) {
    return baseParseMaybeAssign(noIn, isWithinParens);
  }

  // Prefer to parse JSX if possible. But may be an arrow fn.
  const snapshot = state.snapshot();
  let wasArrow = baseParseMaybeAssign(noIn, isWithinParens);
  if (state.error) {
    state.restoreFromSnapshot(snapshot);
  } else {
    return wasArrow;
  }

  // Otherwise, try as type-parameterized arrow function.
  state.type = TokenType.typeParameterStart;
  // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.
  tsParseTypeParameters();
  wasArrow = baseParseMaybeAssign(noIn, isWithinParens);
  if (!wasArrow) {
    unexpected();
  }

  return wasArrow;
}

function tsParseMaybeAssignWithoutJSX(noIn, isWithinParens) {
  if (!match(TokenType.lessThan)) {
    return baseParseMaybeAssign(noIn, isWithinParens);
  }

  const snapshot = state.snapshot();
  // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.
  tsParseTypeParameters();
  const wasArrow = baseParseMaybeAssign(noIn, isWithinParens);
  if (!wasArrow) {
    unexpected();
  }
  if (state.error) {
    state.restoreFromSnapshot(snapshot);
  } else {
    return wasArrow;
  }

  // Try parsing a type cast instead of an arrow function.
  // This will start with a type assertion (via parseMaybeUnary).
  // But don't directly call `tsParseTypeAssertion` because we want to handle any binary after it.
  return baseParseMaybeAssign(noIn, isWithinParens);
}

function tsParseArrow() {
  if (match(TokenType.colon)) {
    // This is different from how the TS parser does it.
    // TS uses lookahead. Babylon parses it as a parenthesized expression and converts.
    const snapshot = state.snapshot();

    tsParseTypeOrTypePredicateAnnotation(TokenType.colon);
    if (canInsertSemicolon()) unexpected();
    if (!match(TokenType.arrow)) unexpected();

    if (state.error) {
      state.restoreFromSnapshot(snapshot);
    }
  }
  return eat(TokenType.arrow);
}

// Allow type annotations inside of a parameter list.
function tsParseAssignableListItemTypes() {
  const oldIsType = pushTypeContext(0);
  eat(TokenType.question);
  tsTryParseTypeAnnotation();
  popTypeContext(oldIsType);
}

function tsParseMaybeDecoratorArguments() {
  if (match(TokenType.lessThan) || match(TokenType.bitShiftL)) {
    tsParseTypeArgumentsWithPossibleBitshift();
  }
  baseParseMaybeDecoratorArguments();
}

/**
 * Read token with JSX contents.
 *
 * In addition to detecting jsxTagStart and also regular tokens that might be
 * part of an expression, this code detects the start and end of text ranges
 * within JSX children. In order to properly count the number of children, we
 * distinguish jsxText from jsxEmptyText, which is a text range that simplifies
 * to the empty string after JSX whitespace trimming.
 *
 * It turns out that a JSX text range will simplify to the empty string if and
 * only if both of these conditions hold:
 * - The range consists entirely of whitespace characters (only counting space,
 *   tab, \r, and \n).
 * - The range has at least one newline.
 * This can be proven by analyzing any implementation of whitespace trimming,
 * e.g. formatJSXTextLiteral in Sucrase or cleanJSXElementLiteralChild in Babel.
 */
function jsxReadToken() {
  let sawNewline = false;
  let sawNonWhitespace = false;
  while (true) {
    if (state.pos >= input.length) {
      unexpected("Unterminated JSX contents");
      return;
    }

    const ch = input.charCodeAt(state.pos);
    if (ch === charCodes.lessThan || ch === charCodes.leftCurlyBrace) {
      if (state.pos === state.start) {
        if (ch === charCodes.lessThan) {
          state.pos++;
          finishToken(TokenType.jsxTagStart);
          return;
        }
        getTokenFromCode(ch);
        return;
      }
      if (sawNewline && !sawNonWhitespace) {
        finishToken(TokenType.jsxEmptyText);
      } else {
        finishToken(TokenType.jsxText);
      }
      return;
    }

    // This is part of JSX text.
    if (ch === charCodes.lineFeed) {
      sawNewline = true;
    } else if (ch !== charCodes.space && ch !== charCodes.carriageReturn && ch !== charCodes.tab) {
      sawNonWhitespace = true;
    }
    state.pos++;
  }
}

function jsxReadString(quote) {
  state.pos++;
  for (;;) {
    if (state.pos >= input.length) {
      unexpected("Unterminated string constant");
      return;
    }

    const ch = input.charCodeAt(state.pos);
    if (ch === quote) {
      state.pos++;
      break;
    }
    state.pos++;
  }
  finishToken(TokenType.string);
}

// Read a JSX identifier (valid tag or attribute name).
//
// Optimized version since JSX identifiers can't contain
// escape characters and so can be read as single slice.
// Also assumes that first character was already checked
// by isIdentifierStart in readToken.

function jsxReadWord() {
  let ch;
  do {
    if (state.pos > input.length) {
      unexpected("Unexpectedly reached the end of input.");
      return;
    }
    ch = input.charCodeAt(++state.pos);
  } while (IS_IDENTIFIER_CHAR[ch] || ch === charCodes.dash);
  finishToken(TokenType.jsxName);
}

// Parse next token as JSX identifier
function jsxParseIdentifier() {
  nextJSXTagToken();
}

// Parse namespaced identifier.
function jsxParseNamespacedName(identifierRole) {
  jsxParseIdentifier();
  if (!eat(TokenType.colon)) {
    // Plain identifier, so this is an access.
    state.tokens[state.tokens.length - 1].identifierRole = identifierRole;
    return;
  }
  // Process the second half of the namespaced name.
  jsxParseIdentifier();
}

// Parses element name in any form - namespaced, member
// or single identifier.
function jsxParseElementName() {
  const firstTokenIndex = state.tokens.length;
  jsxParseNamespacedName(IdentifierRole.Access);
  let hadDot = false;
  while (match(TokenType.dot)) {
    hadDot = true;
    nextJSXTagToken();
    jsxParseIdentifier();
  }
  // For tags like <div> with a lowercase letter and no dots, the name is
  // actually *not* an identifier access, since it's referring to a built-in
  // tag name. Remove the identifier role in this case so that it's not
  // accidentally transformed by the imports transform when preserving JSX.
  if (!hadDot) {
    const firstToken = state.tokens[firstTokenIndex];
    const firstChar = input.charCodeAt(firstToken.start);
    if (firstChar >= charCodes.lowercaseA && firstChar <= charCodes.lowercaseZ) {
      firstToken.identifierRole = null;
    }
  }
}

// Parses any type of JSX attribute value.
function jsxParseAttributeValue() {
  switch (state.type) {
    case TokenType.braceL:
      next();
      parseExpression();
      nextJSXTagToken();
      return;

    case TokenType.jsxTagStart:
      jsxParseElement();
      nextJSXTagToken();
      return;

    case TokenType.string:
      nextJSXTagToken();
      return;

    default:
      unexpected("JSX value should be either an expression or a quoted JSX text");
  }
}

// Parse JSX spread child, after already processing the {
// Does not parse the closing }
function jsxParseSpreadChild() {
  expect(TokenType.ellipsis);
  parseExpression();
}

// Parses JSX opening tag starting after "<".
// Returns true if the tag was self-closing.
// Does not parse the last token.
function jsxParseOpeningElement(initialTokenIndex) {
  if (match(TokenType.jsxTagEnd)) {
    // This is an open-fragment.
    return false;
  }
  jsxParseElementName();
  if (isTypeScriptEnabled) {
    tsTryParseJSXTypeArgument();
  }
  let hasSeenPropSpread = false;
  while (!match(TokenType.slash) && !match(TokenType.jsxTagEnd) && !state.error) {
    if (eat(TokenType.braceL)) {
      hasSeenPropSpread = true;
      expect(TokenType.ellipsis);
      parseMaybeAssign();
      // }
      nextJSXTagToken();
      continue;
    }
    if (
      hasSeenPropSpread &&
      state.end - state.start === 3 &&
      input.charCodeAt(state.start) === charCodes.lowercaseK &&
      input.charCodeAt(state.start + 1) === charCodes.lowercaseE &&
      input.charCodeAt(state.start + 2) === charCodes.lowercaseY
    ) {
      state.tokens[initialTokenIndex].jsxRole = JSXRole.KeyAfterPropSpread;
    }
    jsxParseNamespacedName(IdentifierRole.ObjectKey);
    if (match(TokenType.eq)) {
      nextJSXTagToken();
      jsxParseAttributeValue();
    }
  }
  const isSelfClosing = match(TokenType.slash);
  if (isSelfClosing) {
    // /
    nextJSXTagToken();
  }
  return isSelfClosing;
}

// Parses JSX closing tag starting after "</".
// Does not parse the last token.
function jsxParseClosingElement() {
  if (match(TokenType.jsxTagEnd)) {
    // Fragment syntax, so we immediately have a tag end.
    return;
  }
  jsxParseElementName();
}

// Parses entire JSX element, including its opening tag
// (starting after "<"), attributes, contents and closing tag.
// Does not parse the last token.
function jsxParseElementAt() {
  const initialTokenIndex = state.tokens.length - 1;
  state.tokens[initialTokenIndex].jsxRole = JSXRole.NoChildren;
  let numExplicitChildren = 0;
  const isSelfClosing = jsxParseOpeningElement(initialTokenIndex);
  if (!isSelfClosing) {
    nextJSXExprToken();
    while (true) {
      switch (state.type) {
        case TokenType.jsxTagStart:
          nextJSXTagToken();
          if (match(TokenType.slash)) {
            nextJSXTagToken();
            jsxParseClosingElement();
            // Key after prop spread takes precedence over number of children,
            // since it means we switch to createElement, which doesn't care
            // about number of children.
            if (state.tokens[initialTokenIndex].jsxRole !== JSXRole.KeyAfterPropSpread) {
              if (numExplicitChildren === 1) {
                state.tokens[initialTokenIndex].jsxRole = JSXRole.OneChild;
              } else if (numExplicitChildren > 1) {
                state.tokens[initialTokenIndex].jsxRole = JSXRole.StaticChildren;
              }
            }
            return;
          }
          numExplicitChildren++;
          jsxParseElementAt();
          nextJSXExprToken();
          break;

        case TokenType.jsxText:
          numExplicitChildren++;
          nextJSXExprToken();
          break;

        case TokenType.jsxEmptyText:
          nextJSXExprToken();
          break;

        case TokenType.braceL:
          next();
          if (match(TokenType.ellipsis)) {
            jsxParseSpreadChild();
            nextJSXExprToken();
            // Spread children are a mechanism to explicitly mark children as
            // static, so count it as 2 children to satisfy the "more than one
            // child" condition.
            numExplicitChildren += 2;
          } else {
            // If we see {}, this is an empty pseudo-expression that doesn't
            // count as a child.
            if (!match(TokenType.braceR)) {
              numExplicitChildren++;
              parseExpression();
            }
            nextJSXExprToken();
          }

          break;

        // istanbul ignore next - should never happen
        default:
          unexpected();
          return;
      }
    }
  }
}

// Parses entire JSX element from current position.
// Does not parse the last token.
function jsxParseElement() {
  nextJSXTagToken();
  jsxParseElementAt();
}

// ==================================
// Overrides
// ==================================

function nextJSXTagToken() {
  state.tokens.push(new Token());
  skipSpace();
  state.start = state.pos;
  const code = input.charCodeAt(state.pos);

  if (IS_IDENTIFIER_START[code]) {
    jsxReadWord();
  } else if (code === charCodes.quotationMark || code === charCodes.apostrophe) {
    jsxReadString(code);
  } else {
    // The following tokens are just one character each.
    ++state.pos;
    switch (code) {
      case charCodes.greaterThan:
        finishToken(TokenType.jsxTagEnd);
        break;
      case charCodes.lessThan:
        finishToken(TokenType.jsxTagStart);
        break;
      case charCodes.slash:
        finishToken(TokenType.slash);
        break;
      case charCodes.equalsTo:
        finishToken(TokenType.eq);
        break;
      case charCodes.leftCurlyBrace:
        finishToken(TokenType.braceL);
        break;
      case charCodes.dot:
        finishToken(TokenType.dot);
        break;
      case charCodes.colon:
        finishToken(TokenType.colon);
        break;
      default:
        unexpected();
    }
  }
}

function nextJSXExprToken() {
  state.tokens.push(new Token());
  state.start = state.pos;
  jsxReadToken();
}

/**
 * Common parser code for TypeScript and Flow.
 */

// An apparent conditional expression could actually be an optional parameter in an arrow function.
function typedParseConditional(noIn) {
  // If we see ?:, this can't possibly be a valid conditional. typedParseParenItem will be called
  // later to finish off the arrow parameter. We also need to handle bare ? tokens for optional
  // parameters without type annotations, i.e. ?, and ?) .
  if (match(TokenType.question)) {
    const nextType = lookaheadType();
    if (nextType === TokenType.colon || nextType === TokenType.comma || nextType === TokenType.parenR) {
      return;
    }
  }
  baseParseConditional(noIn);
}

// Note: These "type casts" are *not* valid TS expressions.
// But we parse them here and change them when completing the arrow function.
function typedParseParenItem() {
  eatTypeToken(TokenType.question);
  if (match(TokenType.colon)) {
    if (isTypeScriptEnabled) {
      tsParseTypeAnnotation();
    } else if (isFlowEnabled) {
      flowParseTypeAnnotation();
    }
  }
}

/* eslint max-len: 0 */


class StopState {
  
  constructor(stop) {
    this.stop = stop;
  }
}

// ### Expression parsing

// These nest, from the most general expression type at the top to
// 'atomic', nondivisible expression types at the bottom. Most of
// the functions will simply let the function (s) below them parse,
// and, *if* the syntactic construct they handle is present, wrap
// the AST node that the inner parser gave them in another node.
function parseExpression(noIn = false) {
  parseMaybeAssign(noIn);
  if (match(TokenType.comma)) {
    while (eat(TokenType.comma)) {
      parseMaybeAssign(noIn);
    }
  }
}

/**
 * noIn is used when parsing a for loop so that we don't interpret a following "in" as the binary
 * operatior.
 * isWithinParens is used to indicate that we're parsing something that might be a comma expression
 * or might be an arrow function or might be a Flow type assertion (which requires explicit parens).
 * In these cases, we should allow : and ?: after the initial "left" part.
 */
function parseMaybeAssign(noIn = false, isWithinParens = false) {
  if (isTypeScriptEnabled) {
    return tsParseMaybeAssign(noIn, isWithinParens);
  } else if (isFlowEnabled) {
    return flowParseMaybeAssign(noIn, isWithinParens);
  } else {
    return baseParseMaybeAssign(noIn, isWithinParens);
  }
}

// Parse an assignment expression. This includes applications of
// operators like `+=`.
// Returns true if the expression was an arrow function.
function baseParseMaybeAssign(noIn, isWithinParens) {
  if (match(TokenType._yield)) {
    parseYield();
    return false;
  }

  if (match(TokenType.parenL) || match(TokenType.name) || match(TokenType._yield)) {
    state.potentialArrowAt = state.start;
  }

  const wasArrow = parseMaybeConditional(noIn);
  if (isWithinParens) {
    parseParenItem();
  }
  if (state.type & TokenType.IS_ASSIGN) {
    next();
    parseMaybeAssign(noIn);
    return false;
  }
  return wasArrow;
}

// Parse a ternary conditional (`?:`) operator.
// Returns true if the expression was an arrow function.
function parseMaybeConditional(noIn) {
  const wasArrow = parseExprOps(noIn);
  if (wasArrow) {
    return true;
  }
  parseConditional(noIn);
  return false;
}

function parseConditional(noIn) {
  if (isTypeScriptEnabled || isFlowEnabled) {
    typedParseConditional(noIn);
  } else {
    baseParseConditional(noIn);
  }
}

function baseParseConditional(noIn) {
  if (eat(TokenType.question)) {
    parseMaybeAssign();
    expect(TokenType.colon);
    parseMaybeAssign(noIn);
  }
}

// Start the precedence parser.
// Returns true if this was an arrow function
function parseExprOps(noIn) {
  const startTokenIndex = state.tokens.length;
  const wasArrow = parseMaybeUnary();
  if (wasArrow) {
    return true;
  }
  parseExprOp(startTokenIndex, -1, noIn);
  return false;
}

// Parse binary operators with the operator precedence parsing
// algorithm. `left` is the left-hand side of the operator.
// `minPrec` provides context that allows the function to stop and
// defer further parser to one of its callers when it encounters an
// operator that has a lower precedence than the set it is parsing.
function parseExprOp(startTokenIndex, minPrec, noIn) {
  if (
    isTypeScriptEnabled &&
    (TokenType._in & TokenType.PRECEDENCE_MASK) > minPrec &&
    !hasPrecedingLineBreak() &&
    (eatContextual(ContextualKeyword._as) || eatContextual(ContextualKeyword._satisfies))
  ) {
    const oldIsType = pushTypeContext(1);
    tsParseType();
    popTypeContext(oldIsType);
    rescan_gt();
    parseExprOp(startTokenIndex, minPrec, noIn);
    return;
  }

  const prec = state.type & TokenType.PRECEDENCE_MASK;
  if (prec > 0 && (!noIn || !match(TokenType._in))) {
    if (prec > minPrec) {
      const op = state.type;
      next();
      if (op === TokenType.nullishCoalescing) {
        state.tokens[state.tokens.length - 1].nullishStartIndex = startTokenIndex;
      }

      const rhsStartTokenIndex = state.tokens.length;
      parseMaybeUnary();
      // Extend the right operand of this operator if possible.
      parseExprOp(rhsStartTokenIndex, op & TokenType.IS_RIGHT_ASSOCIATIVE ? prec - 1 : prec, noIn);
      if (op === TokenType.nullishCoalescing) {
        state.tokens[startTokenIndex].numNullishCoalesceStarts++;
        state.tokens[state.tokens.length - 1].numNullishCoalesceEnds++;
      }
      // Continue with any future operator holding this expression as the left operand.
      parseExprOp(startTokenIndex, minPrec, noIn);
    }
  }
}

// Parse unary operators, both prefix and postfix.
// Returns true if this was an arrow function.
function parseMaybeUnary() {
  if (isTypeScriptEnabled && !isJSXEnabled && eat(TokenType.lessThan)) {
    tsParseTypeAssertion();
    return false;
  }
  if (
    isContextual(ContextualKeyword._module) &&
    lookaheadCharCode() === charCodes.leftCurlyBrace &&
    !hasFollowingLineBreak()
  ) {
    parseModuleExpression();
    return false;
  }
  if (state.type & TokenType.IS_PREFIX) {
    next();
    parseMaybeUnary();
    return false;
  }

  const wasArrow = parseExprSubscripts();
  if (wasArrow) {
    return true;
  }
  while (state.type & TokenType.IS_POSTFIX && !canInsertSemicolon()) {
    // The tokenizer calls everything a preincrement, so make it a postincrement when
    // we see it in that context.
    if (state.type === TokenType.preIncDec) {
      state.type = TokenType.postIncDec;
    }
    next();
  }
  return false;
}

// Parse call, dot, and `[]`-subscript expressions.
// Returns true if this was an arrow function.
function parseExprSubscripts() {
  const startTokenIndex = state.tokens.length;
  const wasArrow = parseExprAtom();
  if (wasArrow) {
    return true;
  }
  parseSubscripts(startTokenIndex);
  // If there was any optional chain operation, the start token would be marked
  // as such, so also mark the end now.
  if (state.tokens.length > startTokenIndex && state.tokens[startTokenIndex].isOptionalChainStart) {
    state.tokens[state.tokens.length - 1].isOptionalChainEnd = true;
  }
  return false;
}

function parseSubscripts(startTokenIndex, noCalls = false) {
  if (isFlowEnabled) {
    flowParseSubscripts(startTokenIndex, noCalls);
  } else {
    baseParseSubscripts(startTokenIndex, noCalls);
  }
}

function baseParseSubscripts(startTokenIndex, noCalls = false) {
  const stopState = new StopState(false);
  do {
    parseSubscript(startTokenIndex, noCalls, stopState);
  } while (!stopState.stop && !state.error);
}

function parseSubscript(startTokenIndex, noCalls, stopState) {
  if (isTypeScriptEnabled) {
    tsParseSubscript(startTokenIndex, noCalls, stopState);
  } else if (isFlowEnabled) {
    flowParseSubscript(startTokenIndex, noCalls, stopState);
  } else {
    baseParseSubscript(startTokenIndex, noCalls, stopState);
  }
}

/** Set 'state.stop = true' to indicate that we should stop parsing subscripts. */
function baseParseSubscript(
  startTokenIndex,
  noCalls,
  stopState,
) {
  if (!noCalls && eat(TokenType.doubleColon)) {
    parseNoCallExpr();
    stopState.stop = true;
    // Propagate startTokenIndex so that `a::b?.()` will keep `a` as the first token. We may want
    // to revisit this in the future when fully supporting bind syntax.
    parseSubscripts(startTokenIndex, noCalls);
  } else if (match(TokenType.questionDot)) {
    state.tokens[startTokenIndex].isOptionalChainStart = true;
    if (noCalls && lookaheadType() === TokenType.parenL) {
      stopState.stop = true;
      return;
    }
    next();
    state.tokens[state.tokens.length - 1].subscriptStartIndex = startTokenIndex;

    if (eat(TokenType.bracketL)) {
      parseExpression();
      expect(TokenType.bracketR);
    } else if (eat(TokenType.parenL)) {
      parseCallExpressionArguments();
    } else {
      parseMaybePrivateName();
    }
  } else if (eat(TokenType.dot)) {
    state.tokens[state.tokens.length - 1].subscriptStartIndex = startTokenIndex;
    parseMaybePrivateName();
  } else if (eat(TokenType.bracketL)) {
    state.tokens[state.tokens.length - 1].subscriptStartIndex = startTokenIndex;
    parseExpression();
    expect(TokenType.bracketR);
  } else if (!noCalls && match(TokenType.parenL)) {
    if (atPossibleAsync()) {
      // We see "async", but it's possible it's a usage of the name "async". Parse as if it's a
      // function call, and if we see an arrow later, backtrack and re-parse as a parameter list.
      const snapshot = state.snapshot();
      const asyncStartTokenIndex = state.tokens.length;
      next();
      state.tokens[state.tokens.length - 1].subscriptStartIndex = startTokenIndex;

      const callContextId = getNextContextId();

      state.tokens[state.tokens.length - 1].contextId = callContextId;
      parseCallExpressionArguments();
      state.tokens[state.tokens.length - 1].contextId = callContextId;

      if (shouldParseAsyncArrow()) {
        // We hit an arrow, so backtrack and start again parsing function parameters.
        state.restoreFromSnapshot(snapshot);
        stopState.stop = true;
        state.scopeDepth++;

        parseFunctionParams();
        parseAsyncArrowFromCallExpression(asyncStartTokenIndex);
      }
    } else {
      next();
      state.tokens[state.tokens.length - 1].subscriptStartIndex = startTokenIndex;
      const callContextId = getNextContextId();
      state.tokens[state.tokens.length - 1].contextId = callContextId;
      parseCallExpressionArguments();
      state.tokens[state.tokens.length - 1].contextId = callContextId;
    }
  } else if (match(TokenType.backQuote)) {
    // Tagged template expression.
    parseTemplate();
  } else {
    stopState.stop = true;
  }
}

function atPossibleAsync() {
  // This was made less strict than the original version to avoid passing around nodes, but it
  // should be safe to have rare false positives here.
  return (
    state.tokens[state.tokens.length - 1].contextualKeyword === ContextualKeyword._async &&
    !canInsertSemicolon()
  );
}

function parseCallExpressionArguments() {
  let first = true;
  while (!eat(TokenType.parenR) && !state.error) {
    if (first) {
      first = false;
    } else {
      expect(TokenType.comma);
      if (eat(TokenType.parenR)) {
        break;
      }
    }

    parseExprListItem(false);
  }
}

function shouldParseAsyncArrow() {
  return match(TokenType.colon) || match(TokenType.arrow);
}

function parseAsyncArrowFromCallExpression(startTokenIndex) {
  if (isTypeScriptEnabled) {
    tsStartParseAsyncArrowFromCallExpression();
  } else if (isFlowEnabled) {
    flowStartParseAsyncArrowFromCallExpression();
  }
  expect(TokenType.arrow);
  parseArrowExpression(startTokenIndex);
}

// Parse a no-call expression (like argument of `new` or `::` operators).

function parseNoCallExpr() {
  const startTokenIndex = state.tokens.length;
  parseExprAtom();
  parseSubscripts(startTokenIndex, true);
}

// Parse an atomic expression — either a single token that is an
// expression, an expression started by a keyword like `function` or
// `new`, or an expression wrapped in punctuation like `()`, `[]`,
// or `{}`.
// Returns true if the parsed expression was an arrow function.
function parseExprAtom() {
  if (eat(TokenType.modulo)) {
    // V8 intrinsic expression. Just parse the identifier, and the function invocation is parsed
    // naturally.
    parseIdentifier();
    return false;
  }

  if (match(TokenType.jsxText) || match(TokenType.jsxEmptyText)) {
    parseLiteral();
    return false;
  } else if (match(TokenType.lessThan) && isJSXEnabled) {
    state.type = TokenType.jsxTagStart;
    jsxParseElement();
    next();
    return false;
  }

  const canBeArrow = state.potentialArrowAt === state.start;
  switch (state.type) {
    case TokenType.slash:
    case TokenType.assign:
      retokenizeSlashAsRegex();
    // Fall through.

    case TokenType._super:
    case TokenType._this:
    case TokenType.regexp:
    case TokenType.num:
    case TokenType.bigint:
    case TokenType.decimal:
    case TokenType.string:
    case TokenType._null:
    case TokenType._true:
    case TokenType._false:
      next();
      return false;

    case TokenType._import:
      next();
      if (match(TokenType.dot)) {
        // import.meta
        state.tokens[state.tokens.length - 1].type = TokenType.name;
        next();
        parseIdentifier();
      }
      return false;

    case TokenType.name: {
      const startTokenIndex = state.tokens.length;
      const functionStart = state.start;
      const contextualKeyword = state.contextualKeyword;
      parseIdentifier();
      if (contextualKeyword === ContextualKeyword._await) {
        parseAwait();
        return false;
      } else if (
        contextualKeyword === ContextualKeyword._async &&
        match(TokenType._function) &&
        !canInsertSemicolon()
      ) {
        next();
        parseFunction(functionStart, false);
        return false;
      } else if (
        canBeArrow &&
        contextualKeyword === ContextualKeyword._async &&
        !canInsertSemicolon() &&
        match(TokenType.name)
      ) {
        state.scopeDepth++;
        parseBindingIdentifier(false);
        expect(TokenType.arrow);
        // let foo = async bar => {};
        parseArrowExpression(startTokenIndex);
        return true;
      } else if (match(TokenType._do) && !canInsertSemicolon()) {
        next();
        parseBlock();
        return false;
      }

      if (canBeArrow && !canInsertSemicolon() && match(TokenType.arrow)) {
        state.scopeDepth++;
        markPriorBindingIdentifier(false);
        expect(TokenType.arrow);
        parseArrowExpression(startTokenIndex);
        return true;
      }

      state.tokens[state.tokens.length - 1].identifierRole = IdentifierRole.Access;
      return false;
    }

    case TokenType._do: {
      next();
      parseBlock();
      return false;
    }

    case TokenType.parenL: {
      const wasArrow = parseParenAndDistinguishExpression(canBeArrow);
      return wasArrow;
    }

    case TokenType.bracketL:
      next();
      parseExprList(TokenType.bracketR, true);
      return false;

    case TokenType.braceL:
      parseObj(false, false);
      return false;

    case TokenType._function:
      parseFunctionExpression();
      return false;

    case TokenType.at:
      parseDecorators();
    // Fall through.

    case TokenType._class:
      parseClass(false);
      return false;

    case TokenType._new:
      parseNew();
      return false;

    case TokenType.backQuote:
      parseTemplate();
      return false;

    case TokenType.doubleColon: {
      next();
      parseNoCallExpr();
      return false;
    }

    case TokenType.hash: {
      const code = lookaheadCharCode();
      if (IS_IDENTIFIER_START[code] || code === charCodes.backslash) {
        parseMaybePrivateName();
      } else {
        next();
      }
      // Smart pipeline topic reference.
      return false;
    }

    default:
      unexpected();
      return false;
  }
}

function parseMaybePrivateName() {
  eat(TokenType.hash);
  parseIdentifier();
}

function parseFunctionExpression() {
  const functionStart = state.start;
  parseIdentifier();
  if (eat(TokenType.dot)) {
    // function.sent
    parseIdentifier();
  }
  parseFunction(functionStart, false);
}

function parseLiteral() {
  next();
}

function parseParenExpression() {
  expect(TokenType.parenL);
  parseExpression();
  expect(TokenType.parenR);
}

// Returns true if this was an arrow expression.
function parseParenAndDistinguishExpression(canBeArrow) {
  // Assume this is a normal parenthesized expression, but if we see an arrow, we'll bail and
  // start over as a parameter list.
  const snapshot = state.snapshot();

  const startTokenIndex = state.tokens.length;
  expect(TokenType.parenL);

  let first = true;

  while (!match(TokenType.parenR) && !state.error) {
    if (first) {
      first = false;
    } else {
      expect(TokenType.comma);
      if (match(TokenType.parenR)) {
        break;
      }
    }

    if (match(TokenType.ellipsis)) {
      parseRest(false /* isBlockScope */);
      parseParenItem();
      break;
    } else {
      parseMaybeAssign(false, true);
    }
  }

  expect(TokenType.parenR);

  if (canBeArrow && shouldParseArrow()) {
    const wasArrow = parseArrow();
    if (wasArrow) {
      // It was an arrow function this whole time, so start over and parse it as params so that we
      // get proper token annotations.
      state.restoreFromSnapshot(snapshot);
      state.scopeDepth++;
      // Don't specify a context ID because arrow functions don't need a context ID.
      parseFunctionParams();
      parseArrow();
      parseArrowExpression(startTokenIndex);
      if (state.error) {
        // Nevermind! This must have been something that looks very much like an
        // arrow function but where its "parameter list" isn't actually a valid
        // parameter list. Force non-arrow parsing.
        // See https://github.com/alangpierce/sucrase/issues/666 for an example.
        state.restoreFromSnapshot(snapshot);
        parseParenAndDistinguishExpression(false);
        return false;
      }
      return true;
    }
  }

  return false;
}

function shouldParseArrow() {
  return match(TokenType.colon) || !canInsertSemicolon();
}

// Returns whether there was an arrow token.
function parseArrow() {
  if (isTypeScriptEnabled) {
    return tsParseArrow();
  } else if (isFlowEnabled) {
    return flowParseArrow();
  } else {
    return eat(TokenType.arrow);
  }
}

function parseParenItem() {
  if (isTypeScriptEnabled || isFlowEnabled) {
    typedParseParenItem();
  }
}

// New's precedence is slightly tricky. It must allow its argument to
// be a `[]` or dot subscript expression, but not a call — at least,
// not without wrapping it in parentheses. Thus, it uses the noCalls
// argument to parseSubscripts to prevent it from consuming the
// argument list.
function parseNew() {
  expect(TokenType._new);
  if (eat(TokenType.dot)) {
    // new.target
    parseIdentifier();
    return;
  }
  parseNewCallee();
  if (isFlowEnabled) {
    flowStartParseNewArguments();
  }
  if (eat(TokenType.parenL)) {
    parseExprList(TokenType.parenR);
  }
}

function parseNewCallee() {
  parseNoCallExpr();
  eat(TokenType.questionDot);
}

function parseTemplate() {
  // Finish `, read quasi
  nextTemplateToken();
  // Finish quasi, read ${
  nextTemplateToken();
  while (!match(TokenType.backQuote) && !state.error) {
    expect(TokenType.dollarBraceL);
    parseExpression();
    // Finish }, read quasi
    nextTemplateToken();
    // Finish quasi, read either ${ or `
    nextTemplateToken();
  }
  next();
}

// Parse an object literal or binding pattern.
function parseObj(isPattern, isBlockScope) {
  // Attach a context ID to the object open and close brace and each object key.
  const contextId = getNextContextId();
  let first = true;

  next();
  state.tokens[state.tokens.length - 1].contextId = contextId;

  while (!eat(TokenType.braceR) && !state.error) {
    if (first) {
      first = false;
    } else {
      expect(TokenType.comma);
      if (eat(TokenType.braceR)) {
        break;
      }
    }

    let isGenerator = false;
    if (match(TokenType.ellipsis)) {
      const previousIndex = state.tokens.length;
      parseSpread();
      if (isPattern) {
        // Mark role when the only thing being spread over is an identifier.
        if (state.tokens.length === previousIndex + 2) {
          markPriorBindingIdentifier(isBlockScope);
        }
        if (eat(TokenType.braceR)) {
          break;
        }
      }
      continue;
    }

    if (!isPattern) {
      isGenerator = eat(TokenType.star);
    }

    if (!isPattern && isContextual(ContextualKeyword._async)) {
      if (isGenerator) unexpected();

      parseIdentifier();
      if (
        match(TokenType.colon) ||
        match(TokenType.parenL) ||
        match(TokenType.braceR) ||
        match(TokenType.eq) ||
        match(TokenType.comma)
      ) ; else {
        if (match(TokenType.star)) {
          next();
          isGenerator = true;
        }
        parsePropertyName(contextId);
      }
    } else {
      parsePropertyName(contextId);
    }

    parseObjPropValue(isPattern, isBlockScope, contextId);
  }

  state.tokens[state.tokens.length - 1].contextId = contextId;
}

function isGetterOrSetterMethod(isPattern) {
  // We go off of the next and don't bother checking if the node key is actually "get" or "set".
  // This lets us avoid generating a node, and should only make the validation worse.
  return (
    !isPattern &&
    (match(TokenType.string) || // get "string"() {}
      match(TokenType.num) || // get 1() {}
      match(TokenType.bracketL) || // get ["string"]() {}
      match(TokenType.name) || // get foo() {}
      !!(state.type & TokenType.IS_KEYWORD)) // get debugger() {}
  );
}

// Returns true if this was a method.
function parseObjectMethod(isPattern, objectContextId) {
  // We don't need to worry about modifiers because object methods can't have optional bodies, so
  // the start will never be used.
  const functionStart = state.start;
  if (match(TokenType.parenL)) {
    if (isPattern) unexpected();
    parseMethod(functionStart, /* isConstructor */ false);
    return true;
  }

  if (isGetterOrSetterMethod(isPattern)) {
    parsePropertyName(objectContextId);
    parseMethod(functionStart, /* isConstructor */ false);
    return true;
  }
  return false;
}

function parseObjectProperty(isPattern, isBlockScope) {
  if (eat(TokenType.colon)) {
    if (isPattern) {
      parseMaybeDefault(isBlockScope);
    } else {
      parseMaybeAssign(false);
    }
    return;
  }

  // Since there's no colon, we assume this is an object shorthand.

  // If we're in a destructuring, we've now discovered that the key was actually an assignee, so
  // we need to tag it as a declaration with the appropriate scope. Otherwise, we might need to
  // transform it on access, so mark it as a normal object shorthand.
  let identifierRole;
  if (isPattern) {
    if (state.scopeDepth === 0) {
      identifierRole = IdentifierRole.ObjectShorthandTopLevelDeclaration;
    } else if (isBlockScope) {
      identifierRole = IdentifierRole.ObjectShorthandBlockScopedDeclaration;
    } else {
      identifierRole = IdentifierRole.ObjectShorthandFunctionScopedDeclaration;
    }
  } else {
    identifierRole = IdentifierRole.ObjectShorthand;
  }
  state.tokens[state.tokens.length - 1].identifierRole = identifierRole;

  // Regardless of whether we know this to be a pattern or if we're in an ambiguous context, allow
  // parsing as if there's a default value.
  parseMaybeDefault(isBlockScope, true);
}

function parseObjPropValue(
  isPattern,
  isBlockScope,
  objectContextId,
) {
  if (isTypeScriptEnabled) {
    tsStartParseObjPropValue();
  } else if (isFlowEnabled) {
    flowStartParseObjPropValue();
  }
  const wasMethod = parseObjectMethod(isPattern, objectContextId);
  if (!wasMethod) {
    parseObjectProperty(isPattern, isBlockScope);
  }
}

function parsePropertyName(objectContextId) {
  if (isFlowEnabled) {
    flowParseVariance();
  }
  if (eat(TokenType.bracketL)) {
    state.tokens[state.tokens.length - 1].contextId = objectContextId;
    parseMaybeAssign();
    expect(TokenType.bracketR);
    state.tokens[state.tokens.length - 1].contextId = objectContextId;
  } else {
    if (match(TokenType.num) || match(TokenType.string) || match(TokenType.bigint) || match(TokenType.decimal)) {
      parseExprAtom();
    } else {
      parseMaybePrivateName();
    }

    state.tokens[state.tokens.length - 1].identifierRole = IdentifierRole.ObjectKey;
    state.tokens[state.tokens.length - 1].contextId = objectContextId;
  }
}

// Parse object or class method.
function parseMethod(functionStart, isConstructor) {
  const funcContextId = getNextContextId();

  state.scopeDepth++;
  const startTokenIndex = state.tokens.length;
  const allowModifiers = isConstructor; // For TypeScript parameter properties
  parseFunctionParams(allowModifiers, funcContextId);
  parseFunctionBodyAndFinish(functionStart, funcContextId);
  const endTokenIndex = state.tokens.length;
  state.scopes.push(new Scope(startTokenIndex, endTokenIndex, true));
  state.scopeDepth--;
}

// Parse arrow function expression.
// If the parameters are provided, they will be converted to an
// assignable list.
function parseArrowExpression(startTokenIndex) {
  parseFunctionBody(true);
  const endTokenIndex = state.tokens.length;
  state.scopes.push(new Scope(startTokenIndex, endTokenIndex, true));
  state.scopeDepth--;
}

function parseFunctionBodyAndFinish(functionStart, funcContextId = 0) {
  if (isTypeScriptEnabled) {
    tsParseFunctionBodyAndFinish(functionStart, funcContextId);
  } else if (isFlowEnabled) {
    flowParseFunctionBodyAndFinish(funcContextId);
  } else {
    parseFunctionBody(false, funcContextId);
  }
}

function parseFunctionBody(allowExpression, funcContextId = 0) {
  const isExpression = allowExpression && !match(TokenType.braceL);

  if (isExpression) {
    parseMaybeAssign();
  } else {
    parseBlock(true /* isFunctionScope */, funcContextId);
  }
}

// Parses a comma-separated list of expressions, and returns them as
// an array. `close` is the token type that ends the list, and
// `allowEmpty` can be turned on to allow subsequent commas with
// nothing in between them to be parsed as `null` (which is needed
// for array literals).

function parseExprList(close, allowEmpty = false) {
  let first = true;
  while (!eat(close) && !state.error) {
    if (first) {
      first = false;
    } else {
      expect(TokenType.comma);
      if (eat(close)) break;
    }
    parseExprListItem(allowEmpty);
  }
}

function parseExprListItem(allowEmpty) {
  if (allowEmpty && match(TokenType.comma)) ; else if (match(TokenType.ellipsis)) {
    parseSpread();
    parseParenItem();
  } else if (match(TokenType.question)) {
    // Partial function application proposal.
    next();
  } else {
    parseMaybeAssign(false, true);
  }
}

// Parse the next token as an identifier.
function parseIdentifier() {
  next();
  state.tokens[state.tokens.length - 1].type = TokenType.name;
}

// Parses await expression inside async function.
function parseAwait() {
  parseMaybeUnary();
}

// Parses yield expression inside generator.
function parseYield() {
  next();
  if (!match(TokenType.semi) && !canInsertSemicolon()) {
    eat(TokenType.star);
    parseMaybeAssign();
  }
}

// https://github.com/tc39/proposal-js-module-blocks
function parseModuleExpression() {
  expectContextual(ContextualKeyword._module);
  expect(TokenType.braceL);
  // For now, just call parseBlockBody to parse the block. In the future when we
  // implement full support, we'll want to emit scopes and possibly other
  // information.
  parseBlockBody(TokenType.braceR);
}

/* eslint max-len: 0 */


function isMaybeDefaultImport(lookahead) {
  return (
    (lookahead.type === TokenType.name || !!(lookahead.type & TokenType.IS_KEYWORD)) &&
    lookahead.contextualKeyword !== ContextualKeyword._from
  );
}

function flowParseTypeInitialiser(tok) {
  const oldIsType = pushTypeContext(0);
  expect(tok || TokenType.colon);
  flowParseType();
  popTypeContext(oldIsType);
}

function flowParsePredicate() {
  expect(TokenType.modulo);
  expectContextual(ContextualKeyword._checks);
  if (eat(TokenType.parenL)) {
    parseExpression();
    expect(TokenType.parenR);
  }
}

function flowParseTypeAndPredicateInitialiser() {
  const oldIsType = pushTypeContext(0);
  expect(TokenType.colon);
  if (match(TokenType.modulo)) {
    flowParsePredicate();
  } else {
    flowParseType();
    if (match(TokenType.modulo)) {
      flowParsePredicate();
    }
  }
  popTypeContext(oldIsType);
}

function flowParseDeclareClass() {
  next();
  flowParseInterfaceish(/* isClass */ true);
}

function flowParseDeclareFunction() {
  next();
  parseIdentifier();

  if (match(TokenType.lessThan)) {
    flowParseTypeParameterDeclaration();
  }

  expect(TokenType.parenL);
  flowParseFunctionTypeParams();
  expect(TokenType.parenR);

  flowParseTypeAndPredicateInitialiser();

  semicolon$1();
}

function flowParseDeclare() {
  if (match(TokenType._class)) {
    flowParseDeclareClass();
  } else if (match(TokenType._function)) {
    flowParseDeclareFunction();
  } else if (match(TokenType._var)) {
    flowParseDeclareVariable();
  } else if (eatContextual(ContextualKeyword._module)) {
    if (eat(TokenType.dot)) {
      flowParseDeclareModuleExports();
    } else {
      flowParseDeclareModule();
    }
  } else if (isContextual(ContextualKeyword._type)) {
    flowParseDeclareTypeAlias();
  } else if (isContextual(ContextualKeyword._opaque)) {
    flowParseDeclareOpaqueType();
  } else if (isContextual(ContextualKeyword._interface)) {
    flowParseDeclareInterface();
  } else if (match(TokenType._export)) {
    flowParseDeclareExportDeclaration();
  } else {
    unexpected();
  }
}

function flowParseDeclareVariable() {
  next();
  flowParseTypeAnnotatableIdentifier();
  semicolon$1();
}

function flowParseDeclareModule() {
  if (match(TokenType.string)) {
    parseExprAtom();
  } else {
    parseIdentifier();
  }

  expect(TokenType.braceL);
  while (!match(TokenType.braceR) && !state.error) {
    if (match(TokenType._import)) {
      next();
      parseImport();
    } else {
      unexpected();
    }
  }
  expect(TokenType.braceR);
}

function flowParseDeclareExportDeclaration() {
  expect(TokenType._export);

  if (eat(TokenType._default)) {
    if (match(TokenType._function) || match(TokenType._class)) {
      // declare export default class ...
      // declare export default function ...
      flowParseDeclare();
    } else {
      // declare export default [type];
      flowParseType();
      semicolon$1();
    }
  } else if (
    match(TokenType._var) || // declare export var ...
    match(TokenType._function) || // declare export function ...
    match(TokenType._class) || // declare export class ...
    isContextual(ContextualKeyword._opaque) // declare export opaque ..
  ) {
    flowParseDeclare();
  } else if (
    match(TokenType.star) || // declare export * from ''
    match(TokenType.braceL) || // declare export {} ...
    isContextual(ContextualKeyword._interface) || // declare export interface ...
    isContextual(ContextualKeyword._type) || // declare export type ...
    isContextual(ContextualKeyword._opaque) // declare export opaque type ...
  ) {
    parseExport();
  } else {
    unexpected();
  }
}

function flowParseDeclareModuleExports() {
  expectContextual(ContextualKeyword._exports);
  flowParseTypeAnnotation();
  semicolon$1();
}

function flowParseDeclareTypeAlias() {
  next();
  flowParseTypeAlias();
}

function flowParseDeclareOpaqueType() {
  next();
  flowParseOpaqueType(true);
}

function flowParseDeclareInterface() {
  next();
  flowParseInterfaceish();
}

// Interfaces

function flowParseInterfaceish(isClass = false) {
  flowParseRestrictedIdentifier();

  if (match(TokenType.lessThan)) {
    flowParseTypeParameterDeclaration();
  }

  if (eat(TokenType._extends)) {
    do {
      flowParseInterfaceExtends();
    } while (!isClass && eat(TokenType.comma));
  }

  if (isContextual(ContextualKeyword._mixins)) {
    next();
    do {
      flowParseInterfaceExtends();
    } while (eat(TokenType.comma));
  }

  if (isContextual(ContextualKeyword._implements)) {
    next();
    do {
      flowParseInterfaceExtends();
    } while (eat(TokenType.comma));
  }

  flowParseObjectType(isClass, false, isClass);
}

function flowParseInterfaceExtends() {
  flowParseQualifiedTypeIdentifier(false);
  if (match(TokenType.lessThan)) {
    flowParseTypeParameterInstantiation();
  }
}

function flowParseInterface() {
  flowParseInterfaceish();
}

function flowParseRestrictedIdentifier() {
  parseIdentifier();
}

function flowParseTypeAlias() {
  flowParseRestrictedIdentifier();

  if (match(TokenType.lessThan)) {
    flowParseTypeParameterDeclaration();
  }

  flowParseTypeInitialiser(TokenType.eq);
  semicolon$1();
}

function flowParseOpaqueType(declare) {
  expectContextual(ContextualKeyword._type);
  flowParseRestrictedIdentifier();

  if (match(TokenType.lessThan)) {
    flowParseTypeParameterDeclaration();
  }

  // Parse the supertype
  if (match(TokenType.colon)) {
    flowParseTypeInitialiser(TokenType.colon);
  }

  if (!declare) {
    flowParseTypeInitialiser(TokenType.eq);
  }
  semicolon$1();
}

function flowParseTypeParameter() {
  flowParseVariance();
  flowParseTypeAnnotatableIdentifier();

  if (eat(TokenType.eq)) {
    flowParseType();
  }
}

function flowParseTypeParameterDeclaration() {
  const oldIsType = pushTypeContext(0);
  // istanbul ignore else: this condition is already checked at all call sites
  if (match(TokenType.lessThan) || match(TokenType.typeParameterStart)) {
    next();
  } else {
    unexpected();
  }

  do {
    flowParseTypeParameter();
    if (!match(TokenType.greaterThan)) {
      expect(TokenType.comma);
    }
  } while (!match(TokenType.greaterThan) && !state.error);
  expect(TokenType.greaterThan);
  popTypeContext(oldIsType);
}

function flowParseTypeParameterInstantiation() {
  const oldIsType = pushTypeContext(0);
  expect(TokenType.lessThan);
  while (!match(TokenType.greaterThan) && !state.error) {
    flowParseType();
    if (!match(TokenType.greaterThan)) {
      expect(TokenType.comma);
    }
  }
  expect(TokenType.greaterThan);
  popTypeContext(oldIsType);
}

function flowParseInterfaceType() {
  expectContextual(ContextualKeyword._interface);
  if (eat(TokenType._extends)) {
    do {
      flowParseInterfaceExtends();
    } while (eat(TokenType.comma));
  }
  flowParseObjectType(false, false, false);
}

function flowParseObjectPropertyKey() {
  if (match(TokenType.num) || match(TokenType.string)) {
    parseExprAtom();
  } else {
    parseIdentifier();
  }
}

function flowParseObjectTypeIndexer() {
  // Note: bracketL has already been consumed
  if (lookaheadType() === TokenType.colon) {
    flowParseObjectPropertyKey();
    flowParseTypeInitialiser();
  } else {
    flowParseType();
  }
  expect(TokenType.bracketR);
  flowParseTypeInitialiser();
}

function flowParseObjectTypeInternalSlot() {
  // Note: both bracketL have already been consumed
  flowParseObjectPropertyKey();
  expect(TokenType.bracketR);
  expect(TokenType.bracketR);
  if (match(TokenType.lessThan) || match(TokenType.parenL)) {
    flowParseObjectTypeMethodish();
  } else {
    eat(TokenType.question);
    flowParseTypeInitialiser();
  }
}

function flowParseObjectTypeMethodish() {
  if (match(TokenType.lessThan)) {
    flowParseTypeParameterDeclaration();
  }

  expect(TokenType.parenL);
  while (!match(TokenType.parenR) && !match(TokenType.ellipsis) && !state.error) {
    flowParseFunctionTypeParam();
    if (!match(TokenType.parenR)) {
      expect(TokenType.comma);
    }
  }

  if (eat(TokenType.ellipsis)) {
    flowParseFunctionTypeParam();
  }
  expect(TokenType.parenR);
  flowParseTypeInitialiser();
}

function flowParseObjectTypeCallProperty() {
  flowParseObjectTypeMethodish();
}

function flowParseObjectType(allowStatic, allowExact, allowProto) {
  let endDelim;
  if (allowExact && match(TokenType.braceBarL)) {
    expect(TokenType.braceBarL);
    endDelim = TokenType.braceBarR;
  } else {
    expect(TokenType.braceL);
    endDelim = TokenType.braceR;
  }

  while (!match(endDelim) && !state.error) {
    if (allowProto && isContextual(ContextualKeyword._proto)) {
      const lookahead = lookaheadType();
      if (lookahead !== TokenType.colon && lookahead !== TokenType.question) {
        next();
        allowStatic = false;
      }
    }
    if (allowStatic && isContextual(ContextualKeyword._static)) {
      const lookahead = lookaheadType();
      if (lookahead !== TokenType.colon && lookahead !== TokenType.question) {
        next();
      }
    }

    flowParseVariance();

    if (eat(TokenType.bracketL)) {
      if (eat(TokenType.bracketL)) {
        flowParseObjectTypeInternalSlot();
      } else {
        flowParseObjectTypeIndexer();
      }
    } else if (match(TokenType.parenL) || match(TokenType.lessThan)) {
      flowParseObjectTypeCallProperty();
    } else {
      if (isContextual(ContextualKeyword._get) || isContextual(ContextualKeyword._set)) {
        const lookahead = lookaheadType();
        if (lookahead === TokenType.name || lookahead === TokenType.string || lookahead === TokenType.num) {
          next();
        }
      }

      flowParseObjectTypeProperty();
    }

    flowObjectTypeSemicolon();
  }

  expect(endDelim);
}

function flowParseObjectTypeProperty() {
  if (match(TokenType.ellipsis)) {
    expect(TokenType.ellipsis);
    if (!eat(TokenType.comma)) {
      eat(TokenType.semi);
    }
    // Explicit inexact object syntax.
    if (match(TokenType.braceR)) {
      return;
    }
    flowParseType();
  } else {
    flowParseObjectPropertyKey();
    if (match(TokenType.lessThan) || match(TokenType.parenL)) {
      // This is a method property
      flowParseObjectTypeMethodish();
    } else {
      eat(TokenType.question);
      flowParseTypeInitialiser();
    }
  }
}

function flowObjectTypeSemicolon() {
  if (!eat(TokenType.semi) && !eat(TokenType.comma) && !match(TokenType.braceR) && !match(TokenType.braceBarR)) {
    unexpected();
  }
}

function flowParseQualifiedTypeIdentifier(initialIdAlreadyParsed) {
  if (!initialIdAlreadyParsed) {
    parseIdentifier();
  }
  while (eat(TokenType.dot)) {
    parseIdentifier();
  }
}

function flowParseGenericType() {
  flowParseQualifiedTypeIdentifier(true);
  if (match(TokenType.lessThan)) {
    flowParseTypeParameterInstantiation();
  }
}

function flowParseTypeofType() {
  expect(TokenType._typeof);
  flowParsePrimaryType();
}

function flowParseTupleType() {
  expect(TokenType.bracketL);
  // We allow trailing commas
  while (state.pos < input.length && !match(TokenType.bracketR)) {
    flowParseType();
    if (match(TokenType.bracketR)) {
      break;
    }
    expect(TokenType.comma);
  }
  expect(TokenType.bracketR);
}

function flowParseFunctionTypeParam() {
  const lookahead = lookaheadType();
  if (lookahead === TokenType.colon || lookahead === TokenType.question) {
    parseIdentifier();
    eat(TokenType.question);
    flowParseTypeInitialiser();
  } else {
    flowParseType();
  }
}

function flowParseFunctionTypeParams() {
  while (!match(TokenType.parenR) && !match(TokenType.ellipsis) && !state.error) {
    flowParseFunctionTypeParam();
    if (!match(TokenType.parenR)) {
      expect(TokenType.comma);
    }
  }
  if (eat(TokenType.ellipsis)) {
    flowParseFunctionTypeParam();
  }
}

// The parsing of types roughly parallels the parsing of expressions, and
// primary types are kind of like primary expressions...they're the
// primitives with which other types are constructed.
function flowParsePrimaryType() {
  let isGroupedType = false;
  const oldNoAnonFunctionType = state.noAnonFunctionType;

  switch (state.type) {
    case TokenType.name: {
      if (isContextual(ContextualKeyword._interface)) {
        flowParseInterfaceType();
        return;
      }
      parseIdentifier();
      flowParseGenericType();
      return;
    }

    case TokenType.braceL:
      flowParseObjectType(false, false, false);
      return;

    case TokenType.braceBarL:
      flowParseObjectType(false, true, false);
      return;

    case TokenType.bracketL:
      flowParseTupleType();
      return;

    case TokenType.lessThan:
      flowParseTypeParameterDeclaration();
      expect(TokenType.parenL);
      flowParseFunctionTypeParams();
      expect(TokenType.parenR);
      expect(TokenType.arrow);
      flowParseType();
      return;

    case TokenType.parenL:
      next();

      // Check to see if this is actually a grouped type
      if (!match(TokenType.parenR) && !match(TokenType.ellipsis)) {
        if (match(TokenType.name)) {
          const token = lookaheadType();
          isGroupedType = token !== TokenType.question && token !== TokenType.colon;
        } else {
          isGroupedType = true;
        }
      }

      if (isGroupedType) {
        state.noAnonFunctionType = false;
        flowParseType();
        state.noAnonFunctionType = oldNoAnonFunctionType;

        // A `,` or a `) =>` means this is an anonymous function type
        if (
          state.noAnonFunctionType ||
          !(match(TokenType.comma) || (match(TokenType.parenR) && lookaheadType() === TokenType.arrow))
        ) {
          expect(TokenType.parenR);
          return;
        } else {
          // Eat a comma if there is one
          eat(TokenType.comma);
        }
      }

      flowParseFunctionTypeParams();

      expect(TokenType.parenR);
      expect(TokenType.arrow);
      flowParseType();
      return;

    case TokenType.minus:
      next();
      parseLiteral();
      return;

    case TokenType.string:
    case TokenType.num:
    case TokenType._true:
    case TokenType._false:
    case TokenType._null:
    case TokenType._this:
    case TokenType._void:
    case TokenType.star:
      next();
      return;

    default:
      if (state.type === TokenType._typeof) {
        flowParseTypeofType();
        return;
      } else if (state.type & TokenType.IS_KEYWORD) {
        next();
        state.tokens[state.tokens.length - 1].type = TokenType.name;
        return;
      }
  }

  unexpected();
}

function flowParsePostfixType() {
  flowParsePrimaryType();
  while (!canInsertSemicolon() && (match(TokenType.bracketL) || match(TokenType.questionDot))) {
    eat(TokenType.questionDot);
    expect(TokenType.bracketL);
    if (eat(TokenType.bracketR)) ; else {
      // Indexed access type
      flowParseType();
      expect(TokenType.bracketR);
    }
  }
}

function flowParsePrefixType() {
  if (eat(TokenType.question)) {
    flowParsePrefixType();
  } else {
    flowParsePostfixType();
  }
}

function flowParseAnonFunctionWithoutParens() {
  flowParsePrefixType();
  if (!state.noAnonFunctionType && eat(TokenType.arrow)) {
    flowParseType();
  }
}

function flowParseIntersectionType() {
  eat(TokenType.bitwiseAND);
  flowParseAnonFunctionWithoutParens();
  while (eat(TokenType.bitwiseAND)) {
    flowParseAnonFunctionWithoutParens();
  }
}

function flowParseUnionType() {
  eat(TokenType.bitwiseOR);
  flowParseIntersectionType();
  while (eat(TokenType.bitwiseOR)) {
    flowParseIntersectionType();
  }
}

function flowParseType() {
  flowParseUnionType();
}

function flowParseTypeAnnotation() {
  flowParseTypeInitialiser();
}

function flowParseTypeAnnotatableIdentifier() {
  parseIdentifier();
  if (match(TokenType.colon)) {
    flowParseTypeAnnotation();
  }
}

function flowParseVariance() {
  if (match(TokenType.plus) || match(TokenType.minus)) {
    next();
    state.tokens[state.tokens.length - 1].isType = true;
  }
}

// ==================================
// Overrides
// ==================================

function flowParseFunctionBodyAndFinish(funcContextId) {
  // For arrow functions, `parseArrow` handles the return type itself.
  if (match(TokenType.colon)) {
    flowParseTypeAndPredicateInitialiser();
  }

  parseFunctionBody(false, funcContextId);
}

function flowParseSubscript(
  startTokenIndex,
  noCalls,
  stopState,
) {
  if (match(TokenType.questionDot) && lookaheadType() === TokenType.lessThan) {
    if (noCalls) {
      stopState.stop = true;
      return;
    }
    next();
    flowParseTypeParameterInstantiation();
    expect(TokenType.parenL);
    parseCallExpressionArguments();
    return;
  } else if (!noCalls && match(TokenType.lessThan)) {
    const snapshot = state.snapshot();
    flowParseTypeParameterInstantiation();
    expect(TokenType.parenL);
    parseCallExpressionArguments();
    if (state.error) {
      state.restoreFromSnapshot(snapshot);
    } else {
      return;
    }
  }
  baseParseSubscript(startTokenIndex, noCalls, stopState);
}

function flowStartParseNewArguments() {
  if (match(TokenType.lessThan)) {
    const snapshot = state.snapshot();
    flowParseTypeParameterInstantiation();
    if (state.error) {
      state.restoreFromSnapshot(snapshot);
    }
  }
}

// interfaces
function flowTryParseStatement() {
  if (match(TokenType.name) && state.contextualKeyword === ContextualKeyword._interface) {
    const oldIsType = pushTypeContext(0);
    next();
    flowParseInterface();
    popTypeContext(oldIsType);
    return true;
  } else if (isContextual(ContextualKeyword._enum)) {
    flowParseEnumDeclaration();
    return true;
  }
  return false;
}

function flowTryParseExportDefaultExpression() {
  if (isContextual(ContextualKeyword._enum)) {
    flowParseEnumDeclaration();
    return true;
  }
  return false;
}

// declares, interfaces and type aliases
function flowParseIdentifierStatement(contextualKeyword) {
  if (contextualKeyword === ContextualKeyword._declare) {
    if (
      match(TokenType._class) ||
      match(TokenType.name) ||
      match(TokenType._function) ||
      match(TokenType._var) ||
      match(TokenType._export)
    ) {
      const oldIsType = pushTypeContext(1);
      flowParseDeclare();
      popTypeContext(oldIsType);
    }
  } else if (match(TokenType.name)) {
    if (contextualKeyword === ContextualKeyword._interface) {
      const oldIsType = pushTypeContext(1);
      flowParseInterface();
      popTypeContext(oldIsType);
    } else if (contextualKeyword === ContextualKeyword._type) {
      const oldIsType = pushTypeContext(1);
      flowParseTypeAlias();
      popTypeContext(oldIsType);
    } else if (contextualKeyword === ContextualKeyword._opaque) {
      const oldIsType = pushTypeContext(1);
      flowParseOpaqueType(false);
      popTypeContext(oldIsType);
    }
  }
  semicolon$1();
}

// export type
function flowShouldParseExportDeclaration() {
  return (
    isContextual(ContextualKeyword._type) ||
    isContextual(ContextualKeyword._interface) ||
    isContextual(ContextualKeyword._opaque) ||
    isContextual(ContextualKeyword._enum)
  );
}

function flowShouldDisallowExportDefaultSpecifier() {
  return (
    match(TokenType.name) &&
    (state.contextualKeyword === ContextualKeyword._type ||
      state.contextualKeyword === ContextualKeyword._interface ||
      state.contextualKeyword === ContextualKeyword._opaque ||
      state.contextualKeyword === ContextualKeyword._enum)
  );
}

function flowParseExportDeclaration() {
  if (isContextual(ContextualKeyword._type)) {
    const oldIsType = pushTypeContext(1);
    next();

    if (match(TokenType.braceL)) {
      // export type { foo, bar };
      parseExportSpecifiers();
      parseExportFrom();
    } else {
      // export type Foo = Bar;
      flowParseTypeAlias();
    }
    popTypeContext(oldIsType);
  } else if (isContextual(ContextualKeyword._opaque)) {
    const oldIsType = pushTypeContext(1);
    next();
    // export opaque type Foo = Bar;
    flowParseOpaqueType(false);
    popTypeContext(oldIsType);
  } else if (isContextual(ContextualKeyword._interface)) {
    const oldIsType = pushTypeContext(1);
    next();
    flowParseInterface();
    popTypeContext(oldIsType);
  } else {
    parseStatement(true);
  }
}

function flowShouldParseExportStar() {
  return match(TokenType.star) || (isContextual(ContextualKeyword._type) && lookaheadType() === TokenType.star);
}

function flowParseExportStar() {
  if (eatContextual(ContextualKeyword._type)) {
    const oldIsType = pushTypeContext(2);
    baseParseExportStar();
    popTypeContext(oldIsType);
  } else {
    baseParseExportStar();
  }
}

// parse a the super class type parameters and implements
function flowAfterParseClassSuper(hasSuper) {
  if (hasSuper && match(TokenType.lessThan)) {
    flowParseTypeParameterInstantiation();
  }
  if (isContextual(ContextualKeyword._implements)) {
    const oldIsType = pushTypeContext(0);
    next();
    state.tokens[state.tokens.length - 1].type = TokenType._implements;
    do {
      flowParseRestrictedIdentifier();
      if (match(TokenType.lessThan)) {
        flowParseTypeParameterInstantiation();
      }
    } while (eat(TokenType.comma));
    popTypeContext(oldIsType);
  }
}

// parse type parameters for object method shorthand
function flowStartParseObjPropValue() {
  // method shorthand
  if (match(TokenType.lessThan)) {
    flowParseTypeParameterDeclaration();
    if (!match(TokenType.parenL)) unexpected();
  }
}

function flowParseAssignableListItemTypes() {
  const oldIsType = pushTypeContext(0);
  eat(TokenType.question);
  if (match(TokenType.colon)) {
    flowParseTypeAnnotation();
  }
  popTypeContext(oldIsType);
}

// parse typeof and type imports
function flowStartParseImportSpecifiers() {
  if (match(TokenType._typeof) || isContextual(ContextualKeyword._type)) {
    const lh = lookaheadTypeAndKeyword();
    if (isMaybeDefaultImport(lh) || lh.type === TokenType.braceL || lh.type === TokenType.star) {
      next();
    }
  }
}

// parse import-type/typeof shorthand
function flowParseImportSpecifier() {
  const isTypeKeyword =
    state.contextualKeyword === ContextualKeyword._type || state.type === TokenType._typeof;
  if (isTypeKeyword) {
    next();
  } else {
    parseIdentifier();
  }

  if (isContextual(ContextualKeyword._as) && !isLookaheadContextual(ContextualKeyword._as)) {
    parseIdentifier();
    if (isTypeKeyword && !match(TokenType.name) && !(state.type & TokenType.IS_KEYWORD)) ; else {
      // `import {type as foo`
      parseIdentifier();
    }
  } else {
    if (isTypeKeyword && (match(TokenType.name) || !!(state.type & TokenType.IS_KEYWORD))) {
      // `import {type foo`
      parseIdentifier();
    }
    if (eatContextual(ContextualKeyword._as)) {
      parseIdentifier();
    }
  }
}

// parse function type parameters - function foo<T>() {}
function flowStartParseFunctionParams() {
  // Originally this checked if the method is a getter/setter, but if it was, we'd crash soon
  // anyway, so don't try to propagate that information.
  if (match(TokenType.lessThan)) {
    const oldIsType = pushTypeContext(0);
    flowParseTypeParameterDeclaration();
    popTypeContext(oldIsType);
  }
}

// parse flow type annotations on variable declarator heads - let foo: string = bar
function flowAfterParseVarHead() {
  if (match(TokenType.colon)) {
    flowParseTypeAnnotation();
  }
}

// parse the return type of an async arrow function - let foo = (async (): number => {});
function flowStartParseAsyncArrowFromCallExpression() {
  if (match(TokenType.colon)) {
    const oldNoAnonFunctionType = state.noAnonFunctionType;
    state.noAnonFunctionType = true;
    flowParseTypeAnnotation();
    state.noAnonFunctionType = oldNoAnonFunctionType;
  }
}

// We need to support type parameter declarations for arrow functions. This
// is tricky. There are three situations we need to handle
//
// 1. This is either JSX or an arrow function. We'll try JSX first. If that
//    fails, we'll try an arrow function. If that fails, we'll throw the JSX
//    error.
// 2. This is an arrow function. We'll parse the type parameter declaration,
//    parse the rest, make sure the rest is an arrow function, and go from
//    there
// 3. This is neither. Just call the super method
function flowParseMaybeAssign(noIn, isWithinParens) {
  if (match(TokenType.lessThan)) {
    const snapshot = state.snapshot();
    let wasArrow = baseParseMaybeAssign(noIn, isWithinParens);
    if (state.error) {
      state.restoreFromSnapshot(snapshot);
      state.type = TokenType.typeParameterStart;
    } else {
      return wasArrow;
    }

    const oldIsType = pushTypeContext(0);
    flowParseTypeParameterDeclaration();
    popTypeContext(oldIsType);
    wasArrow = baseParseMaybeAssign(noIn, isWithinParens);
    if (wasArrow) {
      return true;
    }
    unexpected();
  }

  return baseParseMaybeAssign(noIn, isWithinParens);
}

// handle return types for arrow functions
function flowParseArrow() {
  if (match(TokenType.colon)) {
    const oldIsType = pushTypeContext(0);
    const snapshot = state.snapshot();

    const oldNoAnonFunctionType = state.noAnonFunctionType;
    state.noAnonFunctionType = true;
    flowParseTypeAndPredicateInitialiser();
    state.noAnonFunctionType = oldNoAnonFunctionType;

    if (canInsertSemicolon()) unexpected();
    if (!match(TokenType.arrow)) unexpected();

    if (state.error) {
      state.restoreFromSnapshot(snapshot);
    }
    popTypeContext(oldIsType);
  }
  return eat(TokenType.arrow);
}

function flowParseSubscripts(startTokenIndex, noCalls = false) {
  if (
    state.tokens[state.tokens.length - 1].contextualKeyword === ContextualKeyword._async &&
    match(TokenType.lessThan)
  ) {
    const snapshot = state.snapshot();
    const wasArrow = parseAsyncArrowWithTypeParameters();
    if (wasArrow && !state.error) {
      return;
    }
    state.restoreFromSnapshot(snapshot);
  }

  baseParseSubscripts(startTokenIndex, noCalls);
}

// Returns true if there was an arrow function here.
function parseAsyncArrowWithTypeParameters() {
  state.scopeDepth++;
  const startTokenIndex = state.tokens.length;
  parseFunctionParams();
  if (!parseArrow()) {
    return false;
  }
  parseArrowExpression(startTokenIndex);
  return true;
}

function flowParseEnumDeclaration() {
  expectContextual(ContextualKeyword._enum);
  state.tokens[state.tokens.length - 1].type = TokenType._enum;
  parseIdentifier();
  flowParseEnumBody();
}

function flowParseEnumBody() {
  if (eatContextual(ContextualKeyword._of)) {
    next();
  }
  expect(TokenType.braceL);
  flowParseEnumMembers();
  expect(TokenType.braceR);
}

function flowParseEnumMembers() {
  while (!match(TokenType.braceR) && !state.error) {
    if (eat(TokenType.ellipsis)) {
      break;
    }
    flowParseEnumMember();
    if (!match(TokenType.braceR)) {
      expect(TokenType.comma);
    }
  }
}

function flowParseEnumMember() {
  parseIdentifier();
  if (eat(TokenType.eq)) {
    // Flow enum values are always just one token (a string, number, or boolean literal).
    next();
  }
}

/* eslint max-len: 0 */


function parseTopLevel() {
  parseBlockBody(TokenType.eof);
  state.scopes.push(new Scope(0, state.tokens.length, true));
  if (state.scopeDepth !== 0) {
    throw new Error(`Invalid scope depth at end of file: ${state.scopeDepth}`);
  }
  return new File(state.tokens, state.scopes);
}

// Parse a single statement.
//
// If expecting a statement and finding a slash operator, parse a
// regular expression literal. This is to handle cases like
// `if (foo) /blah/.exec(foo)`, where looking at the previous token
// does not help.

function parseStatement(declaration) {
  if (isFlowEnabled) {
    if (flowTryParseStatement()) {
      return;
    }
  }
  if (match(TokenType.at)) {
    parseDecorators();
  }
  parseStatementContent(declaration);
}

function parseStatementContent(declaration) {
  if (isTypeScriptEnabled) {
    if (tsTryParseStatementContent()) {
      return;
    }
  }

  const starttype = state.type;

  // Most types of statements are recognized by the keyword they
  // start with. Many are trivial to parse, some require a bit of
  // complexity.

  switch (starttype) {
    case TokenType._break:
    case TokenType._continue:
      parseBreakContinueStatement();
      return;
    case TokenType._debugger:
      parseDebuggerStatement();
      return;
    case TokenType._do:
      parseDoStatement();
      return;
    case TokenType._for:
      parseForStatement();
      return;
    case TokenType._function:
      if (lookaheadType() === TokenType.dot) break;
      if (!declaration) unexpected();
      parseFunctionStatement();
      return;

    case TokenType._class:
      if (!declaration) unexpected();
      parseClass(true);
      return;

    case TokenType._if:
      parseIfStatement();
      return;
    case TokenType._return:
      parseReturnStatement();
      return;
    case TokenType._switch:
      parseSwitchStatement();
      return;
    case TokenType._throw:
      parseThrowStatement();
      return;
    case TokenType._try:
      parseTryStatement();
      return;

    case TokenType._let:
    case TokenType._const:
      if (!declaration) unexpected(); // NOTE: falls through to _var

    case TokenType._var:
      parseVarStatement(starttype !== TokenType._var);
      return;

    case TokenType._while:
      parseWhileStatement();
      return;
    case TokenType.braceL:
      parseBlock();
      return;
    case TokenType.semi:
      parseEmptyStatement();
      return;
    case TokenType._export:
    case TokenType._import: {
      const nextType = lookaheadType();
      if (nextType === TokenType.parenL || nextType === TokenType.dot) {
        break;
      }
      next();
      if (starttype === TokenType._import) {
        parseImport();
      } else {
        parseExport();
      }
      return;
    }
    case TokenType.name:
      if (state.contextualKeyword === ContextualKeyword._async) {
        const functionStart = state.start;
        // peek ahead and see if next token is a function
        const snapshot = state.snapshot();
        next();
        if (match(TokenType._function) && !canInsertSemicolon()) {
          expect(TokenType._function);
          parseFunction(functionStart, true);
          return;
        } else {
          state.restoreFromSnapshot(snapshot);
        }
      } else if (
        state.contextualKeyword === ContextualKeyword._using &&
        !hasFollowingLineBreak() &&
        // Statements like `using[0]` and `using in foo` aren't actual using
        // declarations.
        lookaheadType() === TokenType.name
      ) {
        parseVarStatement(true);
        return;
      } else if (startsAwaitUsing()) {
        expectContextual(ContextualKeyword._await);
        parseVarStatement(true);
        return;
      }
  }

  // If the statement does not start with a statement keyword or a
  // brace, it's an ExpressionStatement or LabeledStatement. We
  // simply start parsing an expression, and afterwards, if the
  // next token is a colon and the expression was a simple
  // Identifier node, we switch to interpreting it as a label.
  const initialTokensLength = state.tokens.length;
  parseExpression();
  let simpleName = null;
  if (state.tokens.length === initialTokensLength + 1) {
    const token = state.tokens[state.tokens.length - 1];
    if (token.type === TokenType.name) {
      simpleName = token.contextualKeyword;
    }
  }
  if (simpleName == null) {
    semicolon$1();
    return;
  }
  if (eat(TokenType.colon)) {
    parseLabeledStatement();
  } else {
    // This was an identifier, so we might want to handle flow/typescript-specific cases.
    parseIdentifierStatement(simpleName);
  }
}

/**
 * Determine if we're positioned at an `await using` declaration.
 *
 * Note that this can happen either in place of a regular variable declaration
 * or in a loop body, and in both places, there are similar-looking cases where
 * we need to return false.
 *
 * Examples returning true:
 * await using foo = bar();
 * for (await using a of b) {}
 *
 * Examples returning false:
 * await using
 * await using + 1
 * await using instanceof T
 * for (await using;;) {}
 *
 * For now, we early return if we don't see `await`, then do a simple
 * backtracking-based lookahead for the `using` and identifier tokens. In the
 * future, this could be optimized with a character-based approach.
 */
function startsAwaitUsing() {
  if (!isContextual(ContextualKeyword._await)) {
    return false;
  }
  const snapshot = state.snapshot();
  // await
  next();
  if (!isContextual(ContextualKeyword._using) || hasPrecedingLineBreak()) {
    state.restoreFromSnapshot(snapshot);
    return false;
  }
  // using
  next();
  if (!match(TokenType.name) || hasPrecedingLineBreak()) {
    state.restoreFromSnapshot(snapshot);
    return false;
  }
  state.restoreFromSnapshot(snapshot);
  return true;
}

function parseDecorators() {
  while (match(TokenType.at)) {
    parseDecorator();
  }
}

function parseDecorator() {
  next();
  if (eat(TokenType.parenL)) {
    parseExpression();
    expect(TokenType.parenR);
  } else {
    parseIdentifier();
    while (eat(TokenType.dot)) {
      parseIdentifier();
    }
    parseMaybeDecoratorArguments();
  }
}

function parseMaybeDecoratorArguments() {
  if (isTypeScriptEnabled) {
    tsParseMaybeDecoratorArguments();
  } else {
    baseParseMaybeDecoratorArguments();
  }
}

function baseParseMaybeDecoratorArguments() {
  if (eat(TokenType.parenL)) {
    parseCallExpressionArguments();
  }
}

function parseBreakContinueStatement() {
  next();
  if (!isLineTerminator()) {
    parseIdentifier();
    semicolon$1();
  }
}

function parseDebuggerStatement() {
  next();
  semicolon$1();
}

function parseDoStatement() {
  next();
  parseStatement(false);
  expect(TokenType._while);
  parseParenExpression();
  eat(TokenType.semi);
}

function parseForStatement() {
  state.scopeDepth++;
  const startTokenIndex = state.tokens.length;
  parseAmbiguousForStatement();
  const endTokenIndex = state.tokens.length;
  state.scopes.push(new Scope(startTokenIndex, endTokenIndex, false));
  state.scopeDepth--;
}

/**
 * Determine if this token is a `using` declaration (explicit resource
 * management) as part of a loop.
 * https://github.com/tc39/proposal-explicit-resource-management
 */
function isUsingInLoop() {
  if (!isContextual(ContextualKeyword._using)) {
    return false;
  }
  // This must be `for (using of`, where `using` is the name of the loop
  // variable.
  if (isLookaheadContextual(ContextualKeyword._of)) {
    return false;
  }
  return true;
}

// Disambiguating between a `for` and a `for`/`in` or `for`/`of`
// loop is non-trivial. Basically, we have to parse the init `var`
// statement or expression, disallowing the `in` operator (see
// the second parameter to `parseExpression`), and then check
// whether the next token is `in` or `of`. When there is no init
// part (semicolon immediately after the opening parenthesis), it
// is a regular `for` loop.
function parseAmbiguousForStatement() {
  next();

  let forAwait = false;
  if (isContextual(ContextualKeyword._await)) {
    forAwait = true;
    next();
  }
  expect(TokenType.parenL);

  if (match(TokenType.semi)) {
    if (forAwait) {
      unexpected();
    }
    parseFor();
    return;
  }

  const isAwaitUsing = startsAwaitUsing();
  if (isAwaitUsing || match(TokenType._var) || match(TokenType._let) || match(TokenType._const) || isUsingInLoop()) {
    if (isAwaitUsing) {
      expectContextual(ContextualKeyword._await);
    }
    next();
    parseVar(true, state.type !== TokenType._var);
    if (match(TokenType._in) || isContextual(ContextualKeyword._of)) {
      parseForIn(forAwait);
      return;
    }
    parseFor();
    return;
  }

  parseExpression(true);
  if (match(TokenType._in) || isContextual(ContextualKeyword._of)) {
    parseForIn(forAwait);
    return;
  }
  if (forAwait) {
    unexpected();
  }
  parseFor();
}

function parseFunctionStatement() {
  const functionStart = state.start;
  next();
  parseFunction(functionStart, true);
}

function parseIfStatement() {
  next();
  parseParenExpression();
  parseStatement(false);
  if (eat(TokenType._else)) {
    parseStatement(false);
  }
}

function parseReturnStatement() {
  next();

  // In `return` (and `break`/`continue`), the keywords with
  // optional arguments, we eagerly look for a semicolon or the
  // possibility to insert one.

  if (!isLineTerminator()) {
    parseExpression();
    semicolon$1();
  }
}

function parseSwitchStatement() {
  next();
  parseParenExpression();
  state.scopeDepth++;
  const startTokenIndex = state.tokens.length;
  expect(TokenType.braceL);

  // Don't bother validation; just go through any sequence of cases, defaults, and statements.
  while (!match(TokenType.braceR) && !state.error) {
    if (match(TokenType._case) || match(TokenType._default)) {
      const isCase = match(TokenType._case);
      next();
      if (isCase) {
        parseExpression();
      }
      expect(TokenType.colon);
    } else {
      parseStatement(true);
    }
  }
  next(); // Closing brace
  const endTokenIndex = state.tokens.length;
  state.scopes.push(new Scope(startTokenIndex, endTokenIndex, false));
  state.scopeDepth--;
}

function parseThrowStatement() {
  next();
  parseExpression();
  semicolon$1();
}

function parseCatchClauseParam() {
  parseBindingAtom(true /* isBlockScope */);

  if (isTypeScriptEnabled) {
    tsTryParseTypeAnnotation();
  }
}

function parseTryStatement() {
  next();

  parseBlock();

  if (match(TokenType._catch)) {
    next();
    let catchBindingStartTokenIndex = null;
    if (match(TokenType.parenL)) {
      state.scopeDepth++;
      catchBindingStartTokenIndex = state.tokens.length;
      expect(TokenType.parenL);
      parseCatchClauseParam();
      expect(TokenType.parenR);
    }
    parseBlock();
    if (catchBindingStartTokenIndex != null) {
      // We need a special scope for the catch binding which includes the binding itself and the
      // catch block.
      const endTokenIndex = state.tokens.length;
      state.scopes.push(new Scope(catchBindingStartTokenIndex, endTokenIndex, false));
      state.scopeDepth--;
    }
  }
  if (eat(TokenType._finally)) {
    parseBlock();
  }
}

function parseVarStatement(isBlockScope) {
  next();
  parseVar(false, isBlockScope);
  semicolon$1();
}

function parseWhileStatement() {
  next();
  parseParenExpression();
  parseStatement(false);
}

function parseEmptyStatement() {
  next();
}

function parseLabeledStatement() {
  parseStatement(true);
}

/**
 * Parse a statement starting with an identifier of the given name. Subclasses match on the name
 * to handle statements like "declare".
 */
function parseIdentifierStatement(contextualKeyword) {
  if (isTypeScriptEnabled) {
    tsParseIdentifierStatement(contextualKeyword);
  } else if (isFlowEnabled) {
    flowParseIdentifierStatement(contextualKeyword);
  } else {
    semicolon$1();
  }
}

// Parse a semicolon-enclosed block of statements.
function parseBlock(isFunctionScope = false, contextId = 0) {
  const startTokenIndex = state.tokens.length;
  state.scopeDepth++;
  expect(TokenType.braceL);
  if (contextId) {
    state.tokens[state.tokens.length - 1].contextId = contextId;
  }
  parseBlockBody(TokenType.braceR);
  if (contextId) {
    state.tokens[state.tokens.length - 1].contextId = contextId;
  }
  const endTokenIndex = state.tokens.length;
  state.scopes.push(new Scope(startTokenIndex, endTokenIndex, isFunctionScope));
  state.scopeDepth--;
}

function parseBlockBody(end) {
  while (!eat(end) && !state.error) {
    parseStatement(true);
  }
}

// Parse a regular `for` loop. The disambiguation code in
// `parseStatement` will already have parsed the init statement or
// expression.

function parseFor() {
  expect(TokenType.semi);
  if (!match(TokenType.semi)) {
    parseExpression();
  }
  expect(TokenType.semi);
  if (!match(TokenType.parenR)) {
    parseExpression();
  }
  expect(TokenType.parenR);
  parseStatement(false);
}

// Parse a `for`/`in` and `for`/`of` loop, which are almost
// same from parser's perspective.

function parseForIn(forAwait) {
  if (forAwait) {
    eatContextual(ContextualKeyword._of);
  } else {
    next();
  }
  parseExpression();
  expect(TokenType.parenR);
  parseStatement(false);
}

// Parse a list of variable declarations.

function parseVar(isFor, isBlockScope) {
  while (true) {
    parseVarHead(isBlockScope);
    if (eat(TokenType.eq)) {
      const eqIndex = state.tokens.length - 1;
      parseMaybeAssign(isFor);
      state.tokens[eqIndex].rhsEndIndex = state.tokens.length;
    }
    if (!eat(TokenType.comma)) {
      break;
    }
  }
}

function parseVarHead(isBlockScope) {
  parseBindingAtom(isBlockScope);
  if (isTypeScriptEnabled) {
    tsAfterParseVarHead();
  } else if (isFlowEnabled) {
    flowAfterParseVarHead();
  }
}

// Parse a function declaration or literal (depending on the
// `isStatement` parameter).

function parseFunction(
  functionStart,
  isStatement,
  optionalId = false,
) {
  if (match(TokenType.star)) {
    next();
  }

  if (isStatement && !optionalId && !match(TokenType.name) && !match(TokenType._yield)) {
    unexpected();
  }

  let nameScopeStartTokenIndex = null;

  if (match(TokenType.name)) {
    // Expression-style functions should limit their name's scope to the function body, so we make
    // a new function scope to enforce that.
    if (!isStatement) {
      nameScopeStartTokenIndex = state.tokens.length;
      state.scopeDepth++;
    }
    parseBindingIdentifier(false);
  }

  const startTokenIndex = state.tokens.length;
  state.scopeDepth++;
  parseFunctionParams();
  parseFunctionBodyAndFinish(functionStart);
  const endTokenIndex = state.tokens.length;
  // In addition to the block scope of the function body, we need a separate function-style scope
  // that includes the params.
  state.scopes.push(new Scope(startTokenIndex, endTokenIndex, true));
  state.scopeDepth--;
  if (nameScopeStartTokenIndex !== null) {
    state.scopes.push(new Scope(nameScopeStartTokenIndex, endTokenIndex, true));
    state.scopeDepth--;
  }
}

function parseFunctionParams(
  allowModifiers = false,
  funcContextId = 0,
) {
  if (isTypeScriptEnabled) {
    tsStartParseFunctionParams();
  } else if (isFlowEnabled) {
    flowStartParseFunctionParams();
  }

  expect(TokenType.parenL);
  if (funcContextId) {
    state.tokens[state.tokens.length - 1].contextId = funcContextId;
  }
  parseBindingList(
    TokenType.parenR,
    false /* isBlockScope */,
    false /* allowEmpty */,
    allowModifiers,
    funcContextId,
  );
  if (funcContextId) {
    state.tokens[state.tokens.length - 1].contextId = funcContextId;
  }
}

// Parse a class declaration or literal (depending on the
// `isStatement` parameter).

function parseClass(isStatement, optionalId = false) {
  // Put a context ID on the class keyword, the open-brace, and the close-brace, so that later
  // code can easily navigate to meaningful points on the class.
  const contextId = getNextContextId();

  next();
  state.tokens[state.tokens.length - 1].contextId = contextId;
  state.tokens[state.tokens.length - 1].isExpression = !isStatement;
  // Like with functions, we declare a special "name scope" from the start of the name to the end
  // of the class, but only with expression-style classes, to represent the fact that the name is
  // available to the body of the class but not an outer declaration.
  let nameScopeStartTokenIndex = null;
  if (!isStatement) {
    nameScopeStartTokenIndex = state.tokens.length;
    state.scopeDepth++;
  }
  parseClassId(isStatement, optionalId);
  parseClassSuper();
  const openBraceIndex = state.tokens.length;
  parseClassBody(contextId);
  if (state.error) {
    return;
  }
  state.tokens[openBraceIndex].contextId = contextId;
  state.tokens[state.tokens.length - 1].contextId = contextId;
  if (nameScopeStartTokenIndex !== null) {
    const endTokenIndex = state.tokens.length;
    state.scopes.push(new Scope(nameScopeStartTokenIndex, endTokenIndex, false));
    state.scopeDepth--;
  }
}

function isClassProperty() {
  return match(TokenType.eq) || match(TokenType.semi) || match(TokenType.braceR) || match(TokenType.bang) || match(TokenType.colon);
}

function isClassMethod() {
  return match(TokenType.parenL) || match(TokenType.lessThan);
}

function parseClassBody(classContextId) {
  expect(TokenType.braceL);

  while (!eat(TokenType.braceR) && !state.error) {
    if (eat(TokenType.semi)) {
      continue;
    }

    if (match(TokenType.at)) {
      parseDecorator();
      continue;
    }
    const memberStart = state.start;
    parseClassMember(memberStart, classContextId);
  }
}

function parseClassMember(memberStart, classContextId) {
  if (isTypeScriptEnabled) {
    tsParseModifiers([
      ContextualKeyword._declare,
      ContextualKeyword._public,
      ContextualKeyword._protected,
      ContextualKeyword._private,
      ContextualKeyword._override,
    ]);
  }
  let isStatic = false;
  if (match(TokenType.name) && state.contextualKeyword === ContextualKeyword._static) {
    parseIdentifier(); // eats 'static'
    if (isClassMethod()) {
      parseClassMethod(memberStart, /* isConstructor */ false);
      return;
    } else if (isClassProperty()) {
      parseClassProperty();
      return;
    }
    // otherwise something static
    state.tokens[state.tokens.length - 1].type = TokenType._static;
    isStatic = true;

    if (match(TokenType.braceL)) {
      // This is a static block. Mark the word "static" with the class context ID for class element
      // detection and parse as a regular block.
      state.tokens[state.tokens.length - 1].contextId = classContextId;
      parseBlock();
      return;
    }
  }

  parseClassMemberWithIsStatic(memberStart, isStatic, classContextId);
}

function parseClassMemberWithIsStatic(
  memberStart,
  isStatic,
  classContextId,
) {
  if (isTypeScriptEnabled) {
    if (tsTryParseClassMemberWithIsStatic(isStatic)) {
      return;
    }
  }
  if (eat(TokenType.star)) {
    // a generator
    parseClassPropertyName(classContextId);
    parseClassMethod(memberStart, /* isConstructor */ false);
    return;
  }

  // Get the identifier name so we can tell if it's actually a keyword like "async", "get", or
  // "set".
  parseClassPropertyName(classContextId);
  let isConstructor = false;
  const token = state.tokens[state.tokens.length - 1];
  // We allow "constructor" as either an identifier or a string.
  if (token.contextualKeyword === ContextualKeyword._constructor) {
    isConstructor = true;
  }
  parsePostMemberNameModifiers();

  if (isClassMethod()) {
    parseClassMethod(memberStart, isConstructor);
  } else if (isClassProperty()) {
    parseClassProperty();
  } else if (token.contextualKeyword === ContextualKeyword._async && !isLineTerminator()) {
    state.tokens[state.tokens.length - 1].type = TokenType._async;
    // an async method
    const isGenerator = match(TokenType.star);
    if (isGenerator) {
      next();
    }

    // The so-called parsed name would have been "async": get the real name.
    parseClassPropertyName(classContextId);
    parsePostMemberNameModifiers();
    parseClassMethod(memberStart, false /* isConstructor */);
  } else if (
    (token.contextualKeyword === ContextualKeyword._get ||
      token.contextualKeyword === ContextualKeyword._set) &&
    !(isLineTerminator() && match(TokenType.star))
  ) {
    if (token.contextualKeyword === ContextualKeyword._get) {
      state.tokens[state.tokens.length - 1].type = TokenType._get;
    } else {
      state.tokens[state.tokens.length - 1].type = TokenType._set;
    }
    // `get\n*` is an uninitialized property named 'get' followed by a generator.
    // a getter or setter
    // The so-called parsed name would have been "get/set": get the real name.
    parseClassPropertyName(classContextId);
    parseClassMethod(memberStart, /* isConstructor */ false);
  } else if (token.contextualKeyword === ContextualKeyword._accessor && !isLineTerminator()) {
    parseClassPropertyName(classContextId);
    parseClassProperty();
  } else if (isLineTerminator()) {
    // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)
    parseClassProperty();
  } else {
    unexpected();
  }
}

function parseClassMethod(functionStart, isConstructor) {
  if (isTypeScriptEnabled) {
    tsTryParseTypeParameters();
  } else if (isFlowEnabled) {
    if (match(TokenType.lessThan)) {
      flowParseTypeParameterDeclaration();
    }
  }
  parseMethod(functionStart, isConstructor);
}

// Return the name of the class property, if it is a simple identifier.
function parseClassPropertyName(classContextId) {
  parsePropertyName(classContextId);
}

function parsePostMemberNameModifiers() {
  if (isTypeScriptEnabled) {
    const oldIsType = pushTypeContext(0);
    eat(TokenType.question);
    popTypeContext(oldIsType);
  }
}

function parseClassProperty() {
  if (isTypeScriptEnabled) {
    eatTypeToken(TokenType.bang);
    tsTryParseTypeAnnotation();
  } else if (isFlowEnabled) {
    if (match(TokenType.colon)) {
      flowParseTypeAnnotation();
    }
  }

  if (match(TokenType.eq)) {
    const equalsTokenIndex = state.tokens.length;
    next();
    parseMaybeAssign();
    state.tokens[equalsTokenIndex].rhsEndIndex = state.tokens.length;
  }
  semicolon$1();
}

function parseClassId(isStatement, optionalId = false) {
  if (
    isTypeScriptEnabled &&
    (!isStatement || optionalId) &&
    isContextual(ContextualKeyword._implements)
  ) {
    return;
  }

  if (match(TokenType.name)) {
    parseBindingIdentifier(true);
  }

  if (isTypeScriptEnabled) {
    tsTryParseTypeParameters();
  } else if (isFlowEnabled) {
    if (match(TokenType.lessThan)) {
      flowParseTypeParameterDeclaration();
    }
  }
}

// Returns true if there was a superclass.
function parseClassSuper() {
  let hasSuper = false;
  if (eat(TokenType._extends)) {
    parseExprSubscripts();
    hasSuper = true;
  } else {
    hasSuper = false;
  }
  if (isTypeScriptEnabled) {
    tsAfterParseClassSuper(hasSuper);
  } else if (isFlowEnabled) {
    flowAfterParseClassSuper(hasSuper);
  }
}

// Parses module export declaration.

function parseExport() {
  const exportIndex = state.tokens.length - 1;
  if (isTypeScriptEnabled) {
    if (tsTryParseExport()) {
      return;
    }
  }
  // export * from '...'
  if (shouldParseExportStar()) {
    parseExportStar();
  } else if (isExportDefaultSpecifier()) {
    // export default from
    parseIdentifier();
    if (match(TokenType.comma) && lookaheadType() === TokenType.star) {
      expect(TokenType.comma);
      expect(TokenType.star);
      expectContextual(ContextualKeyword._as);
      parseIdentifier();
    } else {
      parseExportSpecifiersMaybe();
    }
    parseExportFrom();
  } else if (eat(TokenType._default)) {
    // export default ...
    parseExportDefaultExpression();
  } else if (shouldParseExportDeclaration()) {
    parseExportDeclaration();
  } else {
    // export { x, y as z } [from '...']
    parseExportSpecifiers();
    parseExportFrom();
  }
  state.tokens[exportIndex].rhsEndIndex = state.tokens.length;
}

function parseExportDefaultExpression() {
  if (isTypeScriptEnabled) {
    if (tsTryParseExportDefaultExpression()) {
      return;
    }
  }
  if (isFlowEnabled) {
    if (flowTryParseExportDefaultExpression()) {
      return;
    }
  }
  const functionStart = state.start;
  if (eat(TokenType._function)) {
    parseFunction(functionStart, true, true);
  } else if (isContextual(ContextualKeyword._async) && lookaheadType() === TokenType._function) {
    // async function declaration
    eatContextual(ContextualKeyword._async);
    eat(TokenType._function);
    parseFunction(functionStart, true, true);
  } else if (match(TokenType._class)) {
    parseClass(true, true);
  } else if (match(TokenType.at)) {
    parseDecorators();
    parseClass(true, true);
  } else {
    parseMaybeAssign();
    semicolon$1();
  }
}

function parseExportDeclaration() {
  if (isTypeScriptEnabled) {
    tsParseExportDeclaration();
  } else if (isFlowEnabled) {
    flowParseExportDeclaration();
  } else {
    parseStatement(true);
  }
}

function isExportDefaultSpecifier() {
  if (isTypeScriptEnabled && tsIsDeclarationStart()) {
    return false;
  } else if (isFlowEnabled && flowShouldDisallowExportDefaultSpecifier()) {
    return false;
  }
  if (match(TokenType.name)) {
    return state.contextualKeyword !== ContextualKeyword._async;
  }

  if (!match(TokenType._default)) {
    return false;
  }

  const _next = nextTokenStart();
  const lookahead = lookaheadTypeAndKeyword();
  const hasFrom =
    lookahead.type === TokenType.name && lookahead.contextualKeyword === ContextualKeyword._from;
  if (lookahead.type === TokenType.comma) {
    return true;
  }
  // lookahead again when `export default from` is seen
  if (hasFrom) {
    const nextAfterFrom = input.charCodeAt(nextTokenStartSince(_next + 4));
    return nextAfterFrom === charCodes.quotationMark || nextAfterFrom === charCodes.apostrophe;
  }
  return false;
}

function parseExportSpecifiersMaybe() {
  if (eat(TokenType.comma)) {
    parseExportSpecifiers();
  }
}

function parseExportFrom() {
  if (eatContextual(ContextualKeyword._from)) {
    parseExprAtom();
    maybeParseImportAttributes();
  }
  semicolon$1();
}

function shouldParseExportStar() {
  if (isFlowEnabled) {
    return flowShouldParseExportStar();
  } else {
    return match(TokenType.star);
  }
}

function parseExportStar() {
  if (isFlowEnabled) {
    flowParseExportStar();
  } else {
    baseParseExportStar();
  }
}

function baseParseExportStar() {
  expect(TokenType.star);

  if (isContextual(ContextualKeyword._as)) {
    parseExportNamespace();
  } else {
    parseExportFrom();
  }
}

function parseExportNamespace() {
  next();
  state.tokens[state.tokens.length - 1].type = TokenType._as;
  parseIdentifier();
  parseExportSpecifiersMaybe();
  parseExportFrom();
}

function shouldParseExportDeclaration() {
  return (
    (isTypeScriptEnabled && tsIsDeclarationStart()) ||
    (isFlowEnabled && flowShouldParseExportDeclaration()) ||
    state.type === TokenType._var ||
    state.type === TokenType._const ||
    state.type === TokenType._let ||
    state.type === TokenType._function ||
    state.type === TokenType._class ||
    isContextual(ContextualKeyword._async) ||
    match(TokenType.at)
  );
}

// Parses a comma-separated list of module exports.
function parseExportSpecifiers() {
  let first = true;

  // export { x, y as z } [from '...']
  expect(TokenType.braceL);

  while (!eat(TokenType.braceR) && !state.error) {
    if (first) {
      first = false;
    } else {
      expect(TokenType.comma);
      if (eat(TokenType.braceR)) {
        break;
      }
    }
    parseExportSpecifier();
  }
}

function parseExportSpecifier() {
  if (isTypeScriptEnabled) {
    tsParseExportSpecifier();
    return;
  }
  parseIdentifier();
  state.tokens[state.tokens.length - 1].identifierRole = IdentifierRole.ExportAccess;
  if (eatContextual(ContextualKeyword._as)) {
    parseIdentifier();
  }
}

/**
 * Starting at the `module` token in an import, determine if it was truly an
 * import reflection token or just looks like one.
 *
 * Returns true for:
 * import module foo from "foo";
 * import module from from "foo";
 *
 * Returns false for:
 * import module from "foo";
 * import module, {bar} from "foo";
 */
function isImportReflection() {
  const snapshot = state.snapshot();
  expectContextual(ContextualKeyword._module);
  if (eatContextual(ContextualKeyword._from)) {
    if (isContextual(ContextualKeyword._from)) {
      state.restoreFromSnapshot(snapshot);
      return true;
    } else {
      state.restoreFromSnapshot(snapshot);
      return false;
    }
  } else if (match(TokenType.comma)) {
    state.restoreFromSnapshot(snapshot);
    return false;
  } else {
    state.restoreFromSnapshot(snapshot);
    return true;
  }
}

/**
 * Eat the "module" token from the import reflection proposal.
 * https://github.com/tc39/proposal-import-reflection
 */
function parseMaybeImportReflection() {
  // isImportReflection does snapshot/restore, so only run it if we see the word
  // "module".
  if (isContextual(ContextualKeyword._module) && isImportReflection()) {
    next();
  }
}

// Parses import declaration.

function parseImport() {
  if (isTypeScriptEnabled && match(TokenType.name) && lookaheadType() === TokenType.eq) {
    tsParseImportEqualsDeclaration();
    return;
  }
  if (isTypeScriptEnabled && isContextual(ContextualKeyword._type)) {
    const lookahead = lookaheadTypeAndKeyword();
    if (lookahead.type === TokenType.name && lookahead.contextualKeyword !== ContextualKeyword._from) {
      // One of these `import type` cases:
      // import type T = require('T');
      // import type A from 'A';
      expectContextual(ContextualKeyword._type);
      if (lookaheadType() === TokenType.eq) {
        tsParseImportEqualsDeclaration();
        return;
      }
      // If this is an `import type...from` statement, then we already ate the
      // type token, so proceed to the regular import parser.
    } else if (lookahead.type === TokenType.star || lookahead.type === TokenType.braceL) {
      // One of these `import type` cases, in which case we can eat the type token
      // and proceed as normal:
      // import type * as A from 'A';
      // import type {a} from 'A';
      expectContextual(ContextualKeyword._type);
    }
    // Otherwise, we are importing the name "type".
  }

  // import '...'
  if (match(TokenType.string)) {
    parseExprAtom();
  } else {
    parseMaybeImportReflection();
    parseImportSpecifiers();
    expectContextual(ContextualKeyword._from);
    parseExprAtom();
  }
  maybeParseImportAttributes();
  semicolon$1();
}

// eslint-disable-next-line no-unused-vars
function shouldParseDefaultImport() {
  return match(TokenType.name);
}

function parseImportSpecifierLocal() {
  parseImportedIdentifier();
}

// Parses a comma-separated list of module imports.
function parseImportSpecifiers() {
  if (isFlowEnabled) {
    flowStartParseImportSpecifiers();
  }

  let first = true;
  if (shouldParseDefaultImport()) {
    // import defaultObj, { x, y as z } from '...'
    parseImportSpecifierLocal();

    if (!eat(TokenType.comma)) return;
  }

  if (match(TokenType.star)) {
    next();
    expectContextual(ContextualKeyword._as);

    parseImportSpecifierLocal();

    return;
  }

  expect(TokenType.braceL);
  while (!eat(TokenType.braceR) && !state.error) {
    if (first) {
      first = false;
    } else {
      // Detect an attempt to deep destructure
      if (eat(TokenType.colon)) {
        unexpected(
          "ES2015 named imports do not destructure. Use another statement for destructuring after the import.",
        );
      }

      expect(TokenType.comma);
      if (eat(TokenType.braceR)) {
        break;
      }
    }

    parseImportSpecifier();
  }
}

function parseImportSpecifier() {
  if (isTypeScriptEnabled) {
    tsParseImportSpecifier();
    return;
  }
  if (isFlowEnabled) {
    flowParseImportSpecifier();
    return;
  }
  parseImportedIdentifier();
  if (isContextual(ContextualKeyword._as)) {
    state.tokens[state.tokens.length - 1].identifierRole = IdentifierRole.ImportAccess;
    next();
    parseImportedIdentifier();
  }
}

/**
 * Parse import attributes like `with {type: "json"}`, or the legacy form
 * `assert {type: "json"}`.
 *
 * Import attributes technically have their own syntax, but are always parseable
 * as a plain JS object, so just do that for simplicity.
 */
function maybeParseImportAttributes() {
  if (match(TokenType._with) || (isContextual(ContextualKeyword._assert) && !hasPrecedingLineBreak())) {
    next();
    parseObj(false, false);
  }
}

function parseFile() {
  // If enabled, skip leading hashbang line.
  if (
    state.pos === 0 &&
    input.charCodeAt(0) === charCodes.numberSign &&
    input.charCodeAt(1) === charCodes.exclamationMark
  ) {
    skipLineComment(2);
  }
  nextToken();
  return parseTopLevel();
}

class File {
  
  

  constructor(tokens, scopes) {
    this.tokens = tokens;
    this.scopes = scopes;
  }
}

function parse(
  input,
  isJSXEnabled,
  isTypeScriptEnabled,
  isFlowEnabled,
) {
  if (isFlowEnabled && isTypeScriptEnabled) {
    throw new Error("Cannot combine flow and typescript plugins.");
  }
  initParser(input, isJSXEnabled, isTypeScriptEnabled, isFlowEnabled);
  const result = parseFile();
  if (state.error) {
    throw augmentError(state.error);
  }
  return result;
}

/**
 * Determine whether this optional chain or nullish coalescing operation has any await statements in
 * it. If so, we'll need to transpile to an async operation.
 *
 * We compute this by walking the length of the operation and returning true if we see an await
 * keyword used as a real await (rather than an object key or property access). Nested optional
 * chain/nullish operations need to be tracked but don't silence await, but a nested async function
 * (or any other nested scope) will make the await not count.
 */
function isAsyncOperation(tokens) {
  let index = tokens.currentIndex();
  let depth = 0;
  const startToken = tokens.currentToken();
  do {
    const token = tokens.tokens[index];
    if (token.isOptionalChainStart) {
      depth++;
    }
    if (token.isOptionalChainEnd) {
      depth--;
    }
    depth += token.numNullishCoalesceStarts;
    depth -= token.numNullishCoalesceEnds;

    if (
      token.contextualKeyword === ContextualKeyword._await &&
      token.identifierRole == null &&
      token.scopeDepth === startToken.scopeDepth
    ) {
      return true;
    }
    index += 1;
  } while (depth > 0 && index < tokens.tokens.length);
  return false;
}

class TokenProcessor {
   __init() {this.resultCode = "";}
  // Array mapping input token index to optional string index position in the
  // output code.
   __init2() {this.resultMappings = new Array(this.tokens.length);}
   __init3() {this.tokenIndex = 0;}

  constructor(
     code,
     tokens,
     isFlowEnabled,
     disableESTransforms,
     helperManager,
  ) {this.code = code;this.tokens = tokens;this.isFlowEnabled = isFlowEnabled;this.disableESTransforms = disableESTransforms;this.helperManager = helperManager;TokenProcessor.prototype.__init.call(this);TokenProcessor.prototype.__init2.call(this);TokenProcessor.prototype.__init3.call(this);}

  /**
   * Snapshot the token state in a way that can be restored later, useful for
   * things like lookahead.
   *
   * resultMappings do not need to be copied since in all use cases, they will
   * be overwritten anyway after restore.
   */
  snapshot() {
    return {
      resultCode: this.resultCode,
      tokenIndex: this.tokenIndex,
    };
  }

  restoreToSnapshot(snapshot) {
    this.resultCode = snapshot.resultCode;
    this.tokenIndex = snapshot.tokenIndex;
  }

  /**
   * Remove and return the code generated since the snapshot, leaving the
   * current token position in-place. Unlike most TokenProcessor operations,
   * this operation can result in input/output line number mismatches because
   * the removed code may contain newlines, so this operation should be used
   * sparingly.
   */
  dangerouslyGetAndRemoveCodeSinceSnapshot(snapshot) {
    const result = this.resultCode.slice(snapshot.resultCode.length);
    this.resultCode = snapshot.resultCode;
    return result;
  }

  reset() {
    this.resultCode = "";
    this.resultMappings = new Array(this.tokens.length);
    this.tokenIndex = 0;
  }

  matchesContextualAtIndex(index, contextualKeyword) {
    return (
      this.matches1AtIndex(index, TokenType.name) &&
      this.tokens[index].contextualKeyword === contextualKeyword
    );
  }

  identifierNameAtIndex(index) {
    // TODO: We need to process escapes since technically you can have unicode escapes in variable
    // names.
    return this.identifierNameForToken(this.tokens[index]);
  }

  identifierNameAtRelativeIndex(relativeIndex) {
    return this.identifierNameForToken(this.tokenAtRelativeIndex(relativeIndex));
  }

  identifierName() {
    return this.identifierNameForToken(this.currentToken());
  }

  identifierNameForToken(token) {
    return this.code.slice(token.start, token.end);
  }

  rawCodeForToken(token) {
    return this.code.slice(token.start, token.end);
  }

  stringValueAtIndex(index) {
    return this.stringValueForToken(this.tokens[index]);
  }

  stringValue() {
    return this.stringValueForToken(this.currentToken());
  }

  stringValueForToken(token) {
    // This is used to identify when two imports are the same and to resolve TypeScript enum keys.
    // Ideally we'd process escapes within the strings, but for now we pretty much take the raw
    // code.
    return this.code.slice(token.start + 1, token.end - 1);
  }

  matches1AtIndex(index, t1) {
    return this.tokens[index].type === t1;
  }

  matches2AtIndex(index, t1, t2) {
    return this.tokens[index].type === t1 && this.tokens[index + 1].type === t2;
  }

  matches3AtIndex(index, t1, t2, t3) {
    return (
      this.tokens[index].type === t1 &&
      this.tokens[index + 1].type === t2 &&
      this.tokens[index + 2].type === t3
    );
  }

  matches1(t1) {
    return this.tokens[this.tokenIndex].type === t1;
  }

  matches2(t1, t2) {
    return this.tokens[this.tokenIndex].type === t1 && this.tokens[this.tokenIndex + 1].type === t2;
  }

  matches3(t1, t2, t3) {
    return (
      this.tokens[this.tokenIndex].type === t1 &&
      this.tokens[this.tokenIndex + 1].type === t2 &&
      this.tokens[this.tokenIndex + 2].type === t3
    );
  }

  matches4(t1, t2, t3, t4) {
    return (
      this.tokens[this.tokenIndex].type === t1 &&
      this.tokens[this.tokenIndex + 1].type === t2 &&
      this.tokens[this.tokenIndex + 2].type === t3 &&
      this.tokens[this.tokenIndex + 3].type === t4
    );
  }

  matches5(t1, t2, t3, t4, t5) {
    return (
      this.tokens[this.tokenIndex].type === t1 &&
      this.tokens[this.tokenIndex + 1].type === t2 &&
      this.tokens[this.tokenIndex + 2].type === t3 &&
      this.tokens[this.tokenIndex + 3].type === t4 &&
      this.tokens[this.tokenIndex + 4].type === t5
    );
  }

  matchesContextual(contextualKeyword) {
    return this.matchesContextualAtIndex(this.tokenIndex, contextualKeyword);
  }

  matchesContextIdAndLabel(type, contextId) {
    return this.matches1(type) && this.currentToken().contextId === contextId;
  }

  previousWhitespaceAndComments() {
    let whitespaceAndComments = this.code.slice(
      this.tokenIndex > 0 ? this.tokens[this.tokenIndex - 1].end : 0,
      this.tokenIndex < this.tokens.length ? this.tokens[this.tokenIndex].start : this.code.length,
    );
    if (this.isFlowEnabled) {
      whitespaceAndComments = whitespaceAndComments.replace(/@flow/g, "");
    }
    return whitespaceAndComments;
  }

  replaceToken(newCode) {
    this.resultCode += this.previousWhitespaceAndComments();
    this.appendTokenPrefix();
    this.resultMappings[this.tokenIndex] = this.resultCode.length;
    this.resultCode += newCode;
    this.appendTokenSuffix();
    this.tokenIndex++;
  }

  replaceTokenTrimmingLeftWhitespace(newCode) {
    this.resultCode += this.previousWhitespaceAndComments().replace(/[^\r\n]/g, "");
    this.appendTokenPrefix();
    this.resultMappings[this.tokenIndex] = this.resultCode.length;
    this.resultCode += newCode;
    this.appendTokenSuffix();
    this.tokenIndex++;
  }

  removeInitialToken() {
    this.replaceToken("");
  }

  removeToken() {
    this.replaceTokenTrimmingLeftWhitespace("");
  }

  /**
   * Remove all code until the next }, accounting for balanced braces.
   */
  removeBalancedCode() {
    let braceDepth = 0;
    while (!this.isAtEnd()) {
      if (this.matches1(TokenType.braceL)) {
        braceDepth++;
      } else if (this.matches1(TokenType.braceR)) {
        if (braceDepth === 0) {
          return;
        }
        braceDepth--;
      }
      this.removeToken();
    }
  }

  copyExpectedToken(tokenType) {
    if (this.tokens[this.tokenIndex].type !== tokenType) {
      throw new Error(`Expected token ${tokenType}`);
    }
    this.copyToken();
  }

  copyToken() {
    this.resultCode += this.previousWhitespaceAndComments();
    this.appendTokenPrefix();
    this.resultMappings[this.tokenIndex] = this.resultCode.length;
    this.resultCode += this.code.slice(
      this.tokens[this.tokenIndex].start,
      this.tokens[this.tokenIndex].end,
    );
    this.appendTokenSuffix();
    this.tokenIndex++;
  }

  copyTokenWithPrefix(prefix) {
    this.resultCode += this.previousWhitespaceAndComments();
    this.appendTokenPrefix();
    this.resultCode += prefix;
    this.resultMappings[this.tokenIndex] = this.resultCode.length;
    this.resultCode += this.code.slice(
      this.tokens[this.tokenIndex].start,
      this.tokens[this.tokenIndex].end,
    );
    this.appendTokenSuffix();
    this.tokenIndex++;
  }

   appendTokenPrefix() {
    const token = this.currentToken();
    if (token.numNullishCoalesceStarts || token.isOptionalChainStart) {
      token.isAsyncOperation = isAsyncOperation(this);
    }
    if (this.disableESTransforms) {
      return;
    }
    if (token.numNullishCoalesceStarts) {
      for (let i = 0; i < token.numNullishCoalesceStarts; i++) {
        if (token.isAsyncOperation) {
          this.resultCode += "await ";
          this.resultCode += this.helperManager.getHelperName("asyncNullishCoalesce");
        } else {
          this.resultCode += this.helperManager.getHelperName("nullishCoalesce");
        }
        this.resultCode += "(";
      }
    }
    if (token.isOptionalChainStart) {
      if (token.isAsyncOperation) {
        this.resultCode += "await ";
      }
      if (this.tokenIndex > 0 && this.tokenAtRelativeIndex(-1).type === TokenType._delete) {
        if (token.isAsyncOperation) {
          this.resultCode += this.helperManager.getHelperName("asyncOptionalChainDelete");
        } else {
          this.resultCode += this.helperManager.getHelperName("optionalChainDelete");
        }
      } else if (token.isAsyncOperation) {
        this.resultCode += this.helperManager.getHelperName("asyncOptionalChain");
      } else {
        this.resultCode += this.helperManager.getHelperName("optionalChain");
      }
      this.resultCode += "([";
    }
  }

   appendTokenSuffix() {
    const token = this.currentToken();
    if (token.isOptionalChainEnd && !this.disableESTransforms) {
      this.resultCode += "])";
    }
    if (token.numNullishCoalesceEnds && !this.disableESTransforms) {
      for (let i = 0; i < token.numNullishCoalesceEnds; i++) {
        this.resultCode += "))";
      }
    }
  }

  appendCode(code) {
    this.resultCode += code;
  }

  currentToken() {
    return this.tokens[this.tokenIndex];
  }

  currentTokenCode() {
    const token = this.currentToken();
    return this.code.slice(token.start, token.end);
  }

  tokenAtRelativeIndex(relativeIndex) {
    return this.tokens[this.tokenIndex + relativeIndex];
  }

  currentIndex() {
    return this.tokenIndex;
  }

  /**
   * Move to the next token. Only suitable in preprocessing steps. When
   * generating new code, you should use copyToken or removeToken.
   */
  nextToken() {
    if (this.tokenIndex === this.tokens.length) {
      throw new Error("Unexpectedly reached end of input.");
    }
    this.tokenIndex++;
  }

  previousToken() {
    this.tokenIndex--;
  }

  finish() {
    if (this.tokenIndex !== this.tokens.length) {
      throw new Error("Tried to finish processing tokens before reaching the end.");
    }
    this.resultCode += this.previousWhitespaceAndComments();
    return {code: this.resultCode, mappings: this.resultMappings};
  }

  isAtEnd() {
    return this.tokenIndex === this.tokens.length;
  }
}

/**
 * Get information about the class fields for this class, given a token processor pointing to the
 * open-brace at the start of the class.
 */
function getClassInfo(
  rootTransformer,
  tokens,
  nameManager,
  disableESTransforms,
) {
  const snapshot = tokens.snapshot();

  const headerInfo = processClassHeader(tokens);

  let constructorInitializerStatements = [];
  const instanceInitializerNames = [];
  const staticInitializerNames = [];
  let constructorInsertPos = null;
  const fields = [];
  const rangesToRemove = [];

  const classContextId = tokens.currentToken().contextId;
  if (classContextId == null) {
    throw new Error("Expected non-null class context ID on class open-brace.");
  }

  tokens.nextToken();
  while (!tokens.matchesContextIdAndLabel(TokenType.braceR, classContextId)) {
    if (tokens.matchesContextual(ContextualKeyword._constructor) && !tokens.currentToken().isType) {
      ({constructorInitializerStatements, constructorInsertPos} = processConstructor(tokens));
    } else if (tokens.matches1(TokenType.semi)) {
      if (!disableESTransforms) {
        rangesToRemove.push({start: tokens.currentIndex(), end: tokens.currentIndex() + 1});
      }
      tokens.nextToken();
    } else if (tokens.currentToken().isType) {
      tokens.nextToken();
    } else {
      // Either a method or a field. Skip to the identifier part.
      const statementStartIndex = tokens.currentIndex();
      let isStatic = false;
      let isESPrivate = false;
      let isDeclareOrAbstract = false;
      while (isAccessModifier(tokens.currentToken())) {
        if (tokens.matches1(TokenType._static)) {
          isStatic = true;
        }
        if (tokens.matches1(TokenType.hash)) {
          isESPrivate = true;
        }
        if (tokens.matches1(TokenType._declare) || tokens.matches1(TokenType._abstract)) {
          isDeclareOrAbstract = true;
        }
        tokens.nextToken();
      }
      if (isStatic && tokens.matches1(TokenType.braceL)) {
        // This is a static block, so don't process it in any special way.
        skipToNextClassElement(tokens, classContextId);
        continue;
      }
      if (isESPrivate) {
        // Sucrase doesn't attempt to transpile private fields; just leave them as-is.
        skipToNextClassElement(tokens, classContextId);
        continue;
      }
      if (
        tokens.matchesContextual(ContextualKeyword._constructor) &&
        !tokens.currentToken().isType
      ) {
        ({constructorInitializerStatements, constructorInsertPos} = processConstructor(tokens));
        continue;
      }

      const nameStartIndex = tokens.currentIndex();
      skipFieldName(tokens);
      if (tokens.matches1(TokenType.lessThan) || tokens.matches1(TokenType.parenL)) {
        // This is a method, so nothing to process.
        skipToNextClassElement(tokens, classContextId);
        continue;
      }
      // There might be a type annotation that we need to skip.
      while (tokens.currentToken().isType) {
        tokens.nextToken();
      }
      if (tokens.matches1(TokenType.eq)) {
        const equalsIndex = tokens.currentIndex();
        // This is an initializer, so we need to wrap in an initializer method.
        const valueEnd = tokens.currentToken().rhsEndIndex;
        if (valueEnd == null) {
          throw new Error("Expected rhsEndIndex on class field assignment.");
        }
        tokens.nextToken();
        while (tokens.currentIndex() < valueEnd) {
          rootTransformer.processToken();
        }
        let initializerName;
        if (isStatic) {
          initializerName = nameManager.claimFreeName("__initStatic");
          staticInitializerNames.push(initializerName);
        } else {
          initializerName = nameManager.claimFreeName("__init");
          instanceInitializerNames.push(initializerName);
        }
        // Fields start at the name, so `static x = 1;` has a field range of `x = 1;`.
        fields.push({
          initializerName,
          equalsIndex,
          start: nameStartIndex,
          end: tokens.currentIndex(),
        });
      } else if (!disableESTransforms || isDeclareOrAbstract) {
        // This is a regular field declaration, like `x;`. With the class transform enabled, we just
        // remove the line so that no output is produced. With the class transform disabled, we
        // usually want to preserve the declaration (but still strip types), but if the `declare`
        // or `abstract` keyword is specified, we should remove the line to avoid initializing the
        // value to undefined.
        rangesToRemove.push({start: statementStartIndex, end: tokens.currentIndex()});
      }
    }
  }

  tokens.restoreToSnapshot(snapshot);
  if (disableESTransforms) {
    // With ES transforms disabled, we don't want to transform regular class
    // field declarations, and we don't need to do any additional tricks to
    // reference the constructor for static init, but we still need to transform
    // TypeScript field initializers defined as constructor parameters and we
    // still need to remove `declare` fields. For now, we run the same code
    // path but omit any field information, as if the class had no field
    // declarations. In the future, when we fully drop the class fields
    // transform, we can simplify this code significantly.
    return {
      headerInfo,
      constructorInitializerStatements,
      instanceInitializerNames: [],
      staticInitializerNames: [],
      constructorInsertPos,
      fields: [],
      rangesToRemove,
    };
  } else {
    return {
      headerInfo,
      constructorInitializerStatements,
      instanceInitializerNames,
      staticInitializerNames,
      constructorInsertPos,
      fields,
      rangesToRemove,
    };
  }
}

/**
 * Move the token processor to the next method/field in the class.
 *
 * To do that, we seek forward to the next start of a class name (either an open
 * bracket or an identifier, or the closing curly brace), then seek backward to
 * include any access modifiers.
 */
function skipToNextClassElement(tokens, classContextId) {
  tokens.nextToken();
  while (tokens.currentToken().contextId !== classContextId) {
    tokens.nextToken();
  }
  while (isAccessModifier(tokens.tokenAtRelativeIndex(-1))) {
    tokens.previousToken();
  }
}

function processClassHeader(tokens) {
  const classToken = tokens.currentToken();
  const contextId = classToken.contextId;
  if (contextId == null) {
    throw new Error("Expected context ID on class token.");
  }
  const isExpression = classToken.isExpression;
  if (isExpression == null) {
    throw new Error("Expected isExpression on class token.");
  }
  let className = null;
  let hasSuperclass = false;
  tokens.nextToken();
  if (tokens.matches1(TokenType.name)) {
    className = tokens.identifierName();
  }
  while (!tokens.matchesContextIdAndLabel(TokenType.braceL, contextId)) {
    // If this has a superclass, there will always be an `extends` token. If it doesn't have a
    // superclass, only type parameters and `implements` clauses can show up here, all of which
    // consist only of type tokens. A declaration like `class A<B extends C> {` should *not* count
    // as having a superclass.
    if (tokens.matches1(TokenType._extends) && !tokens.currentToken().isType) {
      hasSuperclass = true;
    }
    tokens.nextToken();
  }
  return {isExpression, className, hasSuperclass};
}

/**
 * Extract useful information out of a constructor, starting at the "constructor" name.
 */
function processConstructor(tokens)


 {
  const constructorInitializerStatements = [];

  tokens.nextToken();
  const constructorContextId = tokens.currentToken().contextId;
  if (constructorContextId == null) {
    throw new Error("Expected context ID on open-paren starting constructor params.");
  }
  // Advance through parameters looking for access modifiers.
  while (!tokens.matchesContextIdAndLabel(TokenType.parenR, constructorContextId)) {
    if (tokens.currentToken().contextId === constructorContextId) {
      // Current token is an open paren or comma just before a param, so check
      // that param for access modifiers.
      tokens.nextToken();
      if (isAccessModifier(tokens.currentToken())) {
        tokens.nextToken();
        while (isAccessModifier(tokens.currentToken())) {
          tokens.nextToken();
        }
        const token = tokens.currentToken();
        if (token.type !== TokenType.name) {
          throw new Error("Expected identifier after access modifiers in constructor arg.");
        }
        const name = tokens.identifierNameForToken(token);
        constructorInitializerStatements.push(`this.${name} = ${name}`);
      }
    } else {
      tokens.nextToken();
    }
  }
  // )
  tokens.nextToken();
  // Constructor type annotations are invalid, but skip them anyway since
  // they're easy to skip.
  while (tokens.currentToken().isType) {
    tokens.nextToken();
  }
  let constructorInsertPos = tokens.currentIndex();

  // Advance through body looking for a super call.
  let foundSuperCall = false;
  while (!tokens.matchesContextIdAndLabel(TokenType.braceR, constructorContextId)) {
    if (!foundSuperCall && tokens.matches2(TokenType._super, TokenType.parenL)) {
      tokens.nextToken();
      const superCallContextId = tokens.currentToken().contextId;
      if (superCallContextId == null) {
        throw new Error("Expected a context ID on the super call");
      }
      while (!tokens.matchesContextIdAndLabel(TokenType.parenR, superCallContextId)) {
        tokens.nextToken();
      }
      constructorInsertPos = tokens.currentIndex();
      foundSuperCall = true;
    }
    tokens.nextToken();
  }
  // }
  tokens.nextToken();

  return {constructorInitializerStatements, constructorInsertPos};
}

/**
 * Determine if this is any token that can go before the name in a method/field.
 */
function isAccessModifier(token) {
  return [
    TokenType._async,
    TokenType._get,
    TokenType._set,
    TokenType.plus,
    TokenType.minus,
    TokenType._readonly,
    TokenType._static,
    TokenType._public,
    TokenType._private,
    TokenType._protected,
    TokenType._override,
    TokenType._abstract,
    TokenType.star,
    TokenType._declare,
    TokenType.hash,
  ].includes(token.type);
}

/**
 * The next token or set of tokens is either an identifier or an expression in square brackets, for
 * a method or field name.
 */
function skipFieldName(tokens) {
  if (tokens.matches1(TokenType.bracketL)) {
    const startToken = tokens.currentToken();
    const classContextId = startToken.contextId;
    if (classContextId == null) {
      throw new Error("Expected class context ID on computed name open bracket.");
    }
    while (!tokens.matchesContextIdAndLabel(TokenType.bracketR, classContextId)) {
      tokens.nextToken();
    }
    tokens.nextToken();
  } else {
    tokens.nextToken();
  }
}

function elideImportEquals(tokens) {
  // import
  tokens.removeInitialToken();
  // name
  tokens.removeToken();
  // =
  tokens.removeToken();
  // name or require
  tokens.removeToken();
  // Handle either `import A = require('A')` or `import A = B.C.D`.
  if (tokens.matches1(TokenType.parenL)) {
    // (
    tokens.removeToken();
    // path string
    tokens.removeToken();
    // )
    tokens.removeToken();
  } else {
    while (tokens.matches1(TokenType.dot)) {
      // .
      tokens.removeToken();
      // name
      tokens.removeToken();
    }
  }
}

const EMPTY_DECLARATION_INFO = {
  typeDeclarations: new Set(),
  valueDeclarations: new Set(),
};

/**
 * Get all top-level identifiers that should be preserved when exported in TypeScript.
 *
 * Examples:
 * - If an identifier is declared as `const x`, then `export {x}` should be preserved.
 * - If it's declared as `type x`, then `export {x}` should be removed.
 * - If it's declared as both `const x` and `type x`, then the export should be preserved.
 * - Classes and enums should be preserved (even though they also introduce types).
 * - Imported identifiers should be preserved since we don't have enough information to
 *   rule them out. --isolatedModules disallows re-exports, which catches errors here.
 */
function getDeclarationInfo(tokens) {
  const typeDeclarations = new Set();
  const valueDeclarations = new Set();
  for (let i = 0; i < tokens.tokens.length; i++) {
    const token = tokens.tokens[i];
    if (token.type === TokenType.name && isTopLevelDeclaration(token)) {
      if (token.isType) {
        typeDeclarations.add(tokens.identifierNameForToken(token));
      } else {
        valueDeclarations.add(tokens.identifierNameForToken(token));
      }
    }
  }
  return {typeDeclarations, valueDeclarations};
}

/**
 * Starting at `export {`, look ahead and return `true` if this is an
 * `export {...} from` statement and `false` if this is a plain multi-export.
 */
function isExportFrom(tokens) {
  let closeBraceIndex = tokens.currentIndex();
  while (!tokens.matches1AtIndex(closeBraceIndex, TokenType.braceR)) {
    closeBraceIndex++;
  }
  return (
    tokens.matchesContextualAtIndex(closeBraceIndex + 1, ContextualKeyword._from) &&
    tokens.matches1AtIndex(closeBraceIndex + 2, TokenType.string)
  );
}

/**
 * Starting at a potential `with` or (legacy) `assert` token, remove the import
 * attributes if they exist.
 */
function removeMaybeImportAttributes(tokens) {
  if (
    tokens.matches2(TokenType._with, TokenType.braceL) ||
    (tokens.matches2(TokenType.name, TokenType.braceL) && tokens.matchesContextual(ContextualKeyword._assert))
  ) {
    // assert
    tokens.removeToken();
    // {
    tokens.removeToken();
    tokens.removeBalancedCode();
    // }
    tokens.removeToken();
  }
}

/**
 * Common method sharing code between CJS and ESM cases, since they're the same here.
 */
function shouldElideDefaultExport(
  isTypeScriptTransformEnabled,
  keepUnusedImports,
  tokens,
  declarationInfo,
) {
  if (!isTypeScriptTransformEnabled || keepUnusedImports) {
    return false;
  }
  const exportToken = tokens.currentToken();
  if (exportToken.rhsEndIndex == null) {
    throw new Error("Expected non-null rhsEndIndex on export token.");
  }
  // The export must be of the form `export default a` or `export default a;`.
  const numTokens = exportToken.rhsEndIndex - tokens.currentIndex();
  if (
    numTokens !== 3 &&
    !(numTokens === 4 && tokens.matches1AtIndex(exportToken.rhsEndIndex - 1, TokenType.semi))
  ) {
    return false;
  }
  const identifierToken = tokens.tokenAtRelativeIndex(2);
  if (identifierToken.type !== TokenType.name) {
    return false;
  }
  const exportedName = tokens.identifierNameForToken(identifierToken);
  return (
    declarationInfo.typeDeclarations.has(exportedName) &&
    !declarationInfo.valueDeclarations.has(exportedName)
  );
}

/**
 * Class for editing import statements when we are transforming to commonjs.
 */
class CJSImportTransformer extends Transformer {
   __init() {this.hadExport = false;}
   __init2() {this.hadNamedExport = false;}
   __init3() {this.hadDefaultExport = false;}
  

  constructor(
     rootTransformer,
     tokens,
     importProcessor,
     nameManager,
     helperManager,
     reactHotLoaderTransformer,
     enableLegacyBabel5ModuleInterop,
     enableLegacyTypeScriptModuleInterop,
     isTypeScriptTransformEnabled,
     isFlowTransformEnabled,
     preserveDynamicImport,
     keepUnusedImports,
  ) {
    super();this.rootTransformer = rootTransformer;this.tokens = tokens;this.importProcessor = importProcessor;this.nameManager = nameManager;this.helperManager = helperManager;this.reactHotLoaderTransformer = reactHotLoaderTransformer;this.enableLegacyBabel5ModuleInterop = enableLegacyBabel5ModuleInterop;this.enableLegacyTypeScriptModuleInterop = enableLegacyTypeScriptModuleInterop;this.isTypeScriptTransformEnabled = isTypeScriptTransformEnabled;this.isFlowTransformEnabled = isFlowTransformEnabled;this.preserveDynamicImport = preserveDynamicImport;this.keepUnusedImports = keepUnusedImports;CJSImportTransformer.prototype.__init.call(this);CJSImportTransformer.prototype.__init2.call(this);CJSImportTransformer.prototype.__init3.call(this);    this.declarationInfo = isTypeScriptTransformEnabled
      ? getDeclarationInfo(tokens)
      : EMPTY_DECLARATION_INFO;
  }

  getPrefixCode() {
    let prefix = "";
    if (this.hadExport) {
      prefix += 'Object.defineProperty(exports, "__esModule", {value: true});';
    }
    return prefix;
  }

  getSuffixCode() {
    if (this.enableLegacyBabel5ModuleInterop && this.hadDefaultExport && !this.hadNamedExport) {
      return "\nmodule.exports = exports.default;\n";
    }
    return "";
  }

  process() {
    // TypeScript `import foo = require('foo');` should always just be translated to plain require.
    if (this.tokens.matches3(TokenType._import, TokenType.name, TokenType.eq)) {
      return this.processImportEquals();
    }
    if (this.tokens.matches1(TokenType._import)) {
      this.processImport();
      return true;
    }
    if (this.tokens.matches2(TokenType._export, TokenType.eq)) {
      this.tokens.replaceToken("module.exports");
      return true;
    }
    if (this.tokens.matches1(TokenType._export) && !this.tokens.currentToken().isType) {
      this.hadExport = true;
      return this.processExport();
    }
    if (this.tokens.matches2(TokenType.name, TokenType.postIncDec)) {
      // Fall through to normal identifier matching if this doesn't apply.
      if (this.processPostIncDec()) {
        return true;
      }
    }
    if (this.tokens.matches1(TokenType.name) || this.tokens.matches1(TokenType.jsxName)) {
      return this.processIdentifier();
    }
    if (this.tokens.matches1(TokenType.eq)) {
      return this.processAssignment();
    }
    if (this.tokens.matches1(TokenType.assign)) {
      return this.processComplexAssignment();
    }
    if (this.tokens.matches1(TokenType.preIncDec)) {
      return this.processPreIncDec();
    }
    return false;
  }

   processImportEquals() {
    const importName = this.tokens.identifierNameAtIndex(this.tokens.currentIndex() + 1);
    if (this.importProcessor.shouldAutomaticallyElideImportedName(importName)) {
      // If this name is only used as a type, elide the whole import.
      elideImportEquals(this.tokens);
    } else {
      // Otherwise, switch `import` to `const`.
      this.tokens.replaceToken("const");
    }
    return true;
  }

  /**
   * Transform this:
   * import foo, {bar} from 'baz';
   * into
   * var _baz = require('baz'); var _baz2 = _interopRequireDefault(_baz);
   *
   * The import code was already generated in the import preprocessing step, so
   * we just need to look it up.
   */
   processImport() {
    if (this.tokens.matches2(TokenType._import, TokenType.parenL)) {
      if (this.preserveDynamicImport) {
        // Bail out, only making progress for this one token.
        this.tokens.copyToken();
        return;
      }
      const requireWrapper = this.enableLegacyTypeScriptModuleInterop
        ? ""
        : `${this.helperManager.getHelperName("interopRequireWildcard")}(`;
      this.tokens.replaceToken(`Promise.resolve().then(() => ${requireWrapper}require`);
      const contextId = this.tokens.currentToken().contextId;
      if (contextId == null) {
        throw new Error("Expected context ID on dynamic import invocation.");
      }
      this.tokens.copyToken();
      while (!this.tokens.matchesContextIdAndLabel(TokenType.parenR, contextId)) {
        this.rootTransformer.processToken();
      }
      this.tokens.replaceToken(requireWrapper ? ")))" : "))");
      return;
    }

    const shouldElideImport = this.removeImportAndDetectIfShouldElide();
    if (shouldElideImport) {
      this.tokens.removeToken();
    } else {
      const path = this.tokens.stringValue();
      this.tokens.replaceTokenTrimmingLeftWhitespace(this.importProcessor.claimImportCode(path));
      this.tokens.appendCode(this.importProcessor.claimImportCode(path));
    }
    removeMaybeImportAttributes(this.tokens);
    if (this.tokens.matches1(TokenType.semi)) {
      this.tokens.removeToken();
    }
  }

  /**
   * Erase this import (since any CJS output would be completely different), and
   * return true if this import is should be elided due to being a type-only
   * import. Such imports will not be emitted at all to avoid side effects.
   *
   * Import elision only happens with the TypeScript or Flow transforms enabled.
   *
   * TODO: This function has some awkward overlap with
   *  CJSImportProcessor.pruneTypeOnlyImports , and the two should be unified.
   *  That function handles TypeScript implicit import name elision, and removes
   *  an import if all typical imported names (without `type`) are removed due
   *  to being type-only imports. This function handles Flow import removal and
   *  properly distinguishes `import 'foo'` from `import {} from 'foo'` for TS
   *  purposes.
   *
   * The position should end at the import string.
   */
   removeImportAndDetectIfShouldElide() {
    this.tokens.removeInitialToken();
    if (
      this.tokens.matchesContextual(ContextualKeyword._type) &&
      !this.tokens.matches1AtIndex(this.tokens.currentIndex() + 1, TokenType.comma) &&
      !this.tokens.matchesContextualAtIndex(this.tokens.currentIndex() + 1, ContextualKeyword._from)
    ) {
      // This is an "import type" statement, so exit early.
      this.removeRemainingImport();
      return true;
    }

    if (this.tokens.matches1(TokenType.name) || this.tokens.matches1(TokenType.star)) {
      // We have a default import or namespace import, so there must be some
      // non-type import.
      this.removeRemainingImport();
      return false;
    }

    if (this.tokens.matches1(TokenType.string)) {
      // This is a bare import, so we should proceed with the import.
      return false;
    }

    let foundNonTypeImport = false;
    let foundAnyNamedImport = false;
    while (!this.tokens.matches1(TokenType.string)) {
      // Check if any named imports are of the form "foo" or "foo as bar", with
      // no leading "type".
      if (
        (!foundNonTypeImport && this.tokens.matches1(TokenType.braceL)) ||
        this.tokens.matches1(TokenType.comma)
      ) {
        this.tokens.removeToken();
        if (!this.tokens.matches1(TokenType.braceR)) {
          foundAnyNamedImport = true;
        }
        if (
          this.tokens.matches2(TokenType.name, TokenType.comma) ||
          this.tokens.matches2(TokenType.name, TokenType.braceR) ||
          this.tokens.matches4(TokenType.name, TokenType.name, TokenType.name, TokenType.comma) ||
          this.tokens.matches4(TokenType.name, TokenType.name, TokenType.name, TokenType.braceR)
        ) {
          foundNonTypeImport = true;
        }
      }
      this.tokens.removeToken();
    }
    if (this.keepUnusedImports) {
      return false;
    }
    if (this.isTypeScriptTransformEnabled) {
      return !foundNonTypeImport;
    } else if (this.isFlowTransformEnabled) {
      // In Flow, unlike TS, `import {} from 'foo';` preserves the import.
      return foundAnyNamedImport && !foundNonTypeImport;
    } else {
      return false;
    }
  }

   removeRemainingImport() {
    while (!this.tokens.matches1(TokenType.string)) {
      this.tokens.removeToken();
    }
  }

   processIdentifier() {
    const token = this.tokens.currentToken();
    if (token.shadowsGlobal) {
      return false;
    }

    if (token.identifierRole === IdentifierRole.ObjectShorthand) {
      return this.processObjectShorthand();
    }

    if (token.identifierRole !== IdentifierRole.Access) {
      return false;
    }
    const replacement = this.importProcessor.getIdentifierReplacement(
      this.tokens.identifierNameForToken(token),
    );
    if (!replacement) {
      return false;
    }
    // Tolerate any number of closing parens while looking for an opening paren
    // that indicates a function call.
    let possibleOpenParenIndex = this.tokens.currentIndex() + 1;
    while (
      possibleOpenParenIndex < this.tokens.tokens.length &&
      this.tokens.tokens[possibleOpenParenIndex].type === TokenType.parenR
    ) {
      possibleOpenParenIndex++;
    }
    // Avoid treating imported functions as methods of their `exports` object
    // by using `(0, f)` when the identifier is in a paren expression. Else
    // use `Function.prototype.call` when the identifier is a guaranteed
    // function call. When using `call`, pass undefined as the context.
    if (this.tokens.tokens[possibleOpenParenIndex].type === TokenType.parenL) {
      if (
        this.tokens.tokenAtRelativeIndex(1).type === TokenType.parenL &&
        this.tokens.tokenAtRelativeIndex(-1).type !== TokenType._new
      ) {
        this.tokens.replaceToken(`${replacement}.call(void 0, `);
        // Remove the old paren.
        this.tokens.removeToken();
        // Balance out the new paren.
        this.rootTransformer.processBalancedCode();
        this.tokens.copyExpectedToken(TokenType.parenR);
      } else {
        // See here: http://2ality.com/2015/12/references.html
        this.tokens.replaceToken(`(0, ${replacement})`);
      }
    } else {
      this.tokens.replaceToken(replacement);
    }
    return true;
  }

  processObjectShorthand() {
    const identifier = this.tokens.identifierName();
    const replacement = this.importProcessor.getIdentifierReplacement(identifier);
    if (!replacement) {
      return false;
    }
    this.tokens.replaceToken(`${identifier}: ${replacement}`);
    return true;
  }

  processExport() {
    if (
      this.tokens.matches2(TokenType._export, TokenType._enum) ||
      this.tokens.matches3(TokenType._export, TokenType._const, TokenType._enum)
    ) {
      this.hadNamedExport = true;
      // Let the TypeScript transform handle it.
      return false;
    }
    if (this.tokens.matches2(TokenType._export, TokenType._default)) {
      if (this.tokens.matches3(TokenType._export, TokenType._default, TokenType._enum)) {
        this.hadDefaultExport = true;
        // Flow export default enums need some special handling, so handle them
        // in that tranform rather than this one.
        return false;
      }
      this.processExportDefault();
      return true;
    } else if (this.tokens.matches2(TokenType._export, TokenType.braceL)) {
      this.processExportBindings();
      return true;
    } else if (
      this.tokens.matches2(TokenType._export, TokenType.name) &&
      this.tokens.matchesContextualAtIndex(this.tokens.currentIndex() + 1, ContextualKeyword._type)
    ) {
      // export type {a};
      // export type {a as b};
      // export type {a} from './b';
      // export type * from './b';
      // export type * as ns from './b';
      this.tokens.removeInitialToken();
      this.tokens.removeToken();
      if (this.tokens.matches1(TokenType.braceL)) {
        while (!this.tokens.matches1(TokenType.braceR)) {
          this.tokens.removeToken();
        }
        this.tokens.removeToken();
      } else {
        // *
        this.tokens.removeToken();
        if (this.tokens.matches1(TokenType._as)) {
          // as
          this.tokens.removeToken();
          // ns
          this.tokens.removeToken();
        }
      }
      // Remove type re-export `... } from './T'`
      if (
        this.tokens.matchesContextual(ContextualKeyword._from) &&
        this.tokens.matches1AtIndex(this.tokens.currentIndex() + 1, TokenType.string)
      ) {
        this.tokens.removeToken();
        this.tokens.removeToken();
        removeMaybeImportAttributes(this.tokens);
      }
      return true;
    }
    this.hadNamedExport = true;
    if (
      this.tokens.matches2(TokenType._export, TokenType._var) ||
      this.tokens.matches2(TokenType._export, TokenType._let) ||
      this.tokens.matches2(TokenType._export, TokenType._const)
    ) {
      this.processExportVar();
      return true;
    } else if (
      this.tokens.matches2(TokenType._export, TokenType._function) ||
      // export async function
      this.tokens.matches3(TokenType._export, TokenType.name, TokenType._function)
    ) {
      this.processExportFunction();
      return true;
    } else if (
      this.tokens.matches2(TokenType._export, TokenType._class) ||
      this.tokens.matches3(TokenType._export, TokenType._abstract, TokenType._class) ||
      this.tokens.matches2(TokenType._export, TokenType.at)
    ) {
      this.processExportClass();
      return true;
    } else if (this.tokens.matches2(TokenType._export, TokenType.star)) {
      this.processExportStar();
      return true;
    } else {
      throw new Error("Unrecognized export syntax.");
    }
  }

   processAssignment() {
    const index = this.tokens.currentIndex();
    const identifierToken = this.tokens.tokens[index - 1];
    // If the LHS is a type identifier, this must be a declaration like `let a: b = c;`,
    // with `b` as the identifier, so nothing needs to be done in that case.
    if (identifierToken.isType || identifierToken.type !== TokenType.name) {
      return false;
    }
    if (identifierToken.shadowsGlobal) {
      return false;
    }
    if (index >= 2 && this.tokens.matches1AtIndex(index - 2, TokenType.dot)) {
      return false;
    }
    if (index >= 2 && [TokenType._var, TokenType._let, TokenType._const].includes(this.tokens.tokens[index - 2].type)) {
      // Declarations don't need an extra assignment. This doesn't avoid the
      // assignment for comma-separated declarations, but it's still correct
      // since the assignment is just redundant.
      return false;
    }
    const assignmentSnippet = this.importProcessor.resolveExportBinding(
      this.tokens.identifierNameForToken(identifierToken),
    );
    if (!assignmentSnippet) {
      return false;
    }
    this.tokens.copyToken();
    this.tokens.appendCode(` ${assignmentSnippet} =`);
    return true;
  }

  /**
   * Process something like `a += 3`, where `a` might be an exported value.
   */
   processComplexAssignment() {
    const index = this.tokens.currentIndex();
    const identifierToken = this.tokens.tokens[index - 1];
    if (identifierToken.type !== TokenType.name) {
      return false;
    }
    if (identifierToken.shadowsGlobal) {
      return false;
    }
    if (index >= 2 && this.tokens.matches1AtIndex(index - 2, TokenType.dot)) {
      return false;
    }
    const assignmentSnippet = this.importProcessor.resolveExportBinding(
      this.tokens.identifierNameForToken(identifierToken),
    );
    if (!assignmentSnippet) {
      return false;
    }
    this.tokens.appendCode(` = ${assignmentSnippet}`);
    this.tokens.copyToken();
    return true;
  }

  /**
   * Process something like `++a`, where `a` might be an exported value.
   */
   processPreIncDec() {
    const index = this.tokens.currentIndex();
    const identifierToken = this.tokens.tokens[index + 1];
    if (identifierToken.type !== TokenType.name) {
      return false;
    }
    if (identifierToken.shadowsGlobal) {
      return false;
    }
    // Ignore things like ++a.b and ++a[b] and ++a().b.
    if (
      index + 2 < this.tokens.tokens.length &&
      (this.tokens.matches1AtIndex(index + 2, TokenType.dot) ||
        this.tokens.matches1AtIndex(index + 2, TokenType.bracketL) ||
        this.tokens.matches1AtIndex(index + 2, TokenType.parenL))
    ) {
      return false;
    }
    const identifierName = this.tokens.identifierNameForToken(identifierToken);
    const assignmentSnippet = this.importProcessor.resolveExportBinding(identifierName);
    if (!assignmentSnippet) {
      return false;
    }
    this.tokens.appendCode(`${assignmentSnippet} = `);
    this.tokens.copyToken();
    return true;
  }

  /**
   * Process something like `a++`, where `a` might be an exported value.
   * This starts at the `a`, not at the `++`.
   */
   processPostIncDec() {
    const index = this.tokens.currentIndex();
    const identifierToken = this.tokens.tokens[index];
    const operatorToken = this.tokens.tokens[index + 1];
    if (identifierToken.type !== TokenType.name) {
      return false;
    }
    if (identifierToken.shadowsGlobal) {
      return false;
    }
    if (index >= 1 && this.tokens.matches1AtIndex(index - 1, TokenType.dot)) {
      return false;
    }
    const identifierName = this.tokens.identifierNameForToken(identifierToken);
    const assignmentSnippet = this.importProcessor.resolveExportBinding(identifierName);
    if (!assignmentSnippet) {
      return false;
    }
    const operatorCode = this.tokens.rawCodeForToken(operatorToken);
    // We might also replace the identifier with something like exports.x, so
    // do that replacement here as well.
    const base = this.importProcessor.getIdentifierReplacement(identifierName) || identifierName;
    if (operatorCode === "++") {
      this.tokens.replaceToken(`(${base} = ${assignmentSnippet} = ${base} + 1, ${base} - 1)`);
    } else if (operatorCode === "--") {
      this.tokens.replaceToken(`(${base} = ${assignmentSnippet} = ${base} - 1, ${base} + 1)`);
    } else {
      throw new Error(`Unexpected operator: ${operatorCode}`);
    }
    this.tokens.removeToken();
    return true;
  }

   processExportDefault() {
    let exportedRuntimeValue = true;
    if (
      this.tokens.matches4(TokenType._export, TokenType._default, TokenType._function, TokenType.name) ||
      // export default async function
      (this.tokens.matches5(TokenType._export, TokenType._default, TokenType.name, TokenType._function, TokenType.name) &&
        this.tokens.matchesContextualAtIndex(
          this.tokens.currentIndex() + 2,
          ContextualKeyword._async,
        ))
    ) {
      this.tokens.removeInitialToken();
      this.tokens.removeToken();
      // Named function export case: change it to a top-level function
      // declaration followed by exports statement.
      const name = this.processNamedFunction();
      this.tokens.appendCode(` exports.default = ${name};`);
    } else if (
      this.tokens.matches4(TokenType._export, TokenType._default, TokenType._class, TokenType.name) ||
      this.tokens.matches5(TokenType._export, TokenType._default, TokenType._abstract, TokenType._class, TokenType.name) ||
      this.tokens.matches3(TokenType._export, TokenType._default, TokenType.at)
    ) {
      this.tokens.removeInitialToken();
      this.tokens.removeToken();
      this.copyDecorators();
      if (this.tokens.matches1(TokenType._abstract)) {
        this.tokens.removeToken();
      }
      const name = this.rootTransformer.processNamedClass();
      this.tokens.appendCode(` exports.default = ${name};`);
      // After this point, this is a plain "export default E" statement.
    } else if (
      shouldElideDefaultExport(
        this.isTypeScriptTransformEnabled,
        this.keepUnusedImports,
        this.tokens,
        this.declarationInfo,
      )
    ) {
      // If the exported value is just an identifier and should be elided by TypeScript
      // rules, then remove it entirely. It will always have the form `export default e`,
      // where `e` is an identifier.
      exportedRuntimeValue = false;
      this.tokens.removeInitialToken();
      this.tokens.removeToken();
      this.tokens.removeToken();
    } else if (this.reactHotLoaderTransformer) {
      // We need to assign E to a variable. Change "export default E" to
      // "let _default; exports.default = _default = E"
      const defaultVarName = this.nameManager.claimFreeName("_default");
      this.tokens.replaceToken(`let ${defaultVarName}; exports.`);
      this.tokens.copyToken();
      this.tokens.appendCode(` = ${defaultVarName} =`);
      this.reactHotLoaderTransformer.setExtractedDefaultExportName(defaultVarName);
    } else {
      // Change "export default E" to "exports.default = E"
      this.tokens.replaceToken("exports.");
      this.tokens.copyToken();
      this.tokens.appendCode(" =");
    }
    if (exportedRuntimeValue) {
      this.hadDefaultExport = true;
    }
  }

   copyDecorators() {
    while (this.tokens.matches1(TokenType.at)) {
      this.tokens.copyToken();
      if (this.tokens.matches1(TokenType.parenL)) {
        this.tokens.copyExpectedToken(TokenType.parenL);
        this.rootTransformer.processBalancedCode();
        this.tokens.copyExpectedToken(TokenType.parenR);
      } else {
        this.tokens.copyExpectedToken(TokenType.name);
        while (this.tokens.matches1(TokenType.dot)) {
          this.tokens.copyExpectedToken(TokenType.dot);
          this.tokens.copyExpectedToken(TokenType.name);
        }
        if (this.tokens.matches1(TokenType.parenL)) {
          this.tokens.copyExpectedToken(TokenType.parenL);
          this.rootTransformer.processBalancedCode();
          this.tokens.copyExpectedToken(TokenType.parenR);
        }
      }
    }
  }

  /**
   * Transform a declaration like `export var`, `export let`, or `export const`.
   */
   processExportVar() {
    if (this.isSimpleExportVar()) {
      this.processSimpleExportVar();
    } else {
      this.processComplexExportVar();
    }
  }

  /**
   * Determine if the export is of the form:
   * export var/let/const [varName] = [expr];
   * In other words, determine if function name inference might apply.
   */
   isSimpleExportVar() {
    let tokenIndex = this.tokens.currentIndex();
    // export
    tokenIndex++;
    // var/let/const
    tokenIndex++;
    if (!this.tokens.matches1AtIndex(tokenIndex, TokenType.name)) {
      return false;
    }
    tokenIndex++;
    while (tokenIndex < this.tokens.tokens.length && this.tokens.tokens[tokenIndex].isType) {
      tokenIndex++;
    }
    if (!this.tokens.matches1AtIndex(tokenIndex, TokenType.eq)) {
      return false;
    }
    return true;
  }

  /**
   * Transform an `export var` declaration initializing a single variable.
   *
   * For example, this:
   * export const f = () => {};
   * becomes this:
   * const f = () => {}; exports.f = f;
   *
   * The variable is unused (e.g. exports.f has the true value of the export).
   * We need to produce an assignment of this form so that the function will
   * have an inferred name of "f", which wouldn't happen in the more general
   * case below.
   */
   processSimpleExportVar() {
    // export
    this.tokens.removeInitialToken();
    // var/let/const
    this.tokens.copyToken();
    const varName = this.tokens.identifierName();
    // x: number  ->  x
    while (!this.tokens.matches1(TokenType.eq)) {
      this.rootTransformer.processToken();
    }
    const endIndex = this.tokens.currentToken().rhsEndIndex;
    if (endIndex == null) {
      throw new Error("Expected = token with an end index.");
    }
    while (this.tokens.currentIndex() < endIndex) {
      this.rootTransformer.processToken();
    }
    this.tokens.appendCode(`; exports.${varName} = ${varName}`);
  }

  /**
   * Transform normal declaration exports, including handling destructuring.
   * For example, this:
   * export const {x: [a = 2, b], c} = d;
   * becomes this:
   * ({x: [exports.a = 2, exports.b], c: exports.c} = d;)
   */
   processComplexExportVar() {
    this.tokens.removeInitialToken();
    this.tokens.removeToken();
    const needsParens = this.tokens.matches1(TokenType.braceL);
    if (needsParens) {
      this.tokens.appendCode("(");
    }

    let depth = 0;
    while (true) {
      if (
        this.tokens.matches1(TokenType.braceL) ||
        this.tokens.matches1(TokenType.dollarBraceL) ||
        this.tokens.matches1(TokenType.bracketL)
      ) {
        depth++;
        this.tokens.copyToken();
      } else if (this.tokens.matches1(TokenType.braceR) || this.tokens.matches1(TokenType.bracketR)) {
        depth--;
        this.tokens.copyToken();
      } else if (
        depth === 0 &&
        !this.tokens.matches1(TokenType.name) &&
        !this.tokens.currentToken().isType
      ) {
        break;
      } else if (this.tokens.matches1(TokenType.eq)) {
        // Default values might have assignments in the RHS that we want to ignore, so skip past
        // them.
        const endIndex = this.tokens.currentToken().rhsEndIndex;
        if (endIndex == null) {
          throw new Error("Expected = token with an end index.");
        }
        while (this.tokens.currentIndex() < endIndex) {
          this.rootTransformer.processToken();
        }
      } else {
        const token = this.tokens.currentToken();
        if (isDeclaration(token)) {
          const name = this.tokens.identifierName();
          let replacement = this.importProcessor.getIdentifierReplacement(name);
          if (replacement === null) {
            throw new Error(`Expected a replacement for ${name} in \`export var\` syntax.`);
          }
          if (isObjectShorthandDeclaration(token)) {
            replacement = `${name}: ${replacement}`;
          }
          this.tokens.replaceToken(replacement);
        } else {
          this.rootTransformer.processToken();
        }
      }
    }

    if (needsParens) {
      // Seek to the end of the RHS.
      const endIndex = this.tokens.currentToken().rhsEndIndex;
      if (endIndex == null) {
        throw new Error("Expected = token with an end index.");
      }
      while (this.tokens.currentIndex() < endIndex) {
        this.rootTransformer.processToken();
      }
      this.tokens.appendCode(")");
    }
  }

  /**
   * Transform this:
   * export function foo() {}
   * into this:
   * function foo() {} exports.foo = foo;
   */
   processExportFunction() {
    this.tokens.replaceToken("");
    const name = this.processNamedFunction();
    this.tokens.appendCode(` exports.${name} = ${name};`);
  }

  /**
   * Skip past a function with a name and return that name.
   */
   processNamedFunction() {
    if (this.tokens.matches1(TokenType._function)) {
      this.tokens.copyToken();
    } else if (this.tokens.matches2(TokenType.name, TokenType._function)) {
      if (!this.tokens.matchesContextual(ContextualKeyword._async)) {
        throw new Error("Expected async keyword in function export.");
      }
      this.tokens.copyToken();
      this.tokens.copyToken();
    }
    if (this.tokens.matches1(TokenType.star)) {
      this.tokens.copyToken();
    }
    if (!this.tokens.matches1(TokenType.name)) {
      throw new Error("Expected identifier for exported function name.");
    }
    const name = this.tokens.identifierName();
    this.tokens.copyToken();
    if (this.tokens.currentToken().isType) {
      this.tokens.removeInitialToken();
      while (this.tokens.currentToken().isType) {
        this.tokens.removeToken();
      }
    }
    this.tokens.copyExpectedToken(TokenType.parenL);
    this.rootTransformer.processBalancedCode();
    this.tokens.copyExpectedToken(TokenType.parenR);
    this.rootTransformer.processPossibleTypeRange();
    this.tokens.copyExpectedToken(TokenType.braceL);
    this.rootTransformer.processBalancedCode();
    this.tokens.copyExpectedToken(TokenType.braceR);
    return name;
  }

  /**
   * Transform this:
   * export class A {}
   * into this:
   * class A {} exports.A = A;
   */
   processExportClass() {
    this.tokens.removeInitialToken();
    this.copyDecorators();
    if (this.tokens.matches1(TokenType._abstract)) {
      this.tokens.removeToken();
    }
    const name = this.rootTransformer.processNamedClass();
    this.tokens.appendCode(` exports.${name} = ${name};`);
  }

  /**
   * Transform this:
   * export {a, b as c};
   * into this:
   * exports.a = a; exports.c = b;
   *
   * OR
   *
   * Transform this:
   * export {a, b as c} from './foo';
   * into the pre-generated Object.defineProperty code from the ImportProcessor.
   *
   * For the first case, if the TypeScript transform is enabled, we need to skip
   * exports that are only defined as types.
   */
   processExportBindings() {
    this.tokens.removeInitialToken();
    this.tokens.removeToken();

    const isReExport = isExportFrom(this.tokens);

    const exportStatements = [];
    while (true) {
      if (this.tokens.matches1(TokenType.braceR)) {
        this.tokens.removeToken();
        break;
      }

      const specifierInfo = getImportExportSpecifierInfo(this.tokens);

      while (this.tokens.currentIndex() < specifierInfo.endIndex) {
        this.tokens.removeToken();
      }

      const shouldRemoveExport =
        specifierInfo.isType ||
        (!isReExport && this.shouldElideExportedIdentifier(specifierInfo.leftName));
      if (!shouldRemoveExport) {
        const exportedName = specifierInfo.rightName;
        if (exportedName === "default") {
          this.hadDefaultExport = true;
        } else {
          this.hadNamedExport = true;
        }
        const localName = specifierInfo.leftName;
        const newLocalName = this.importProcessor.getIdentifierReplacement(localName);
        exportStatements.push(`exports.${exportedName} = ${newLocalName || localName};`);
      }

      if (this.tokens.matches1(TokenType.braceR)) {
        this.tokens.removeToken();
        break;
      }
      if (this.tokens.matches2(TokenType.comma, TokenType.braceR)) {
        this.tokens.removeToken();
        this.tokens.removeToken();
        break;
      } else if (this.tokens.matches1(TokenType.comma)) {
        this.tokens.removeToken();
      } else {
        throw new Error(`Unexpected token: ${JSON.stringify(this.tokens.currentToken())}`);
      }
    }

    if (this.tokens.matchesContextual(ContextualKeyword._from)) {
      // This is an export...from, so throw away the normal named export code
      // and use the Object.defineProperty code from ImportProcessor.
      this.tokens.removeToken();
      const path = this.tokens.stringValue();
      this.tokens.replaceTokenTrimmingLeftWhitespace(this.importProcessor.claimImportCode(path));
      removeMaybeImportAttributes(this.tokens);
    } else {
      // This is a normal named export, so use that.
      this.tokens.appendCode(exportStatements.join(" "));
    }

    if (this.tokens.matches1(TokenType.semi)) {
      this.tokens.removeToken();
    }
  }

   processExportStar() {
    this.tokens.removeInitialToken();
    while (!this.tokens.matches1(TokenType.string)) {
      this.tokens.removeToken();
    }
    const path = this.tokens.stringValue();
    this.tokens.replaceTokenTrimmingLeftWhitespace(this.importProcessor.claimImportCode(path));
    removeMaybeImportAttributes(this.tokens);
    if (this.tokens.matches1(TokenType.semi)) {
      this.tokens.removeToken();
    }
  }

   shouldElideExportedIdentifier(name) {
    return (
      this.isTypeScriptTransformEnabled &&
      !this.keepUnusedImports &&
      !this.declarationInfo.valueDeclarations.has(name)
    );
  }
}

/**
 * Class for editing import statements when we are keeping the code as ESM. We still need to remove
 * type-only imports in TypeScript and Flow.
 */
class ESMImportTransformer extends Transformer {
  
  
  

  constructor(
     tokens,
     nameManager,
     helperManager,
     reactHotLoaderTransformer,
     isTypeScriptTransformEnabled,
     isFlowTransformEnabled,
     keepUnusedImports,
    options,
  ) {
    super();this.tokens = tokens;this.nameManager = nameManager;this.helperManager = helperManager;this.reactHotLoaderTransformer = reactHotLoaderTransformer;this.isTypeScriptTransformEnabled = isTypeScriptTransformEnabled;this.isFlowTransformEnabled = isFlowTransformEnabled;this.keepUnusedImports = keepUnusedImports;    this.nonTypeIdentifiers =
      isTypeScriptTransformEnabled && !keepUnusedImports
        ? getNonTypeIdentifiers(tokens, options)
        : new Set();
    this.declarationInfo =
      isTypeScriptTransformEnabled && !keepUnusedImports
        ? getDeclarationInfo(tokens)
        : EMPTY_DECLARATION_INFO;
    this.injectCreateRequireForImportRequire = Boolean(options.injectCreateRequireForImportRequire);
  }

  process() {
    // TypeScript `import foo = require('foo');` should always just be translated to plain require.
    if (this.tokens.matches3(TokenType._import, TokenType.name, TokenType.eq)) {
      return this.processImportEquals();
    }
    if (
      this.tokens.matches4(TokenType._import, TokenType.name, TokenType.name, TokenType.eq) &&
      this.tokens.matchesContextualAtIndex(this.tokens.currentIndex() + 1, ContextualKeyword._type)
    ) {
      // import type T = require('T')
      this.tokens.removeInitialToken();
      // This construct is always exactly 8 tokens long, so remove the 7 remaining tokens.
      for (let i = 0; i < 7; i++) {
        this.tokens.removeToken();
      }
      return true;
    }
    if (this.tokens.matches2(TokenType._export, TokenType.eq)) {
      this.tokens.replaceToken("module.exports");
      return true;
    }
    if (
      this.tokens.matches5(TokenType._export, TokenType._import, TokenType.name, TokenType.name, TokenType.eq) &&
      this.tokens.matchesContextualAtIndex(this.tokens.currentIndex() + 2, ContextualKeyword._type)
    ) {
      // export import type T = require('T')
      this.tokens.removeInitialToken();
      // This construct is always exactly 9 tokens long, so remove the 8 remaining tokens.
      for (let i = 0; i < 8; i++) {
        this.tokens.removeToken();
      }
      return true;
    }
    if (this.tokens.matches1(TokenType._import)) {
      return this.processImport();
    }
    if (this.tokens.matches2(TokenType._export, TokenType._default)) {
      return this.processExportDefault();
    }
    if (this.tokens.matches2(TokenType._export, TokenType.braceL)) {
      return this.processNamedExports();
    }
    if (
      this.tokens.matches2(TokenType._export, TokenType.name) &&
      this.tokens.matchesContextualAtIndex(this.tokens.currentIndex() + 1, ContextualKeyword._type)
    ) {
      // export type {a};
      // export type {a as b};
      // export type {a} from './b';
      // export type * from './b';
      // export type * as ns from './b';
      this.tokens.removeInitialToken();
      this.tokens.removeToken();
      if (this.tokens.matches1(TokenType.braceL)) {
        while (!this.tokens.matches1(TokenType.braceR)) {
          this.tokens.removeToken();
        }
        this.tokens.removeToken();
      } else {
        // *
        this.tokens.removeToken();
        if (this.tokens.matches1(TokenType._as)) {
          // as
          this.tokens.removeToken();
          // ns
          this.tokens.removeToken();
        }
      }
      // Remove type re-export `... } from './T'`
      if (
        this.tokens.matchesContextual(ContextualKeyword._from) &&
        this.tokens.matches1AtIndex(this.tokens.currentIndex() + 1, TokenType.string)
      ) {
        this.tokens.removeToken();
        this.tokens.removeToken();
        removeMaybeImportAttributes(this.tokens);
      }
      return true;
    }
    return false;
  }

   processImportEquals() {
    const importName = this.tokens.identifierNameAtIndex(this.tokens.currentIndex() + 1);
    if (this.shouldAutomaticallyElideImportedName(importName)) {
      // If this name is only used as a type, elide the whole import.
      elideImportEquals(this.tokens);
    } else if (this.injectCreateRequireForImportRequire) {
      // We're using require in an environment (Node ESM) that doesn't provide
      // it as a global, so generate a helper to import it.
      // import -> const
      this.tokens.replaceToken("const");
      // Foo
      this.tokens.copyToken();
      // =
      this.tokens.copyToken();
      // require
      this.tokens.replaceToken(this.helperManager.getHelperName("require"));
    } else {
      // Otherwise, just switch `import` to `const`.
      this.tokens.replaceToken("const");
    }
    return true;
  }

   processImport() {
    if (this.tokens.matches2(TokenType._import, TokenType.parenL)) {
      // Dynamic imports don't need to be transformed.
      return false;
    }

    const snapshot = this.tokens.snapshot();
    const allImportsRemoved = this.removeImportTypeBindings();
    if (allImportsRemoved) {
      this.tokens.restoreToSnapshot(snapshot);
      while (!this.tokens.matches1(TokenType.string)) {
        this.tokens.removeToken();
      }
      this.tokens.removeToken();
      removeMaybeImportAttributes(this.tokens);
      if (this.tokens.matches1(TokenType.semi)) {
        this.tokens.removeToken();
      }
    }
    return true;
  }

  /**
   * Remove type bindings from this import, leaving the rest of the import intact.
   *
   * Return true if this import was ONLY types, and thus is eligible for removal. This will bail out
   * of the replacement operation, so we can return early here.
   */
   removeImportTypeBindings() {
    this.tokens.copyExpectedToken(TokenType._import);
    if (
      this.tokens.matchesContextual(ContextualKeyword._type) &&
      !this.tokens.matches1AtIndex(this.tokens.currentIndex() + 1, TokenType.comma) &&
      !this.tokens.matchesContextualAtIndex(this.tokens.currentIndex() + 1, ContextualKeyword._from)
    ) {
      // This is an "import type" statement, so exit early.
      return true;
    }

    if (this.tokens.matches1(TokenType.string)) {
      // This is a bare import, so we should proceed with the import.
      this.tokens.copyToken();
      return false;
    }

    // Skip the "module" token in import reflection.
    if (
      this.tokens.matchesContextual(ContextualKeyword._module) &&
      this.tokens.matchesContextualAtIndex(this.tokens.currentIndex() + 2, ContextualKeyword._from)
    ) {
      this.tokens.copyToken();
    }

    let foundNonTypeImport = false;
    let foundAnyNamedImport = false;
    let needsComma = false;

    // Handle default import.
    if (this.tokens.matches1(TokenType.name)) {
      if (this.shouldAutomaticallyElideImportedName(this.tokens.identifierName())) {
        this.tokens.removeToken();
        if (this.tokens.matches1(TokenType.comma)) {
          this.tokens.removeToken();
        }
      } else {
        foundNonTypeImport = true;
        this.tokens.copyToken();
        if (this.tokens.matches1(TokenType.comma)) {
          // We're in a statement like:
          // import A, * as B from './A';
          // or
          // import A, {foo} from './A';
          // where the `A` is being kept. The comma should be removed if an only
          // if the next part of the import statement is elided, but that's hard
          // to determine at this point in the code. Instead, always remove it
          // and set a flag to add it back if necessary.
          needsComma = true;
          this.tokens.removeToken();
        }
      }
    }

    if (this.tokens.matches1(TokenType.star)) {
      if (this.shouldAutomaticallyElideImportedName(this.tokens.identifierNameAtRelativeIndex(2))) {
        this.tokens.removeToken();
        this.tokens.removeToken();
        this.tokens.removeToken();
      } else {
        if (needsComma) {
          this.tokens.appendCode(",");
        }
        foundNonTypeImport = true;
        this.tokens.copyExpectedToken(TokenType.star);
        this.tokens.copyExpectedToken(TokenType.name);
        this.tokens.copyExpectedToken(TokenType.name);
      }
    } else if (this.tokens.matches1(TokenType.braceL)) {
      if (needsComma) {
        this.tokens.appendCode(",");
      }
      this.tokens.copyToken();
      while (!this.tokens.matches1(TokenType.braceR)) {
        foundAnyNamedImport = true;
        const specifierInfo = getImportExportSpecifierInfo(this.tokens);
        if (
          specifierInfo.isType ||
          this.shouldAutomaticallyElideImportedName(specifierInfo.rightName)
        ) {
          while (this.tokens.currentIndex() < specifierInfo.endIndex) {
            this.tokens.removeToken();
          }
          if (this.tokens.matches1(TokenType.comma)) {
            this.tokens.removeToken();
          }
        } else {
          foundNonTypeImport = true;
          while (this.tokens.currentIndex() < specifierInfo.endIndex) {
            this.tokens.copyToken();
          }
          if (this.tokens.matches1(TokenType.comma)) {
            this.tokens.copyToken();
          }
        }
      }
      this.tokens.copyExpectedToken(TokenType.braceR);
    }

    if (this.keepUnusedImports) {
      return false;
    }
    if (this.isTypeScriptTransformEnabled) {
      return !foundNonTypeImport;
    } else if (this.isFlowTransformEnabled) {
      // In Flow, unlike TS, `import {} from 'foo';` preserves the import.
      return foundAnyNamedImport && !foundNonTypeImport;
    } else {
      return false;
    }
  }

   shouldAutomaticallyElideImportedName(name) {
    return (
      this.isTypeScriptTransformEnabled &&
      !this.keepUnusedImports &&
      !this.nonTypeIdentifiers.has(name)
    );
  }

   processExportDefault() {
    if (
      shouldElideDefaultExport(
        this.isTypeScriptTransformEnabled,
        this.keepUnusedImports,
        this.tokens,
        this.declarationInfo,
      )
    ) {
      // If the exported value is just an identifier and should be elided by TypeScript
      // rules, then remove it entirely. It will always have the form `export default e`,
      // where `e` is an identifier.
      this.tokens.removeInitialToken();
      this.tokens.removeToken();
      this.tokens.removeToken();
      return true;
    }

    const alreadyHasName =
      this.tokens.matches4(TokenType._export, TokenType._default, TokenType._function, TokenType.name) ||
      // export default async function
      (this.tokens.matches5(TokenType._export, TokenType._default, TokenType.name, TokenType._function, TokenType.name) &&
        this.tokens.matchesContextualAtIndex(
          this.tokens.currentIndex() + 2,
          ContextualKeyword._async,
        )) ||
      this.tokens.matches4(TokenType._export, TokenType._default, TokenType._class, TokenType.name) ||
      this.tokens.matches5(TokenType._export, TokenType._default, TokenType._abstract, TokenType._class, TokenType.name);

    if (!alreadyHasName && this.reactHotLoaderTransformer) {
      // This is a plain "export default E" statement and we need to assign E to a variable.
      // Change "export default E" to "let _default; export default _default = E"
      const defaultVarName = this.nameManager.claimFreeName("_default");
      this.tokens.replaceToken(`let ${defaultVarName}; export`);
      this.tokens.copyToken();
      this.tokens.appendCode(` ${defaultVarName} =`);
      this.reactHotLoaderTransformer.setExtractedDefaultExportName(defaultVarName);
      return true;
    }
    return false;
  }

  /**
   * Handle a statement with one of these forms:
   * export {a, type b};
   * export {c, type d} from 'foo';
   *
   * In both cases, any explicit type exports should be removed. In the first
   * case, we also need to handle implicit export elision for names declared as
   * types. In the second case, we must NOT do implicit named export elision,
   * but we must remove the runtime import if all exports are type exports.
   */
   processNamedExports() {
    if (!this.isTypeScriptTransformEnabled) {
      return false;
    }
    this.tokens.copyExpectedToken(TokenType._export);
    this.tokens.copyExpectedToken(TokenType.braceL);

    const isReExport = isExportFrom(this.tokens);
    let foundNonTypeExport = false;
    while (!this.tokens.matches1(TokenType.braceR)) {
      const specifierInfo = getImportExportSpecifierInfo(this.tokens);
      if (
        specifierInfo.isType ||
        (!isReExport && this.shouldElideExportedName(specifierInfo.leftName))
      ) {
        // Type export, so remove all tokens, including any comma.
        while (this.tokens.currentIndex() < specifierInfo.endIndex) {
          this.tokens.removeToken();
        }
        if (this.tokens.matches1(TokenType.comma)) {
          this.tokens.removeToken();
        }
      } else {
        // Non-type export, so copy all tokens, including any comma.
        foundNonTypeExport = true;
        while (this.tokens.currentIndex() < specifierInfo.endIndex) {
          this.tokens.copyToken();
        }
        if (this.tokens.matches1(TokenType.comma)) {
          this.tokens.copyToken();
        }
      }
    }
    this.tokens.copyExpectedToken(TokenType.braceR);

    if (!this.keepUnusedImports && isReExport && !foundNonTypeExport) {
      // This is a type-only re-export, so skip evaluating the other module. Technically this
      // leaves the statement as `export {}`, but that's ok since that's a no-op.
      this.tokens.removeToken();
      this.tokens.removeToken();
      removeMaybeImportAttributes(this.tokens);
    }

    return true;
  }

  /**
   * ESM elides all imports with the rule that we only elide if we see that it's
   * a type and never see it as a value. This is in contrast to CJS, which
   * elides imports that are completely unknown.
   */
   shouldElideExportedName(name) {
    return (
      this.isTypeScriptTransformEnabled &&
      !this.keepUnusedImports &&
      this.declarationInfo.typeDeclarations.has(name) &&
      !this.declarationInfo.valueDeclarations.has(name)
    );
  }
}

class FlowTransformer extends Transformer {
  constructor(
     rootTransformer,
     tokens,
     isImportsTransformEnabled,
  ) {
    super();this.rootTransformer = rootTransformer;this.tokens = tokens;this.isImportsTransformEnabled = isImportsTransformEnabled;  }

  process() {
    if (
      this.rootTransformer.processPossibleArrowParamEnd() ||
      this.rootTransformer.processPossibleAsyncArrowWithTypeParams() ||
      this.rootTransformer.processPossibleTypeRange()
    ) {
      return true;
    }
    if (this.tokens.matches1(TokenType._enum)) {
      this.processEnum();
      return true;
    }
    if (this.tokens.matches2(TokenType._export, TokenType._enum)) {
      this.processNamedExportEnum();
      return true;
    }
    if (this.tokens.matches3(TokenType._export, TokenType._default, TokenType._enum)) {
      this.processDefaultExportEnum();
      return true;
    }
    return false;
  }

  /**
   * Handle a declaration like:
   * export enum E ...
   *
   * With this imports transform, this becomes:
   * const E = [[enum]]; exports.E = E;
   *
   * otherwise, it becomes:
   * export const E = [[enum]];
   */
  processNamedExportEnum() {
    if (this.isImportsTransformEnabled) {
      // export
      this.tokens.removeInitialToken();
      const enumName = this.tokens.identifierNameAtRelativeIndex(1);
      this.processEnum();
      this.tokens.appendCode(` exports.${enumName} = ${enumName};`);
    } else {
      this.tokens.copyToken();
      this.processEnum();
    }
  }

  /**
   * Handle a declaration like:
   * export default enum E
   *
   * With the imports transform, this becomes:
   * const E = [[enum]]; exports.default = E;
   *
   * otherwise, it becomes:
   * const E = [[enum]]; export default E;
   */
  processDefaultExportEnum() {
    // export
    this.tokens.removeInitialToken();
    // default
    this.tokens.removeToken();
    const enumName = this.tokens.identifierNameAtRelativeIndex(1);
    this.processEnum();
    if (this.isImportsTransformEnabled) {
      this.tokens.appendCode(` exports.default = ${enumName};`);
    } else {
      this.tokens.appendCode(` export default ${enumName};`);
    }
  }

  /**
   * Transpile flow enums to invoke the "flow-enums-runtime" library.
   *
   * Currently, the transpiled code always uses `require("flow-enums-runtime")`,
   * but if future flexibility is needed, we could expose a config option for
   * this string (similar to configurable JSX). Even when targeting ESM, the
   * default behavior of babel-plugin-transform-flow-enums is to use require
   * rather than injecting an import.
   *
   * Flow enums are quite a bit simpler than TS enums and have some convenient
   * constraints:
   * - Element initializers must be either always present or always absent. That
   *   means that we can use fixed lookahead on the first element (if any) and
   *   assume that all elements are like that.
   * - The right-hand side of an element initializer must be a literal value,
   *   not a complex expression and not referencing other elements. That means
   *   we can simply copy a single token.
   *
   * Enums can be broken up into three basic cases:
   *
   * Mirrored enums:
   * enum E {A, B}
   *   ->
   * const E = require("flow-enums-runtime").Mirrored(["A", "B"]);
   *
   * Initializer enums:
   * enum E {A = 1, B = 2}
   *   ->
   * const E = require("flow-enums-runtime")({A: 1, B: 2});
   *
   * Symbol enums:
   * enum E of symbol {A, B}
   *   ->
   * const E = require("flow-enums-runtime")({A: Symbol("A"), B: Symbol("B")});
   *
   * We can statically detect which of the three cases this is by looking at the
   * "of" declaration (if any) and seeing if the first element has an initializer.
   * Since the other transform details are so similar between the three cases, we
   * use a single implementation and vary the transform within processEnumElement
   * based on case.
   */
  processEnum() {
    // enum E -> const E
    this.tokens.replaceToken("const");
    this.tokens.copyExpectedToken(TokenType.name);

    let isSymbolEnum = false;
    if (this.tokens.matchesContextual(ContextualKeyword._of)) {
      this.tokens.removeToken();
      isSymbolEnum = this.tokens.matchesContextual(ContextualKeyword._symbol);
      this.tokens.removeToken();
    }
    const hasInitializers = this.tokens.matches3(TokenType.braceL, TokenType.name, TokenType.eq);
    this.tokens.appendCode(' = require("flow-enums-runtime")');

    const isMirrored = !isSymbolEnum && !hasInitializers;
    this.tokens.replaceTokenTrimmingLeftWhitespace(isMirrored ? ".Mirrored([" : "({");

    while (!this.tokens.matches1(TokenType.braceR)) {
      // ... is allowed at the end and has no runtime behavior.
      if (this.tokens.matches1(TokenType.ellipsis)) {
        this.tokens.removeToken();
        break;
      }
      this.processEnumElement(isSymbolEnum, hasInitializers);
      if (this.tokens.matches1(TokenType.comma)) {
        this.tokens.copyToken();
      }
    }

    this.tokens.replaceToken(isMirrored ? "]);" : "});");
  }

  /**
   * Process an individual enum element, producing either an array element or an
   * object element based on what type of enum this is.
   */
  processEnumElement(isSymbolEnum, hasInitializers) {
    if (isSymbolEnum) {
      // Symbol enums never have initializers and are expanded to object elements.
      // A, -> A: Symbol("A"),
      const elementName = this.tokens.identifierName();
      this.tokens.copyToken();
      this.tokens.appendCode(`: Symbol("${elementName}")`);
    } else if (hasInitializers) {
      // Initializers are expanded to object elements.
      // A = 1, -> A: 1,
      this.tokens.copyToken();
      this.tokens.replaceTokenTrimmingLeftWhitespace(":");
      this.tokens.copyToken();
    } else {
      // Enum elements without initializers become string literal array elements.
      // A, -> "A",
      this.tokens.replaceToken(`"${this.tokens.identifierName()}"`);
    }
  }
}

function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }

const JEST_GLOBAL_NAME = "jest";
const HOISTED_METHODS = ["mock", "unmock", "enableAutomock", "disableAutomock"];

/**
 * Implementation of babel-plugin-jest-hoist, which hoists up some jest method
 * calls above the imports to allow them to override other imports.
 *
 * To preserve line numbers, rather than directly moving the jest.mock code, we
 * wrap each invocation in a function statement and then call the function from
 * the top of the file.
 */
class JestHoistTransformer extends Transformer {
    __init() {this.hoistedFunctionNames = [];}

  constructor(
     rootTransformer,
     tokens,
     nameManager,
     importProcessor,
  ) {
    super();this.rootTransformer = rootTransformer;this.tokens = tokens;this.nameManager = nameManager;this.importProcessor = importProcessor;JestHoistTransformer.prototype.__init.call(this);  }

  process() {
    if (
      this.tokens.currentToken().scopeDepth === 0 &&
      this.tokens.matches4(TokenType.name, TokenType.dot, TokenType.name, TokenType.parenL) &&
      this.tokens.identifierName() === JEST_GLOBAL_NAME
    ) {
      // TODO: This only works if imports transform is active, which it will be for jest.
      //       But if jest adds module support and we no longer need the import transform, this needs fixing.
      if (_optionalChain([this, 'access', _ => _.importProcessor, 'optionalAccess', _2 => _2.getGlobalNames, 'call', _3 => _3(), 'optionalAccess', _4 => _4.has, 'call', _5 => _5(JEST_GLOBAL_NAME)])) {
        return false;
      }
      return this.extractHoistedCalls();
    }

    return false;
  }

  getHoistedCode() {
    if (this.hoistedFunctionNames.length > 0) {
      // This will be placed before module interop code, but that's fine since
      // imports aren't allowed in module mock factories.
      return this.hoistedFunctionNames.map((name) => `${name}();`).join("");
    }
    return "";
  }

  /**
   * Extracts any methods calls on the jest-object that should be hoisted.
   *
   * According to the jest docs, https://jestjs.io/docs/en/jest-object#jestmockmodulename-factory-options,
   * mock, unmock, enableAutomock, disableAutomock, are the methods that should be hoisted.
   *
   * We do not apply the same checks of the arguments as babel-plugin-jest-hoist does.
   */
   extractHoistedCalls() {
    // We're handling a chain of calls where `jest` may or may not need to be inserted for each call
    // in the chain, so remove the initial `jest` to make the loop implementation cleaner.
    this.tokens.removeToken();
    // Track some state so that multiple non-hoisted chained calls in a row keep their chaining
    // syntax.
    let followsNonHoistedJestCall = false;

    // Iterate through all chained calls on the jest object.
    while (this.tokens.matches3(TokenType.dot, TokenType.name, TokenType.parenL)) {
      const methodName = this.tokens.identifierNameAtIndex(this.tokens.currentIndex() + 1);
      const shouldHoist = HOISTED_METHODS.includes(methodName);
      if (shouldHoist) {
        // We've matched e.g. `.mock(...)` or similar call.
        // Replace the initial `.` with `function __jestHoist(){jest.`
        const hoistedFunctionName = this.nameManager.claimFreeName("__jestHoist");
        this.hoistedFunctionNames.push(hoistedFunctionName);
        this.tokens.replaceToken(`function ${hoistedFunctionName}(){${JEST_GLOBAL_NAME}.`);
        this.tokens.copyToken();
        this.tokens.copyToken();
        this.rootTransformer.processBalancedCode();
        this.tokens.copyExpectedToken(TokenType.parenR);
        this.tokens.appendCode(";}");
        followsNonHoistedJestCall = false;
      } else {
        // This is a non-hoisted method, so just transform the code as usual.
        if (followsNonHoistedJestCall) {
          // If we didn't hoist the previous call, we can leave the code as-is to chain off of the
          // previous method call. It's important to preserve the code here because we don't know
          // for sure that the method actually returned the jest object for chaining.
          this.tokens.copyToken();
        } else {
          // If we hoisted the previous call, we know it returns the jest object back, so we insert
          // the identifier `jest` to continue the chain.
          this.tokens.replaceToken(`${JEST_GLOBAL_NAME}.`);
        }
        this.tokens.copyToken();
        this.tokens.copyToken();
        this.rootTransformer.processBalancedCode();
        this.tokens.copyExpectedToken(TokenType.parenR);
        followsNonHoistedJestCall = true;
      }
    }

    return true;
  }
}

class NumericSeparatorTransformer extends Transformer {
  constructor( tokens) {
    super();this.tokens = tokens;  }

  process() {
    if (this.tokens.matches1(TokenType.num)) {
      const code = this.tokens.currentTokenCode();
      if (code.includes("_")) {
        this.tokens.replaceToken(code.replace(/_/g, ""));
        return true;
      }
    }
    return false;
  }
}

class OptionalCatchBindingTransformer extends Transformer {
  constructor( tokens,  nameManager) {
    super();this.tokens = tokens;this.nameManager = nameManager;  }

  process() {
    if (this.tokens.matches2(TokenType._catch, TokenType.braceL)) {
      this.tokens.copyToken();
      this.tokens.appendCode(` (${this.nameManager.claimFreeName("e")})`);
      return true;
    }
    return false;
  }
}

/**
 * Transformer supporting the optional chaining and nullish coalescing operators.
 *
 * Tech plan here:
 * https://github.com/alangpierce/sucrase/wiki/Sucrase-Optional-Chaining-and-Nullish-Coalescing-Technical-Plan
 *
 * The prefix and suffix code snippets are handled by TokenProcessor, and this transformer handles
 * the operators themselves.
 */
class OptionalChainingNullishTransformer extends Transformer {
  constructor( tokens,  nameManager) {
    super();this.tokens = tokens;this.nameManager = nameManager;  }

  process() {
    if (this.tokens.matches1(TokenType.nullishCoalescing)) {
      const token = this.tokens.currentToken();
      if (this.tokens.tokens[token.nullishStartIndex].isAsyncOperation) {
        this.tokens.replaceTokenTrimmingLeftWhitespace(", async () => (");
      } else {
        this.tokens.replaceTokenTrimmingLeftWhitespace(", () => (");
      }
      return true;
    }
    if (this.tokens.matches1(TokenType._delete)) {
      const nextToken = this.tokens.tokenAtRelativeIndex(1);
      if (nextToken.isOptionalChainStart) {
        this.tokens.removeInitialToken();
        return true;
      }
    }
    const token = this.tokens.currentToken();
    const chainStart = token.subscriptStartIndex;
    if (
      chainStart != null &&
      this.tokens.tokens[chainStart].isOptionalChainStart &&
      // Super subscripts can't be optional (since super is never null/undefined), and the syntax
      // relies on the subscript being intact, so leave this token alone.
      this.tokens.tokenAtRelativeIndex(-1).type !== TokenType._super
    ) {
      const param = this.nameManager.claimFreeName("_");
      let arrowStartSnippet;
      if (
        chainStart > 0 &&
        this.tokens.matches1AtIndex(chainStart - 1, TokenType._delete) &&
        this.isLastSubscriptInChain()
      ) {
        // Delete operations are special: we already removed the delete keyword, and to still
        // perform a delete, we need to insert a delete in the very last part of the chain, which
        // in correct code will always be a property access.
        arrowStartSnippet = `${param} => delete ${param}`;
      } else {
        arrowStartSnippet = `${param} => ${param}`;
      }
      if (this.tokens.tokens[chainStart].isAsyncOperation) {
        arrowStartSnippet = `async ${arrowStartSnippet}`;
      }
      if (
        this.tokens.matches2(TokenType.questionDot, TokenType.parenL) ||
        this.tokens.matches2(TokenType.questionDot, TokenType.lessThan)
      ) {
        if (this.justSkippedSuper()) {
          this.tokens.appendCode(".bind(this)");
        }
        this.tokens.replaceTokenTrimmingLeftWhitespace(`, 'optionalCall', ${arrowStartSnippet}`);
      } else if (this.tokens.matches2(TokenType.questionDot, TokenType.bracketL)) {
        this.tokens.replaceTokenTrimmingLeftWhitespace(`, 'optionalAccess', ${arrowStartSnippet}`);
      } else if (this.tokens.matches1(TokenType.questionDot)) {
        this.tokens.replaceTokenTrimmingLeftWhitespace(`, 'optionalAccess', ${arrowStartSnippet}.`);
      } else if (this.tokens.matches1(TokenType.dot)) {
        this.tokens.replaceTokenTrimmingLeftWhitespace(`, 'access', ${arrowStartSnippet}.`);
      } else if (this.tokens.matches1(TokenType.bracketL)) {
        this.tokens.replaceTokenTrimmingLeftWhitespace(`, 'access', ${arrowStartSnippet}[`);
      } else if (this.tokens.matches1(TokenType.parenL)) {
        if (this.justSkippedSuper()) {
          this.tokens.appendCode(".bind(this)");
        }
        this.tokens.replaceTokenTrimmingLeftWhitespace(`, 'call', ${arrowStartSnippet}(`);
      } else {
        throw new Error("Unexpected subscript operator in optional chain.");
      }
      return true;
    }
    return false;
  }

  /**
   * Determine if the current token is the last of its chain, so that we know whether it's eligible
   * to have a delete op inserted.
   *
   * We can do this by walking forward until we determine one way or another. Each
   * isOptionalChainStart token must be paired with exactly one isOptionalChainEnd token after it in
   * a nesting way, so we can track depth and walk to the end of the chain (the point where the
   * depth goes negative) and see if any other subscript token is after us in the chain.
   */
  isLastSubscriptInChain() {
    let depth = 0;
    for (let i = this.tokens.currentIndex() + 1; ; i++) {
      if (i >= this.tokens.tokens.length) {
        throw new Error("Reached the end of the code while finding the end of the access chain.");
      }
      if (this.tokens.tokens[i].isOptionalChainStart) {
        depth++;
      } else if (this.tokens.tokens[i].isOptionalChainEnd) {
        depth--;
      }
      if (depth < 0) {
        return true;
      }

      // This subscript token is a later one in the same chain.
      if (depth === 0 && this.tokens.tokens[i].subscriptStartIndex != null) {
        return false;
      }
    }
  }

  /**
   * Determine if we are the open-paren in an expression like super.a()?.b.
   *
   * We can do this by walking backward to find the previous subscript. If that subscript was
   * preceded by a super, then we must be the subscript after it, so if this is a call expression,
   * we'll need to attach the right context.
   */
  justSkippedSuper() {
    let depth = 0;
    let index = this.tokens.currentIndex() - 1;
    while (true) {
      if (index < 0) {
        throw new Error(
          "Reached the start of the code while finding the start of the access chain.",
        );
      }
      if (this.tokens.tokens[index].isOptionalChainStart) {
        depth--;
      } else if (this.tokens.tokens[index].isOptionalChainEnd) {
        depth++;
      }
      if (depth < 0) {
        return false;
      }

      // This subscript token is a later one in the same chain.
      if (depth === 0 && this.tokens.tokens[index].subscriptStartIndex != null) {
        return this.tokens.tokens[index - 1].type === TokenType._super;
      }
      index--;
    }
  }
}

/**
 * Implementation of babel-plugin-transform-react-display-name, which adds a
 * display name to usages of React.createClass and createReactClass.
 */
class ReactDisplayNameTransformer extends Transformer {
  constructor(
     rootTransformer,
     tokens,
     importProcessor,
     options,
  ) {
    super();this.rootTransformer = rootTransformer;this.tokens = tokens;this.importProcessor = importProcessor;this.options = options;  }

  process() {
    const startIndex = this.tokens.currentIndex();
    if (this.tokens.identifierName() === "createReactClass") {
      const newName =
        this.importProcessor && this.importProcessor.getIdentifierReplacement("createReactClass");
      if (newName) {
        this.tokens.replaceToken(`(0, ${newName})`);
      } else {
        this.tokens.copyToken();
      }
      this.tryProcessCreateClassCall(startIndex);
      return true;
    }
    if (
      this.tokens.matches3(TokenType.name, TokenType.dot, TokenType.name) &&
      this.tokens.identifierName() === "React" &&
      this.tokens.identifierNameAtIndex(this.tokens.currentIndex() + 2) === "createClass"
    ) {
      const newName = this.importProcessor
        ? this.importProcessor.getIdentifierReplacement("React") || "React"
        : "React";
      if (newName) {
        this.tokens.replaceToken(newName);
        this.tokens.copyToken();
        this.tokens.copyToken();
      } else {
        this.tokens.copyToken();
        this.tokens.copyToken();
        this.tokens.copyToken();
      }
      this.tryProcessCreateClassCall(startIndex);
      return true;
    }
    return false;
  }

  /**
   * This is called with the token position at the open-paren.
   */
   tryProcessCreateClassCall(startIndex) {
    const displayName = this.findDisplayName(startIndex);
    if (!displayName) {
      return;
    }

    if (this.classNeedsDisplayName()) {
      this.tokens.copyExpectedToken(TokenType.parenL);
      this.tokens.copyExpectedToken(TokenType.braceL);
      this.tokens.appendCode(`displayName: '${displayName}',`);
      this.rootTransformer.processBalancedCode();
      this.tokens.copyExpectedToken(TokenType.braceR);
      this.tokens.copyExpectedToken(TokenType.parenR);
    }
  }

   findDisplayName(startIndex) {
    if (startIndex < 2) {
      return null;
    }
    if (this.tokens.matches2AtIndex(startIndex - 2, TokenType.name, TokenType.eq)) {
      // This is an assignment (or declaration) and the LHS is either an identifier or a member
      // expression ending in an identifier, so use that identifier name.
      return this.tokens.identifierNameAtIndex(startIndex - 2);
    }
    if (
      startIndex >= 2 &&
      this.tokens.tokens[startIndex - 2].identifierRole === IdentifierRole.ObjectKey
    ) {
      // This is an object literal value.
      return this.tokens.identifierNameAtIndex(startIndex - 2);
    }
    if (this.tokens.matches2AtIndex(startIndex - 2, TokenType._export, TokenType._default)) {
      return this.getDisplayNameFromFilename();
    }
    return null;
  }

   getDisplayNameFromFilename() {
    const filePath = this.options.filePath || "unknown";
    const pathSegments = filePath.split("/");
    const filename = pathSegments[pathSegments.length - 1];
    const dotIndex = filename.lastIndexOf(".");
    const baseFilename = dotIndex === -1 ? filename : filename.slice(0, dotIndex);
    if (baseFilename === "index" && pathSegments[pathSegments.length - 2]) {
      return pathSegments[pathSegments.length - 2];
    } else {
      return baseFilename;
    }
  }

  /**
   * We only want to add a display name when this is a function call containing
   * one argument, which is an object literal without `displayName` as an
   * existing key.
   */
   classNeedsDisplayName() {
    let index = this.tokens.currentIndex();
    if (!this.tokens.matches2(TokenType.parenL, TokenType.braceL)) {
      return false;
    }
    // The block starts on the {, and we expect any displayName key to be in
    // that context. We need to ignore other other contexts to avoid matching
    // nested displayName keys.
    const objectStartIndex = index + 1;
    const objectContextId = this.tokens.tokens[objectStartIndex].contextId;
    if (objectContextId == null) {
      throw new Error("Expected non-null context ID on object open-brace.");
    }

    for (; index < this.tokens.tokens.length; index++) {
      const token = this.tokens.tokens[index];
      if (token.type === TokenType.braceR && token.contextId === objectContextId) {
        index++;
        break;
      }

      if (
        this.tokens.identifierNameAtIndex(index) === "displayName" &&
        this.tokens.tokens[index].identifierRole === IdentifierRole.ObjectKey &&
        token.contextId === objectContextId
      ) {
        // We found a displayName key, so bail out.
        return false;
      }
    }

    if (index === this.tokens.tokens.length) {
      throw new Error("Unexpected end of input when processing React class.");
    }

    // If we got this far, we know we have createClass with an object with no
    // display name, so we want to proceed as long as that was the only argument.
    return (
      this.tokens.matches1AtIndex(index, TokenType.parenR) ||
      this.tokens.matches2AtIndex(index, TokenType.comma, TokenType.parenR)
    );
  }
}

class ReactHotLoaderTransformer extends Transformer {
   __init() {this.extractedDefaultExportName = null;}

  constructor( tokens,  filePath) {
    super();this.tokens = tokens;this.filePath = filePath;ReactHotLoaderTransformer.prototype.__init.call(this);  }

  setExtractedDefaultExportName(extractedDefaultExportName) {
    this.extractedDefaultExportName = extractedDefaultExportName;
  }

  getPrefixCode() {
    return `
      (function () {
        var enterModule = require('react-hot-loader').enterModule;
        enterModule && enterModule(module);
      })();`
      .replace(/\s+/g, " ")
      .trim();
  }

  getSuffixCode() {
    const topLevelNames = new Set();
    for (const token of this.tokens.tokens) {
      if (
        !token.isType &&
        isTopLevelDeclaration(token) &&
        token.identifierRole !== IdentifierRole.ImportDeclaration
      ) {
        topLevelNames.add(this.tokens.identifierNameForToken(token));
      }
    }
    const namesToRegister = Array.from(topLevelNames).map((name) => ({
      variableName: name,
      uniqueLocalName: name,
    }));
    if (this.extractedDefaultExportName) {
      namesToRegister.push({
        variableName: this.extractedDefaultExportName,
        uniqueLocalName: "default",
      });
    }
    return `
;(function () {
  var reactHotLoader = require('react-hot-loader').default;
  var leaveModule = require('react-hot-loader').leaveModule;
  if (!reactHotLoader) {
    return;
  }
${namesToRegister
  .map(
    ({variableName, uniqueLocalName}) =>
      `  reactHotLoader.register(${variableName}, "${uniqueLocalName}", ${JSON.stringify(
        this.filePath || "",
      )});`,
  )
  .join("\n")}
  leaveModule(module);
})();`;
  }

  process() {
    return false;
  }
}

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar
// Hard-code a list of reserved words rather than trying to use keywords or contextual keywords
// from the parser, since currently there are various exceptions, like `package` being reserved
// but unused and various contextual keywords being reserved. Note that we assume that all code
// compiled by Sucrase is in a module, so strict mode words and await are all considered reserved
// here.
const RESERVED_WORDS = new Set([
  // Reserved keywords as of ECMAScript 2015
  "break",
  "case",
  "catch",
  "class",
  "const",
  "continue",
  "debugger",
  "default",
  "delete",
  "do",
  "else",
  "export",
  "extends",
  "finally",
  "for",
  "function",
  "if",
  "import",
  "in",
  "instanceof",
  "new",
  "return",
  "super",
  "switch",
  "this",
  "throw",
  "try",
  "typeof",
  "var",
  "void",
  "while",
  "with",
  "yield",
  // Future reserved keywords
  "enum",
  "implements",
  "interface",
  "let",
  "package",
  "private",
  "protected",
  "public",
  "static",
  "await",
  // Literals that cannot be used as identifiers
  "false",
  "null",
  "true",
]);

/**
 * Determine if the given name is a legal variable name.
 *
 * This is needed when transforming TypeScript enums; if an enum key is a valid
 * variable name, it might be referenced later in the enum, so we need to
 * declare a variable.
 */
function isIdentifier(name) {
  if (name.length === 0) {
    return false;
  }
  if (!IS_IDENTIFIER_START[name.charCodeAt(0)]) {
    return false;
  }
  for (let i = 1; i < name.length; i++) {
    if (!IS_IDENTIFIER_CHAR[name.charCodeAt(i)]) {
      return false;
    }
  }
  return !RESERVED_WORDS.has(name);
}

class TypeScriptTransformer extends Transformer {
  constructor(
     rootTransformer,
     tokens,
     isImportsTransformEnabled,
  ) {
    super();this.rootTransformer = rootTransformer;this.tokens = tokens;this.isImportsTransformEnabled = isImportsTransformEnabled;  }

  process() {
    if (
      this.rootTransformer.processPossibleArrowParamEnd() ||
      this.rootTransformer.processPossibleAsyncArrowWithTypeParams() ||
      this.rootTransformer.processPossibleTypeRange()
    ) {
      return true;
    }
    if (
      this.tokens.matches1(TokenType._public) ||
      this.tokens.matches1(TokenType._protected) ||
      this.tokens.matches1(TokenType._private) ||
      this.tokens.matches1(TokenType._abstract) ||
      this.tokens.matches1(TokenType._readonly) ||
      this.tokens.matches1(TokenType._override) ||
      this.tokens.matches1(TokenType.nonNullAssertion)
    ) {
      this.tokens.removeInitialToken();
      return true;
    }
    if (this.tokens.matches1(TokenType._enum) || this.tokens.matches2(TokenType._const, TokenType._enum)) {
      this.processEnum();
      return true;
    }
    if (
      this.tokens.matches2(TokenType._export, TokenType._enum) ||
      this.tokens.matches3(TokenType._export, TokenType._const, TokenType._enum)
    ) {
      this.processEnum(true);
      return true;
    }
    return false;
  }

  processEnum(isExport = false) {
    // We might have "export const enum", so just remove all relevant tokens.
    this.tokens.removeInitialToken();
    while (this.tokens.matches1(TokenType._const) || this.tokens.matches1(TokenType._enum)) {
      this.tokens.removeToken();
    }
    const enumName = this.tokens.identifierName();
    this.tokens.removeToken();
    if (isExport && !this.isImportsTransformEnabled) {
      this.tokens.appendCode("export ");
    }
    this.tokens.appendCode(`var ${enumName}; (function (${enumName})`);
    this.tokens.copyExpectedToken(TokenType.braceL);
    this.processEnumBody(enumName);
    this.tokens.copyExpectedToken(TokenType.braceR);
    if (isExport && this.isImportsTransformEnabled) {
      this.tokens.appendCode(`)(${enumName} || (exports.${enumName} = ${enumName} = {}));`);
    } else {
      this.tokens.appendCode(`)(${enumName} || (${enumName} = {}));`);
    }
  }

  /**
   * Transform an enum into equivalent JS. This has complexity in a few places:
   * - TS allows string enums, numeric enums, and a mix of the two styles within an enum.
   * - Enum keys are allowed to be referenced in later enum values.
   * - Enum keys are allowed to be strings.
   * - When enum values are omitted, they should follow an auto-increment behavior.
   */
  processEnumBody(enumName) {
    // Code that can be used to reference the previous enum member, or null if this is the first
    // enum member.
    let previousValueCode = null;
    while (true) {
      if (this.tokens.matches1(TokenType.braceR)) {
        break;
      }
      const {nameStringCode, variableName} = this.extractEnumKeyInfo(this.tokens.currentToken());
      this.tokens.removeInitialToken();

      if (
        this.tokens.matches3(TokenType.eq, TokenType.string, TokenType.comma) ||
        this.tokens.matches3(TokenType.eq, TokenType.string, TokenType.braceR)
      ) {
        this.processStringLiteralEnumMember(enumName, nameStringCode, variableName);
      } else if (this.tokens.matches1(TokenType.eq)) {
        this.processExplicitValueEnumMember(enumName, nameStringCode, variableName);
      } else {
        this.processImplicitValueEnumMember(
          enumName,
          nameStringCode,
          variableName,
          previousValueCode,
        );
      }
      if (this.tokens.matches1(TokenType.comma)) {
        this.tokens.removeToken();
      }

      if (variableName != null) {
        previousValueCode = variableName;
      } else {
        previousValueCode = `${enumName}[${nameStringCode}]`;
      }
    }
  }

  /**
   * Detect name information about this enum key, which will be used to determine which code to emit
   * and whether we should declare a variable as part of this declaration.
   *
   * Some cases to keep in mind:
   * - Enum keys can be implicitly referenced later, e.g. `X = 1, Y = X`. In Sucrase, we implement
   *   this by declaring a variable `X` so that later expressions can use it.
   * - In addition to the usual identifier key syntax, enum keys are allowed to be string literals,
   *   e.g. `"hello world" = 3,`. Template literal syntax is NOT allowed.
   * - Even if the enum key is defined as a string literal, it may still be referenced by identifier
   *   later, e.g. `"X" = 1, Y = X`. That means that we need to detect whether or not a string
   *   literal is identifier-like and emit a variable if so, even if the declaration did not use an
   *   identifier.
   * - Reserved keywords like `break` are valid enum keys, but are not valid to be referenced later
   *   and would be a syntax error if we emitted a variable, so we need to skip the variable
   *   declaration in those cases.
   *
   * The variableName return value captures these nuances: if non-null, we can and must emit a
   * variable declaration, and if null, we can't and shouldn't.
   */
  extractEnumKeyInfo(nameToken) {
    if (nameToken.type === TokenType.name) {
      const name = this.tokens.identifierNameForToken(nameToken);
      return {
        nameStringCode: `"${name}"`,
        variableName: isIdentifier(name) ? name : null,
      };
    } else if (nameToken.type === TokenType.string) {
      const name = this.tokens.stringValueForToken(nameToken);
      return {
        nameStringCode: this.tokens.code.slice(nameToken.start, nameToken.end),
        variableName: isIdentifier(name) ? name : null,
      };
    } else {
      throw new Error("Expected name or string at beginning of enum element.");
    }
  }

  /**
   * Handle an enum member where the RHS is just a string literal (not omitted, not a number, and
   * not a complex expression). This is the typical form for TS string enums, and in this case, we
   * do *not* create a reverse mapping.
   *
   * This is called after deleting the key token, when the token processor is at the equals sign.
   *
   * Example 1:
   * someKey = "some value"
   * ->
   * const someKey = "some value"; MyEnum["someKey"] = someKey;
   *
   * Example 2:
   * "some key" = "some value"
   * ->
   * MyEnum["some key"] = "some value";
   */
  processStringLiteralEnumMember(
    enumName,
    nameStringCode,
    variableName,
  ) {
    if (variableName != null) {
      this.tokens.appendCode(`const ${variableName}`);
      // =
      this.tokens.copyToken();
      // value string
      this.tokens.copyToken();
      this.tokens.appendCode(`; ${enumName}[${nameStringCode}] = ${variableName};`);
    } else {
      this.tokens.appendCode(`${enumName}[${nameStringCode}]`);
      // =
      this.tokens.copyToken();
      // value string
      this.tokens.copyToken();
      this.tokens.appendCode(";");
    }
  }

  /**
   * Handle an enum member initialized with an expression on the right-hand side (other than a
   * string literal). In these cases, we should transform the expression and emit code that sets up
   * a reverse mapping.
   *
   * The TypeScript implementation of this operation distinguishes between expressions that can be
   * "constant folded" at compile time (i.e. consist of number literals and simple math operations
   * on those numbers) and ones that are dynamic. For constant expressions, it emits the resolved
   * numeric value, and auto-incrementing is only allowed in that case. Evaluating expressions at
   * compile time would add significant complexity to Sucrase, so Sucrase instead leaves the
   * expression as-is, and will later emit something like `MyEnum["previousKey"] + 1` to implement
   * auto-incrementing.
   *
   * This is called after deleting the key token, when the token processor is at the equals sign.
   *
   * Example 1:
   * someKey = 1 + 1
   * ->
   * const someKey = 1 + 1; MyEnum[MyEnum["someKey"] = someKey] = "someKey";
   *
   * Example 2:
   * "some key" = 1 + 1
   * ->
   * MyEnum[MyEnum["some key"] = 1 + 1] = "some key";
   */
  processExplicitValueEnumMember(
    enumName,
    nameStringCode,
    variableName,
  ) {
    const rhsEndIndex = this.tokens.currentToken().rhsEndIndex;
    if (rhsEndIndex == null) {
      throw new Error("Expected rhsEndIndex on enum assign.");
    }

    if (variableName != null) {
      this.tokens.appendCode(`const ${variableName}`);
      this.tokens.copyToken();
      while (this.tokens.currentIndex() < rhsEndIndex) {
        this.rootTransformer.processToken();
      }
      this.tokens.appendCode(
        `; ${enumName}[${enumName}[${nameStringCode}] = ${variableName}] = ${nameStringCode};`,
      );
    } else {
      this.tokens.appendCode(`${enumName}[${enumName}[${nameStringCode}]`);
      this.tokens.copyToken();
      while (this.tokens.currentIndex() < rhsEndIndex) {
        this.rootTransformer.processToken();
      }
      this.tokens.appendCode(`] = ${nameStringCode};`);
    }
  }

  /**
   * Handle an enum member with no right-hand side expression. In this case, the value is the
   * previous value plus 1, or 0 if there was no previous value. We should also always emit a
   * reverse mapping.
   *
   * Example 1:
   * someKey2
   * ->
   * const someKey2 = someKey1 + 1; MyEnum[MyEnum["someKey2"] = someKey2] = "someKey2";
   *
   * Example 2:
   * "some key 2"
   * ->
   * MyEnum[MyEnum["some key 2"] = someKey1 + 1] = "some key 2";
   */
  processImplicitValueEnumMember(
    enumName,
    nameStringCode,
    variableName,
    previousValueCode,
  ) {
    let valueCode = previousValueCode != null ? `${previousValueCode} + 1` : "0";
    if (variableName != null) {
      this.tokens.appendCode(`const ${variableName} = ${valueCode}; `);
      valueCode = variableName;
    }
    this.tokens.appendCode(
      `${enumName}[${enumName}[${nameStringCode}] = ${valueCode}] = ${nameStringCode};`,
    );
  }
}

class RootTransformer {
   __init() {this.transformers = [];}
  
  
   __init2() {this.generatedVariables = [];}
  
  
  
  

  constructor(
    sucraseContext,
    transforms,
    enableLegacyBabel5ModuleInterop,
    options,
  ) {RootTransformer.prototype.__init.call(this);RootTransformer.prototype.__init2.call(this);
    this.nameManager = sucraseContext.nameManager;
    this.helperManager = sucraseContext.helperManager;
    const {tokenProcessor, importProcessor} = sucraseContext;
    this.tokens = tokenProcessor;
    this.isImportsTransformEnabled = transforms.includes("imports");
    this.isReactHotLoaderTransformEnabled = transforms.includes("react-hot-loader");
    this.disableESTransforms = Boolean(options.disableESTransforms);

    if (!options.disableESTransforms) {
      this.transformers.push(
        new OptionalChainingNullishTransformer(tokenProcessor, this.nameManager),
      );
      this.transformers.push(new NumericSeparatorTransformer(tokenProcessor));
      this.transformers.push(new OptionalCatchBindingTransformer(tokenProcessor, this.nameManager));
    }

    if (transforms.includes("jsx")) {
      if (options.jsxRuntime !== "preserve") {
        this.transformers.push(
          new JSXTransformer(this, tokenProcessor, importProcessor, this.nameManager, options),
        );
      }
      this.transformers.push(
        new ReactDisplayNameTransformer(this, tokenProcessor, importProcessor, options),
      );
    }

    let reactHotLoaderTransformer = null;
    if (transforms.includes("react-hot-loader")) {
      if (!options.filePath) {
        throw new Error("filePath is required when using the react-hot-loader transform.");
      }
      reactHotLoaderTransformer = new ReactHotLoaderTransformer(tokenProcessor, options.filePath);
      this.transformers.push(reactHotLoaderTransformer);
    }

    // Note that we always want to enable the imports transformer, even when the import transform
    // itself isn't enabled, since we need to do type-only import pruning for both Flow and
    // TypeScript.
    if (transforms.includes("imports")) {
      if (importProcessor === null) {
        throw new Error("Expected non-null importProcessor with imports transform enabled.");
      }
      this.transformers.push(
        new CJSImportTransformer(
          this,
          tokenProcessor,
          importProcessor,
          this.nameManager,
          this.helperManager,
          reactHotLoaderTransformer,
          enableLegacyBabel5ModuleInterop,
          Boolean(options.enableLegacyTypeScriptModuleInterop),
          transforms.includes("typescript"),
          transforms.includes("flow"),
          Boolean(options.preserveDynamicImport),
          Boolean(options.keepUnusedImports),
        ),
      );
    } else {
      this.transformers.push(
        new ESMImportTransformer(
          tokenProcessor,
          this.nameManager,
          this.helperManager,
          reactHotLoaderTransformer,
          transforms.includes("typescript"),
          transforms.includes("flow"),
          Boolean(options.keepUnusedImports),
          options,
        ),
      );
    }

    if (transforms.includes("flow")) {
      this.transformers.push(
        new FlowTransformer(this, tokenProcessor, transforms.includes("imports")),
      );
    }
    if (transforms.includes("typescript")) {
      this.transformers.push(
        new TypeScriptTransformer(this, tokenProcessor, transforms.includes("imports")),
      );
    }
    if (transforms.includes("jest")) {
      this.transformers.push(
        new JestHoistTransformer(this, tokenProcessor, this.nameManager, importProcessor),
      );
    }
  }

  transform() {
    this.tokens.reset();
    this.processBalancedCode();
    const shouldAddUseStrict = this.isImportsTransformEnabled;
    // "use strict" always needs to be first, so override the normal transformer order.
    let prefix = shouldAddUseStrict ? '"use strict";' : "";
    for (const transformer of this.transformers) {
      prefix += transformer.getPrefixCode();
    }
    prefix += this.helperManager.emitHelpers();
    prefix += this.generatedVariables.map((v) => ` var ${v};`).join("");
    for (const transformer of this.transformers) {
      prefix += transformer.getHoistedCode();
    }
    let suffix = "";
    for (const transformer of this.transformers) {
      suffix += transformer.getSuffixCode();
    }
    const result = this.tokens.finish();
    let {code} = result;
    if (code.startsWith("#!")) {
      let newlineIndex = code.indexOf("\n");
      if (newlineIndex === -1) {
        newlineIndex = code.length;
        code += "\n";
      }
      return {
        code: code.slice(0, newlineIndex + 1) + prefix + code.slice(newlineIndex + 1) + suffix,
        // The hashbang line has no tokens, so shifting the tokens to account
        // for prefix can happen normally.
        mappings: this.shiftMappings(result.mappings, prefix.length),
      };
    } else {
      return {
        code: prefix + code + suffix,
        mappings: this.shiftMappings(result.mappings, prefix.length),
      };
    }
  }

  processBalancedCode() {
    let braceDepth = 0;
    let parenDepth = 0;
    while (!this.tokens.isAtEnd()) {
      if (this.tokens.matches1(TokenType.braceL) || this.tokens.matches1(TokenType.dollarBraceL)) {
        braceDepth++;
      } else if (this.tokens.matches1(TokenType.braceR)) {
        if (braceDepth === 0) {
          return;
        }
        braceDepth--;
      }
      if (this.tokens.matches1(TokenType.parenL)) {
        parenDepth++;
      } else if (this.tokens.matches1(TokenType.parenR)) {
        if (parenDepth === 0) {
          return;
        }
        parenDepth--;
      }
      this.processToken();
    }
  }

  processToken() {
    if (this.tokens.matches1(TokenType._class)) {
      this.processClass();
      return;
    }
    for (const transformer of this.transformers) {
      const wasProcessed = transformer.process();
      if (wasProcessed) {
        return;
      }
    }
    this.tokens.copyToken();
  }

  /**
   * Skip past a class with a name and return that name.
   */
  processNamedClass() {
    if (!this.tokens.matches2(TokenType._class, TokenType.name)) {
      throw new Error("Expected identifier for exported class name.");
    }
    const name = this.tokens.identifierNameAtIndex(this.tokens.currentIndex() + 1);
    this.processClass();
    return name;
  }

  processClass() {
    const classInfo = getClassInfo(this, this.tokens, this.nameManager, this.disableESTransforms);

    // Both static and instance initializers need a class name to use to invoke the initializer, so
    // assign to one if necessary.
    const needsCommaExpression =
      (classInfo.headerInfo.isExpression || !classInfo.headerInfo.className) &&
      classInfo.staticInitializerNames.length + classInfo.instanceInitializerNames.length > 0;

    let className = classInfo.headerInfo.className;
    if (needsCommaExpression) {
      className = this.nameManager.claimFreeName("_class");
      this.generatedVariables.push(className);
      this.tokens.appendCode(` (${className} =`);
    }

    const classToken = this.tokens.currentToken();
    const contextId = classToken.contextId;
    if (contextId == null) {
      throw new Error("Expected class to have a context ID.");
    }
    this.tokens.copyExpectedToken(TokenType._class);
    while (!this.tokens.matchesContextIdAndLabel(TokenType.braceL, contextId)) {
      this.processToken();
    }

    this.processClassBody(classInfo, className);

    const staticInitializerStatements = classInfo.staticInitializerNames.map(
      (name) => `${className}.${name}()`,
    );
    if (needsCommaExpression) {
      this.tokens.appendCode(
        `, ${staticInitializerStatements.map((s) => `${s}, `).join("")}${className})`,
      );
    } else if (classInfo.staticInitializerNames.length > 0) {
      this.tokens.appendCode(` ${staticInitializerStatements.map((s) => `${s};`).join(" ")}`);
    }
  }

  /**
   * We want to just handle class fields in all contexts, since TypeScript supports them. Later,
   * when some JS implementations support class fields, this should be made optional.
   */
  processClassBody(classInfo, className) {
    const {
      headerInfo,
      constructorInsertPos,
      constructorInitializerStatements,
      fields,
      instanceInitializerNames,
      rangesToRemove,
    } = classInfo;
    let fieldIndex = 0;
    let rangeToRemoveIndex = 0;
    const classContextId = this.tokens.currentToken().contextId;
    if (classContextId == null) {
      throw new Error("Expected non-null context ID on class.");
    }
    this.tokens.copyExpectedToken(TokenType.braceL);
    if (this.isReactHotLoaderTransformEnabled) {
      this.tokens.appendCode(
        "__reactstandin__regenerateByEval(key, code) {this[key] = eval(code);}",
      );
    }

    const needsConstructorInit =
      constructorInitializerStatements.length + instanceInitializerNames.length > 0;

    if (constructorInsertPos === null && needsConstructorInit) {
      const constructorInitializersCode = this.makeConstructorInitCode(
        constructorInitializerStatements,
        instanceInitializerNames,
        className,
      );
      if (headerInfo.hasSuperclass) {
        const argsName = this.nameManager.claimFreeName("args");
        this.tokens.appendCode(
          `constructor(...${argsName}) { super(...${argsName}); ${constructorInitializersCode}; }`,
        );
      } else {
        this.tokens.appendCode(`constructor() { ${constructorInitializersCode}; }`);
      }
    }

    while (!this.tokens.matchesContextIdAndLabel(TokenType.braceR, classContextId)) {
      if (fieldIndex < fields.length && this.tokens.currentIndex() === fields[fieldIndex].start) {
        let needsCloseBrace = false;
        if (this.tokens.matches1(TokenType.bracketL)) {
          this.tokens.copyTokenWithPrefix(`${fields[fieldIndex].initializerName}() {this`);
        } else if (this.tokens.matches1(TokenType.string) || this.tokens.matches1(TokenType.num)) {
          this.tokens.copyTokenWithPrefix(`${fields[fieldIndex].initializerName}() {this[`);
          needsCloseBrace = true;
        } else {
          this.tokens.copyTokenWithPrefix(`${fields[fieldIndex].initializerName}() {this.`);
        }
        while (this.tokens.currentIndex() < fields[fieldIndex].end) {
          if (needsCloseBrace && this.tokens.currentIndex() === fields[fieldIndex].equalsIndex) {
            this.tokens.appendCode("]");
          }
          this.processToken();
        }
        this.tokens.appendCode("}");
        fieldIndex++;
      } else if (
        rangeToRemoveIndex < rangesToRemove.length &&
        this.tokens.currentIndex() >= rangesToRemove[rangeToRemoveIndex].start
      ) {
        if (this.tokens.currentIndex() < rangesToRemove[rangeToRemoveIndex].end) {
          this.tokens.removeInitialToken();
        }
        while (this.tokens.currentIndex() < rangesToRemove[rangeToRemoveIndex].end) {
          this.tokens.removeToken();
        }
        rangeToRemoveIndex++;
      } else if (this.tokens.currentIndex() === constructorInsertPos) {
        this.tokens.copyToken();
        if (needsConstructorInit) {
          this.tokens.appendCode(
            `;${this.makeConstructorInitCode(
              constructorInitializerStatements,
              instanceInitializerNames,
              className,
            )};`,
          );
        }
        this.processToken();
      } else {
        this.processToken();
      }
    }
    this.tokens.copyExpectedToken(TokenType.braceR);
  }

  makeConstructorInitCode(
    constructorInitializerStatements,
    instanceInitializerNames,
    className,
  ) {
    return [
      ...constructorInitializerStatements,
      ...instanceInitializerNames.map((name) => `${className}.prototype.${name}.call(this)`),
    ].join(";");
  }

  /**
   * Normally it's ok to simply remove type tokens, but we need to be more careful when dealing with
   * arrow function return types since they can confuse the parser. In that case, we want to move
   * the close-paren to the same line as the arrow.
   *
   * See https://github.com/alangpierce/sucrase/issues/391 for more details.
   */
  processPossibleArrowParamEnd() {
    if (this.tokens.matches2(TokenType.parenR, TokenType.colon) && this.tokens.tokenAtRelativeIndex(1).isType) {
      let nextNonTypeIndex = this.tokens.currentIndex() + 1;
      // Look ahead to see if this is an arrow function or something else.
      while (this.tokens.tokens[nextNonTypeIndex].isType) {
        nextNonTypeIndex++;
      }
      if (this.tokens.matches1AtIndex(nextNonTypeIndex, TokenType.arrow)) {
        this.tokens.removeInitialToken();
        while (this.tokens.currentIndex() < nextNonTypeIndex) {
          this.tokens.removeToken();
        }
        this.tokens.replaceTokenTrimmingLeftWhitespace(") =>");
        return true;
      }
    }
    return false;
  }

  /**
   * An async arrow function might be of the form:
   *
   * async <
   *   T
   * >() => {}
   *
   * in which case, removing the type parameters will cause a syntax error. Detect this case and
   * move the open-paren earlier.
   */
  processPossibleAsyncArrowWithTypeParams() {
    if (
      !this.tokens.matchesContextual(ContextualKeyword._async) &&
      !this.tokens.matches1(TokenType._async)
    ) {
      return false;
    }
    const nextToken = this.tokens.tokenAtRelativeIndex(1);
    if (nextToken.type !== TokenType.lessThan || !nextToken.isType) {
      return false;
    }

    let nextNonTypeIndex = this.tokens.currentIndex() + 1;
    // Look ahead to see if this is an arrow function or something else.
    while (this.tokens.tokens[nextNonTypeIndex].isType) {
      nextNonTypeIndex++;
    }
    if (this.tokens.matches1AtIndex(nextNonTypeIndex, TokenType.parenL)) {
      this.tokens.replaceToken("async (");
      this.tokens.removeInitialToken();
      while (this.tokens.currentIndex() < nextNonTypeIndex) {
        this.tokens.removeToken();
      }
      this.tokens.removeToken();
      // We ate a ( token, so we need to process the tokens in between and then the ) token so that
      // we remain balanced.
      this.processBalancedCode();
      this.processToken();
      return true;
    }
    return false;
  }

  processPossibleTypeRange() {
    if (this.tokens.currentToken().isType) {
      this.tokens.removeInitialToken();
      while (this.tokens.currentToken().isType) {
        this.tokens.removeToken();
      }
      return true;
    }
    return false;
  }

  shiftMappings(
    mappings,
    prefixLength,
  ) {
    for (let i = 0; i < mappings.length; i++) {
      const mapping = mappings[i];
      if (mapping !== undefined) {
        mappings[i] = mapping + prefixLength;
      }
    }
    return mappings;
  }
}

var build = {};

var hasRequiredBuild;

function requireBuild () {
	if (hasRequiredBuild) return build;
	hasRequiredBuild = 1;
	(function (exports) {
		exports.__esModule = true;
		exports.LinesAndColumns = void 0;
		var LF = '\n';
		var CR = '\r';
		var LinesAndColumns = /** @class */ (function () {
		    function LinesAndColumns(string) {
		        this.string = string;
		        var offsets = [0];
		        for (var offset = 0; offset < string.length;) {
		            switch (string[offset]) {
		                case LF:
		                    offset += LF.length;
		                    offsets.push(offset);
		                    break;
		                case CR:
		                    offset += CR.length;
		                    if (string[offset] === LF) {
		                        offset += LF.length;
		                    }
		                    offsets.push(offset);
		                    break;
		                default:
		                    offset++;
		                    break;
		            }
		        }
		        this.offsets = offsets;
		    }
		    LinesAndColumns.prototype.locationForIndex = function (index) {
		        if (index < 0 || index > this.string.length) {
		            return null;
		        }
		        var line = 0;
		        var offsets = this.offsets;
		        while (offsets[line + 1] <= index) {
		            line++;
		        }
		        var column = index - offsets[line];
		        return { line: line, column: column };
		    };
		    LinesAndColumns.prototype.indexForLocation = function (location) {
		        var line = location.line, column = location.column;
		        if (line < 0 || line >= this.offsets.length) {
		            return null;
		        }
		        if (column < 0 || column > this.lengthOfLine(line)) {
		            return null;
		        }
		        return this.offsets[line] + column;
		    };
		    LinesAndColumns.prototype.lengthOfLine = function (line) {
		        var offset = this.offsets[line];
		        var nextOffset = line === this.offsets.length - 1
		            ? this.string.length
		            : this.offsets[line + 1];
		        return nextOffset - offset;
		    };
		    return LinesAndColumns;
		}());
		exports.LinesAndColumns = LinesAndColumns;
		exports["default"] = LinesAndColumns; 
	} (build));
	return build;
}

requireBuild();

/**
 * Special case code to scan for imported names in ESM TypeScript. We need to do this so we can
 * properly get globals so we can compute shadowed globals.
 *
 * This is similar to logic in CJSImportProcessor, but trimmed down to avoid logic with CJS
 * replacement and flow type imports.
 */
function getTSImportedNames(tokens) {
  const importedNames = new Set();
  for (let i = 0; i < tokens.tokens.length; i++) {
    if (
      tokens.matches1AtIndex(i, TokenType._import) &&
      !tokens.matches3AtIndex(i, TokenType._import, TokenType.name, TokenType.eq)
    ) {
      collectNamesForImport(tokens, i, importedNames);
    }
  }
  return importedNames;
}

function collectNamesForImport(
  tokens,
  index,
  importedNames,
) {
  index++;

  if (tokens.matches1AtIndex(index, TokenType.parenL)) {
    // Dynamic import, so nothing to do
    return;
  }

  if (tokens.matches1AtIndex(index, TokenType.name)) {
    importedNames.add(tokens.identifierNameAtIndex(index));
    index++;
    if (tokens.matches1AtIndex(index, TokenType.comma)) {
      index++;
    }
  }

  if (tokens.matches1AtIndex(index, TokenType.star)) {
    // * as
    index += 2;
    importedNames.add(tokens.identifierNameAtIndex(index));
    index++;
  }

  if (tokens.matches1AtIndex(index, TokenType.braceL)) {
    index++;
    collectNamesForNamedImport(tokens, index, importedNames);
  }
}

function collectNamesForNamedImport(
  tokens,
  index,
  importedNames,
) {
  while (true) {
    if (tokens.matches1AtIndex(index, TokenType.braceR)) {
      return;
    }

    const specifierInfo = getImportExportSpecifierInfo(tokens, index);
    index = specifierInfo.endIndex;
    if (!specifierInfo.isType) {
      importedNames.add(specifierInfo.rightName);
    }

    if (tokens.matches2AtIndex(index, TokenType.comma, TokenType.braceR)) {
      return;
    } else if (tokens.matches1AtIndex(index, TokenType.braceR)) {
      return;
    } else if (tokens.matches1AtIndex(index, TokenType.comma)) {
      index++;
    } else {
      throw new Error(`Unexpected token: ${JSON.stringify(tokens.tokens[index])}`);
    }
  }
}

function transform(code, options) {
  validateOptions(options);
  try {
    const sucraseContext = getSucraseContext(code, options);
    const transformer = new RootTransformer(
      sucraseContext,
      options.transforms,
      Boolean(options.enableLegacyBabel5ModuleInterop),
      options,
    );
    const transformerResult = transformer.transform();
    let result = {code: transformerResult.code};
    if (options.sourceMapOptions) {
      if (!options.filePath) {
        throw new Error("filePath must be specified when generating a source map.");
      }
      result = {
        ...result,
        sourceMap: computeSourceMap(
          transformerResult,
          options.filePath,
          options.sourceMapOptions,
          code,
          sucraseContext.tokenProcessor.tokens,
        ),
      };
    }
    return result;
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
  } catch (e) {
    if (options.filePath) {
      e.message = `Error transforming ${options.filePath}: ${e.message}`;
    }
    throw e;
  }
}

/**
 * Call into the parser/tokenizer and do some further preprocessing:
 * - Come up with a set of used names so that we can assign new names.
 * - Preprocess all import/export statements so we know which globals we are interested in.
 * - Compute situations where any of those globals are shadowed.
 *
 * In the future, some of these preprocessing steps can be skipped based on what actual work is
 * being done.
 */
function getSucraseContext(code, options) {
  const isJSXEnabled = options.transforms.includes("jsx");
  const isTypeScriptEnabled = options.transforms.includes("typescript");
  const isFlowEnabled = options.transforms.includes("flow");
  const disableESTransforms = options.disableESTransforms === true;
  const file = parse(code, isJSXEnabled, isTypeScriptEnabled, isFlowEnabled);
  const tokens = file.tokens;
  const scopes = file.scopes;

  const nameManager = new NameManager(code, tokens);
  const helperManager = new HelperManager(nameManager);
  const tokenProcessor = new TokenProcessor(
    code,
    tokens,
    isFlowEnabled,
    disableESTransforms,
    helperManager,
  );
  const enableLegacyTypeScriptModuleInterop = Boolean(options.enableLegacyTypeScriptModuleInterop);

  let importProcessor = null;
  if (options.transforms.includes("imports")) {
    importProcessor = new CJSImportProcessor(
      nameManager,
      tokenProcessor,
      enableLegacyTypeScriptModuleInterop,
      options,
      options.transforms.includes("typescript"),
      Boolean(options.keepUnusedImports),
      helperManager,
    );
    importProcessor.preprocessTokens();
    // We need to mark shadowed globals after processing imports so we know that the globals are,
    // but before type-only import pruning, since that relies on shadowing information.
    identifyShadowedGlobals(tokenProcessor, scopes, importProcessor.getGlobalNames());
    if (options.transforms.includes("typescript") && !options.keepUnusedImports) {
      importProcessor.pruneTypeOnlyImports();
    }
  } else if (options.transforms.includes("typescript") && !options.keepUnusedImports) {
    // Shadowed global detection is needed for TS implicit elision of imported names.
    identifyShadowedGlobals(tokenProcessor, scopes, getTSImportedNames(tokenProcessor));
  }
  return {tokenProcessor, scopes, nameManager, importProcessor, helperManager};
}

/* eslint-disable max-depth, complexity */
// https://nodejs.org/api/esm.html#esm_loaders

// TODO same hack as definitions
// https://github.com/ProjectEvergreen/wcc/discussions/74
let string;

// TODO move to a util
// https://github.com/ProjectEvergreen/wcc/discussions/74
function getParse(html) {
  return html.indexOf('<html>') >= 0 || html.indexOf('<body>') >= 0 || html.indexOf('<head>') >= 0
    ? parse$2
    : parseFragment;
}

function getParser(moduleURL) {
  const isJSX = moduleURL.pathname.split('.').pop() === 'jsx';

  if (!isJSX) {
    return;
  }

  return {
    parser: Parser.extend(acornJsx()),
    config: {
      // https://github.com/acornjs/acorn/issues/829#issuecomment-1172586171
      ...base,
      JSXElement: () => {}
    }
  };
}

// replace all instances of __this__ marker with relative reference to the custom element parent node
function applyDomDepthSubstitutions(tree, currentDepth = 1, hasShadowRoot = false) {
  try {
    for (const node of tree.childNodes) {
      const attrs = node.attrs;

      // check for attributes
      // and swap out __this__ with depthful parentElement chain
      if (attrs && attrs.length > 0) {
        for (const attr in attrs) {
          const { value } = attrs[attr];

          if (value.indexOf('__this__.') >= 0) {
            const root = hasShadowRoot ? '.getRootNode().host' : `${'.parentElement'.repeat(currentDepth)}`;

            node.attrs[attr].value = value.replace(/__this__/g, `this${root}`);
          }
        }
      }

      if (node.childNodes && node.childNodes.length > 0) {
        applyDomDepthSubstitutions(node, currentDepth + 1, hasShadowRoot);
      }
    }
  } catch (e) {
    console.error(e);
  }

  return tree;
}

function parseJsxElement(element, moduleContents = '') {
  try {
    const { type } = element;

    if (type === 'JSXElement') {
      const { openingElement } = element;
      const { attributes } = openingElement;
      const tagName = openingElement.name.name;

      string += `<${tagName}`;

      for (const attribute of attributes) {
        const { name } = attribute.name;

        // handle events
        if (name.startsWith('on')) {
          const { value } = attribute;
          const { expression } = value;

          // onclick={this.increment}
          if (value.type === 'JSXExpressionContainer') {
            if (expression.type === 'MemberExpression') {
              if (expression.object.type === 'ThisExpression') {
                if (expression.property.type === 'Identifier') {
                  // we leave markers for `this` so we can replace it later while also NOT accidentally replacing
                  // legitimate uses of this that might be actual content / markup of the custom element
                  string += ` ${name}="__this__.${expression.property.name}()"`;
                }
              }
            }

            // onclick={() => this.deleteUser(user.id)}
            // TODO onclick={(e) => { this.deleteUser(user.id) }}
            // TODO onclick={(e) => { this.deleteUser(user.id) && this.logAction(user.id) }}
            // https://github.com/ProjectEvergreen/wcc/issues/88
            if (expression.type === 'ArrowFunctionExpression') {
              if (expression.body && expression.body.type === 'CallExpression') {
                const { start, end } = expression;
                string += ` ${name}="${moduleContents.slice(start, end).replace(/this./g, '__this__.').replace('() => ', '')}"`;
              }
            }

            if (expression.type === 'AssignmentExpression') {
              const { left, right } = expression;

              if (left.object.type === 'ThisExpression') {
                if (left.property.type === 'Identifier') {
                  // very naive (fine grained?) reactivity
                  string += ` ${name}="__this__.${left.property.name}${expression.operator}${right.raw}; __this__.render();"`;
                }
              }
            }
          }
        } else if (attribute.name.type === 'JSXIdentifier') {
          // TODO is there any difference between an attribute for an event handler vs a normal attribute?
          // Can all these be parsed using one function>
          if (attribute.value) {
            if (attribute.value.type === 'Literal') {
              // xxx="yyy" >
              string += ` ${name}="${attribute.value.value}"`;
            } else if (attribute.value.type === 'JSXExpressionContainer') {
              // xxx={allTodos.length} >
              const { value } = attribute;
              const { expression } = value;

              if (expression.type === 'Identifier') {
                string += ` ${name}=\$\{${expression.name}\}`;
              }

              if (expression.type === 'MemberExpression') {
                if (expression.object.type === 'Identifier') {
                  if (expression.property.type === 'Identifier') {
                    string += ` ${name}=\$\{${expression.object.name}.${expression.property.name}\}`;
                  }
                }
              }
            }
          } else {
            // xxx >
            string += ` ${name}`;
          }
        }
      }

      string += openingElement.selfClosing ? '/>' : '>';

      if (element.children.length > 0) {
        element.children.forEach(child => parseJsxElement(child, moduleContents));
      }

      string += `</${tagName}>`;
    }

    if (type === 'JSXText') {
      string += element.raw;
    }

    if (type === 'JSXExpressionContainer') {
      const { type } = element.expression;

      if (type === 'Identifier') {
        // You have {count} TODOs left to complete
        string += `\$\{${element.expression.name}\}`;
      } else if (type === 'MemberExpression') {
        const { object } = element.expression.object;

        // You have {this.todos.length} Todos left to complete
        // https://github.com/ProjectEvergreen/wcc/issues/88
        if (object && object.type === 'ThisExpression') {
          // TODO ReferenceError: __this__ is not defined
          // string += `\$\{__this__.${element.expression.object.property.name}.${element.expression.property.name}\}`;
        } else {
          // const { todos } = this;
          // ....
          // You have {todos.length} Todos left to complete
          string += `\$\{${element.expression.object.name}.${element.expression.property.name}\}`;
        }
      }
    }
  } catch (e) {
    console.error(e);
  }

  return string;
}

// TODO handle if / else statements
// https://github.com/ProjectEvergreen/wcc/issues/88
function findThisReferences(context, statement) {
  const references = [];
  const { expression, type } = statement;

  if (type === 'VariableDeclaration') {
    statement.declarations.forEach(declaration => {
      const { init, id } = declaration;

      if (init.object && init.object.type === 'ThisExpression') {
        // const { description } = this.todo;
        references.push(init.property.name);
      } else if (init.type === 'ThisExpression' && id && id.properties) {
        // const { description } = this.todo;
        id.properties.forEach((property) => {
          references.push(property.key.name);
        });
      }
    });
  }

  return references;
}

function parseJsx(moduleURL) {
  const moduleContents = fs.readFileSync(moduleURL, 'utf-8');
  const result = transform(moduleContents, {
    transforms: ['typescript', 'jsx'],
    jsxRuntime: 'preserve'
  });
  let inferredObservability = false;
  let observedAttributes = [];
  let tree = Parser.extend(acornJsx()).parse(result.code, {
    ecmaVersion: 'latest',
    sourceType: 'module'
  });
  string = '';

  simple(tree, {
    ClassDeclaration(node) {
      if (node.superClass.name === 'HTMLElement') {
        const hasShadowRoot = moduleContents.slice(node.body.start, node.body.end).indexOf('this.attachShadow(') > 0;

        for (const n1 of node.body.body) {
          if (n1.type === 'MethodDefinition') {
            const nodeName = n1.key.name;
            if (nodeName === 'render') {
              for (const n2 in n1.value.body.body) {
                const n = n1.value.body.body[n2];

                if (n.type === 'VariableDeclaration') {
                  observedAttributes = [
                    ...observedAttributes,
                    ...findThisReferences('render', n)
                  ];
                } else if (n.type === 'ReturnStatement' && n.argument.type === 'JSXElement') {
                  const html = parseJsxElement(n.argument, moduleContents);
                  const elementTree = getParse(html)(html);
                  const elementRoot = hasShadowRoot ? 'this.shadowRoot' : 'this';

                  applyDomDepthSubstitutions(elementTree, undefined, hasShadowRoot);

                  const serializedHtml = serialize(elementTree);
                  // we have to Shadow DOM use cases here
                  // 1. No shadowRoot, so we attachShadow and append the template
                  // 2. If there is root from the attachShadow signal, so we just need to inject innerHTML, say in an htmx
                  // could / should we do something else instead of .innerHTML
                  // https://github.com/ProjectEvergreen/wcc/issues/138
                  const renderHandler = hasShadowRoot
                    ? `
                        const template = document.createElement('template');
                        template.innerHTML = \`${serializedHtml}\`;

                        if(!${elementRoot}) {
                          this.attachShadow({ mode: 'open' });
                          this.shadowRoot.appendChild(template.content.cloneNode(true));
                        } else {
                          this.shadowRoot.innerHTML = template.innerHTML;
                        }
                      `
                    : `${elementRoot}.innerHTML = \`${serializedHtml}\`;`;
                  const transformed = parse$1(renderHandler, {
                    ecmaVersion: 'latest',
                    sourceType: 'module'
                  });

                  n1.value.body.body[n2] = transformed;
                }
              }
            }
          }
        }
      }
    },
    ExportNamedDeclaration(node) {
      const { declaration } = node;

      if (declaration && declaration.type === 'VariableDeclaration' && declaration.kind === 'const' && declaration.declarations.length === 1) {
        if (declaration.declarations[0].id.name === 'inferredObservability') {
          inferredObservability = Boolean(node.declaration.declarations[0].init.raw);
        }
      }
    }
  }, {
    // https://github.com/acornjs/acorn/issues/829#issuecomment-1172586171
    ...base,
    JSXElement: () => {}
  });

  // TODO - signals: use constructor, render, HTML attributes?  some, none, or all?
  if (inferredObservability && observedAttributes.length > 0 && true) {
    let insertPoint;
    for (const line of tree.body) {
      // test for class MyComponent vs export default class MyComponent
      if (line.type === 'ClassDeclaration' || (line.declaration && line.declaration.type) === 'ClassDeclaration') {
        insertPoint = line.declaration.body.start + 1;
      }
    }

    let newModuleContents = generate(tree);

    // TODO better way to determine value type?
    /* eslint-disable indent */
    newModuleContents = `${newModuleContents.slice(0, insertPoint)}
      static get observedAttributes() {
        return [${[...observedAttributes].map(attr => `'${attr}'`).join(',')}]
      }

      attributeChangedCallback(name, oldValue, newValue) {
        function getValue(value) {
          return value.charAt(0) === '{' || value.charAt(0) === '['
            ? JSON.parse(value)
            : !isNaN(value)
              ? parseInt(value, 10)
              : value === 'true' || value === 'false'
                ? value === 'true' ? true : false
                : value;
        }
        if (newValue !== oldValue) {
          switch(name) {
            ${observedAttributes.map((attr) => {
              return `
                case '${attr}':
                  this.${attr} = getValue(newValue);
                  break;
              `;
            }).join('\n')}
          }

          this.render();
        }
      }

      ${newModuleContents.slice(insertPoint)}
    `;
    /* eslint-enable indent */

    tree = Parser.extend(acornJsx()).parse(newModuleContents, {
      ecmaVersion: 'latest',
      sourceType: 'module'
    });
  }

  return tree;
}

/* eslint-disable max-depth */
// this must come first

function isCustomElementDefinitionNode(node) {
  const { expression } = node;

  return expression.type === 'CallExpression' && expression.callee && expression.callee.object
    && expression.callee.property && expression.callee.object.name === 'customElements'
    && expression.callee.property.name === 'define';
}

async function renderComponentRoots(tree, definitions) {
  for (const node of tree.childNodes) {
    if (node.tagName && node.tagName.indexOf('-') > 0) {
      const { attrs, tagName } = node;

      if (definitions[tagName]) {
        const { moduleURL } = definitions[tagName];
        const elementInstance = await initializeCustomElement(moduleURL, tagName, node, definitions);

        if (elementInstance) {
          const hasShadow = elementInstance.shadowRoot;

          node.childNodes = hasShadow
            ? [...elementInstance.shadowRoot.childNodes, ...node.childNodes]
            : elementInstance.childNodes;
        } else {
          console.warn(`WARNING: customElement <${tagName}> detected but not serialized.  You may not have exported it.`);
        }
      } else {
        console.warn(`WARNING: customElement <${tagName}> is not defined.  You may not have imported it.`);
      }

      attrs.forEach((attr) => {
        if (attr.name === 'hydrate') {
          definitions[tagName].hydrate = attr.value;
        }
      });

    }

    if (node.childNodes && node.childNodes.length > 0) {
      await renderComponentRoots(node, definitions);
    }

    if (node.shadowRoot && node.shadowRoot.childNodes?.length > 0) {
      await renderComponentRoots(node.shadowRoot, definitions);
    }

    // does this only apply to `<template>` tags?
    if (node.content && node.content.childNodes?.length > 0) {
      await renderComponentRoots(node.content, definitions);
    }
  }

  return tree;
}

function registerDependencies(moduleURL, definitions, depth = 0) {
  const moduleContents = fs.readFileSync(moduleURL, 'utf-8');
  const result = transform(moduleContents, {
    transforms: ['typescript', 'jsx'],
    jsxRuntime: 'preserve'
  });
  const nextDepth = depth += 1;
  const customParser = getParser(moduleURL);
  const parser = customParser ? customParser.parser : Parser;
  const config = customParser ? customParser.config : {
    ...base
  };

  simple(parser.parse(result.code, {
    ecmaVersion: 'latest',
    sourceType: 'module'
  }), {
    ImportDeclaration(node) {
      const specifier = node.source.value;
      const isBareSpecifier = specifier.indexOf('.') !== 0 && specifier.indexOf('/') !== 0;
      const extension = specifier.split('.').pop();

      // would like to decouple .jsx from the core, ideally
      // https://github.com/ProjectEvergreen/wcc/issues/122
      if (!isBareSpecifier && ['js', 'jsx', 'ts'].includes(extension)) {
        const dependencyModuleURL = new URL(node.source.value, moduleURL);

        registerDependencies(dependencyModuleURL, definitions, nextDepth);
      }
    },
    ExpressionStatement(node) {
      if (isCustomElementDefinitionNode(node)) {
        const { arguments: args } = node.expression;
        const tagName = args[0].type === 'Literal'
          ? args[0].value // single and double quotes
          : args[0].quasis[0].value.raw; // template literal
        const tree = parseJsx(moduleURL);
        const isEntry = nextDepth - 1 === 1;

        definitions[tagName] = {
          instanceName: args[1].name,
          moduleURL,
          source: generate(tree),
          url: moduleURL,
          isEntry
        };
      }
    }
  }, config);
}

async function getTagName(moduleURL) {
  const moduleContents = await fs.promises.readFile(moduleURL, 'utf-8');
  const result = transform(moduleContents, {
    transforms: ['typescript', 'jsx'],
    jsxRuntime: 'preserve'
  });
  const customParser = getParser(moduleURL);
  const parser = customParser ? customParser.parser : Parser;
  const config = customParser ? customParser.config : {
    ...base
  };
  let tagName;

  simple(parser.parse(result.code, {
    ecmaVersion: 'latest',
    sourceType: 'module'
  }), {
    ExpressionStatement(node) {
      if (isCustomElementDefinitionNode(node)) {
        tagName = node.expression.arguments[0].value;
      }
    }
  }, config);

  return tagName;
}

async function initializeCustomElement(elementURL, tagName, node = {}, definitions = [], isEntry, props = {}) {

  if (!tagName) {
    const depth = isEntry ? 1 : 0;
    registerDependencies(elementURL, definitions, depth);
  }

  // https://github.com/ProjectEvergreen/wcc/pull/67/files#r902061804
  // https://github.com/ProjectEvergreen/wcc/pull/159
  const { href } = elementURL;
  const element = customElements.get(tagName) ?? (await import(href)).default;
  const dataLoader = (await import(href)).getData;
  const data = props ? props : dataLoader ? await dataLoader(props) : {};

  if (element) {
    const elementInstance = new element(data); // eslint-disable-line new-cap

    Object.assign(elementInstance, node);

    await elementInstance.connectedCallback();

    return elementInstance;
  }
}

async function renderToString(elementURL, wrappingEntryTag = true, props = {}) {
  const definitions = [];
  const elementTagName = wrappingEntryTag && await getTagName(elementURL);
  const isEntry = !!elementTagName;
  const elementInstance = await initializeCustomElement(elementURL, undefined, undefined, definitions, isEntry, props);

  let html;

  // in case the entry point isn't valid
  if (elementInstance) {
    elementInstance.nodeName = elementTagName ?? '';
    elementInstance.tagName = elementTagName ?? '';

    await renderComponentRoots(
      elementInstance.shadowRoot
        ? 
        { 
          nodeName: '#document-fragment', 
          childNodes: [elementInstance] 
        }
        : elementInstance,
      definitions
    );

    html = wrappingEntryTag && elementTagName ? `
        <${elementTagName}>
          ${serialize(elementInstance)}
        </${elementTagName}>
      `
      : serialize(elementInstance);
  } else {
    console.warn('WARNING: No custom element class found for this entry point.');
  }

  return {
    html,
    metadata: definitions
  };
}

async function renderFromHTML(html, elements = []) {
  const definitions = [];

  for (const url of elements) {
    registerDependencies(url, definitions, 1);
  }

  const elementTree = getParse$1(html)(html);
  const finalTree = await renderComponentRoots(elementTree, definitions);

  return {
    html: serialize(finalTree),
    metadata: definitions
  };
}

async function executeRouteModule({
  moduleUrl,
  compilation,
  page = {},
  prerender = false,
  htmlContents = null,
  scripts = [],
  request,
}) {
  const data = {
    layout: null,
    body: null,
    frontmatter: null,
    html: null,
  };

  if (prerender) {
    const scriptURLs = scripts.map((scriptFile) => new URL(scriptFile));
    const { html } = await renderFromHTML(htmlContents, scriptURLs);

    data.html = html;
  } else {
    const module = await import(moduleUrl).then((module) => module);
    const {
      prerender = false,
      getLayout = null,
      getBody = null,
      getFrontmatter = null,
      isolation,
    } = module;

    if (module.default) {
      const { html } = await renderToString(new URL(moduleUrl), false, request);

      data.body = html;
    } else {
      if (getBody) {
        data.body = await getBody(compilation, page, request);
      }
    }

    if (getLayout) {
      data.layout = await getLayout(compilation, page);
    }

    if (getFrontmatter) {
      data.frontmatter = await getFrontmatter(compilation, page);
    }

    // TODO cant we get these from just pulling from the file during the graph phase?
    // https://github.com/ProjectEvergreen/greenwood/issues/991
    data.prerender = prerender;
    data.isolation = isolation;
  }

  return data;
}

const moduleUrl = new URL(new URL('Bookmarks-Responsible_Adults.route.chunk.DY-FBIWh.js', import.meta.url).href, import.meta.url);
async function handler(request) {
    const compilation = JSON.parse(`{"graph":[{"id":"Bookmarks-Anti-Hermione","label":"Anti Hermione","title":"Anti-Hermione","route":"/Bookmarks/Anti-Hermione/","layout":"standard","data":{"collection":"Bookmarks","description":"HP Stories Notable for the Anti-Hermione Bias","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Anti-Hermione.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Anti-Hermione/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Dealing_With_Snape-After_He_Dies","label":"After_He_Dies","title":"After Snape Dies","route":"/Bookmarks/Dealing_With_Snape/After_He_Dies/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories focusing on Snape's death, judgement, or afterlife","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Dealing_With_Snape/After_He_Dies.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Dealing_With_Snape/After_He_Dies/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Dealing_With_Snape-His_Relationship_With_Lily","label":"His_Relationship_With_Lily","title":"Snape's Relationship With Lily","route":"/Bookmarks/Dealing_With_Snape/His_Relationship_With_Lily/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories about Snape's relationship with Lily","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Dealing_With_Snape/His_Relationship_With_Lily.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Dealing_With_Snape/His_Relationship_With_Lily/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Dealing_With_Snape-index","label":"Dealing_With_Snape","title":"Bookmarks - Dealing with Snape","route":"/Bookmarks/Dealing_With_Snape/","layout":"page","data":{"author":"Luke Schierer","imports":["/components/DirectoryIndex.ts type=&quotemodule&quote"],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Dealing_With_Snape/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Dealing_With_Snape/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Featuring_Hermione","label":"Featuring_Hermione","title":"Featuring Hermione","route":"/Bookmarks/Featuring_Hermione/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories in which Hermione is key","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Featuring_Hermione.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Featuring_Hermione/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Featuring_Ron","label":"Featuring_Ron","title":"Featuring Ron","route":"/Bookmarks/Featuring_Ron/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories in which Ron is key","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Featuring_Ron.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Featuring_Ron/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Fred_and_George","label":"Fred_and_George","title":"Featuring Fred and George","route":"/Bookmarks/Fred_and_George/","layout":"standard","data":{"collection":"Bookmarks","description":"HP Stories featuring Fred and George as main characters","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Fred_and_George.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Fred_and_George/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Harry_Leaves","label":"Harry_Leaves","title":"Harry Leaves","route":"/Bookmarks/Harry_Leaves/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories in which Harry Leaves the Wizarding World and/or England","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Harry_Leaves.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Harry_Leaves/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Luna","label":"Luna","title":"All About Luna","route":"/Bookmarks/Luna/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories with Luna as a primary character","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Luna.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Luna/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Prequels","label":"Prequels","title":"Prequels","route":"/Bookmarks/Prequels/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories predating our primary canon","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Prequels.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Prequels/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Problems_After_the_War","label":"Problems_After_the_War","title":"All was *Not* Well","route":"/Bookmarks/Problems_After_the_War/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories featuring problems after the war","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Problems_After_the_War.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Problems_After_the_War/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Problems_Exposed","label":"Problems_Exposed","title":"Exposing Plot Holes","route":"/Bookmarks/Problems_Exposed/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories HP stories that expose plot holes in the original","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Problems_Exposed.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Problems_Exposed/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Responsible_Adults","label":"Responsible_Adults","title":"Adults Adulting","route":"/Bookmarks/Responsible_Adults/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories with responsible adults","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Responsible_Adults.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Responsible_Adults/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-The_Missed_Birthday","label":"The_Missed_Birthday","title":"The Missed Birthday","route":"/Bookmarks/The_Missed_Birthday/","layout":"standard","data":{"collection":"Bookmarks","description":"Several Authors have noted that Ginny's Birthday is a problem in canon","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/The_Missed_Birthday.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/The_Missed_Birthday/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Time_Travel","label":"Time_Travel","title":"Time Travel","route":"/Bookmarks/Time_Travel/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories focusing on travels through time","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Time_Travel.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Time_Travel/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-index","label":"Bookmarks","title":"Bookmarks","route":"/Bookmarks/","layout":"standard","data":{"author":"Luke Schierer","imports":["/components/DirectoryIndex.ts type=&quotemodule&quote"],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-pairing-Harry-With_Astoria","label":"With_Astoria","title":"Harry With Astoria Greengrass","route":"/Bookmarks/pairing/Harry/With_Astoria/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories with Harry and Astoria Greengrass paired","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/pairing/Harry/With_Astoria.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/pairing/Harry/With_Astoria/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-pairing-Harry-With_Daphne","label":"With_Daphne","title":"Harry With Daphne Greengrass","route":"/Bookmarks/pairing/Harry/With_Daphne/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories with Harry and Daphne Greengrass paired","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/pairing/Harry/With_Daphne.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/pairing/Harry/With_Daphne/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-pairing-Harry-With_Gabrielle","label":"With_Gabrielle","title":"Harry With Gabrielle","route":"/Bookmarks/pairing/Harry/With_Gabrielle/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories with Harry and Gabrielle paired","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/pairing/Harry/With_Gabrielle.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/pairing/Harry/With_Gabrielle/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-pairing-Harry-With_Ginny","label":"With_Ginny","title":"Harry With Ginny","route":"/Bookmarks/pairing/Harry/With_Ginny/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories with Harry and Ginny paired","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/pairing/Harry/With_Ginny.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/pairing/Harry/With_Ginny/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-pairing-Harry-With_Hannah","label":"With_Hannah","title":"Harry With Hannah Abbott","route":"/Bookmarks/pairing/Harry/With_Hannah/","layout":"stanard","data":{"collection":"Bookmarks","description":"HP stories with Harry and Hannah Abbott paired","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/pairing/Harry/With_Hannah.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/pairing/Harry/With_Hannah/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-pairing-Harry-With_Sally-Anne","label":"With_Sally Anne","title":"Harry With Sally-Anne Perks","route":"/Bookmarks/pairing/Harry/With_Sally-Anne/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories with Harry and Sally-Anne Perks paired","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/pairing/Harry/With_Sally-Anne.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/pairing/Harry/With_Sally-Anne/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-pairing-Harry-With_Su_Li","label":"With_Su_Li","title":"Harry and Su Li","route":"/Bookmarks/pairing/Harry/With_Su_Li/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories in which Harry is paired with Su Li","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/pairing/Harry/With_Su_Li.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/pairing/Harry/With_Su_Li/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-pairing-Harry-With_Susan","label":"With_Susan","title":"Harry and Susan","route":"/Bookmarks/pairing/Harry/With_Susan/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories in which Harry is paired with Susan Bones","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/pairing/Harry/With_Susan.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/pairing/Harry/With_Susan/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-pairing-Harry-With_Wednesday","label":"With_Wednesday","title":"Harry With Wednesday Addams","route":"/Bookmarks/pairing/Harry/With_Wednesday/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories with Harry and Wednesday Addams paired","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/pairing/Harry/With_Wednesday.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/pairing/Harry/With_Wednesday/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-pairing-Harry-index","label":"Harry","title":"Bookmarks - Harry Pairings","route":"/Bookmarks/pairing/Harry/","layout":"standard","data":{"author":"Luke Schierer","imports":["/components/DirectoryIndex.ts type=&quotemodule&quote"],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/pairing/Harry/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/pairing/Harry/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-pairing-index","label":"Pairing","title":"Bookmarks - Pairing","route":"/Bookmarks/pairing/","layout":"standard","data":{"author":"Luke Schierer","imports":["/components/DirectoryIndex.ts type=&quotemodule&quote"],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/pairing/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/pairing/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-Appendix_G","label":"Appendix_G","title":"Appendix_G","route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/Appendix_G/","layout":"standard Soteriology, Missiology and Ecclesiology","data":{"author":"Luke Schierer","collection":"Nephilim","sidebar":{"order":100},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/Appendix_G.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/Appendix_G/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-Appendix_H","label":"Appendix_H","title":"Appendix_H","route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/Appendix_H/","layout":"standard What are the Nephilim","data":{"author":"Luke Schierer","collection":"Nephilim","sidebar":{"order":100},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/Appendix_H.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/Appendix_H/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-FSSP","label":"FSSP","title":"Backstory: The FSSP","route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/FSSP/","layout":"standard","data":{"sidebar":{"order":250},"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/FSSP.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/FSSP/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-Inheritance","label":"Inheritance","title":"Inheritance","route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/Inheritance/","layout":"standard Non-Mendelian Inheritance","data":{"author":"Luke Schierer","sidebar":{"order":100},"tableOfContents":[],"collection":"Nephilim","tocHeading":0},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/Inheritance.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/Inheritance/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-Life%20Expectancy","label":"Life%20Expectancy","title":"Life%20Expectancy","route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/Life%20Expectancy/","layout":"standard Life Expectancy","data":{"author":"Luke Schierer","collection":"Nephilim","sidebar":{"order":100},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/Life%20Expectancy.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/Life%20Expectancy/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-Magical%20Beings","label":"Magical%20Beings","title":"Magical%20Beings","route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/Magical%20Beings/","layout":"standard Magical Beings","data":{"author":"Luke Schierer","sidebar":{"order":100},"collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/Magical%20Beings.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/Magical%20Beings/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-Magical%20Contracts","label":"Magical%20Contracts","title":"Magical%20Contracts","route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/Magical%20Contracts/","layout":"standard Magical Contracts","data":{"author":"Luke Schierer","collection":"Nephilim","sidebar":{"order":100},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/Magical%20Contracts.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/Magical%20Contracts/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-Points%20of%20Divergence","label":"Points%20of%20Divergence","title":"Points%20of%20Divergence","route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/Points%20of%20Divergence/","layout":"standard Points of Divergence","data":{"author":"Luke Schierer","tableOfContents":[],"collection":"Nephilim","sidebar":{"order":100},"tocHeading":0},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/Points%20of%20Divergence.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/Points%20of%20Divergence/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-Relative%20Power%20Levels","label":"Relative%20Power%20Levels","title":"Relative%20Power%20Levels","route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/Relative%20Power%20Levels/","layout":"standard Relative Power Levels","data":{"sidebar":{"order":100},"tableOfContents":[],"author":"Luke Schierer","collection":"Nephilim","tocHeading":0},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/Relative%20Power%20Levels.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/Relative%20Power%20Levels/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-Rules%20of%20Magic","label":"Rules%20of%20Magic","title":"Rules%20of%20Magic","route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/Rules%20of%20Magic/","layout":"standard Rules of Magic","data":{"author":"Luke Schierer","sidebar":{"order":100},"tableOfContents":[],"collection":"Nephilim","imports":["/components/FanFiction/Harry_Potter_-_Nephilim/Appendices/PowerLevelTable.ts type=&quotemodule&quote"],"tocHeading":0},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/Rules%20of%20Magic.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/Rules%20of%20Magic/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-Veela%20Pathology","label":"Veela%20Pathology","title":"Veela%20Pathology","route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/Veela%20Pathology/","layout":"standard The Veela Curse","data":{"author":"Luke Schierer","sidebar":{"order":100},"collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/Veela%20Pathology.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/Veela%20Pathology/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-index","label":"Appendices","title":"Harry Potter - Nephilim | Index of Appendices","route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/","layout":"standard","data":{"author":"Luke Schierer","imports":["/components/DirectoryIndex.ts type=&quotemodule&quote"],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Chapters-Chapter01","label":"Chapter01","title":"Chapter 1","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter01/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter01.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter01/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Chapters-Chapter02","label":"Chapter02","title":"Chapter 2","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter02/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter02.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter02/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Chapters-Chapter03","label":"Chapter03","title":"Chapter 3","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter03/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter03.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter03/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Chapters-Chapter04","label":"Chapter04","title":"Chapter 4","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter04/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter04.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter04/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Chapters-Chapter05","label":"Chapter05","title":"Chapter 5","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter05/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter05.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter05/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Chapters-Chapter06","label":"Chapter06","title":"Chapter 6","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter06/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter06.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter06/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Chapters-Chapter07","label":"Chapter07","title":"Chapter 7","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter07/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter07.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter07/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Chapters-Chapter08","label":"Chapter08","title":"Chapter 8","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter08/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter08.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter08/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Chapters-Chapter09","label":"Chapter09","title":"Chapter 9","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter09/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter09.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter09/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Chapters-Chapter10","label":"Chapter10","title":"Chapter 10","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter10/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter10.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter10/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Chapters-Chapter11","label":"Chapter11","title":"Chapter 11","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter11/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter11.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter11/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Introduction","label":"Introduction","title":"Introduction","route":"/FanFiction/Harry_Potter_-_Nephilim/Introduction/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","sidebar":{"order":-1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Introduction.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Introduction/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Prologue","label":"Prologue","title":"Prologue","route":"/FanFiction/Harry_Potter_-_Nephilim/Prologue/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","sidebar":{"order":0},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Prologue.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Prologue/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-backstory-Angels","label":"Angels","title":"Backstory: Angels","route":"/FanFiction/Harry_Potter_-_Nephilim/backstory/Angels/","layout":"standard","data":{"sidebar":{"order":200},"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/backstory/Angels.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/backstory/Angels/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-backstory-Giants","label":"Giants","title":"Backstory: Giants","route":"/FanFiction/Harry_Potter_-_Nephilim/backstory/Giants/","layout":"standard","data":{"tableOfContents":[],"author":"Luke Schierer","collection":"Nephilim","sidebar":{"order":210},"tocHeading":0},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/backstory/Giants.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/backstory/Giants/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-backstory-Nephilim","label":"Nephilim","title":"Backstory: Angels","route":"/FanFiction/Harry_Potter_-_Nephilim/backstory/Nephilim/","layout":"standard","data":{"sidebar":{"order":200},"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/backstory/Nephilim.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/backstory/Nephilim/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-backstory-The_Dwarfs","label":"The_Dwarfs","title":"Backstory: The Dwarfs","route":"/FanFiction/Harry_Potter_-_Nephilim/backstory/The_Dwarfs/","layout":"standard","data":{"tableOfContents":[],"author":"Luke Schierer","collection":"Nephilim","sidebar":{"order":201},"tocHeading":0},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/backstory/The_Dwarfs.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/backstory/The_Dwarfs/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-backstory-The_Flood","label":"The_Flood","title":"Backstory: The Flood","route":"/FanFiction/Harry_Potter_-_Nephilim/backstory/The_Flood/","layout":"standard","data":{"author":"Luke Schierer","collection":"nephilim","sidebar":{"order":200},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/backstory/The_Flood.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/backstory/The_Flood/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-backstory-The_Veela","label":"The_Veela","title":"Backstory: Veela","route":"/FanFiction/Harry_Potter_-_Nephilim/backstory/The_Veela/","layout":"standard","data":{"tableOfContents":[],"author":"Luke Schierer","collection":"Nephilim","sidebar":{"order":210},"tocHeading":0},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/backstory/The_Veela.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/backstory/The_Veela/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-index","label":"Harry_Potter_ _Nephilim","title":"Harry Potter - Nephilim","route":"/FanFiction/Harry_Potter_-_Nephilim/","layout":"standard","data":{"author":"Luke Schierer","collection":"FanFiction","imports":["/components/DirectoryIndex.ts type=&quotemodule&quote"],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-index","label":"FanFiction","title":"Fan Fiction","route":"/FanFiction/","layout":"standard","data":{"author":"Luke Schierer","imports":["/components/DirectoryIndex.ts type=&quotemodule&quote"],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Azkaban","label":"Azkaban","title":"Azkaban Prison","route":"/Harrypedia/Azkaban/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Azkaban.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Azkaban/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Egypt","label":"Egypt","title":"Egypt","route":"/Harrypedia/Egypt/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Egypt.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Egypt/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-FantasticBeasts","label":"FantasticBeasts","title":"Fantastic Beasts","route":"/Harrypedia/FantasticBeasts/","layout":"standard","data":{"author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/FantasticBeasts.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/FantasticBeasts/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Grimmauld_Place","label":"Grimmauld_Place","title":"Number 12 Grimmauld Place","route":"/Harrypedia/Grimmauld_Place/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Grimmauld_Place.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Grimmauld_Place/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Gringotts","label":"Gringotts","title":"Gringotts Bank","route":"/Harrypedia/Gringotts/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Gringotts.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Gringotts/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-History","label":"History","title":"History","route":"/Harrypedia/History/","layout":"page","data":{"collection":"Harrypedia","data":{"author":"Luke Schierer","tableOfContents":"false"},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/History.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/History/index.html","isSSR":true,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Bathrooms","label":"Bathrooms","title":"Bathrooms at Hogwarts","route":"/Harrypedia/Hogwarts/Bathrooms/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Bathrooms.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Bathrooms/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Class_Lists-index","label":"Class_Lists","title":"Class Lists by Year","route":"/Harrypedia/Hogwarts/Class_Lists/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Class_Lists/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Class_Lists/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Class_Schedule_Rant","label":"Class_Schedule_Rant","title":"Hogwarts Class Schedule Impossibility","route":"/Harrypedia/Hogwarts/Class_Schedule_Rant/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Class_Schedule_Rant.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Class_Schedule_Rant/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Class_and_House_Structure","label":"Class_and_House_Structure","title":"Class and House Structure","route":"/Harrypedia/Hogwarts/Class_and_House_Structure/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Class_and_House_Structure.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Class_and_House_Structure/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Curriculum","label":"Curriculum","title":"Hogwarts Curriculum","route":"/Harrypedia/Hogwarts/Curriculum/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Curriculum.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Curriculum/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Founding","label":"Founding","title":"Founding Hogwarts School of Witchcraft and Wizardry","route":"/Harrypedia/Hogwarts/Founding/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Founding.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Founding/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Gryffindor","label":"Gryffindor","title":"Gryffindor","route":"/Harrypedia/Hogwarts/Gryffindor/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Gryffindor.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Gryffindor/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Hufflepuff","label":"Hufflepuff","title":"Hufflepuff","route":"/Harrypedia/Hogwarts/Hufflepuff/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Hufflepuff.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Hufflepuff/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Punishments","label":"Punishments","title":"Policies on Punishing Students","route":"/Harrypedia/Hogwarts/Punishments/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Punishments.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Punishments/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Ravenclaw","label":"Ravenclaw","title":"Ravenclaw","route":"/Harrypedia/Hogwarts/Ravenclaw/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Ravenclaw.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Ravenclaw/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Slytherin","label":"Slytherin","title":"Slytherin","route":"/Harrypedia/Hogwarts/Slytherin/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Slytherin.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Slytherin/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Sorting_Hat","label":"Sorting_Hat","title":"Hogwarts Sorting Hat","route":"/Harrypedia/Hogwarts/Sorting_Hat/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Sorting_Hat.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Sorting_Hat/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Students","label":"Students","title":"Hogwarts' Student Body","route":"/Harrypedia/Hogwarts/Students/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Students.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Students/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Teachers","label":"Teachers","title":"Teachers","route":"/Harrypedia/Hogwarts/Teachers/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Teachers.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Teachers/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-The_Trophy_Room","label":"The_Trophy_Room","title":"The Trophy Room","route":"/Harrypedia/Hogwarts/The_Trophy_Room/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/The_Trophy_Room.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/The_Trophy_Room/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-comparitive_class_ages","label":"Comparitive_class_ages","title":"Comparing how old students are in UK and US","route":"/Harrypedia/Hogwarts/comparitive_class_ages/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/comparitive_class_ages.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/comparitive_class_ages/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-index","label":"Hogwarts","title":"Hogwarts","route":"/Harrypedia/Hogwarts/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-MACUSA","label":"MACUSA","title":"Magical Congress of the United States of America (MACUSA)","route":"/Harrypedia/MACUSA/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/MACUSA.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/MACUSA/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Quidditch","label":"Quidditch","title":"Quidditch","route":"/Harrypedia/Quidditch/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Quidditch.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Quidditch/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Relationships","label":"Relationships","title":"Relationships as of the Epilogue","route":"/Harrypedia/Relationships/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Relationships.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Relationships/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Shipping","label":"Shipping","title":"Relationships between Characters","route":"/Harrypedia/Shipping/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Shipping.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Shipping/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-TriWizard","label":"TriWizard","title":"The TriWizard Tournament","route":"/Harrypedia/TriWizard/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/TriWizard.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/TriWizard/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-animals-ashwinder","label":"Ashwinder","title":"Ashwinder","route":"/Harrypedia/animals/ashwinder/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/animals/ashwinder.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/animals/ashwinder/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-animals-augurey","label":"Augurey","title":"Augurey","route":"/Harrypedia/animals/augurey/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/animals/augurey.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/animals/augurey/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-animals-basilisk","label":"Basilisk","title":"Basilisk","route":"/Harrypedia/animals/basilisk/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/animals/basilisk.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/animals/basilisk/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-animals-centaur","label":"Centaur","title":"Centaurs","route":"/Harrypedia/animals/centaur/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/animals/centaur.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/animals/centaur/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-animals-frog-rabbit","label":"Frog Rabbit","title":"Frog-Rabbit","route":"/Harrypedia/animals/frog-rabbit/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/animals/frog-rabbit.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/animals/frog-rabbit/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-animals-hippogriff","label":"Hippogriff","title":"Hippogriff","route":"/Harrypedia/animals/hippogriff/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/animals/hippogriff.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/animals/hippogriff/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-animals-index","label":"Animals","title":"Magical Animals in Harry Potter","route":"/Harrypedia/animals/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/animals/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/animals/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-animals-jarvey","label":"Jarvey","title":"jarvey","route":"/Harrypedia/animals/jarvey/","layout":"standard","data":{"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/animals/jarvey.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/animals/jarvey/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-animals-sphinx","label":"Sphinx","title":"sphinx","route":"/Harrypedia/animals/sphinx/","layout":"standard","data":{"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/animals/sphinx.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/animals/sphinx/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-animals-unicorn","label":"Unicorn","title":"Unicorn","route":"/Harrypedia/animals/unicorn/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/animals/unicorn.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/animals/unicorn/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-balance","label":"Balance","title":"Balance of Power","route":"/Harrypedia/balance/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/balance.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/balance/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-Obscurus","label":"Obscurus","title":"Obscurus","route":"/Harrypedia/beings/Obscurus/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/Obscurus.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/Obscurus/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-centaur","label":"Centaur","title":"Centaur","route":"/Harrypedia/beings/centaur/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/centaur.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/centaur/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-elves-house_elf","label":"House_elf","title":"House Elves","route":"/Harrypedia/beings/elves/house_elf/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/elves/house_elf.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/elves/house_elf/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-elves-index","label":"Elves","title":"elves","route":"/Harrypedia/beings/elves/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/elves/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/elves/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-giant","label":"Giant","title":"Giants","route":"/Harrypedia/beings/giant/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/giant.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/giant/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-goblin-dark_goblin","label":"Dark_goblin","title":"Dark Goblins","route":"/Harrypedia/beings/goblin/dark_goblin/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/goblin/dark_goblin.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/goblin/dark_goblin/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-goblin-european","label":"European","title":"European Goblins","route":"/Harrypedia/beings/goblin/european/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/goblin/european.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/goblin/european/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-goblin-half-goblins","label":"Half Goblins","title":"Half-goblins","route":"/Harrypedia/beings/goblin/half-goblins/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/goblin/half-goblins.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/goblin/half-goblins/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-goblin-index","label":"Goblin","title":"Goblins","route":"/Harrypedia/beings/goblin/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/goblin/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/goblin/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-goblin-pukwidgies","label":"Pukwidgies","title":"Pukwidgies","route":"/Harrypedia/beings/goblin/pukwidgies/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/goblin/pukwidgies.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/goblin/pukwidgies/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-hags","label":"Hags","title":"hags","route":"/Harrypedia/beings/hags/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/hags.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/hags/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-index","label":"Beings","title":"Sentient Species in Harry Potter","route":"/Harrypedia/beings/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-manticore","label":"Manticore","title":"Manticore","route":"/Harrypedia/beings/manticore/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/manticore.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/manticore/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-merpeople-index","label":"Merpeople","title":"Merpeople","route":"/Harrypedia/beings/merpeople/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/merpeople/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/merpeople/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-merpeople-merrow","label":"Merrow","title":"Merpeople - Merrows","route":"/Harrypedia/beings/merpeople/merrow/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/merpeople/merrow.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/merpeople/merrow/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-merpeople-selkies","label":"Selkies","title":"Merpeople - Selkies","route":"/Harrypedia/beings/merpeople/selkies/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/merpeople/selkies.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/merpeople/selkies/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-merpeople-siren","label":"Siren","title":"Merpeople - Siren","route":"/Harrypedia/beings/merpeople/siren/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/merpeople/siren.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/merpeople/siren/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-vampire","label":"Vampire","title":"Vampires","route":"/Harrypedia/beings/vampire/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/vampire.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/vampire/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-veela","label":"Veela","title":"Veela","route":"/Harrypedia/beings/veela/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/veela.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/veela/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-werewolves","label":"Werewolves","title":"Werewolves","route":"/Harrypedia/beings/werewolves/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/werewolves.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/werewolves/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-child_abuse_in_fiction","label":"Child_abuse_in_fiction","title":"Abuse of Fictional Children","route":"/Harrypedia/child_abuse_in_fiction/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/child_abuse_in_fiction.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/child_abuse_in_fiction/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-contradictions-McGonagalls_age","label":"McGonagalls_age","title":"Professor McGonagall's Age","route":"/Harrypedia/contradictions/McGonagalls_age/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/contradictions/McGonagalls_age.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/contradictions/McGonagalls_age/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-contradictions-Merlin","label":"Merlin","title":"Merlin and Harry Potter","route":"/Harrypedia/contradictions/Merlin/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/contradictions/Merlin.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/contradictions/Merlin/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-contradictions-Nagini","label":"Nagini","title":"Nagini and Maledictus","route":"/Harrypedia/contradictions/Nagini/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/contradictions/Nagini.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/contradictions/Nagini/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-contradictions-The%20Prefect%20Problem","label":"The%20Prefect%20Problem","title":"The Prefect Problem","route":"/Harrypedia/contradictions/The%20Prefect%20Problem/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/contradictions/The%20Prefect%20Problem.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/contradictions/The%20Prefect%20Problem/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-contradictions-book_six_bathroom_scene","label":"Book_six_bathroom_scene","title":"The Bathroom Scene in Book Six","route":"/Harrypedia/contradictions/book_six_bathroom_scene/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/contradictions/book_six_bathroom_scene.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/contradictions/book_six_bathroom_scene/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-contradictions-index","label":"Contradictions","title":"Contradictions in Cannon","route":"/Harrypedia/contradictions/","layout":"standard","data":{"collection":"Harrypedia","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/contradictions/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/contradictions/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-contradictions-teens%20and%20boarding%20schools","label":"Teens%20and%20boarding%20schools","title":"Teens, Boarding Schools, and Age Appropriate Literature","route":"/Harrypedia/contradictions/teens%20and%20boarding%20schools/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/contradictions/teens%20and%20boarding%20schools.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/contradictions/teens%20and%20boarding%20schools/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Allowing_Riddle","label":"Allowing_Riddle","title":"The Society that Allowed Riddle","route":"/Harrypedia/culture/Allowing_Riddle/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Allowing_Riddle.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Allowing_Riddle/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Blood_Purity-Prevelance","label":"Prevelance","title":"Prevalence of Blood Bias","route":"/Harrypedia/culture/Blood_Purity/Prevelance/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Blood_Purity/Prevelance.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Blood_Purity/Prevelance/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Blood_Purity-Why","label":"Why","title":"Blood Purity","route":"/Harrypedia/culture/Blood_Purity/Why/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Blood_Purity/Why.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Blood_Purity/Why/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Child_Abuse","label":"Child_Abuse","title":"Child Abuse in the Wizarding World","route":"/Harrypedia/culture/Child_Abuse/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Child_Abuse.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Child_Abuse/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Class_Consciousness","label":"Class_Consciousness","title":"Class Consciousness in the Magical World","route":"/Harrypedia/culture/Class_Consciousness/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Class_Consciousness.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Class_Consciousness/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Class_and_Blood","label":"Class_and_Blood","title":"Class and Blood Status in the Magical World","route":"/Harrypedia/culture/Class_and_Blood/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Class_and_Blood.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Class_and_Blood/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Clothing","label":"Clothing","title":"Clothing in the Magical World","route":"/Harrypedia/culture/Clothing/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Clothing.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Clothing/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Condissention","label":"Condissention","title":"Condescension","route":"/Harrypedia/culture/Condissention/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Condissention.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Condissention/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Education","label":"Education","title":"Education in the Magical World","route":"/Harrypedia/culture/Education/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Education.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Education/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Government","label":"Government","title":"Government in the Magical World","route":"/Harrypedia/culture/Government/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Government.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Government/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Hair","label":"Hair","title":"Hair in the Magical World","route":"/Harrypedia/culture/Hair/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Hair.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Hair/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Household_Magic","label":"Household_Magic","title":"Household Magic","route":"/Harrypedia/culture/Household_Magic/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Household_Magic.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Household_Magic/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Immigration","label":"Immigration","title":"First-Generation “Immigrants”","route":"/Harrypedia/culture/Immigration/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Immigration.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Immigration/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-International_Confederation_of_Wizards","label":"International_Confederation_of_Wizards","title":"International Confederation of Wizards","route":"/Harrypedia/culture/International_Confederation_of_Wizards/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/International_Confederation_of_Wizards.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/International_Confederation_of_Wizards/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-International_Statute_of_Secrecy","label":"International_Statute_of_Secrecy","title":"International Statute of Secrecy","route":"/Harrypedia/culture/International_Statute_of_Secrecy/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/International_Statute_of_Secrecy.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/International_Statute_of_Secrecy/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Parchment_and_Paper","label":"Parchment_and_Paper","title":"Parchment and Paper in the Magical World","route":"/Harrypedia/culture/Parchment_and_Paper/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Parchment_and_Paper.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Parchment_and_Paper/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Population","label":"Population","title":"Magical Population","route":"/Harrypedia/culture/Population/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Population.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Population/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Quills_and_Pens","label":"Quills_and_Pens","title":"Quills and Pens in the Magical World","route":"/Harrypedia/culture/Quills_and_Pens/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Quills_and_Pens.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Quills_and_Pens/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Religion","label":"Religion","title":"Religion in the Magical World","route":"/Harrypedia/culture/Religion/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Religion.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Religion/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-index","label":"Culture","title":"Wizarding World Culture","route":"/Harrypedia/culture/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-currency","label":"Currency","title":"Wizarding Currency","route":"/Harrypedia/currency/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/currency.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/currency/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-index","label":"Harrypedia","title":"Encyclopedic Reference of things Harry Potter","route":"/Harrypedia/","layout":"standard","data":{"collection":"Harrypedia","sidebar":{"order":0},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-Contracts","label":"Contracts","title":"Magical Contracts","route":"/Harrypedia/magic/Contracts/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/Contracts.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/Contracts/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-The_Mind_Arts-Death_Defence","label":"Death_Defence","title":"The Mind Arts: Instant Death Defence","route":"/Harrypedia/magic/The_Mind_Arts/Death_Defence/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/The_Mind_Arts/Death_Defence.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/The_Mind_Arts/Death_Defence/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-The_Mind_Arts-Legilimency","label":"Legilimency","title":"The Mind Arts: Legilimency","route":"/Harrypedia/magic/The_Mind_Arts/Legilimency/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Scheirer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/The_Mind_Arts/Legilimency.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/The_Mind_Arts/Legilimency/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-The_Mind_Arts-Meditation_and_Focus","label":"Meditation_and_Focus","title":"The Mind Arts: Meditation and Focus","route":"/Harrypedia/magic/The_Mind_Arts/Meditation_and_Focus/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/The_Mind_Arts/Meditation_and_Focus.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/The_Mind_Arts/Meditation_and_Focus/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-The_Mind_Arts-Mental_Shields","label":"Mental_Shields","title":"The Mind Arts: Mental Shields","route":"/Harrypedia/magic/The_Mind_Arts/Mental_Shields/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/The_Mind_Arts/Mental_Shields.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/The_Mind_Arts/Mental_Shields/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-The_Mind_Arts-Mind_Palace","label":"Mind_Palace","title":"The Mind Arts: Mind Palace","route":"/Harrypedia/magic/The_Mind_Arts/Mind_Palace/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/The_Mind_Arts/Mind_Palace.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/The_Mind_Arts/Mind_Palace/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-The_Mind_Arts-Obfuscomency","label":"Obfuscomency","title":"The Mind Arts: Obfuscomency","route":"/Harrypedia/magic/The_Mind_Arts/Obfuscomency/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/The_Mind_Arts/Obfuscomency.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/The_Mind_Arts/Obfuscomency/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-The_Mind_Arts-Occlumency","label":"Occlumency","title":"The Mind Arts: Occlumency","route":"/Harrypedia/magic/The_Mind_Arts/Occlumency/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/The_Mind_Arts/Occlumency.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/The_Mind_Arts/Occlumency/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-The_Mind_Arts-index","label":"The_Mind_Arts","title":"The Mind Arts","route":"/Harrypedia/magic/The_Mind_Arts/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/The_Mind_Arts/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/The_Mind_Arts/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-arithmancy-RealWorld","label":"RealWorld","title":"Numbers in the Real World","route":"/Harrypedia/magic/arithmancy/RealWorld/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/arithmancy/RealWorld.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/arithmancy/RealWorld/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-dark-Horcruxes","label":"Horcruxes","title":"Horcruxes","route":"/Harrypedia/magic/dark/Horcruxes/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/dark/Horcruxes.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/dark/Horcruxes/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-dark-index","label":"Dark","title":"Dark Magic","route":"/Harrypedia/magic/dark/","layout":"standard","data":{"collection":"Harrypedia","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/dark/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/dark/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-index","label":"Magic","title":"Magic in the Harry Potter Universe","route":"/Harrypedia/magic/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-parseltongue","label":"Parseltongue","title":"Parseltongue","route":"/Harrypedia/magic/parseltongue/","layout":"standard","data":{"author":"Luke Schierer","collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/parseltongue.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/parseltongue/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-potions-Beautification_Potion","label":"Beautification_Potion","title":"Beautification Potion","route":"/Harrypedia/magic/potions/Beautification_Potion/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","type":"potion","spells":"Beautification Potion","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/potions/Beautification_Potion.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/potions/Beautification_Potion/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-potions-Cure_for_Boils","label":"Cure_for_Boils","title":"Cure for Boils","route":"/Harrypedia/magic/potions/Cure_for_Boils/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","type":"potion","spells":"Cure for Boils","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/potions/Cure_for_Boils.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/potions/Cure_for_Boils/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-potions-Doxycide","label":"Doxycide","title":"Doxycide","route":"/Harrypedia/magic/potions/Doxycide/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","type":"potion","spells":"Doxycide","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/potions/Doxycide.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/potions/Doxycide/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-potions-Felix_Felicis","label":"Felix_Felicis","title":"Felix Felicis","route":"/Harrypedia/magic/potions/Felix_Felicis/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","type":"potion","spells":"Felix Felicis","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/potions/Felix_Felicis.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/potions/Felix_Felicis/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-Aparecium","label":"Aparecium","title":"Aparecium","route":"/Harrypedia/magic/spells/Aparecium/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Aparecium","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/Aparecium.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/Aparecium/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-accio","label":"Accio","title":"Accio","route":"/Harrypedia/magic/spells/accio/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Accio","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/accio.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/accio/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-aguamenti","label":"Aguamenti","title":"Aguamenti","route":"/Harrypedia/magic/spells/aguamenti/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Aguamenti","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/aguamenti.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/aguamenti/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-alohomora","label":"Alohomora","title":"Alohomora","route":"/Harrypedia/magic/spells/alohomora/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Alohomora","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/alohomora.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/alohomora/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-anti-alohomora","label":"Anti Alohomora","title":"Anti-Alohomora","route":"/Harrypedia/magic/spells/anti-alohomora/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Anti-Alohomora","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/anti-alohomora.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/anti-alohomora/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-avada%20kedavra","label":"Avada%20kedavra","title":"Avada Kedavra","route":"/Harrypedia/magic/spells/avada%20kedavra/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Avada Kedavra","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/avada%20kedavra.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/avada%20kedavra/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-avis","label":"Avis","title":"Avis","route":"/Harrypedia/magic/spells/avis/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Avis","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/avis.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/avis/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-banishing","label":"Banishing","title":"Banishing","route":"/Harrypedia/magic/spells/banishing/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Banishing","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/banishing.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/banishing/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-bat-bogey_hex","label":"Bat Bogey_hex","title":"Bat-Bogey","route":"/Harrypedia/magic/spells/bat-bogey_hex/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Bat-Bogey","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/bat-bogey_hex.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/bat-bogey_hex/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-capacious_extremis","label":"Capacious_extremis","title":"Capacious Extremis","route":"/Harrypedia/magic/spells/capacious_extremis/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Capacious Extremis","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/capacious_extremis.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/capacious_extremis/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-confundus","label":"Confundus","title":"Confundus","route":"/Harrypedia/magic/spells/confundus/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Confundus","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/confundus.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/confundus/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-cruciatus","label":"Cruciatus","title":"Cruciatus","route":"/Harrypedia/magic/spells/cruciatus/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Cruciatus","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/cruciatus.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/cruciatus/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-defodio","label":"Defodio","title":"Defodio","route":"/Harrypedia/magic/spells/defodio/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Defodio","author":null,"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/defodio.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/defodio/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-diffindo","label":"Diffindo","title":"Diffindo","route":"/Harrypedia/magic/spells/diffindo/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Diffindo","author":null,"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/diffindo.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/diffindo/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-duro","label":"Duro","title":"Duro","route":"/Harrypedia/magic/spells/duro/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Duro","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/duro.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/duro/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-engorgio","label":"Engorgio","title":"Engorgio","route":"/Harrypedia/magic/spells/engorgio/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Engorgio","author":null,"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/engorgio.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/engorgio/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-expecto_patronum","label":"Expecto_patronum","title":"Expecto Patronum","route":"/Harrypedia/magic/spells/expecto_patronum/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Expecto Patronum","author":null,"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/expecto_patronum.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/expecto_patronum/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-expelliarmus","label":"Expelliarmus","title":"Expelliarmus","route":"/Harrypedia/magic/spells/expelliarmus/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Expelliarmus","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/expelliarmus.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/expelliarmus/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-fiend%20fire","label":"Fiend%20fire","title":"FiendFire","route":"/Harrypedia/magic/spells/fiend%20fire/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"FiendFire","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/fiend%20fire.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/fiend%20fire/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-flame%20freezing%20charm","label":"Flame%20freezing%20charm","title":"Flame Freezing","route":"/Harrypedia/magic/spells/flame%20freezing%20charm/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Flame Freezing","author":null,"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/flame%20freezing%20charm.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/flame%20freezing%20charm/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-floating%20charm","label":"Floating%20charm","title":"Floating","route":"/Harrypedia/magic/spells/floating%20charm/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Floating","author":null,"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/floating%20charm.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/floating%20charm/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-furnunculus","label":"Furnunculus","title":"Furnunculus","route":"/Harrypedia/magic/spells/furnunculus/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Furnunculus","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/furnunculus.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/furnunculus/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-gemino","label":"Gemino","title":"Gemino","route":"/Harrypedia/magic/spells/gemino/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Gemino","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/gemino.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/gemino/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-hair%20regrowing%20spells","label":"Hair%20regrowing%20spells","title":"Hair Regrowing Spells","route":"/Harrypedia/magic/spells/hair%20regrowing%20spells/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Hair Regrowing","author":null,"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/hair%20regrowing%20spells.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/hair%20regrowing%20spells/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-hover%20charm","label":"Hover%20charm","title":"Hover Charm","route":"/Harrypedia/magic/spells/hover%20charm/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Hover Charm","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/hover%20charm.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/hover%20charm/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-impedimenta","label":"Impedimenta","title":"Impedimenta","route":"/Harrypedia/magic/spells/impedimenta/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Impedimenta","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/impedimenta.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/impedimenta/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-imperio","label":"Imperio","title":"Imperio","route":"/Harrypedia/magic/spells/imperio/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Imperio","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/imperio.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/imperio/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-incendio","label":"Incendio","title":"Incendio","route":"/Harrypedia/magic/spells/incendio/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Incendio","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/incendio.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/incendio/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-jelly%20legs%20jinx","label":"Jelly%20legs%20jinx","title":"Jelly Legs Jinx","route":"/Harrypedia/magic/spells/jelly%20legs%20jinx/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Jelly Legs","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/jelly%20legs%20jinx.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/jelly%20legs%20jinx/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-legilimens","label":"Legilimens","title":"Legilimens","route":"/Harrypedia/magic/spells/legilimens/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Legilimens","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/legilimens.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/legilimens/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-levitation%20charm","label":"Levitation%20charm","title":"Levitation Charm","route":"/Harrypedia/magic/spells/levitation%20charm/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Levitation Charm","author":null,"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/levitation%20charm.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/levitation%20charm/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-lumos","label":"Lumos","title":"Lumos","route":"/Harrypedia/magic/spells/lumos/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Lumos","author":null,"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/lumos.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/lumos/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-mending%20charm","label":"Mending%20charm","title":"Mending Charm","route":"/Harrypedia/magic/spells/mending%20charm/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Mending Charm","author":null,"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/mending%20charm.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/mending%20charm/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-open%20sesame","label":"Open%20sesame","title":"Open Sesame","route":"/Harrypedia/magic/spells/open%20sesame/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Open Sesame","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/open%20sesame.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/open%20sesame/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-patronus","label":"Patronus","title":"The Patronus Charm","route":"/Harrypedia/magic/spells/patronus/","layout":"standard","data":{"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/patronus.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/patronus/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-pimple","label":"Pimple","title":"Pimple","route":"/Harrypedia/magic/spells/pimple/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Pimple","author":null,"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/pimple.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/pimple/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-portaberto","label":"Portaberto","title":"Portaberto","route":"/Harrypedia/magic/spells/portaberto/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Portaberto","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/portaberto.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/portaberto/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-protego","label":"Protego","title":"Protego","route":"/Harrypedia/magic/spells/protego/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Protego","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/protego.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/protego/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-reducio","label":"Reducio","title":"Reducio","route":"/Harrypedia/magic/spells/reducio/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Reducio","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/reducio.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/reducio/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-reducto","label":"Reducto","title":"Reducto","route":"/Harrypedia/magic/spells/reducto/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Reducto","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/reducto.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/reducto/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-reparo","label":"Reparo","title":"Reparo","route":"/Harrypedia/magic/spells/reparo/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Reparo","author":null,"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/reparo.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/reparo/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-rocket%20charm","label":"Rocket%20charm","title":"Rocket Charm","route":"/Harrypedia/magic/spells/rocket%20charm/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Rocket Charm","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/rocket%20charm.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/rocket%20charm/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-scourgify","label":"Scourgify","title":"Scourgify","route":"/Harrypedia/magic/spells/scourgify/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Scourgify","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/scourgify.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/scourgify/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-sectumsempra","label":"Sectumsempra","title":"Sectumsempra","route":"/Harrypedia/magic/spells/sectumsempra/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Sectumsempra","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/sectumsempra.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/sectumsempra/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-serpensortia","label":"Serpensortia","title":"Serpensortia","route":"/Harrypedia/magic/spells/serpensortia/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Serpensortia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/serpensortia.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/serpensortia/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-stupefy","label":"Stupefy","title":"Stupefy","route":"/Harrypedia/magic/spells/stupefy/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Stupefy","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/stupefy.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/stupefy/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-taboo","label":"Taboo","title":"Taboo","route":"/Harrypedia/magic/spells/taboo/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Taboo","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/taboo.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/taboo/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-tabula%20charm","label":"Tabula%20charm","title":"Tabula","route":"/Harrypedia/magic/spells/tabula%20charm/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Tabula","author":null,"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/tabula%20charm.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/tabula%20charm/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-twitchy%20ears","label":"Twitchy%20ears","title":"Twitchy Ears","route":"/Harrypedia/magic/spells/twitchy%20ears/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Twitchy Ears","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/twitchy%20ears.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/twitchy%20ears/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-unbreakable%20vow","label":"Unbreakable%20vow","title":"Unbreakable Vow","route":"/Harrypedia/magic/spells/unbreakable%20vow/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Unbreakable Vow","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/unbreakable%20vow.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/unbreakable%20vow/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-wingardium%20leviosa","label":"Wingardium%20leviosa","title":"Wingardium Leviosa","route":"/Harrypedia/magic/spells/wingardium%20leviosa/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Wingardium Leviosa","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/wingardium%20leviosa.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/wingardium%20leviosa/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-time-The_Trace","label":"The_Trace","title":"The Trace","route":"/Harrypedia/magic/time/The_Trace/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/time/The_Trace.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/time/The_Trace/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-time-divination","label":"Divination","title":"Divination","route":"/Harrypedia/magic/time/divination/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/time/divination.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/time/divination/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-time-index","label":"Time","title":"Time","route":"/Harrypedia/magic/time/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/time/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/time/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-time-pensieve","label":"Pensieve","title":"Pensieve","route":"/Harrypedia/magic/time/pensieve/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/time/pensieve.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/time/pensieve/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-time-time%20turners","label":"Time%20turners","title":"Time Turners","route":"/Harrypedia/magic/time/time%20turners/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/time/time%20turners.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/time/time%20turners/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-transfiguration","label":"Transfiguration","title":"Transfiguration","route":"/Harrypedia/magic/transfiguration/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/transfiguration.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/transfiguration/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-wands","label":"Wands","title":"Wands","route":"/Harrypedia/magic/wands/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/wands.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/wands/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-misc-growth","label":"Growth","title":"Growth","route":"/Harrypedia/misc/growth/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/misc/growth.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/misc/growth/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-misc-love","label":"Love","title":"Love in Harry Potter","route":"/Harrypedia/misc/love/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/misc/love.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/misc/love/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-non-beings-banshee","label":"Banshee","title":"Banshees","route":"/Harrypedia/non-beings/banshee/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/non-beings/banshee.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/non-beings/banshee/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-non-beings-boggart","label":"Boggart","title":"Boggarts","route":"/Harrypedia/non-beings/boggart/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/non-beings/boggart.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/non-beings/boggart/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-non-beings-dementor","label":"Dementor","title":"Dementors","route":"/Harrypedia/non-beings/dementor/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/non-beings/dementor.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/non-beings/dementor/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-non-beings-index","label":"Non Beings","title":"Non-Human Spirituous Apparitions","route":"/Harrypedia/non-beings/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/non-beings/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/non-beings/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-non-beings-poltergeist","label":"Poltergeist","title":"Poltergeists","route":"/Harrypedia/non-beings/poltergeist/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/non-beings/poltergeist.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/non-beings/poltergeist/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Abbott-Hannah","label":"Hannah","title":"Hannah","route":"/Harrypedia/people/Abbott/Hannah/","layout":"person","data":{"collection":"Harrypedia","grampsID":"I0108","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Abbott/Hannah.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Abbott/Hannah/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Abbott-index","label":"Abbott","title":"Abbott","route":"/Harrypedia/people/Abbott/","layout":"family","data":{"collection":"Harrypedia","pageType":"family","families":"Abbott","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Abbott/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Abbott/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Belby-Damocles","label":"Damocles","title":"Damocles","route":"/Harrypedia/people/Belby/Damocles/","layout":"person","data":{"collection":"Harrypedia","grampsID":"I0204","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Belby/Damocles.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Belby/Damocles/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Binns-Cuthbert","label":"Cuthbert","title":"Professor Cuthbert Binns","route":"/Harrypedia/people/Binns/Cuthbert/","layout":"person","data":{"collection":"Harrypedia","author":"Luke Schierer","grampsID":"I0301","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Binns/Cuthbert.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Binns/Cuthbert/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Black-Kreacher","label":"Kreacher","title":"Kreacher","route":"/Harrypedia/people/Black/Kreacher/","layout":"person","data":{"collection":"Harrypedia","family":"Black","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Black/Kreacher.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Kreacher/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Black-Sirius_III","label":"Sirius_III","title":"Sirius III","route":"/Harrypedia/people/Black/Sirius_III/","layout":"person","data":{"collection":"Harrypedia","family":"Black","grampsID":"I0007","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Black/Sirius_III.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Sirius_III/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Black-index","label":"Black","title":"Black","route":"/Harrypedia/people/Black/","layout":"family","data":{"collection":"Harrypedia","pageType":"family","families":"Black","author":"Luke Schierer","tags":"family","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Black/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Bones-Amelia_Susan","label":"Amelia_Susan","title":"Amelia Susan","route":"/Harrypedia/people/Bones/Amelia_Susan/","layout":"person","data":{"collection":"Harrypedia","family":"Bones","grampsID":"I0111","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Bones/Amelia_Susan.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Bones/Amelia_Susan/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Bones-index","label":"Bones","title":"Bones","route":"/Harrypedia/people/Bones/","layout":"family","data":{"collection":"Harrypedia","families":"Bones","pageType":"family","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Bones/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Bones/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Brown-Lavender","label":"Lavender","title":"Lavender","route":"/Harrypedia/people/Brown/Lavender/","layout":"person","data":{"collection":"Harrypedia","author":"Luke Schierer","grampsID":"I0185","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Brown/Lavender.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Brown/Lavender/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Diggle-Dedalus","label":"Dedalus","title":"Dedalus","route":"/Harrypedia/people/Diggle/Dedalus/","layout":"person","data":{"collection":"Harrypedia","family":"Diggle","grampsID":"I0099","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Diggle/Dedalus.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Diggle/Dedalus/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Dumbledore-Albus_Percival_Wulfric_Brian-Dealing_with_Riddle","label":"Dealing_with_Riddle","title":"Dumbledore and Tom Riddle","route":"/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Dealing_with_Riddle/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Dealing_with_Riddle.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Dealing_with_Riddle/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Dumbledore-Albus_Percival_Wulfric_Brian-Doubting_Harry","label":"Doubting_Harry","title":"Doubting Harry's Character","route":"/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Doubting_Harry/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Doubting_Harry.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Doubting_Harry/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Dumbledore-Albus_Percival_Wulfric_Brian-Inaction","label":"Inaction","title":"Does Dumbledore Ever Accomplish Anything?","route":"/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Inaction/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Inaction.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Inaction/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Dumbledore-Albus_Percival_Wulfric_Brian-Manipulator","label":"Manipulator","title":"Albus as the Great Manipulator","route":"/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Manipulator/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Manipulator.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Manipulator/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Dumbledore-Albus_Percival_Wulfric_Brian-index","label":"Albus_Percival_Wulfric_Brian","title":"Albus Percival Wulfric Brian","route":"/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/","layout":"person","data":{"collection":"Harrypedia","family":"Dumbledore","grampsID":"I0061","author":"Luke Schierer","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Dumbledore-Albus_Percival_Wulfric_Brian-treatment_of_Harry","label":"Treatment_of_Harry","title":"Dumbledore's Treatment of Harry","route":"/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/treatment_of_Harry/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/treatment_of_Harry.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/treatment_of_Harry/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Dumbledore-Kendra","label":"Kendra","title":"Alice Longbottom","route":"/Harrypedia/people/Dumbledore/Kendra/","layout":"person","data":{"grampsID":"I0261","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Dumbledore/Kendra.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dumbledore/Kendra/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Dursley-Vernon","label":"Vernon","title":"Vernon","route":"/Harrypedia/people/Dursley/Vernon/","layout":"person","data":{"collection":"Harrypedia","family":"Dursley","grampsID":"I0096","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Dursley/Vernon.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dursley/Vernon/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Dursley-index","label":"Dursley","title":"Dursley","route":"/Harrypedia/people/Dursley/","layout":"family","data":{"collection":"Harrypedia","families":"Dursley","pageType":"family","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Dursley/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dursley/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Evans-Lily_J","label":"Lily_J","title":"Lily J.","route":"/Harrypedia/people/Evans/Lily_J/","layout":"person","data":{"collection":"Harrypedia","family":"Evans","grampsID":"I0002","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Evans/Lily_J.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Evans/Lily_J/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Evans-Petunia","label":"Petunia","title":"Petunia","route":"/Harrypedia/people/Evans/Petunia/","layout":"person","data":{"collection":"Harrypedia","family":"Evans","grampsID":"I0097","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Evans/Petunia.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Evans/Petunia/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Figg-Arabella_Doreen","label":"Arabella_Doreen","title":"Arabella Figg","route":"/Harrypedia/people/Figg/Arabella_Doreen/","layout":"person","data":{"collection":"Harrypedia","grampsID":"I0100","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Figg/Arabella_Doreen.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Figg/Arabella_Doreen/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Flitwick-Filus","label":"Filus","title":"Filus","route":"/Harrypedia/people/Flitwick/Filus/","layout":"person","data":{"collection":"Harrypedia","family":"Flitwick","grampsID":"I0293","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Flitwick/Filus.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Flitwick/Filus/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Fudge-Cornelius_Oswald","label":"Cornelius_Oswald","title":"Cornelius Oswald","route":"/Harrypedia/people/Fudge/Cornelius_Oswald/","layout":"person","data":{"collection":"Harrypedia","family":"Fudge","grampsID":"I0198","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Fudge/Cornelius_Oswald.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Fudge/Cornelius_Oswald/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Gaunt-Merope","label":"Merope","title":"Merope","route":"/Harrypedia/people/Gaunt/Merope/","layout":"person","data":{"collection":"Harrypedia","author":"Luke Schierer","grampsID":"I0304","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Gaunt/Merope.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Gaunt/Merope/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Granger-Hermione_Jean","label":"Hermione_Jean","title":"Hermione Jean","route":"/Harrypedia/people/Granger/Hermione_Jean/","layout":"person","data":{"collection":"Harrypedia","family":"Granger","grampsID":"I0063","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Granger/Hermione_Jean.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Granger/Hermione_Jean/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Granger-index","label":"Granger","title":"Granger","route":"/Harrypedia/people/Granger/","layout":"family","data":{"collection":"Harrypedia","families":"Granger","pageType":"family","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Granger/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Granger/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Greengrass-index","label":"Greengrass","title":"Greengrass","route":"/Harrypedia/people/Greengrass/","layout":"family","data":{"collection":"Harrypedia","families":"Greengrass","pageType":"family","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Greengrass/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Greengrass/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Greyback-Fenrir","label":"Fenrir","title":"Fenrir Greyback","route":"/Harrypedia/people/Greyback/Fenrir/","layout":"person","data":{"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Greyback/Fenrir.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Greyback/Fenrir/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Hooch-Rolanda","label":"Rolanda","title":"Rolanda","route":"/Harrypedia/people/Hooch/Rolanda/","layout":"person","data":{"collection":"Harrypedia","family":"Hooch","grampsID":"I0197","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Hooch/Rolanda.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Hooch/Rolanda/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Longbottom-Alice","label":"Alice","title":"Alice Longbottom","route":"/Harrypedia/people/Longbottom/Alice/","layout":"person","data":{"grampsID":"I0067","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Longbottom/Alice.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Longbottom/Alice/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Longbottom-Augusta","label":"Augusta","title":"Augusta Longbottom","route":"/Harrypedia/people/Longbottom/Augusta/","layout":"person","data":{"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Longbottom/Augusta.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Longbottom/Augusta/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Longbottom-index","label":"Longbottom","title":"Longbottom","route":"/Harrypedia/people/Longbottom/","layout":"family","data":{"collection":"Harrypedia","families":"Longbottom","pageType":"family","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Longbottom/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Longbottom/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Lovegood-Pandora","label":"Pandora","title":"Alice Longbottom","route":"/Harrypedia/people/Lovegood/Pandora/","layout":"person","data":{"grampsID":"I0189","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Lovegood/Pandora.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lovegood/Pandora/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Lupin-Remus_John","label":"Remus_John","title":"Remus John","route":"/Harrypedia/people/Lupin/Remus_John/","layout":"person","data":{"collection":"Harrypedia","family":"Lupin","grampsID":"I0060","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Lupin/Remus_John.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lupin/Remus_John/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Malfoy-Draco_Lucius","label":"Draco_Lucius","title":"Draco Lucius","route":"/Harrypedia/people/Malfoy/Draco_Lucius/","layout":"person","data":{"collection":"Harrypedia","grampsID":"I0039","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Malfoy/Draco_Lucius.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Malfoy/Draco_Lucius/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Malfoy-Lucius_Abraxas","label":"Lucius_Abraxas","title":"Lucius Abraxas","route":"/Harrypedia/people/Malfoy/Lucius_Abraxas/","layout":"person","data":{"collection":"Harrypedia","family":"Malfoy","grampsID":"I0038","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Malfoy/Lucius_Abraxas.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Malfoy/Lucius_Abraxas/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Malfoy-Scorpius","label":"Scorpius","title":"Scorpius","route":"/Harrypedia/people/Malfoy/Scorpius/","layout":"person","data":{"collection":"Harrypedia","pageType":"person","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Malfoy/Scorpius.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Malfoy/Scorpius/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Malfoy-index","label":"Malfoy","title":"Malfoy","route":"/Harrypedia/people/Malfoy/","layout":"family","data":{"collection":"Harrypedia","families":"Malfoy","pageType":"family","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Malfoy/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Malfoy/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-McGonagall-Minerva","label":"Minerva","title":"Minerva","route":"/Harrypedia/people/McGonagall/Minerva/","layout":"person","data":{"collection":"Harrypedia","family":"McGonagall","grampsID":"I0065","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/McGonagall/Minerva.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/McGonagall/Minerva/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-McLaggen-index","label":"McLaggen","title":"McLaggen","route":"/Harrypedia/people/McLaggen/","layout":"family","data":{"collection":"Harrypedia","families":"McLaggen","pageType":"family","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/McLaggen/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/McLaggen/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Moody-Alastor","label":"Alastor","title":"Alastor Moody","route":"/Harrypedia/people/Moody/Alastor/","layout":"person","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Moody/Alastor.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Moody/Alastor/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Nagini","label":"Nagini","title":"Nagini","route":"/Harrypedia/people/Nagini/","layout":"person","data":{"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Nagini.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Nagini/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Peverell-Ignotus","label":"Ignotus","title":"Ignotus Peverell","route":"/Harrypedia/people/Peverell/Ignotus/","layout":"person","data":{"grampsID":"I0058","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Peverell/Ignotus.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Peverell/Ignotus/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Peverell-index","label":"Peverell","title":"Peverell","route":"/Harrypedia/people/Peverell/","layout":"family","data":{"collection":"Harrypedia","pageType":"family","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Peverell/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Peverell/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Potter-Euphemia","label":"Euphemia","title":"Euphemia Potter","route":"/Harrypedia/people/Potter/Euphemia/","layout":"person","data":{"grampsID":"I0004","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Potter/Euphemia.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Potter/Euphemia/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Potter-Harry_James","label":"Harry_James","title":"Harry James","route":"/Harrypedia/people/Potter/Harry_James/","layout":"person","data":{"collection":"Harrypedia","families":"Potter","grampsID":"I0000","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Potter/Harry_James.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Potter/Harry_James/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Potter-James","label":"James","title":"James","route":"/Harrypedia/people/Potter/James/","layout":"person","data":{"collection":"Harrypedia","grampsID":"I0001","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Potter/James.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Potter/James/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Potter-index","label":"Potter","title":"Potter","route":"/Harrypedia/people/Potter/","layout":"family","data":{"collection":"Harrypedia","families":"Potter","pageType":"family","tags":["family"],"author":"Luke Schierer","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Potter/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Potter/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Potter-wealth","label":"Wealth","title":"Potter Family Wealth","route":"/Harrypedia/people/Potter/wealth/","layout":"person","data":{"collection":"Harrypedia","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Potter/wealth.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Potter/wealth/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Prewett-Molly","label":"Molly","title":"Molly","route":"/Harrypedia/people/Prewett/Molly/","layout":"person","data":{"collection":"Harrypedia","family":"Prewett","grampsID":"I0062","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Prewett/Molly.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Prewett/Molly/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Raczidian","label":"Raczidian","title":"Raczidian","route":"/Harrypedia/people/Raczidian/","layout":"person","data":{"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Raczidian.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Raczidian/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Riddle-Tom_Marvolo","label":"Tom_Marvolo","title":"Tom Marvolo","route":"/Harrypedia/people/Riddle/Tom_Marvolo/","layout":"person","data":{"collection":"Harrypedia","family":"Riddle","grampsID":"I0247","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Riddle/Tom_Marvolo.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Riddle/Tom_Marvolo/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Riddle-index","label":"Riddle","title":"Riddle","route":"/Harrypedia/people/Riddle/","layout":"family","data":{"collection":"Harrypedia","families":"Riddle","pageType":"family","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Riddle/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Riddle/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Scamander-Newton_Artemis_Fido","label":"Newton_Artemis_Fido","title":"Newton Artemis Fido","route":"/Harrypedia/people/Scamander/Newton_Artemis_Fido/","layout":"person","data":{"collection":"Harrypedia","author":"Luke Schierer","grampsID":"I0214","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Scamander/Newton_Artemis_Fido.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Scamander/Newton_Artemis_Fido/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Scrimgeour-Rufus","label":"Rufus","title":"Rufus","route":"/Harrypedia/people/Scrimgeour/Rufus/","layout":"person","data":{"collection":"Harrypedia","grampsID":"I0199","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Scrimgeour/Rufus.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Scrimgeour/Rufus/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Shacklebolt-Kingsley","label":"Kingsley","title":"Kingsley","route":"/Harrypedia/people/Shacklebolt/Kingsley/","layout":"person","data":{"collection":"Harrypedia","family":"Shacklebolt","grampsID":"I0278","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Shacklebolt/Kingsley.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Shacklebolt/Kingsley/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Shacklebolt-index","label":"Shacklebolt","title":"Shacklebolt","route":"/Harrypedia/people/Shacklebolt/","layout":"family","data":{"collection":"Harrypedia","families":"Shacklebolt","pageType":"family","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Shacklebolt/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Shacklebolt/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Snape-Severus-index","label":"Severus","title":"Severus","route":"/Harrypedia/people/Snape/Severus/","layout":"person","data":{"collection":"Harrypedia","family":"Snape","grampsID":"I0077","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Snape/Severus/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Snape/Severus/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Snape-Severus-swm","label":"Swm","title":"Snape's Worst Memory and Related Events","route":"/Harrypedia/people/Snape/Severus/swm/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Snape/Severus/swm.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Snape/Severus/swm/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Umbridge-Dolores_Jane","label":"Dolores_Jane","title":"Dolores Jane","route":"/Harrypedia/people/Umbridge/Dolores_Jane/","layout":"person","data":{"collection":"Harrypedia","family":"Umbridge","grampsID":"I0112","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Umbridge/Dolores_Jane.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Umbridge/Dolores_Jane/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Weasley-Charlie","label":"Charlie","title":"Charlie","route":"/Harrypedia/people/Weasley/Charlie/","layout":"person","data":{"collection":"Harrypedia","family":"Weasley","grampsID":"I0095","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Weasley/Charlie.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Weasley/Charlie/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Weasley-George","label":"George","title":"George","route":"/Harrypedia/people/Weasley/George/","layout":"person","data":{"collection":"Harrypedia","family":"Weasley","grampsID":"I0072","author":null,"pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Weasley/George.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Weasley/George/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Weasley-Ginevra_Molly","label":"Ginevra_Molly","title":"Ginevra Molly","route":"/Harrypedia/people/Weasley/Ginevra_Molly/","layout":"person","data":{"collection":"Harrypedia","family":"Weasley","grampsID":"I0070","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Weasley/Ginevra_Molly.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Weasley/Ginevra_Molly/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Weasley-Percy_Ignatius","label":"Percy_Ignatius","title":"Percy Ignatius","route":"/Harrypedia/people/Weasley/Percy_Ignatius/","layout":"person","data":{"collection":"Harrypedia","family":"Weasley","grampsID":"I0074","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Weasley/Percy_Ignatius.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Weasley/Percy_Ignatius/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Weasley-Ronald_Bilius","label":"Ronald_Bilius","title":"Ronald Bilius","route":"/Harrypedia/people/Weasley/Ronald_Bilius/","layout":"person","data":{"collection":"Harrypedia","family":"Weasley","grampsID":"I0064","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Weasley/Ronald_Bilius.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Weasley/Ronald_Bilius/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Weasley-index","label":"Weasley","title":"Weasley","route":"/Harrypedia/people/Weasley/","layout":"family","data":{"collection":"Harrypedia","families":"Weasley","pageType":"family","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Weasley/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Weasley/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Zabini-Blaize","label":"Blaize","title":"Blaize","route":"/Harrypedia/people/Zabini/Blaize/","layout":"person","data":{"collection":"Harrypedia","grampsID":"I0160","pageType":"person","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Zabini/Blaize.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Zabini/Blaize/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Zabini-index","label":"Zabini","title":"Zabini","route":"/Harrypedia/people/Zabini/","layout":"family","data":{"collection":"Harrypedia","pageType":"family","families":"Zabini","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Zabini/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Zabini/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-adults","label":"Adults","title":"Adults in the HP Series","route":"/Harrypedia/people/adults/","layout":"person","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/adults.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/adults/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-index","label":"People","title":"People in Harry Potter","route":"/Harrypedia/people/","layout":"family","data":{"collection":"Harrypedia","sidebar":{"order":1},"imports":["/components/grampsParser/GeneologicalStats.ts type=&quotemodule&quote"],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-book%201-Chapter%2001","label":"Chapter%2001","title":"Reactions to Philosopher's Stone Chapter 1","route":"/Harrypedia/reactions/book%201/Chapter%2001/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/book%201/Chapter%2001.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/book%201/Chapter%2001/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-book%201-Chapter%2002","label":"Chapter%2002","title":"Reactions to Philosopher's Stone Chapter 2","route":"/Harrypedia/reactions/book%201/Chapter%2002/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/book%201/Chapter%2002.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/book%201/Chapter%2002/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-book%201-Chapter%2003","label":"Chapter%2003","title":"Reactions to Philosopher's Stone Chapter 3","route":"/Harrypedia/reactions/book%201/Chapter%2003/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/book%201/Chapter%2003.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/book%201/Chapter%2003/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-book%201-Chapter%2004","label":"Chapter%2004","title":"Reactions to Philosopher's Stone Chapter 4","route":"/Harrypedia/reactions/book%201/Chapter%2004/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/book%201/Chapter%2004.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/book%201/Chapter%2004/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-book%201-index","label":"Book%201","title":"Reactions to Harry Potter and the Philosopher's Stone","route":"/Harrypedia/reactions/book%201/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","imports":["/components/DirectoryIndex.ts type=&quotemodule&quote"],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/book%201/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/book%201/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-fanfiction-Addams%20Family%20Crossovers","label":"Addams%20Family%20Crossovers","title":"Addams Family Crossovers","route":"/Harrypedia/reactions/fanfiction/Addams%20Family%20Crossovers/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/fanfiction/Addams%20Family%20Crossovers.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/fanfiction/Addams%20Family%20Crossovers/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-fanfiction-Harry's%20Genetics","label":"Harry's%20Genetics","title":"Harry's%20Genetics","route":"/Harrypedia/reactions/fanfiction/Harry's%20Genetics/","layout":"standard Harry's Genetic Make-up","data":{"author":"Luke Schierer","collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/fanfiction/Harry's%20Genetics.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/fanfiction/Harry's%20Genetics/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-fanfiction-Lupin_the_brainiac","label":"Lupin_the_brainiac","title":"Remus Lupin, Brains of the Marauders","route":"/Harrypedia/reactions/fanfiction/Lupin_the_brainiac/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/fanfiction/Lupin_the_brainiac.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/fanfiction/Lupin_the_brainiac/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-fanfiction-Umbridge's%20Quill","label":"Umbridge's%20Quill","title":"Umbridge's%20Quill","route":"/Harrypedia/reactions/fanfiction/Umbridge's%20Quill/","layout":"standard Umbridge's Quill","data":{"author":"Luke Schierer","collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/fanfiction/Umbridge's%20Quill.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/fanfiction/Umbridge's%20Quill/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-fanfiction-after%20the%20battle","label":"After%20the%20battle","title":"Fan Fiction Augmenting the Epilogue","route":"/Harrypedia/reactions/fanfiction/after%20the%20battle/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/fanfiction/after%20the%20battle.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/fanfiction/after%20the%20battle/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-fanfiction-anthropomorphism","label":"Anthropomorphism","title":"Anthropomorphism in Fan Fiction","route":"/Harrypedia/reactions/fanfiction/anthropomorphism/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/fanfiction/anthropomorphism.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/fanfiction/anthropomorphism/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-fanfiction-index","label":"Fanfiction","title":"Reactions to Fannon and Fan Fiction","route":"/Harrypedia/reactions/fanfiction/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/fanfiction/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/fanfiction/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-fanfiction-over-bias","label":"Over Bias","title":"Exaggerated Bias","route":"/Harrypedia/reactions/fanfiction/over-bias/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/fanfiction/over-bias.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/fanfiction/over-bias/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-fanfiction-the_egoist_society","label":"The_egoist_society","title":"The Egoist Society","route":"/Harrypedia/reactions/fanfiction/the_egoist_society/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/fanfiction/the_egoist_society.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/fanfiction/the_egoist_society/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-fanfiction-x_in_slytherin","label":"X_in_slytherin","title":"Main Characters in Slytherin","route":"/Harrypedia/reactions/fanfiction/x_in_slytherin/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/fanfiction/x_in_slytherin.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/fanfiction/x_in_slytherin/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-index","label":"Reactions","title":"Reactions to the Written Word","route":"/Harrypedia/reactions/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","imports":["/components/DirectoryIndex.ts type=&quotemodule&quote"],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-unspeakables","label":"Unspeakables","title":"Unspeakables","route":"/Harrypedia/unspeakables/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/unspeakables.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/unspeakables/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-Astoria","label":"Astoria","title":"Harry paired with Astoria","route":"/Searches/Astoria/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","sidebar":{"order":5},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/Astoria.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/Astoria/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-DumbleDore","label":"DumbleDore","title":"Notable for a problematic Dumbledore","route":"/Searches/DumbleDore/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/DumbleDore.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/DumbleDore/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-Generic","label":"Generic","title":"Generic Searches","route":"/Searches/Generic/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","sidebar":{"order":2},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/Generic.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/Generic/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-Ginny","label":"Ginny","title":"Harry paired with Ginny","route":"/Searches/Ginny/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","sidebar":{"order":3},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/Ginny.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/Ginny/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-Hannah","label":"Hannah","title":"Harry paired with Hannah","route":"/Searches/Hannah/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","sidebar":{"order":5},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/Hannah.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/Hannah/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-Harry_and_the_Addams","label":"Harry_and_the_Addams","title":"Harry and Addams family crossovers","route":"/Searches/Harry_and_the_Addams/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","sidebar":{"order":5},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/Harry_and_the_Addams.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/Harry_and_the_Addams/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-Sally_Anne","label":"Sally_Anne","title":"Harry paired with Sally Anne","route":"/Searches/Sally_Anne/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","sidebar":{"order":5},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/Sally_Anne.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/Sally_Anne/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-Sue_Li","label":"Sue_Li","title":"Harry paired with Sue Li","route":"/Searches/Sue_Li/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","sidebar":{"order":5},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/Sue_Li.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/Sue_Li/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-Susan","label":"Susan","title":"Harry paired with Susan Bones","route":"/Searches/Susan/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","sidebar":{"order":5},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/Susan.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/Susan/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-abuse","label":"Abuse","title":"Notable for calling out Neglect and Abuse","route":"/Searches/abuse/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","sidebar":{"order":6},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/abuse.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/abuse/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-bashing","label":"Bashing","title":"Notable for Bashing Someone other than Dumbledore","route":"/Searches/bashing/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","sidebar":{"order":7},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/bashing.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/bashing/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-hufflepuff","label":"Hufflepuff","title":"Notable for Harry Being in Hufflepuff","route":"/Searches/hufflepuff/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","sidebar":{"order":6},"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/hufflepuff.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/hufflepuff/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-reading","label":"Reading","title":"Characters Reading The Books","route":"/Searches/reading/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/reading.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/reading/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"index","label":"Home","title":"Luke's Harry Potter Fan Site","route":"/","layout":"splash","data":{"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"policy-privacy","label":"Privacy","title":"Privacy Policy","route":"/policy/privacy/","layout":"page","data":{"author":"privacypolicy.com","tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/policy/privacy.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/policy/privacy/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"404","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/404.html","route":"/404/","label":"Not Found","title":"Page Not Found","data":{},"prerender":true,"isolation":false,"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/404.html","path":"404.html"},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/index.html","title":"Chapters","label":"Chapters","id":"Chapters","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/","layout":"standard","body":"                <directory-index directory=&quote/FanFiction/Harry_Potter_-_Nephilim/Chapters/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/backstory/index.html","title":"backstory","label":"backstory","id":"backstory","route":"/FanFiction/Harry_Potter_-_Nephilim/backstory/","layout":"standard","body":"                <directory-index directory=&quote/FanFiction/Harry_Potter_-_Nephilim/backstory/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Blood_Purity/index.html","title":"Blood_Purity","label":"Blood_Purity","id":"Blood_Purity","route":"/Harrypedia/culture/Blood_Purity/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/culture/Blood_Purity/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/arithmancy/index.html","title":"arithmancy","label":"arithmancy","id":"arithmancy","route":"/Harrypedia/magic/arithmancy/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/magic/arithmancy/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/potions/index.html","title":"potions","label":"potions","id":"potions","route":"/Harrypedia/magic/potions/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/magic/potions/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/index.html","title":"spells","label":"spells","id":"spells","route":"/Harrypedia/magic/spells/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/magic/spells/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/misc/index.html","title":"misc","label":"misc","id":"misc","route":"/Harrypedia/misc/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/misc/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Belby/index.html","title":"Belby","label":"Belby","id":"Belby","route":"/Harrypedia/people/Belby/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/people/Belby/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Binns/index.html","title":"Binns","label":"Binns","id":"Binns","route":"/Harrypedia/people/Binns/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/people/Binns/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Brown/index.html","title":"Brown","label":"Brown","id":"Brown","route":"/Harrypedia/people/Brown/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/people/Brown/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Diggle/index.html","title":"Diggle","label":"Diggle","id":"Diggle","route":"/Harrypedia/people/Diggle/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/people/Diggle/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dumbledore/index.html","title":"Dumbledore","label":"Dumbledore","id":"Dumbledore","route":"/Harrypedia/people/Dumbledore/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/people/Dumbledore/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Evans/index.html","title":"Evans","label":"Evans","id":"Evans","route":"/Harrypedia/people/Evans/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/people/Evans/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Figg/index.html","title":"Figg","label":"Figg","id":"Figg","route":"/Harrypedia/people/Figg/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/people/Figg/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Flitwick/index.html","title":"Flitwick","label":"Flitwick","id":"Flitwick","route":"/Harrypedia/people/Flitwick/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/people/Flitwick/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Fudge/index.html","title":"Fudge","label":"Fudge","id":"Fudge","route":"/Harrypedia/people/Fudge/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/people/Fudge/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Gaunt/index.html","title":"Gaunt","label":"Gaunt","id":"Gaunt","route":"/Harrypedia/people/Gaunt/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/people/Gaunt/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Greyback/index.html","title":"Greyback","label":"Greyback","id":"Greyback","route":"/Harrypedia/people/Greyback/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/people/Greyback/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Hooch/index.html","title":"Hooch","label":"Hooch","id":"Hooch","route":"/Harrypedia/people/Hooch/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/people/Hooch/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lovegood/index.html","title":"Lovegood","label":"Lovegood","id":"Lovegood","route":"/Harrypedia/people/Lovegood/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/people/Lovegood/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lupin/index.html","title":"Lupin","label":"Lupin","id":"Lupin","route":"/Harrypedia/people/Lupin/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/people/Lupin/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/McGonagall/index.html","title":"McGonagall","label":"McGonagall","id":"McGonagall","route":"/Harrypedia/people/McGonagall/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/people/McGonagall/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Moody/index.html","title":"Moody","label":"Moody","id":"Moody","route":"/Harrypedia/people/Moody/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/people/Moody/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Prewett/index.html","title":"Prewett","label":"Prewett","id":"Prewett","route":"/Harrypedia/people/Prewett/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/people/Prewett/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Scamander/index.html","title":"Scamander","label":"Scamander","id":"Scamander","route":"/Harrypedia/people/Scamander/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/people/Scamander/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Scrimgeour/index.html","title":"Scrimgeour","label":"Scrimgeour","id":"Scrimgeour","route":"/Harrypedia/people/Scrimgeour/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/people/Scrimgeour/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Snape/index.html","title":"Snape","label":"Snape","id":"Snape","route":"/Harrypedia/people/Snape/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/people/Snape/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Umbridge/index.html","title":"Umbridge","label":"Umbridge","id":"Umbridge","route":"/Harrypedia/people/Umbridge/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/people/Umbridge/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/vegitation/index.html","title":"vegitation","label":"vegitation","id":"vegitation","route":"/Harrypedia/vegitation/","layout":"standard","body":"                <directory-index directory=&quote/Harrypedia/vegitation/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/index.html","title":"Searches","label":"Searches","id":"Searches","route":"/Searches/","layout":"standard","body":"                <directory-index directory=&quote/Searches/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/policy/index.html","title":"policy","label":"policy","id":"policy","route":"/policy/","layout":"standard","body":"                <directory-index directory=&quote/policy/&quote></directory-index>              ","external":true},{"pageHref":null,"data":{"grampsID":"I0000"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0000index.html","id":"I0000","title":"Harry James Potter ","body":"      <gramps-individual        personid=&quoteI0000&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0000","label":"External-Harry_James_Potter_","external":true},{"pageHref":null,"data":{"grampsID":"I0000"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Potter/Harry%20James/index.html","id":"I0000","layout":"person","collection":["people","Harrypedia","Potter"],"title":"Harry James Potter ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Potter/Harry%20James/","label":"External-Harry_James_Potter_","external":true},{"pageHref":null,"data":{"grampsID":"I0001"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0001index.html","id":"I0001","title":"James Potter ","body":"      <gramps-individual        personid=&quoteI0001&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0001","label":"External-James_Potter_","external":true},{"pageHref":null,"data":{"grampsID":"I0002"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0002index.html","id":"I0002","title":"Lily J Evans ","body":"      <gramps-individual        personid=&quoteI0002&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0002","label":"External-Lily_J_Evans_","external":true},{"pageHref":null,"data":{"grampsID":"I0002"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Evans/Lily%20J/index.html","id":"I0002","layout":"person","collection":["people","Harrypedia","Evans"],"title":"Lily J Evans ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Evans/Lily%20J/","label":"External-Lily_J_Evans_","external":true},{"pageHref":null,"data":{"grampsID":"I0003"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0003index.html","id":"I0003","title":"Fleamont Potter ","body":"      <gramps-individual        personid=&quoteI0003&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0003","label":"External-Fleamont_Potter_","external":true},{"pageHref":null,"data":{"grampsID":"I0003"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Potter/Fleamont/index.html","id":"I0003","layout":"person","collection":["people","Harrypedia","Potter"],"title":"Fleamont Potter ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Potter/Fleamont/","label":"External-Fleamont_Potter_","external":true},{"pageHref":null,"data":{"grampsID":"I0004"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0004index.html","id":"I0004","title":"Euphemia Unknown ","body":"      <gramps-individual        personid=&quoteI0004&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0004","label":"External-Euphemia_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0004"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Euphemia/index.html","id":"I0004","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Euphemia Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Euphemia/","label":"External-Euphemia_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0005"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0005index.html","id":"I0005","title":"Orion Black ","body":"      <gramps-individual        personid=&quoteI0005&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0005","label":"External-Orion_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0005"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Orion/index.html","id":"I0005","layout":"person","collection":["people","Harrypedia","Black"],"title":"Orion Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Orion/","label":"External-Orion_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0006"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0006index.html","id":"I0006","title":"Walburga Black ","body":"      <gramps-individual        personid=&quoteI0006&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0006","label":"External-Walburga_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0006"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Walburga/index.html","id":"I0006","layout":"person","collection":["people","Harrypedia","Black"],"title":"Walburga Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Walburga/","label":"External-Walburga_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0007"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0007index.html","id":"I0007","title":"Sirius Black III","body":"      <gramps-individual        personid=&quoteI0007&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0007","label":"External-Sirius_Black_III","external":true},{"pageHref":null,"data":{"grampsID":"I0008"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0008index.html","id":"I0008","title":"Regulus Arcturus Black ","body":"      <gramps-individual        personid=&quoteI0008&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0008","label":"External-Regulus_Arcturus_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0008"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Regulus%20Arcturus/index.html","id":"I0008","layout":"person","collection":["people","Harrypedia","Black"],"title":"Regulus Arcturus Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Regulus%20Arcturus/","label":"External-Regulus_Arcturus_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0009"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0009index.html","id":"I0009","title":"Arcturus Black III","body":"      <gramps-individual        personid=&quoteI0009&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0009","label":"External-Arcturus_Black_III","external":true},{"pageHref":null,"data":{"grampsID":"I0009"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Arcturus_III/index.html","id":"I0009","layout":"person","collection":["people","Harrypedia","Black"],"title":"Arcturus Black III","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Arcturus_III/","label":"External-Arcturus_Black_III","external":true},{"pageHref":null,"data":{"grampsID":"I0010"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0010index.html","id":"I0010","title":"Hesper Gamp ","body":"      <gramps-individual        personid=&quoteI0010&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0010","label":"External-Hesper_Gamp_","external":true},{"pageHref":null,"data":{"grampsID":"I0010"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Gamp/Hesper/index.html","id":"I0010","layout":"person","collection":["people","Harrypedia","Gamp"],"title":"Hesper Gamp ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Gamp/Hesper/","label":"External-Hesper_Gamp_","external":true},{"pageHref":null,"data":{"grampsID":"I0011"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0011index.html","id":"I0011","title":"Melania Macmillan ","body":"      <gramps-individual        personid=&quoteI0011&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0011","label":"External-Melania_Macmillan_","external":true},{"pageHref":null,"data":{"grampsID":"I0011"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Macmillan/Melania/index.html","id":"I0011","layout":"person","collection":["people","Harrypedia","Macmillan"],"title":"Melania Macmillan ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Macmillan/Melania/","label":"External-Melania_Macmillan_","external":true},{"pageHref":null,"data":{"grampsID":"I0012"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0012index.html","id":"I0012","title":"Lucretia Black ","body":"      <gramps-individual        personid=&quoteI0012&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0012","label":"External-Lucretia_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0012"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Lucretia/index.html","id":"I0012","layout":"person","collection":["people","Harrypedia","Black"],"title":"Lucretia Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Lucretia/","label":"External-Lucretia_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0013"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0013index.html","id":"I0013","title":"Sirius Black II","body":"      <gramps-individual        personid=&quoteI0013&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0013","label":"External-Sirius_Black_II","external":true},{"pageHref":null,"data":{"grampsID":"I0013"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Sirius_II/index.html","id":"I0013","layout":"person","collection":["people","Harrypedia","Black"],"title":"Sirius Black II","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Sirius_II/","label":"External-Sirius_Black_II","external":true},{"pageHref":null,"data":{"grampsID":"I0014"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0014index.html","id":"I0014","title":"Lycoris Black ","body":"      <gramps-individual        personid=&quoteI0014&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0014","label":"External-Lycoris_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0014"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Lycoris/index.html","id":"I0014","layout":"person","collection":["people","Harrypedia","Black"],"title":"Lycoris Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Lycoris/","label":"External-Lycoris_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0015"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0015index.html","id":"I0015","title":"Regulus Black ","body":"      <gramps-individual        personid=&quoteI0015&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0015","label":"External-Regulus_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0015"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Regulus/index.html","id":"I0015","layout":"person","collection":["people","Harrypedia","Black"],"title":"Regulus Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Regulus/","label":"External-Regulus_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0016"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0016index.html","id":"I0016","title":"Phineus Nigellus Black ","body":"      <gramps-individual        personid=&quoteI0016&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0016","label":"External-Phineus_Nigellus_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0016"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Phineus%20Nigellus/index.html","id":"I0016","layout":"person","collection":["people","Harrypedia","Black"],"title":"Phineus Nigellus Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Phineus%20Nigellus/","label":"External-Phineus_Nigellus_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0017"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0017index.html","id":"I0017","title":"Ursula Flint ","body":"      <gramps-individual        personid=&quoteI0017&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0017","label":"External-Ursula_Flint_","external":true},{"pageHref":null,"data":{"grampsID":"I0017"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Flint/Ursula/index.html","id":"I0017","layout":"person","collection":["people","Harrypedia","Flint"],"title":"Ursula Flint ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Flint/Ursula/","label":"External-Ursula_Flint_","external":true},{"pageHref":null,"data":{"grampsID":"I0018"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0018index.html","id":"I0018","title":"Cygnus Black II","body":"      <gramps-individual        personid=&quoteI0018&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0018","label":"External-Cygnus_Black_II","external":true},{"pageHref":null,"data":{"grampsID":"I0018"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Cygnus_II/index.html","id":"I0018","layout":"person","collection":["people","Harrypedia","Black"],"title":"Cygnus Black II","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Cygnus_II/","label":"External-Cygnus_Black_II","external":true},{"pageHref":null,"data":{"grampsID":"I0019"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0019index.html","id":"I0019","title":"Belvina Black ","body":"      <gramps-individual        personid=&quoteI0019&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0019","label":"External-Belvina_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0019"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Belvina/index.html","id":"I0019","layout":"person","collection":["people","Harrypedia","Black"],"title":"Belvina Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Belvina/","label":"External-Belvina_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0020"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0020index.html","id":"I0020","title":"Arcturus Black II","body":"      <gramps-individual        personid=&quoteI0020&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0020","label":"External-Arcturus_Black_II","external":true},{"pageHref":null,"data":{"grampsID":"I0020"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Arcturus_II/index.html","id":"I0020","layout":"person","collection":["people","Harrypedia","Black"],"title":"Arcturus Black II","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Arcturus_II/","label":"External-Arcturus_Black_II","external":true},{"pageHref":null,"data":{"grampsID":"I0022"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0022index.html","id":"I0022","title":"Sirius Black ","body":"      <gramps-individual        personid=&quoteI0022&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0022","label":"External-Sirius_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0022"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Sirius/index.html","id":"I0022","layout":"person","collection":["people","Harrypedia","Black"],"title":"Sirius Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Sirius/","label":"External-Sirius_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0023"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0023index.html","id":"I0023","title":"Elladera Black ","body":"      <gramps-individual        personid=&quoteI0023&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0023","label":"External-Elladera_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0023"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Elladera/index.html","id":"I0023","layout":"person","collection":["people","Harrypedia","Black"],"title":"Elladera Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Elladera/","label":"External-Elladera_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0024"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0024index.html","id":"I0024","title":"Iola Black ","body":"      <gramps-individual        personid=&quoteI0024&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0024","label":"External-Iola_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0024"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Iola/index.html","id":"I0024","layout":"person","collection":["people","Harrypedia","Black"],"title":"Iola Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Iola/","label":"External-Iola_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0025"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0025index.html","id":"I0025","title":"Violetta Bulstrode ","body":"      <gramps-individual        personid=&quoteI0025&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0025","label":"External-Violetta_Bulstrode_","external":true},{"pageHref":null,"data":{"grampsID":"I0025"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Bulstrode/Violetta/index.html","id":"I0025","layout":"person","collection":["people","Harrypedia","Bulstrode"],"title":"Violetta Bulstrode ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Bulstrode/Violetta/","label":"External-Violetta_Bulstrode_","external":true},{"pageHref":null,"data":{"grampsID":"I0026"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0026index.html","id":"I0026","title":"Pollux Black ","body":"      <gramps-individual        personid=&quoteI0026&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0026","label":"External-Pollux_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0026"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Pollux/index.html","id":"I0026","layout":"person","collection":["people","Harrypedia","Black"],"title":"Pollux Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Pollux/","label":"External-Pollux_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0027"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0027index.html","id":"I0027","title":"Cassiopeia Black ","body":"      <gramps-individual        personid=&quoteI0027&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0027","label":"External-Cassiopeia_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0027"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Cassiopeia/index.html","id":"I0027","layout":"person","collection":["people","Harrypedia","Black"],"title":"Cassiopeia Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Cassiopeia/","label":"External-Cassiopeia_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0028"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0028index.html","id":"I0028","title":"Dorea Black ","body":"      <gramps-individual        personid=&quoteI0028&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0028","label":"External-Dorea_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0028"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Dorea/index.html","id":"I0028","layout":"person","collection":["people","Harrypedia","Black"],"title":"Dorea Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Dorea/","label":"External-Dorea_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0029"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0029index.html","id":"I0029","title":"Phineus Black ","body":"      <gramps-individual        personid=&quoteI0029&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0029","label":"External-Phineus_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0029"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Phineus/index.html","id":"I0029","layout":"person","collection":["people","Harrypedia","Black"],"title":"Phineus Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Phineus/","label":"External-Phineus_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0030"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0030index.html","id":"I0030","title":"Irma Crabbe ","body":"      <gramps-individual        personid=&quoteI0030&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0030","label":"External-Irma_Crabbe_","external":true},{"pageHref":null,"data":{"grampsID":"I0030"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Crabbe/Irma/index.html","id":"I0030","layout":"person","collection":["people","Harrypedia","Crabbe"],"title":"Irma Crabbe ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Crabbe/Irma/","label":"External-Irma_Crabbe_","external":true},{"pageHref":null,"data":{"grampsID":"I0031"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0031index.html","id":"I0031","title":"Alphard Black ","body":"      <gramps-individual        personid=&quoteI0031&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0031","label":"External-Alphard_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0031"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Alphard/index.html","id":"I0031","layout":"person","collection":["people","Harrypedia","Black"],"title":"Alphard Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Alphard/","label":"External-Alphard_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0032"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0032index.html","id":"I0032","title":"Cygnus Black III","body":"      <gramps-individual        personid=&quoteI0032&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0032","label":"External-Cygnus_Black_III","external":true},{"pageHref":null,"data":{"grampsID":"I0032"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Cygnus_III/index.html","id":"I0032","layout":"person","collection":["people","Harrypedia","Black"],"title":"Cygnus Black III","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Cygnus_III/","label":"External-Cygnus_Black_III","external":true},{"pageHref":null,"data":{"grampsID":"I0033"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0033index.html","id":"I0033","title":"Druella Rosier ","body":"      <gramps-individual        personid=&quoteI0033&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0033","label":"External-Druella_Rosier_","external":true},{"pageHref":null,"data":{"grampsID":"I0033"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Rosier/Druella/index.html","id":"I0033","layout":"person","collection":["people","Harrypedia","Rosier"],"title":"Druella Rosier ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Rosier/Druella/","label":"External-Druella_Rosier_","external":true},{"pageHref":null,"data":{"grampsID":"I0034"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0034index.html","id":"I0034","title":"Bellatrix Black ","body":"      <gramps-individual        personid=&quoteI0034&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0034","label":"External-Bellatrix_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0034"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Bellatrix/index.html","id":"I0034","layout":"person","collection":["people","Harrypedia","Black"],"title":"Bellatrix Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Bellatrix/","label":"External-Bellatrix_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0035"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0035index.html","id":"I0035","title":"Andromeda Black ","body":"      <gramps-individual        personid=&quoteI0035&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0035","label":"External-Andromeda_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0035"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Andromeda/index.html","id":"I0035","layout":"person","collection":["people","Harrypedia","Black"],"title":"Andromeda Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Andromeda/","label":"External-Andromeda_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0036"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0036index.html","id":"I0036","title":"Narcissa Black ","body":"      <gramps-individual        personid=&quoteI0036&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0036","label":"External-Narcissa_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0036"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Narcissa/index.html","id":"I0036","layout":"person","collection":["people","Harrypedia","Black"],"title":"Narcissa Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Narcissa/","label":"External-Narcissa_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0037"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0037index.html","id":"I0037","title":"Rodolphus Lestrange ","body":"      <gramps-individual        personid=&quoteI0037&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0037","label":"External-Rodolphus_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0037"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lestrange/Rodolphus/index.html","id":"I0037","layout":"person","collection":["people","Harrypedia","Lestrange"],"title":"Rodolphus Lestrange ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lestrange/Rodolphus/","label":"External-Rodolphus_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0038"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0038index.html","id":"I0038","title":"Lucius Abraxas Malfoy ","body":"      <gramps-individual        personid=&quoteI0038&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0038","label":"External-Lucius_Abraxas_Malfoy_","external":true},{"pageHref":null,"data":{"grampsID":"I0038"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Malfoy/Lucius%20Abraxas/index.html","id":"I0038","layout":"person","collection":["people","Harrypedia","Malfoy"],"title":"Lucius Abraxas Malfoy ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Malfoy/Lucius%20Abraxas/","label":"External-Lucius_Abraxas_Malfoy_","external":true},{"pageHref":null,"data":{"grampsID":"I0039"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0039index.html","id":"I0039","title":"Draco Lucius Malfoy ","body":"      <gramps-individual        personid=&quoteI0039&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0039","label":"External-Draco_Lucius_Malfoy_","external":true},{"pageHref":null,"data":{"grampsID":"I0039"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Malfoy/Draco%20Lucius/index.html","id":"I0039","layout":"person","collection":["people","Harrypedia","Malfoy"],"title":"Draco Lucius Malfoy ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Malfoy/Draco%20Lucius/","label":"External-Draco_Lucius_Malfoy_","external":true},{"pageHref":null,"data":{"grampsID":"I0040"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0040index.html","id":"I0040","title":"Charlus Potter ","body":"      <gramps-individual        personid=&quoteI0040&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0040","label":"External-Charlus_Potter_","external":true},{"pageHref":null,"data":{"grampsID":"I0040"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Potter/Charlus/index.html","id":"I0040","layout":"person","collection":["people","Harrypedia","Potter"],"title":"Charlus Potter ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Potter/Charlus/","label":"External-Charlus_Potter_","external":true},{"pageHref":null,"data":{"grampsID":"I0041"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0041index.html","id":"I0041","title":" Potter ","body":"      <gramps-individual        personid=&quoteI0041&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0041","label":"External-_Potter_","external":true},{"pageHref":null,"data":{"grampsID":"I0041"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Potter/I0041/index.html","id":"I0041","layout":"person","collection":["people","Harrypedia","Potter"],"title":" Potter ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Potter/I0041/","label":"External-_Potter_","external":true},{"pageHref":null,"data":{"grampsID":"I0042"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0042index.html","id":"I0042","title":"Herbert Burke ","body":"      <gramps-individual        personid=&quoteI0042&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0042","label":"External-Herbert_Burke_","external":true},{"pageHref":null,"data":{"grampsID":"I0042"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Burke/Herbert/index.html","id":"I0042","layout":"person","collection":["people","Harrypedia","Burke"],"title":"Herbert Burke ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Burke/Herbert/","label":"External-Herbert_Burke_","external":true},{"pageHref":null,"data":{"grampsID":"I0043"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0043index.html","id":"I0043","title":" Burke ","body":"      <gramps-individual        personid=&quoteI0043&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0043","label":"External-_Burke_","external":true},{"pageHref":null,"data":{"grampsID":"I0043"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Burke/I0043/index.html","id":"I0043","layout":"person","collection":["people","Harrypedia","Burke"],"title":" Burke ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Burke/I0043/","label":"External-_Burke_","external":true},{"pageHref":null,"data":{"grampsID":"I0044"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0044index.html","id":"I0044","title":" Burke ","body":"      <gramps-individual        personid=&quoteI0044&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0044","label":"External-_Burke_","external":true},{"pageHref":null,"data":{"grampsID":"I0044"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Burke/I0044/index.html","id":"I0044","layout":"person","collection":["people","Harrypedia","Burke"],"title":" Burke ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Burke/I0044/","label":"External-_Burke_","external":true},{"pageHref":null,"data":{"grampsID":"I0045"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0045index.html","id":"I0045","title":" Burke ","body":"      <gramps-individual        personid=&quoteI0045&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0045","label":"External-_Burke_","external":true},{"pageHref":null,"data":{"grampsID":"I0045"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Burke/I0045/index.html","id":"I0045","layout":"person","collection":["people","Harrypedia","Burke"],"title":" Burke ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Burke/I0045/","label":"External-_Burke_","external":true},{"pageHref":null,"data":{"grampsID":"I0046"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0046index.html","id":"I0046","title":"Lysandra Yaxley ","body":"      <gramps-individual        personid=&quoteI0046&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0046","label":"External-Lysandra_Yaxley_","external":true},{"pageHref":null,"data":{"grampsID":"I0046"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Yaxley/Lysandra/index.html","id":"I0046","layout":"person","collection":["people","Harrypedia","Yaxley"],"title":"Lysandra Yaxley ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Yaxley/Lysandra/","label":"External-Lysandra_Yaxley_","external":true},{"pageHref":null,"data":{"grampsID":"I0047"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0047index.html","id":"I0047","title":"Callidora Black ","body":"      <gramps-individual        personid=&quoteI0047&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0047","label":"External-Callidora_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0047"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Callidora/index.html","id":"I0047","layout":"person","collection":["people","Harrypedia","Black"],"title":"Callidora Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Callidora/","label":"External-Callidora_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0048"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0048index.html","id":"I0048","title":"Charis Black ","body":"      <gramps-individual        personid=&quoteI0048&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0048","label":"External-Charis_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0048"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Charis/index.html","id":"I0048","layout":"person","collection":["people","Harrypedia","Black"],"title":"Charis Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Charis/","label":"External-Charis_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0049"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0049index.html","id":"I0049","title":"Cedrella Black ","body":"      <gramps-individual        personid=&quoteI0049&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0049","label":"External-Cedrella_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0049"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Cedrella/index.html","id":"I0049","layout":"person","collection":["people","Harrypedia","Black"],"title":"Cedrella Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Cedrella/","label":"External-Cedrella_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0050"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0050index.html","id":"I0050","title":"Harfang Longbottom ","body":"      <gramps-individual        personid=&quoteI0050&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0050","label":"External-Harfang_Longbottom_","external":true},{"pageHref":null,"data":{"grampsID":"I0050"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Longbottom/Harfang/index.html","id":"I0050","layout":"person","collection":["people","Harrypedia","Longbottom"],"title":"Harfang Longbottom ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Longbottom/Harfang/","label":"External-Harfang_Longbottom_","external":true},{"pageHref":null,"data":{"grampsID":"I0051"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0051index.html","id":"I0051","title":" Longbottom ","body":"      <gramps-individual        personid=&quoteI0051&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0051","label":"External-_Longbottom_","external":true},{"pageHref":null,"data":{"grampsID":"I0051"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Longbottom/I0051/index.html","id":"I0051","layout":"person","collection":["people","Harrypedia","Longbottom"],"title":" Longbottom ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Longbottom/I0051/","label":"External-_Longbottom_","external":true},{"pageHref":null,"data":{"grampsID":"I0052"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0052index.html","id":"I0052","title":" Longbottom ","body":"      <gramps-individual        personid=&quoteI0052&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0052","label":"External-_Longbottom_","external":true},{"pageHref":null,"data":{"grampsID":"I0052"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Longbottom/I0052/index.html","id":"I0052","layout":"person","collection":["people","Harrypedia","Longbottom"],"title":" Longbottom ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Longbottom/I0052/","label":"External-_Longbottom_","external":true},{"pageHref":null,"data":{"grampsID":"I0053"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0053index.html","id":"I0053","title":"Septimus Weasley ","body":"      <gramps-individual        personid=&quoteI0053&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0053","label":"External-Septimus_Weasley_","external":true},{"pageHref":null,"data":{"grampsID":"I0053"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Weasley/Septimus/index.html","id":"I0053","layout":"person","collection":["people","Harrypedia","Weasley"],"title":"Septimus Weasley ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Weasley/Septimus/","label":"External-Septimus_Weasley_","external":true},{"pageHref":null,"data":{"grampsID":"I0054"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0054index.html","id":"I0054","title":"Caspar Crouch ","body":"      <gramps-individual        personid=&quoteI0054&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0054","label":"External-Caspar_Crouch_","external":true},{"pageHref":null,"data":{"grampsID":"I0054"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Crouch/Caspar/index.html","id":"I0054","layout":"person","collection":["people","Harrypedia","Crouch"],"title":"Caspar Crouch ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Crouch/Caspar/","label":"External-Caspar_Crouch_","external":true},{"pageHref":null,"data":{"grampsID":"I0055"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0055index.html","id":"I0055","title":" Crouch ","body":"      <gramps-individual        personid=&quoteI0055&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0055","label":"External-_Crouch_","external":true},{"pageHref":null,"data":{"grampsID":"I0055"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Crouch/I0055/index.html","id":"I0055","layout":"person","collection":["people","Harrypedia","Crouch"],"title":" Crouch ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Crouch/I0055/","label":"External-_Crouch_","external":true},{"pageHref":null,"data":{"grampsID":"I0056"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0056index.html","id":"I0056","title":" Crouch ","body":"      <gramps-individual        personid=&quoteI0056&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0056","label":"External-_Crouch_","external":true},{"pageHref":null,"data":{"grampsID":"I0056"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Crouch/I0056/index.html","id":"I0056","layout":"person","collection":["people","Harrypedia","Crouch"],"title":" Crouch ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Crouch/I0056/","label":"External-_Crouch_","external":true},{"pageHref":null,"data":{"grampsID":"I0057"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0057index.html","id":"I0057","title":" Crouch ","body":"      <gramps-individual        personid=&quoteI0057&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0057","label":"External-_Crouch_","external":true},{"pageHref":null,"data":{"grampsID":"I0057"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Crouch/I0057/index.html","id":"I0057","layout":"person","collection":["people","Harrypedia","Crouch"],"title":" Crouch ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Crouch/I0057/","label":"External-_Crouch_","external":true},{"pageHref":null,"data":{"grampsID":"I0058"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0058index.html","id":"I0058","title":"Ignatius Prewett ","body":"      <gramps-individual        personid=&quoteI0058&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0058","label":"External-Ignatius_Prewett_","external":true},{"pageHref":null,"data":{"grampsID":"I0058"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Prewett/Ignatius/index.html","id":"I0058","layout":"person","collection":["people","Harrypedia","Prewett"],"title":"Ignatius Prewett ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Prewett/Ignatius/","label":"External-Ignatius_Prewett_","external":true},{"pageHref":null,"data":{"grampsID":"I0059"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0059index.html","id":"I0059","title":"Arthur Weasley ","body":"      <gramps-individual        personid=&quoteI0059&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0059","label":"External-Arthur_Weasley_","external":true},{"pageHref":null,"data":{"grampsID":"I0059"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Weasley/Arthur/index.html","id":"I0059","layout":"person","collection":["people","Harrypedia","Weasley"],"title":"Arthur Weasley ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Weasley/Arthur/","label":"External-Arthur_Weasley_","external":true},{"pageHref":null,"data":{"grampsID":"I0060"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0060index.html","id":"I0060","title":"Remus John Lupin ","body":"      <gramps-individual        personid=&quoteI0060&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0060","label":"External-Remus_John_Lupin_","external":true},{"pageHref":null,"data":{"grampsID":"I0060"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lupin/Remus%20John/index.html","id":"I0060","layout":"person","collection":["people","Harrypedia","Lupin"],"title":"Remus John Lupin ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lupin/Remus%20John/","label":"External-Remus_John_Lupin_","external":true},{"pageHref":null,"data":{"grampsID":"I0061"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0061index.html","id":"I0061","title":"Albus Percival Wulfric Brian Dumbledore ","body":"      <gramps-individual        personid=&quoteI0061&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0061","label":"External-Albus_Percival_Wulfric_Brian_Dumbledore_","external":true},{"pageHref":null,"data":{"grampsID":"I0061"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dumbledore/Albus%20Percival%20Wulfric%20Brian/index.html","id":"I0061","layout":"person","collection":["people","Harrypedia","Dumbledore"],"title":"Albus Percival Wulfric Brian Dumbledore ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Dumbledore/Albus%20Percival%20Wulfric%20Brian/","label":"External-Albus_Percival_Wulfric_Brian_Dumbledore_","external":true},{"pageHref":null,"data":{"grampsID":"I0062"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0062index.html","id":"I0062","title":"Molly Prewett ","body":"      <gramps-individual        personid=&quoteI0062&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0062","label":"External-Molly_Prewett_","external":true},{"pageHref":null,"data":{"grampsID":"I0063"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0063index.html","id":"I0063","title":"Hermione Jean Granger ","body":"      <gramps-individual        personid=&quoteI0063&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0063","label":"External-Hermione_Jean_Granger_","external":true},{"pageHref":null,"data":{"grampsID":"I0063"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Granger/Hermione%20Jean/index.html","id":"I0063","layout":"person","collection":["people","Harrypedia","Granger"],"title":"Hermione Jean Granger ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Granger/Hermione%20Jean/","label":"External-Hermione_Jean_Granger_","external":true},{"pageHref":null,"data":{"grampsID":"I0064"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0064index.html","id":"I0064","title":"Ronald Bilius Weasley ","body":"      <gramps-individual        personid=&quoteI0064&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0064","label":"External-Ronald_Bilius_Weasley_","external":true},{"pageHref":null,"data":{"grampsID":"I0064"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Weasley/Ronald%20Bilius/index.html","id":"I0064","layout":"person","collection":["people","Harrypedia","Weasley"],"title":"Ronald Bilius Weasley ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Weasley/Ronald%20Bilius/","label":"External-Ronald_Bilius_Weasley_","external":true},{"pageHref":null,"data":{"grampsID":"I0065"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0065index.html","id":"I0065","title":"Minerva McGonagall ","body":"      <gramps-individual        personid=&quoteI0065&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0065","label":"External-Minerva_McGonagall_","external":true},{"pageHref":null,"data":{"grampsID":"I0066"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0066index.html","id":"I0066","title":"Frank Longbottom ","body":"      <gramps-individual        personid=&quoteI0066&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0066","label":"External-Frank_Longbottom_","external":true},{"pageHref":null,"data":{"grampsID":"I0066"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Longbottom/Frank/index.html","id":"I0066","layout":"person","collection":["people","Harrypedia","Longbottom"],"title":"Frank Longbottom ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Longbottom/Frank/","label":"External-Frank_Longbottom_","external":true},{"pageHref":null,"data":{"grampsID":"I0067"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0067index.html","id":"I0067","title":"Alice Unknown ","body":"      <gramps-individual        personid=&quoteI0067&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0067","label":"External-Alice_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0067"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Alice/index.html","id":"I0067","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Alice Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Alice/","label":"External-Alice_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0068"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0068index.html","id":"I0068","title":"Neville Longbottom ","body":"      <gramps-individual        personid=&quoteI0068&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0068","label":"External-Neville_Longbottom_","external":true},{"pageHref":null,"data":{"grampsID":"I0068"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Longbottom/Neville/index.html","id":"I0068","layout":"person","collection":["people","Harrypedia","Longbottom"],"title":"Neville Longbottom ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Longbottom/Neville/","label":"External-Neville_Longbottom_","external":true},{"pageHref":null,"data":{"grampsID":"I0069"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0069index.html","id":"I0069","title":"Augusta Unknown ","body":"      <gramps-individual        personid=&quoteI0069&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0069","label":"External-Augusta_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0069"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Augusta/index.html","id":"I0069","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Augusta Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Augusta/","label":"External-Augusta_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0070"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0070index.html","id":"I0070","title":"Ginevra Molly Weasley ","body":"      <gramps-individual        personid=&quoteI0070&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0070","label":"External-Ginevra_Molly_Weasley_","external":true},{"pageHref":null,"data":{"grampsID":"I0070"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Weasley/Ginevra%20Molly/index.html","id":"I0070","layout":"person","collection":["people","Harrypedia","Weasley"],"title":"Ginevra Molly Weasley ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Weasley/Ginevra%20Molly/","label":"External-Ginevra_Molly_Weasley_","external":true},{"pageHref":null,"data":{"grampsID":"I0071"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0071index.html","id":"I0071","title":"Fred Weasley ","body":"      <gramps-individual        personid=&quoteI0071&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0071","label":"External-Fred_Weasley_","external":true},{"pageHref":null,"data":{"grampsID":"I0071"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Weasley/Fred/index.html","id":"I0071","layout":"person","collection":["people","Harrypedia","Weasley"],"title":"Fred Weasley ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Weasley/Fred/","label":"External-Fred_Weasley_","external":true},{"pageHref":null,"data":{"grampsID":"I0072"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0072index.html","id":"I0072","title":"George Weasley ","body":"      <gramps-individual        personid=&quoteI0072&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0072","label":"External-George_Weasley_","external":true},{"pageHref":null,"data":{"grampsID":"I0073"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0073index.html","id":"I0073","title":"William Arthur Weasley ","body":"      <gramps-individual        personid=&quoteI0073&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0073","label":"External-William_Arthur_Weasley_","external":true},{"pageHref":null,"data":{"grampsID":"I0073"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Weasley/William%20Arthur/index.html","id":"I0073","layout":"person","collection":["people","Harrypedia","Weasley"],"title":"William Arthur Weasley ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Weasley/William%20Arthur/","label":"External-William_Arthur_Weasley_","external":true},{"pageHref":null,"data":{"grampsID":"I0074"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0074index.html","id":"I0074","title":"Percy Ignatius Weasley ","body":"      <gramps-individual        personid=&quoteI0074&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0074","label":"External-Percy_Ignatius_Weasley_","external":true},{"pageHref":null,"data":{"grampsID":"I0074"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Weasley/Percy%20Ignatius/index.html","id":"I0074","layout":"person","collection":["people","Harrypedia","Weasley"],"title":"Percy Ignatius Weasley ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Weasley/Percy%20Ignatius/","label":"External-Percy_Ignatius_Weasley_","external":true},{"pageHref":null,"data":{"grampsID":"I0075"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0075index.html","id":"I0075","title":"Edward Tonks ","body":"      <gramps-individual        personid=&quoteI0075&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0075","label":"External-Edward_Tonks_","external":true},{"pageHref":null,"data":{"grampsID":"I0075"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Tonks/Edward/index.html","id":"I0075","layout":"person","collection":["people","Harrypedia","Tonks"],"title":"Edward Tonks ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Tonks/Edward/","label":"External-Edward_Tonks_","external":true},{"pageHref":null,"data":{"grampsID":"I0076"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0076index.html","id":"I0076","title":"Nymphadora Tonks ","body":"      <gramps-individual        personid=&quoteI0076&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0076","label":"External-Nymphadora_Tonks_","external":true},{"pageHref":null,"data":{"grampsID":"I0076"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Tonks/Nymphadora/index.html","id":"I0076","layout":"person","collection":["people","Harrypedia","Tonks"],"title":"Nymphadora Tonks ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Tonks/Nymphadora/","label":"External-Nymphadora_Tonks_","external":true},{"pageHref":null,"data":{"grampsID":"I0077"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0077index.html","id":"I0077","title":"Severus Snape ","body":"      <gramps-individual        personid=&quoteI0077&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0077","label":"External-Severus_Snape_","external":true},{"pageHref":null,"data":{"grampsID":"I0077"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Snape/Severus/index.html","id":"I0077","layout":"person","collection":["people","Harrypedia","Snape"],"title":"Severus Snape ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Snape/Severus/","label":"External-Severus_Snape_","external":true},{"pageHref":null,"data":{"grampsID":"I0078"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0078index.html","id":"I0078","title":"Abraxas Malfoy ","body":"      <gramps-individual        personid=&quoteI0078&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0078","label":"External-Abraxas_Malfoy_","external":true},{"pageHref":null,"data":{"grampsID":"I0078"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Malfoy/Abraxas/index.html","id":"I0078","layout":"person","collection":["people","Harrypedia","Malfoy"],"title":"Abraxas Malfoy ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Malfoy/Abraxas/","label":"External-Abraxas_Malfoy_","external":true},{"pageHref":null,"data":{"grampsID":"I0079"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0079index.html","id":"I0079","title":"Rubeus Hagrid ","body":"      <gramps-individual        personid=&quoteI0079&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0079","label":"External-Rubeus_Hagrid_","external":true},{"pageHref":null,"data":{"grampsID":"I0079"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Hagrid/Rubeus/index.html","id":"I0079","layout":"person","collection":["people","Harrypedia","Hagrid"],"title":"Rubeus Hagrid ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Hagrid/Rubeus/","label":"External-Rubeus_Hagrid_","external":true},{"pageHref":null,"data":{"grampsID":"I0080"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0080index.html","id":"I0080","title":"Fleur Isabelle Delacour ","body":"      <gramps-individual        personid=&quoteI0080&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0080","label":"External-Fleur_Isabelle_Delacour_","external":true},{"pageHref":null,"data":{"grampsID":"I0080"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Delacour/Fleur%20Isabelle/index.html","id":"I0080","layout":"person","collection":["people","Harrypedia","Delacour"],"title":"Fleur Isabelle Delacour ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Delacour/Fleur%20Isabelle/","label":"External-Fleur_Isabelle_Delacour_","external":true},{"pageHref":null,"data":{"grampsID":"I0081"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0081index.html","id":"I0081","title":"Fabian Prewett ","body":"      <gramps-individual        personid=&quoteI0081&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0081","label":"External-Fabian_Prewett_","external":true},{"pageHref":null,"data":{"grampsID":"I0081"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Prewett/Fabian/index.html","id":"I0081","layout":"person","collection":["people","Harrypedia","Prewett"],"title":"Fabian Prewett ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Prewett/Fabian/","label":"External-Fabian_Prewett_","external":true},{"pageHref":null,"data":{"grampsID":"I0082"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0082index.html","id":"I0082","title":"Gideon Prewett ","body":"      <gramps-individual        personid=&quoteI0082&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0082","label":"External-Gideon_Prewett_","external":true},{"pageHref":null,"data":{"grampsID":"I0082"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Prewett/Gideon/index.html","id":"I0082","layout":"person","collection":["people","Harrypedia","Prewett"],"title":"Gideon Prewett ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Prewett/Gideon/","label":"External-Gideon_Prewett_","external":true},{"pageHref":null,"data":{"grampsID":"I0083"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0083index.html","id":"I0083","title":"Henry Potter ","body":"      <gramps-individual        personid=&quoteI0083&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0083","label":"External-Henry_Potter_","external":true},{"pageHref":null,"data":{"grampsID":"I0083"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Potter/Henry/index.html","id":"I0083","layout":"person","collection":["people","Harrypedia","Potter"],"title":"Henry Potter ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Potter/Henry/","label":"External-Henry_Potter_","external":true},{"pageHref":null,"data":{"grampsID":"I0084"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0084index.html","id":"I0084","title":" Fleamont ","body":"      <gramps-individual        personid=&quoteI0084&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0084","label":"External-_Fleamont_","external":true},{"pageHref":null,"data":{"grampsID":"I0084"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Fleamont/I0084/index.html","id":"I0084","layout":"person","collection":["people","Harrypedia","Fleamont"],"title":" Fleamont ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Fleamont/I0084/","label":"External-_Fleamont_","external":true},{"pageHref":null,"data":{"grampsID":"I0087"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0087index.html","id":"I0087","title":" Longbottom ","body":"      <gramps-individual        personid=&quoteI0087&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0087","label":"External-_Longbottom_","external":true},{"pageHref":null,"data":{"grampsID":"I0087"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Longbottom/I0087/index.html","id":"I0087","layout":"person","collection":["people","Harrypedia","Longbottom"],"title":" Longbottom ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Longbottom/I0087/","label":"External-_Longbottom_","external":true},{"pageHref":null,"data":{"grampsID":"I0088"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0088index.html","id":"I0088","title":" Longbottom ","body":"      <gramps-individual        personid=&quoteI0088&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0088","label":"External-_Longbottom_","external":true},{"pageHref":null,"data":{"grampsID":"I0088"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Longbottom/I0088/index.html","id":"I0088","layout":"person","collection":["people","Harrypedia","Longbottom"],"title":" Longbottom ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Longbottom/I0088/","label":"External-_Longbottom_","external":true},{"pageHref":null,"data":{"grampsID":"I0089"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0089index.html","id":"I0089","title":" Longbottom ","body":"      <gramps-individual        personid=&quoteI0089&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0089","label":"External-_Longbottom_","external":true},{"pageHref":null,"data":{"grampsID":"I0089"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Longbottom/I0089/index.html","id":"I0089","layout":"person","collection":["people","Harrypedia","Longbottom"],"title":" Longbottom ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Longbottom/I0089/","label":"External-_Longbottom_","external":true},{"pageHref":null,"data":{"grampsID":"I0090"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0090index.html","id":"I0090","title":"Enid Unknown ","body":"      <gramps-individual        personid=&quoteI0090&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0090","label":"External-Enid_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0090"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Enid/index.html","id":"I0090","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Enid Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Enid/","label":"External-Enid_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0091"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0091index.html","id":"I0091","title":" Prewett ","body":"      <gramps-individual        personid=&quoteI0091&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0091","label":"External-_Prewett_","external":true},{"pageHref":null,"data":{"grampsID":"I0091"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Prewett/I0091/index.html","id":"I0091","layout":"person","collection":["people","Harrypedia","Prewett"],"title":" Prewett ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Prewett/I0091/","label":"External-_Prewett_","external":true},{"pageHref":null,"data":{"grampsID":"I0092"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0092index.html","id":"I0092","title":" Prewett ","body":"      <gramps-individual        personid=&quoteI0092&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0092","label":"External-_Prewett_","external":true},{"pageHref":null,"data":{"grampsID":"I0092"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Prewett/I0092/index.html","id":"I0092","layout":"person","collection":["people","Harrypedia","Prewett"],"title":" Prewett ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Prewett/I0092/","label":"External-_Prewett_","external":true},{"pageHref":null,"data":{"grampsID":"I0093"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0093index.html","id":"I0093","title":"Robert Hitchens ","body":"      <gramps-individual        personid=&quoteI0093&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0093","label":"External-Robert_Hitchens_","external":true},{"pageHref":null,"data":{"grampsID":"I0093"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Hitchens/Robert/index.html","id":"I0093","layout":"person","collection":["people","Harrypedia","Hitchens"],"title":"Robert Hitchens ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Hitchens/Robert/","label":"External-Robert_Hitchens_","external":true},{"pageHref":null,"data":{"grampsID":"I0094"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0094index.html","id":"I0094","title":"Marius Black ","body":"      <gramps-individual        personid=&quoteI0094&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0094","label":"External-Marius_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0094"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Marius/index.html","id":"I0094","layout":"person","collection":["people","Harrypedia","Black"],"title":"Marius Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Marius/","label":"External-Marius_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0095"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0095index.html","id":"I0095","title":"Charlie Weasley ","body":"      <gramps-individual        personid=&quoteI0095&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0095","label":"External-Charlie_Weasley_","external":true},{"pageHref":null,"data":{"grampsID":"I0096"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0096index.html","id":"I0096","title":"Vernon Dursley ","body":"      <gramps-individual        personid=&quoteI0096&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0096","label":"External-Vernon_Dursley_","external":true},{"pageHref":null,"data":{"grampsID":"I0097"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0097index.html","id":"I0097","title":"Petunia Evans ","body":"      <gramps-individual        personid=&quoteI0097&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0097","label":"External-Petunia_Evans_","external":true},{"pageHref":null,"data":{"grampsID":"I0098"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0098index.html","id":"I0098","title":"Dudley Dursley ","body":"      <gramps-individual        personid=&quoteI0098&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0098","label":"External-Dudley_Dursley_","external":true},{"pageHref":null,"data":{"grampsID":"I0098"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dursley/Dudley/index.html","id":"I0098","layout":"person","collection":["people","Harrypedia","Dursley"],"title":"Dudley Dursley ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Dursley/Dudley/","label":"External-Dudley_Dursley_","external":true},{"pageHref":null,"data":{"grampsID":"I0099"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0099index.html","id":"I0099","title":"Dedalus Diggle ","body":"      <gramps-individual        personid=&quoteI0099&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0099","label":"External-Dedalus_Diggle_","external":true},{"pageHref":null,"data":{"grampsID":"I0100"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0100index.html","id":"I0100","title":"Arabella Doreen Unknown ","body":"      <gramps-individual        personid=&quoteI0100&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0100","label":"External-Arabella_Doreen_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0100"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Arabella%20Doreen/index.html","id":"I0100","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Arabella Doreen Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Arabella%20Doreen/","label":"External-Arabella_Doreen_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0101"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0101index.html","id":"I0101","title":"Marge Dursley ","body":"      <gramps-individual        personid=&quoteI0101&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0101","label":"External-Marge_Dursley_","external":true},{"pageHref":null,"data":{"grampsID":"I0101"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dursley/Marge/index.html","id":"I0101","layout":"person","collection":["people","Harrypedia","Dursley"],"title":"Marge Dursley ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Dursley/Marge/","label":"External-Marge_Dursley_","external":true},{"pageHref":null,"data":{"grampsID":"I0102"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0102index.html","id":"I0102","title":"Doris Crockford ","body":"      <gramps-individual        personid=&quoteI0102&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0102","label":"External-Doris_Crockford_","external":true},{"pageHref":null,"data":{"grampsID":"I0102"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Crockford/Doris/index.html","id":"I0102","layout":"person","collection":["people","Harrypedia","Crockford"],"title":"Doris Crockford ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Crockford/Doris/","label":"External-Doris_Crockford_","external":true},{"pageHref":null,"data":{"grampsID":"I0103"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0103index.html","id":"I0103","title":"Quirinus Quirrell ","body":"      <gramps-individual        personid=&quoteI0103&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0103","label":"External-Quirinus_Quirrell_","external":true},{"pageHref":null,"data":{"grampsID":"I0103"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Quirrell/Quirinus/index.html","id":"I0103","layout":"person","collection":["people","Harrypedia","Quirrell"],"title":"Quirinus Quirrell ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Quirrell/Quirinus/","label":"External-Quirinus_Quirrell_","external":true},{"pageHref":null,"data":{"grampsID":"I0104"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0104index.html","id":"I0104","title":" Unknown ","body":"      <gramps-individual        personid=&quoteI0104&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0104","label":"External-_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0104"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/I0104/index.html","id":"I0104","layout":"person","collection":["people","Harrypedia","Unknown"],"title":" Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/I0104/","label":"External-_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0105"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0105index.html","id":"I0105","title":"Garrick Ollivander ","body":"      <gramps-individual        personid=&quoteI0105&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0105","label":"External-Garrick_Ollivander_","external":true},{"pageHref":null,"data":{"grampsID":"I0105"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Ollivander/Garrick/index.html","id":"I0105","layout":"person","collection":["people","Harrypedia","Ollivander"],"title":"Garrick Ollivander ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Ollivander/Garrick/","label":"External-Garrick_Ollivander_","external":true},{"pageHref":null,"data":{"grampsID":"I0106"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0106index.html","id":"I0106","title":"Vincent Crabbe ","body":"      <gramps-individual        personid=&quoteI0106&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0106","label":"External-Vincent_Crabbe_","external":true},{"pageHref":null,"data":{"grampsID":"I0106"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Crabbe/Vincent/index.html","id":"I0106","layout":"person","collection":["people","Harrypedia","Crabbe"],"title":"Vincent Crabbe ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Crabbe/Vincent/","label":"External-Vincent_Crabbe_","external":true},{"pageHref":null,"data":{"grampsID":"I0107"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0107index.html","id":"I0107","title":"Gregory Goyle ","body":"      <gramps-individual        personid=&quoteI0107&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0107","label":"External-Gregory_Goyle_","external":true},{"pageHref":null,"data":{"grampsID":"I0107"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Goyle/Gregory/index.html","id":"I0107","layout":"person","collection":["people","Harrypedia","Goyle"],"title":"Gregory Goyle ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Goyle/Gregory/","label":"External-Gregory_Goyle_","external":true},{"pageHref":null,"data":{"grampsID":"I0108"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0108index.html","id":"I0108","title":"Hannah Abbott ","body":"      <gramps-individual        personid=&quoteI0108&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0108","label":"External-Hannah_Abbott_","external":true},{"pageHref":null,"data":{"grampsID":"I0109"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0109index.html","id":"I0109","title":"Araminta Meliflua Black ","body":"      <gramps-individual        personid=&quoteI0109&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0109","label":"External-Araminta_Meliflua_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0109"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Araminta%20Meliflua/index.html","id":"I0109","layout":"person","collection":["people","Harrypedia","Black"],"title":"Araminta Meliflua Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Araminta%20Meliflua/","label":"External-Araminta_Meliflua_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0110"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0110index.html","id":"I0110","title":"Rabastan Lestrange ","body":"      <gramps-individual        personid=&quoteI0110&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0110","label":"External-Rabastan_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0110"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lestrange/Rabastan/index.html","id":"I0110","layout":"person","collection":["people","Harrypedia","Lestrange"],"title":"Rabastan Lestrange ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lestrange/Rabastan/","label":"External-Rabastan_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0111"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0111index.html","id":"I0111","title":"Amelia Susan Bones ","body":"      <gramps-individual        personid=&quoteI0111&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0111","label":"External-Amelia_Susan_Bones_","external":true},{"pageHref":null,"data":{"grampsID":"I0111"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Bones/Amelia%20Susan/index.html","id":"I0111","layout":"person","collection":["people","Harrypedia","Bones"],"title":"Amelia Susan Bones ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Bones/Amelia%20Susan/","label":"External-Amelia_Susan_Bones_","external":true},{"pageHref":null,"data":{"grampsID":"I0112"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0112index.html","id":"I0112","title":"Dolores Jane Umbridge ","body":"      <gramps-individual        personid=&quoteI0112&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0112","label":"External-Dolores_Jane_Umbridge_","external":true},{"pageHref":null,"data":{"grampsID":"I0112"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Umbridge/Dolores%20Jane/index.html","id":"I0112","layout":"person","collection":["people","Harrypedia","Umbridge"],"title":"Dolores Jane Umbridge ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Umbridge/Dolores%20Jane/","label":"External-Dolores_Jane_Umbridge_","external":true},{"pageHref":null,"data":{"grampsID":"I0113"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0113index.html","id":"I0113","title":"Edgar Bones ","body":"      <gramps-individual        personid=&quoteI0113&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0113","label":"External-Edgar_Bones_","external":true},{"pageHref":null,"data":{"grampsID":"I0113"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Bones/Edgar/index.html","id":"I0113","layout":"person","collection":["people","Harrypedia","Bones"],"title":"Edgar Bones ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Bones/Edgar/","label":"External-Edgar_Bones_","external":true},{"pageHref":null,"data":{"grampsID":"I0114"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0114index.html","id":"I0114","title":"Aberforth Dumbledore ","body":"      <gramps-individual        personid=&quoteI0114&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0114","label":"External-Aberforth_Dumbledore_","external":true},{"pageHref":null,"data":{"grampsID":"I0114"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dumbledore/Aberforth/index.html","id":"I0114","layout":"person","collection":["people","Harrypedia","Dumbledore"],"title":"Aberforth Dumbledore ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Dumbledore/Aberforth/","label":"External-Aberforth_Dumbledore_","external":true},{"pageHref":null,"data":{"grampsID":"I0115"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0115index.html","id":"I0115","title":"Luna Lovegood ","body":"      <gramps-individual        personid=&quoteI0115&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0115","label":"External-Luna_Lovegood_","external":true},{"pageHref":null,"data":{"grampsID":"I0115"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lovegood/Luna/index.html","id":"I0115","layout":"person","collection":["people","Harrypedia","Lovegood"],"title":"Luna Lovegood ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lovegood/Luna/","label":"External-Luna_Lovegood_","external":true},{"pageHref":null,"data":{"grampsID":"I0116"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0116index.html","id":"I0116","title":"Euan Abercrombie ","body":"      <gramps-individual        personid=&quoteI0116&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0116","label":"External-Euan_Abercrombie_","external":true},{"pageHref":null,"data":{"grampsID":"I0116"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Abercrombie/Euan/index.html","id":"I0116","layout":"person","collection":["people","Harrypedia","Abercrombie"],"title":"Euan Abercrombie ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Abercrombie/Euan/","label":"External-Euan_Abercrombie_","external":true},{"pageHref":null,"data":{"grampsID":"I0117"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0117index.html","id":"I0117","title":"Rose Zeller ","body":"      <gramps-individual        personid=&quoteI0117&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0117","label":"External-Rose_Zeller_","external":true},{"pageHref":null,"data":{"grampsID":"I0117"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Zeller/Rose/index.html","id":"I0117","layout":"person","collection":["people","Harrypedia","Zeller"],"title":"Rose Zeller ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Zeller/Rose/","label":"External-Rose_Zeller_","external":true},{"pageHref":null,"data":{"grampsID":"I0118"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0118index.html","id":"I0118","title":"Griselda Unknown ","body":"      <gramps-individual        personid=&quoteI0118&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0118","label":"External-Griselda_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0118"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Griselda/index.html","id":"I0118","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Griselda Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Griselda/","label":"External-Griselda_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0119"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0119index.html","id":"I0119","title":"Tiberius Ogden ","body":"      <gramps-individual        personid=&quoteI0119&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0119","label":"External-Tiberius_Ogden_","external":true},{"pageHref":null,"data":{"grampsID":"I0119"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Ogden/Tiberius/index.html","id":"I0119","layout":"person","collection":["people","Harrypedia","Ogden"],"title":"Tiberius Ogden ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Ogden/Tiberius/","label":"External-Tiberius_Ogden_","external":true},{"pageHref":null,"data":{"grampsID":"I0120"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0120index.html","id":"I0120","title":"Barry Ryan ","body":"      <gramps-individual        personid=&quoteI0120&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0120","label":"External-Barry_Ryan_","external":true},{"pageHref":null,"data":{"grampsID":"I0120"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Ryan/Barry/index.html","id":"I0120","layout":"person","collection":["people","Harrypedia","Ryan"],"title":"Barry Ryan ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Ryan/Barry/","label":"External-Barry_Ryan_","external":true},{"pageHref":null,"data":{"grampsID":"I0121"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0121index.html","id":"I0121","title":"Andrew Kirke ","body":"      <gramps-individual        personid=&quoteI0121&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0121","label":"External-Andrew_Kirke_","external":true},{"pageHref":null,"data":{"grampsID":"I0121"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Kirke/Andrew/index.html","id":"I0121","layout":"person","collection":["people","Harrypedia","Kirke"],"title":"Andrew Kirke ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Kirke/Andrew/","label":"External-Andrew_Kirke_","external":true},{"pageHref":null,"data":{"grampsID":"I0122"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0122index.html","id":"I0122","title":"Jack Sloper ","body":"      <gramps-individual        personid=&quoteI0122&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0122","label":"External-Jack_Sloper_","external":true},{"pageHref":null,"data":{"grampsID":"I0122"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Sloper/Jack/index.html","id":"I0122","layout":"person","collection":["people","Harrypedia","Sloper"],"title":"Jack Sloper ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Sloper/Jack/","label":"External-Jack_Sloper_","external":true},{"pageHref":null,"data":{"grampsID":"I0123"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0123index.html","id":"I0123","title":"Dilys Unknown ","body":"      <gramps-individual        personid=&quoteI0123&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0123","label":"External-Dilys_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0123"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Dilys/index.html","id":"I0123","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Dilys Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Dilys/","label":"External-Dilys_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0124"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0124index.html","id":"I0124","title":"Hippocrates Smethwyck ","body":"      <gramps-individual        personid=&quoteI0124&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0124","label":"External-Hippocrates_Smethwyck_","external":true},{"pageHref":null,"data":{"grampsID":"I0124"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Smethwyck/Hippocrates/index.html","id":"I0124","layout":"person","collection":["people","Harrypedia","Smethwyck"],"title":"Hippocrates Smethwyck ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Smethwyck/Hippocrates/","label":"External-Hippocrates_Smethwyck_","external":true},{"pageHref":null,"data":{"grampsID":"I0125"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0125index.html","id":"I0125","title":"Augustus Pye ","body":"      <gramps-individual        personid=&quoteI0125&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0125","label":"External-Augustus_Pye_","external":true},{"pageHref":null,"data":{"grampsID":"I0125"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Pye/Augustus/index.html","id":"I0125","layout":"person","collection":["people","Harrypedia","Pye"],"title":"Augustus Pye ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Pye/Augustus/","label":"External-Augustus_Pye_","external":true},{"pageHref":null,"data":{"grampsID":"I0126"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0126index.html","id":"I0126","title":"Urquhart Rackharrow ","body":"      <gramps-individual        personid=&quoteI0126&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0126","label":"External-Urquhart_Rackharrow_","external":true},{"pageHref":null,"data":{"grampsID":"I0126"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Rackharrow/Urquhart/index.html","id":"I0126","layout":"person","collection":["people","Harrypedia","Rackharrow"],"title":"Urquhart Rackharrow ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Rackharrow/Urquhart/","label":"External-Urquhart_Rackharrow_","external":true},{"pageHref":null,"data":{"grampsID":"I0127"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0127index.html","id":"I0127","title":"Willy Widdershins ","body":"      <gramps-individual        personid=&quoteI0127&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0127","label":"External-Willy_Widdershins_","external":true},{"pageHref":null,"data":{"grampsID":"I0127"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Widdershins/Willy/index.html","id":"I0127","layout":"person","collection":["people","Harrypedia","Widdershins"],"title":"Willy Widdershins ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Widdershins/Willy/","label":"External-Willy_Widdershins_","external":true},{"pageHref":null,"data":{"grampsID":"I0128"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0128index.html","id":"I0128","title":"Antonin Dolohov ","body":"      <gramps-individual        personid=&quoteI0128&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0128","label":"External-Antonin_Dolohov_","external":true},{"pageHref":null,"data":{"grampsID":"I0128"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dolohov/Antonin/index.html","id":"I0128","layout":"person","collection":["people","Harrypedia","Dolohov"],"title":"Antonin Dolohov ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Dolohov/Antonin/","label":"External-Antonin_Dolohov_","external":true},{"pageHref":null,"data":{"grampsID":"I0129"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0129index.html","id":"I0129","title":"Augustus Rockwood ","body":"      <gramps-individual        personid=&quoteI0129&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0129","label":"External-Augustus_Rockwood_","external":true},{"pageHref":null,"data":{"grampsID":"I0129"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Rockwood/Augustus/index.html","id":"I0129","layout":"person","collection":["people","Harrypedia","Rockwood"],"title":"Augustus Rockwood ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Rockwood/Augustus/","label":"External-Augustus_Rockwood_","external":true},{"pageHref":null,"data":{"grampsID":"I0130"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0130index.html","id":"I0130","title":"Roger Davies ","body":"      <gramps-individual        personid=&quoteI0130&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0130","label":"External-Roger_Davies_","external":true},{"pageHref":null,"data":{"grampsID":"I0130"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Davies/Roger/index.html","id":"I0130","layout":"person","collection":["people","Harrypedia","Davies"],"title":"Roger Davies ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Davies/Roger/","label":"External-Roger_Davies_","external":true},{"pageHref":null,"data":{"grampsID":"I0131"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0131index.html","id":"I0131","title":" Unknown ","body":"      <gramps-individual        personid=&quoteI0131&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0131","label":"External-_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0131"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/I0131/index.html","id":"I0131","layout":"person","collection":["people","Harrypedia","Unknown"],"title":" Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/I0131/","label":"External-_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0132"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0132index.html","id":"I0132","title":"Marietta Edgecombe ","body":"      <gramps-individual        personid=&quoteI0132&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0132","label":"External-Marietta_Edgecombe_","external":true},{"pageHref":null,"data":{"grampsID":"I0132"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Edgecombe/Marietta/index.html","id":"I0132","layout":"person","collection":["people","Harrypedia","Edgecombe"],"title":"Marietta Edgecombe ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Edgecombe/Marietta/","label":"External-Marietta_Edgecombe_","external":true},{"pageHref":null,"data":{"grampsID":"I0133"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0133index.html","id":"I0133","title":"John Dawlish ","body":"      <gramps-individual        personid=&quoteI0133&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0133","label":"External-John_Dawlish_","external":true},{"pageHref":null,"data":{"grampsID":"I0133"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dawlish/John/index.html","id":"I0133","layout":"person","collection":["people","Harrypedia","Dawlish"],"title":"John Dawlish ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Dawlish/John/","label":"External-John_Dawlish_","external":true},{"pageHref":null,"data":{"grampsID":"I0134"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0134index.html","id":"I0134","title":" Bradley ","body":"      <gramps-individual        personid=&quoteI0134&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0134","label":"External-_Bradley_","external":true},{"pageHref":null,"data":{"grampsID":"I0134"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Bradley/I0134/index.html","id":"I0134","layout":"person","collection":["people","Harrypedia","Bradley"],"title":" Bradley ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Bradley/I0134/","label":"External-_Bradley_","external":true},{"pageHref":null,"data":{"grampsID":"I0135"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0135index.html","id":"I0135","title":" Chambers ","body":"      <gramps-individual        personid=&quoteI0135&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0135","label":"External-_Chambers_","external":true},{"pageHref":null,"data":{"grampsID":"I0135"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Chambers/I0135/index.html","id":"I0135","layout":"person","collection":["people","Harrypedia","Chambers"],"title":" Chambers ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Chambers/I0135/","label":"External-_Chambers_","external":true},{"pageHref":null,"data":{"grampsID":"I0136"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0136index.html","id":"I0136","title":" Tofty ","body":"      <gramps-individual        personid=&quoteI0136&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0136","label":"External-_Tofty_","external":true},{"pageHref":null,"data":{"grampsID":"I0136"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Tofty/I0136/index.html","id":"I0136","layout":"person","collection":["people","Harrypedia","Tofty"],"title":" Tofty ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Tofty/I0136/","label":"External-_Tofty_","external":true},{"pageHref":null,"data":{"grampsID":"I0137"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0137index.html","id":"I0137","title":" Jugson ","body":"      <gramps-individual        personid=&quoteI0137&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0137","label":"External-_Jugson_","external":true},{"pageHref":null,"data":{"grampsID":"I0137"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Jugson/I0137/index.html","id":"I0137","layout":"person","collection":["people","Harrypedia","Jugson"],"title":" Jugson ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Jugson/I0137/","label":"External-_Jugson_","external":true},{"pageHref":null,"data":{"grampsID":"I0138"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0138index.html","id":"I0138","title":" Mulciber ","body":"      <gramps-individual        personid=&quoteI0138&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0138","label":"External-_Mulciber_","external":true},{"pageHref":null,"data":{"grampsID":"I0138"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Mulciber/I0138/index.html","id":"I0138","layout":"person","collection":["people","Harrypedia","Mulciber"],"title":" Mulciber ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Mulciber/I0138/","label":"External-_Mulciber_","external":true},{"pageHref":null,"data":{"grampsID":"I0139"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0139index.html","id":"I0139","title":" Williamson ","body":"      <gramps-individual        personid=&quoteI0139&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0139","label":"External-_Williamson_","external":true},{"pageHref":null,"data":{"grampsID":"I0139"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Williamson/I0139/index.html","id":"I0139","layout":"person","collection":["people","Harrypedia","Williamson"],"title":" Williamson ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Williamson/I0139/","label":"External-_Williamson_","external":true},{"pageHref":null,"data":{"grampsID":"I0140"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0140index.html","id":"I0140","title":" Weasley ","body":"      <gramps-individual        personid=&quoteI0140&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0140","label":"External-_Weasley_","external":true},{"pageHref":null,"data":{"grampsID":"I0140"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Weasley/I0140/index.html","id":"I0140","layout":"person","collection":["people","Harrypedia","Weasley"],"title":" Weasley ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Weasley/I0140/","label":"External-_Weasley_","external":true},{"pageHref":null,"data":{"grampsID":"I0141"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0141index.html","id":"I0141","title":" Weasley ","body":"      <gramps-individual        personid=&quoteI0141&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0141","label":"External-_Weasley_","external":true},{"pageHref":null,"data":{"grampsID":"I0141"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Weasley/I0141/index.html","id":"I0141","layout":"person","collection":["people","Harrypedia","Weasley"],"title":" Weasley ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Weasley/I0141/","label":"External-_Weasley_","external":true},{"pageHref":null,"data":{"grampsID":"I0142"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0142index.html","id":"I0142","title":"Ignatia Unknown ","body":"      <gramps-individual        personid=&quoteI0142&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0142","label":"External-Ignatia_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0142"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Ignatia/index.html","id":"I0142","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Ignatia Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Ignatia/","label":"External-Ignatia_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0143"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0143index.html","id":"I0143","title":"Daisy Unknown ","body":"      <gramps-individual        personid=&quoteI0143&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0143","label":"External-Daisy_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0143"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Daisy/index.html","id":"I0143","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Daisy Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Daisy/","label":"External-Daisy_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0144"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0144index.html","id":"I0144","title":"Robert Hilliard ","body":"      <gramps-individual        personid=&quoteI0144&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0144","label":"External-Robert_Hilliard_","external":true},{"pageHref":null,"data":{"grampsID":"I0144"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Hilliard/Robert/index.html","id":"I0144","layout":"person","collection":["people","Harrypedia","Hilliard"],"title":"Robert Hilliard ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Hilliard/Robert/","label":"External-Robert_Hilliard_","external":true},{"pageHref":null,"data":{"grampsID":"I0145"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0145index.html","id":"I0145","title":"Gemma Farley ","body":"      <gramps-individual        personid=&quoteI0145&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0145","label":"External-Gemma_Farley_","external":true},{"pageHref":null,"data":{"grampsID":"I0145"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Farley/Gemma/index.html","id":"I0145","layout":"person","collection":["people","Harrypedia","Farley"],"title":"Gemma Farley ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Farley/Gemma/","label":"External-Gemma_Farley_","external":true},{"pageHref":null,"data":{"grampsID":"I0146"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0146index.html","id":"I0146","title":"Gabriel Truman ","body":"      <gramps-individual        personid=&quoteI0146&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0146","label":"External-Gabriel_Truman_","external":true},{"pageHref":null,"data":{"grampsID":"I0146"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Truman/Gabriel/index.html","id":"I0146","layout":"person","collection":["people","Harrypedia","Truman"],"title":"Gabriel Truman ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Truman/Gabriel/","label":"External-Gabriel_Truman_","external":true},{"pageHref":null,"data":{"grampsID":"I0147"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0147index.html","id":"I0147","title":"Cygnus Black ","body":"      <gramps-individual        personid=&quoteI0147&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0147","label":"External-Cygnus_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0147"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Cygnus/index.html","id":"I0147","layout":"person","collection":["people","Harrypedia","Black"],"title":"Cygnus Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Cygnus/","label":"External-Cygnus_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0148"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0148index.html","id":"I0148","title":"Ella Max ","body":"      <gramps-individual        personid=&quoteI0148&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0148","label":"External-Ella_Max_","external":true},{"pageHref":null,"data":{"grampsID":"I0148"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Max/Ella/index.html","id":"I0148","layout":"person","collection":["people","Harrypedia","Max"],"title":"Ella Max ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Max/Ella/","label":"External-Ella_Max_","external":true},{"pageHref":null,"data":{"grampsID":"I0149"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0149index.html","id":"I0149","title":"Licorus Black ","body":"      <gramps-individual        personid=&quoteI0149&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0149","label":"External-Licorus_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0149"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Licorus/index.html","id":"I0149","layout":"person","collection":["people","Harrypedia","Black"],"title":"Licorus Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Licorus/","label":"External-Licorus_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0150"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0150index.html","id":"I0150","title":"Misapinoa Black ","body":"      <gramps-individual        personid=&quoteI0150&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0150","label":"External-Misapinoa_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0150"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Misapinoa/index.html","id":"I0150","layout":"person","collection":["people","Harrypedia","Black"],"title":"Misapinoa Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Misapinoa/","label":"External-Misapinoa_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0151"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0151index.html","id":"I0151","title":"Arcturus Black ","body":"      <gramps-individual        personid=&quoteI0151&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0151","label":"External-Arcturus_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0151"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Arcturus/index.html","id":"I0151","layout":"person","collection":["people","Harrypedia","Black"],"title":"Arcturus Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Arcturus/","label":"External-Arcturus_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0152"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0152index.html","id":"I0152","title":"Magenta Tripe ","body":"      <gramps-individual        personid=&quoteI0152&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0152","label":"External-Magenta_Tripe_","external":true},{"pageHref":null,"data":{"grampsID":"I0152"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Tripe/Magenta/index.html","id":"I0152","layout":"person","collection":["people","Harrypedia","Tripe"],"title":"Magenta Tripe ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Tripe/Magenta/","label":"External-Magenta_Tripe_","external":true},{"pageHref":null,"data":{"grampsID":"I0153"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0153index.html","id":"I0153","title":"Jimbo Blishwick ","body":"      <gramps-individual        personid=&quoteI0153&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0153","label":"External-Jimbo_Blishwick_","external":true},{"pageHref":null,"data":{"grampsID":"I0153"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Blishwick/Jimbo/index.html","id":"I0153","layout":"person","collection":["people","Harrypedia","Blishwick"],"title":"Jimbo Blishwick ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Blishwick/Jimbo/","label":"External-Jimbo_Blishwick_","external":true},{"pageHref":null,"data":{"grampsID":"I0154"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0154index.html","id":"I0154","title":"Susan Bones ","body":"      <gramps-individual        personid=&quoteI0154&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0154","label":"External-Susan_Bones_","external":true},{"pageHref":null,"data":{"grampsID":"I0154"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Bones/Susan/index.html","id":"I0154","layout":"person","collection":["people","Harrypedia","Bones"],"title":"Susan Bones ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Bones/Susan/","label":"External-Susan_Bones_","external":true},{"pageHref":null,"data":{"grampsID":"I0155"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0155index.html","id":"I0155","title":"Zacharias Smith ","body":"      <gramps-individual        personid=&quoteI0155&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0155","label":"External-Zacharias_Smith_","external":true},{"pageHref":null,"data":{"grampsID":"I0155"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Smith/Zacharias/index.html","id":"I0155","layout":"person","collection":["people","Harrypedia","Smith"],"title":"Zacharias Smith ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Smith/Zacharias/","label":"External-Zacharias_Smith_","external":true},{"pageHref":null,"data":{"grampsID":"I0156"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0156index.html","id":"I0156","title":"Wayne Hopkins ","body":"      <gramps-individual        personid=&quoteI0156&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0156","label":"External-Wayne_Hopkins_","external":true},{"pageHref":null,"data":{"grampsID":"I0156"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Hopkins/Wayne/index.html","id":"I0156","layout":"person","collection":["people","Harrypedia","Hopkins"],"title":"Wayne Hopkins ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Hopkins/Wayne/","label":"External-Wayne_Hopkins_","external":true},{"pageHref":null,"data":{"grampsID":"I0157"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0157index.html","id":"I0157","title":" Unknown ","body":"      <gramps-individual        personid=&quoteI0157&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0157","label":"External-_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0157"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/I0157/index.html","id":"I0157","layout":"person","collection":["people","Harrypedia","Unknown"],"title":" Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/I0157/","label":"External-_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0158"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0158index.html","id":"I0158","title":"Seamus Finnigan ","body":"      <gramps-individual        personid=&quoteI0158&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0158","label":"External-Seamus_Finnigan_","external":true},{"pageHref":null,"data":{"grampsID":"I0158"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Finnigan/Seamus/index.html","id":"I0158","layout":"person","collection":["people","Harrypedia","Finnigan"],"title":"Seamus Finnigan ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Finnigan/Seamus/","label":"External-Seamus_Finnigan_","external":true},{"pageHref":null,"data":{"grampsID":"I0159"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0159index.html","id":"I0159","title":"Dean Unknown ","body":"      <gramps-individual        personid=&quoteI0159&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0159","label":"External-Dean_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0159"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Dean/index.html","id":"I0159","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Dean Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Dean/","label":"External-Dean_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0160"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0160index.html","id":"I0160","title":"Blaize Zabini ","body":"      <gramps-individual        personid=&quoteI0160&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0160","label":"External-Blaize_Zabini_","external":true},{"pageHref":null,"data":{"grampsID":"I0161"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0161index.html","id":"I0161","title":"Theodore Nott ","body":"      <gramps-individual        personid=&quoteI0161&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0161","label":"External-Theodore_Nott_","external":true},{"pageHref":null,"data":{"grampsID":"I0161"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Nott/Theodore/index.html","id":"I0161","layout":"person","collection":["people","Harrypedia","Nott"],"title":"Theodore Nott ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Nott/Theodore/","label":"External-Theodore_Nott_","external":true},{"pageHref":null,"data":{"grampsID":"I0162"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0162index.html","id":"I0162","title":"Terry Boot ","body":"      <gramps-individual        personid=&quoteI0162&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0162","label":"External-Terry_Boot_","external":true},{"pageHref":null,"data":{"grampsID":"I0162"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Boot/Terry/index.html","id":"I0162","layout":"person","collection":["people","Harrypedia","Boot"],"title":"Terry Boot ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Boot/Terry/","label":"External-Terry_Boot_","external":true},{"pageHref":null,"data":{"grampsID":"I0163"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0163index.html","id":"I0163","title":"Michael Corner ","body":"      <gramps-individual        personid=&quoteI0163&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0163","label":"External-Michael_Corner_","external":true},{"pageHref":null,"data":{"grampsID":"I0163"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Corner/Michael/index.html","id":"I0163","layout":"person","collection":["people","Harrypedia","Corner"],"title":"Michael Corner ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Corner/Michael/","label":"External-Michael_Corner_","external":true},{"pageHref":null,"data":{"grampsID":"I0164"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0164index.html","id":"I0164","title":"Stephen Cornfoot ","body":"      <gramps-individual        personid=&quoteI0164&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0164","label":"External-Stephen_Cornfoot_","external":true},{"pageHref":null,"data":{"grampsID":"I0164"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Cornfoot/Stephen/index.html","id":"I0164","layout":"person","collection":["people","Harrypedia","Cornfoot"],"title":"Stephen Cornfoot ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Cornfoot/Stephen/","label":"External-Stephen_Cornfoot_","external":true},{"pageHref":null,"data":{"grampsID":"I0165"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0165index.html","id":"I0165","title":"Kevin Entwhistle ","body":"      <gramps-individual        personid=&quoteI0165&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0165","label":"External-Kevin_Entwhistle_","external":true},{"pageHref":null,"data":{"grampsID":"I0165"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Entwhistle/Kevin/index.html","id":"I0165","layout":"person","collection":["people","Harrypedia","Entwhistle"],"title":"Kevin Entwhistle ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Entwhistle/Kevin/","label":"External-Kevin_Entwhistle_","external":true},{"pageHref":null,"data":{"grampsID":"I0166"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0166index.html","id":"I0166","title":"Anthony Goldstein ","body":"      <gramps-individual        personid=&quoteI0166&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0166","label":"External-Anthony_Goldstein_","external":true},{"pageHref":null,"data":{"grampsID":"I0166"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Goldstein/Anthony/index.html","id":"I0166","layout":"person","collection":["people","Harrypedia","Goldstein"],"title":"Anthony Goldstein ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Goldstein/Anthony/","label":"External-Anthony_Goldstein_","external":true},{"pageHref":null,"data":{"grampsID":"I0167"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0167index.html","id":"I0167","title":"Justin Finch-Fletchley ","body":"      <gramps-individual        personid=&quoteI0167&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0167","label":"External-Justin_Finch-Fletchley_","external":true},{"pageHref":null,"data":{"grampsID":"I0167"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Finch-Fletchley/Justin/index.html","id":"I0167","layout":"person","collection":["people","Harrypedia","Finch-Fletchley"],"title":"Justin Finch-Fletchley ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Finch-Fletchley/Justin/","label":"External-Justin_Finch-Fletchley_","external":true},{"pageHref":null,"data":{"grampsID":"I0168"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0168index.html","id":"I0168","title":"Ernie Macmillan ","body":"      <gramps-individual        personid=&quoteI0168&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0168","label":"External-Ernie_Macmillan_","external":true},{"pageHref":null,"data":{"grampsID":"I0168"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Macmillan/Ernie/index.html","id":"I0168","layout":"person","collection":["people","Harrypedia","Macmillan"],"title":"Ernie Macmillan ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Macmillan/Ernie/","label":"External-Ernie_Macmillan_","external":true},{"pageHref":null,"data":{"grampsID":"I0169"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0169index.html","id":"I0169","title":"Roger Malone ","body":"      <gramps-individual        personid=&quoteI0169&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0169","label":"External-Roger_Malone_","external":true},{"pageHref":null,"data":{"grampsID":"I0169"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Malone/Roger/index.html","id":"I0169","layout":"person","collection":["people","Harrypedia","Malone"],"title":"Roger Malone ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Malone/Roger/","label":"External-Roger_Malone_","external":true},{"pageHref":null,"data":{"grampsID":"I0170"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0170index.html","id":"I0170","title":"Oliver Rivers ","body":"      <gramps-individual        personid=&quoteI0170&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0170","label":"External-Oliver_Rivers_","external":true},{"pageHref":null,"data":{"grampsID":"I0170"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Rivers/Oliver/index.html","id":"I0170","layout":"person","collection":["people","Harrypedia","Rivers"],"title":"Oliver Rivers ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Rivers/Oliver/","label":"External-Oliver_Rivers_","external":true},{"pageHref":null,"data":{"grampsID":"I0171"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0171index.html","id":"I0171","title":"Mandy Brocklehurst ","body":"      <gramps-individual        personid=&quoteI0171&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0171","label":"External-Mandy_Brocklehurst_","external":true},{"pageHref":null,"data":{"grampsID":"I0171"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Brocklehurst/Mandy/index.html","id":"I0171","layout":"person","collection":["people","Harrypedia","Brocklehurst"],"title":"Mandy Brocklehurst ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Brocklehurst/Mandy/","label":"External-Mandy_Brocklehurst_","external":true},{"pageHref":null,"data":{"grampsID":"I0172"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0172index.html","id":"I0172","title":"Sue Li ","body":"      <gramps-individual        personid=&quoteI0172&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0172","label":"External-Sue_Li_","external":true},{"pageHref":null,"data":{"grampsID":"I0172"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Li/Sue/index.html","id":"I0172","layout":"person","collection":["people","Harrypedia","Li"],"title":"Sue Li ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Li/Sue/","label":"External-Sue_Li_","external":true},{"pageHref":null,"data":{"grampsID":"I0173"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0173index.html","id":"I0173","title":"Morag MacDougal ","body":"      <gramps-individual        personid=&quoteI0173&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0173","label":"External-Morag_MacDougal_","external":true},{"pageHref":null,"data":{"grampsID":"I0173"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/MacDougal/Morag/index.html","id":"I0173","layout":"person","collection":["people","Harrypedia","MacDougal"],"title":"Morag MacDougal ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/MacDougal/Morag/","label":"External-Morag_MacDougal_","external":true},{"pageHref":null,"data":{"grampsID":"I0174"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0174index.html","id":"I0174","title":"Padma Patil ","body":"      <gramps-individual        personid=&quoteI0174&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0174","label":"External-Padma_Patil_","external":true},{"pageHref":null,"data":{"grampsID":"I0174"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Patil/Padma/index.html","id":"I0174","layout":"person","collection":["people","Harrypedia","Patil"],"title":"Padma Patil ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Patil/Padma/","label":"External-Padma_Patil_","external":true},{"pageHref":null,"data":{"grampsID":"I0175"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0175index.html","id":"I0175","title":"Pavarti Patil ","body":"      <gramps-individual        personid=&quoteI0175&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0175","label":"External-Pavarti_Patil_","external":true},{"pageHref":null,"data":{"grampsID":"I0175"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Patil/Pavarti/index.html","id":"I0175","layout":"person","collection":["people","Harrypedia","Patil"],"title":"Pavarti Patil ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Patil/Pavarti/","label":"External-Pavarti_Patil_","external":true},{"pageHref":null,"data":{"grampsID":"I0176"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0176index.html","id":"I0176","title":"Lisa Turpin ","body":"      <gramps-individual        personid=&quoteI0176&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0176","label":"External-Lisa_Turpin_","external":true},{"pageHref":null,"data":{"grampsID":"I0176"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Turpin/Lisa/index.html","id":"I0176","layout":"person","collection":["people","Harrypedia","Turpin"],"title":"Lisa Turpin ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Turpin/Lisa/","label":"External-Lisa_Turpin_","external":true},{"pageHref":null,"data":{"grampsID":"I0177"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0177index.html","id":"I0177","title":"Millicent Bulstrode ","body":"      <gramps-individual        personid=&quoteI0177&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0177","label":"External-Millicent_Bulstrode_","external":true},{"pageHref":null,"data":{"grampsID":"I0177"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Bulstrode/Millicent/index.html","id":"I0177","layout":"person","collection":["people","Harrypedia","Bulstrode"],"title":"Millicent Bulstrode ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Bulstrode/Millicent/","label":"External-Millicent_Bulstrode_","external":true},{"pageHref":null,"data":{"grampsID":"I0178"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0178index.html","id":"I0178","title":"Tracey Davis ","body":"      <gramps-individual        personid=&quoteI0178&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0178","label":"External-Tracey_Davis_","external":true},{"pageHref":null,"data":{"grampsID":"I0178"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Davis/Tracey/index.html","id":"I0178","layout":"person","collection":["people","Harrypedia","Davis"],"title":"Tracey Davis ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Davis/Tracey/","label":"External-Tracey_Davis_","external":true},{"pageHref":null,"data":{"grampsID":"I0179"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0179index.html","id":"I0179","title":"Daphne Greengrass ","body":"      <gramps-individual        personid=&quoteI0179&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0179","label":"External-Daphne_Greengrass_","external":true},{"pageHref":null,"data":{"grampsID":"I0179"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Greengrass/Daphne/index.html","id":"I0179","layout":"person","collection":["people","Harrypedia","Greengrass"],"title":"Daphne Greengrass ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Greengrass/Daphne/","label":"External-Daphne_Greengrass_","external":true},{"pageHref":null,"data":{"grampsID":"I0180"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0180index.html","id":"I0180","title":"Astoria Greengrass ","body":"      <gramps-individual        personid=&quoteI0180&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0180","label":"External-Astoria_Greengrass_","external":true},{"pageHref":null,"data":{"grampsID":"I0180"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Greengrass/Astoria/index.html","id":"I0180","layout":"person","collection":["people","Harrypedia","Greengrass"],"title":"Astoria Greengrass ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Greengrass/Astoria/","label":"External-Astoria_Greengrass_","external":true},{"pageHref":null,"data":{"grampsID":"I0181"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0181index.html","id":"I0181","title":"Pansy Parkinson ","body":"      <gramps-individual        personid=&quoteI0181&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0181","label":"External-Pansy_Parkinson_","external":true},{"pageHref":null,"data":{"grampsID":"I0181"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Parkinson/Pansy/index.html","id":"I0181","layout":"person","collection":["people","Harrypedia","Parkinson"],"title":"Pansy Parkinson ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Parkinson/Pansy/","label":"External-Pansy_Parkinson_","external":true},{"pageHref":null,"data":{"grampsID":"I0182"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0182index.html","id":"I0182","title":"A. Runcorn ","body":"      <gramps-individual        personid=&quoteI0182&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0182","label":"External-A._Runcorn_","external":true},{"pageHref":null,"data":{"grampsID":"I0182"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Runcorn/A./index.html","id":"I0182","layout":"person","collection":["people","Harrypedia","Runcorn"],"title":"A. Runcorn ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Runcorn/A./","label":"External-A._Runcorn_","external":true},{"pageHref":null,"data":{"grampsID":"I0183"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0183index.html","id":"I0183","title":"Megan Jones ","body":"      <gramps-individual        personid=&quoteI0183&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0183","label":"External-Megan_Jones_","external":true},{"pageHref":null,"data":{"grampsID":"I0183"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Jones/Megan/index.html","id":"I0183","layout":"person","collection":["people","Harrypedia","Jones"],"title":"Megan Jones ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Jones/Megan/","label":"External-Megan_Jones_","external":true},{"pageHref":null,"data":{"grampsID":"I0184"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0184index.html","id":"I0184","title":"Sally-Anne Perks ","body":"      <gramps-individual        personid=&quoteI0184&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0184","label":"External-Sally-Anne_Perks_","external":true},{"pageHref":null,"data":{"grampsID":"I0184"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Perks/Sally-Anne/index.html","id":"I0184","layout":"person","collection":["people","Harrypedia","Perks"],"title":"Sally-Anne Perks ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Perks/Sally-Anne/","label":"External-Sally-Anne_Perks_","external":true},{"pageHref":null,"data":{"grampsID":"I0185"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0185index.html","id":"I0185","title":"Lavender Brown ","body":"      <gramps-individual        personid=&quoteI0185&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0185","label":"External-Lavender_Brown_","external":true},{"pageHref":null,"data":{"grampsID":"I0186"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0186index.html","id":"I0186","title":"Lily Moon ","body":"      <gramps-individual        personid=&quoteI0186&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0186","label":"External-Lily_Moon_","external":true},{"pageHref":null,"data":{"grampsID":"I0186"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Moon/Lily/index.html","id":"I0186","layout":"person","collection":["people","Harrypedia","Moon"],"title":"Lily Moon ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Moon/Lily/","label":"External-Lily_Moon_","external":true},{"pageHref":null,"data":{"grampsID":"I0187"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0187index.html","id":"I0187","title":"Sophie Roper ","body":"      <gramps-individual        personid=&quoteI0187&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0187","label":"External-Sophie_Roper_","external":true},{"pageHref":null,"data":{"grampsID":"I0187"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Roper/Sophie/index.html","id":"I0187","layout":"person","collection":["people","Harrypedia","Roper"],"title":"Sophie Roper ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Roper/Sophie/","label":"External-Sophie_Roper_","external":true},{"pageHref":null,"data":{"grampsID":"I0188"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0188index.html","id":"I0188","title":"Xenophilius Lovegood ","body":"      <gramps-individual        personid=&quoteI0188&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0188","label":"External-Xenophilius_Lovegood_","external":true},{"pageHref":null,"data":{"grampsID":"I0188"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lovegood/Xenophilius/index.html","id":"I0188","layout":"person","collection":["people","Harrypedia","Lovegood"],"title":"Xenophilius Lovegood ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lovegood/Xenophilius/","label":"External-Xenophilius_Lovegood_","external":true},{"pageHref":null,"data":{"grampsID":"I0189"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0189index.html","id":"I0189","title":"Pandora Unknown ","body":"      <gramps-individual        personid=&quoteI0189&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0189","label":"External-Pandora_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0189"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Pandora/index.html","id":"I0189","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Pandora Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Pandora/","label":"External-Pandora_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0190"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0190index.html","id":"I0190","title":"Linfred of Stinchcombe ","body":"      <gramps-individual        personid=&quoteI0190&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0190","label":"External-Linfred_of_Stinchcombe_","external":true},{"pageHref":null,"data":{"grampsID":"I0190"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/of%20Stinchcombe/Linfred/index.html","id":"I0190","layout":"person","collection":["people","Harrypedia","of Stinchcombe"],"title":"Linfred of Stinchcombe ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/of%20Stinchcombe/Linfred/","label":"External-Linfred_of_Stinchcombe_","external":true},{"pageHref":null,"data":{"grampsID":"I0191"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0191index.html","id":"I0191","title":"Hardwin Potter ","body":"      <gramps-individual        personid=&quoteI0191&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0191","label":"External-Hardwin_Potter_","external":true},{"pageHref":null,"data":{"grampsID":"I0191"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Potter/Hardwin/index.html","id":"I0191","layout":"person","collection":["people","Harrypedia","Potter"],"title":"Hardwin Potter ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Potter/Hardwin/","label":"External-Hardwin_Potter_","external":true},{"pageHref":null,"data":{"grampsID":"I0192"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0192index.html","id":"I0192","title":"Iolanthe Peverell ","body":"      <gramps-individual        personid=&quoteI0192&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0192","label":"External-Iolanthe_Peverell_","external":true},{"pageHref":null,"data":{"grampsID":"I0192"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Peverell/Iolanthe/index.html","id":"I0192","layout":"person","collection":["people","Harrypedia","Peverell"],"title":"Iolanthe Peverell ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Peverell/Iolanthe/","label":"External-Iolanthe_Peverell_","external":true},{"pageHref":null,"data":{"grampsID":"I0193"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0193index.html","id":"I0193","title":"Florean Fortescue ","body":"      <gramps-individual        personid=&quoteI0193&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0193","label":"External-Florean_Fortescue_","external":true},{"pageHref":null,"data":{"grampsID":"I0193"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Fortescue/Florean/index.html","id":"I0193","layout":"person","collection":["people","Harrypedia","Fortescue"],"title":"Florean Fortescue ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Fortescue/Florean/","label":"External-Florean_Fortescue_","external":true},{"pageHref":null,"data":{"grampsID":"I0194"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0194index.html","id":"I0194","title":"Septima Unknown ","body":"      <gramps-individual        personid=&quoteI0194&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0194","label":"External-Septima_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0194"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Septima/index.html","id":"I0194","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Septima Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Septima/","label":"External-Septima_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0195"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0195index.html","id":"I0195","title":"Bathsheda Unknown ","body":"      <gramps-individual        personid=&quoteI0195&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0195","label":"External-Bathsheda_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0195"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Bathsheda/index.html","id":"I0195","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Bathsheda Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Bathsheda/","label":"External-Bathsheda_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0196"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0196index.html","id":"I0196","title":"Charity Unknown ","body":"      <gramps-individual        personid=&quoteI0196&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0196","label":"External-Charity_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0196"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Charity/index.html","id":"I0196","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Charity Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Charity/","label":"External-Charity_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0197"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0197index.html","id":"I0197","title":"Rolanda Unknown ","body":"      <gramps-individual        personid=&quoteI0197&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0197","label":"External-Rolanda_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0197"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Rolanda/index.html","id":"I0197","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Rolanda Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Rolanda/","label":"External-Rolanda_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0198"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0198index.html","id":"I0198","title":"Cornelius Oswald Fudge ","body":"      <gramps-individual        personid=&quoteI0198&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0198","label":"External-Cornelius_Oswald_Fudge_","external":true},{"pageHref":null,"data":{"grampsID":"I0198"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Fudge/Cornelius%20Oswald/index.html","id":"I0198","layout":"person","collection":["people","Harrypedia","Fudge"],"title":"Cornelius Oswald Fudge ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Fudge/Cornelius%20Oswald/","label":"External-Cornelius_Oswald_Fudge_","external":true},{"pageHref":null,"data":{"grampsID":"I0199"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0199index.html","id":"I0199","title":"Rufus Scrimgeour ","body":"      <gramps-individual        personid=&quoteI0199&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0199","label":"External-Rufus_Scrimgeour_","external":true},{"pageHref":null,"data":{"grampsID":"I0200"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0200index.html","id":"I0200","title":" Potter ","body":"      <gramps-individual        personid=&quoteI0200&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0200","label":"External-_Potter_","external":true},{"pageHref":null,"data":{"grampsID":"I0200"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Potter/I0200/index.html","id":"I0200","layout":"person","collection":["people","Harrypedia","Potter"],"title":" Potter ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Potter/I0200/","label":"External-_Potter_","external":true},{"pageHref":null,"data":{"grampsID":"I0201"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0201index.html","id":"I0201","title":" Potter ","body":"      <gramps-individual        personid=&quoteI0201&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0201","label":"External-_Potter_","external":true},{"pageHref":null,"data":{"grampsID":"I0201"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Potter/I0201/index.html","id":"I0201","layout":"person","collection":["people","Harrypedia","Potter"],"title":" Potter ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Potter/I0201/","label":"External-_Potter_","external":true},{"pageHref":null,"data":{"grampsID":"I0202"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0202index.html","id":"I0202","title":"Lyall Lupin ","body":"      <gramps-individual        personid=&quoteI0202&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0202","label":"External-Lyall_Lupin_","external":true},{"pageHref":null,"data":{"grampsID":"I0202"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lupin/Lyall/index.html","id":"I0202","layout":"person","collection":["people","Harrypedia","Lupin"],"title":"Lyall Lupin ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lupin/Lyall/","label":"External-Lyall_Lupin_","external":true},{"pageHref":null,"data":{"grampsID":"I0203"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0203index.html","id":"I0203","title":"Hope Howell ","body":"      <gramps-individual        personid=&quoteI0203&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0203","label":"External-Hope_Howell_","external":true},{"pageHref":null,"data":{"grampsID":"I0203"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Howell/Hope/index.html","id":"I0203","layout":"person","collection":["people","Harrypedia","Howell"],"title":"Hope Howell ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Howell/Hope/","label":"External-Hope_Howell_","external":true},{"pageHref":null,"data":{"grampsID":"I0204"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0204index.html","id":"I0204","title":"Damocles Belby ","body":"      <gramps-individual        personid=&quoteI0204&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0204","label":"External-Damocles_Belby_","external":true},{"pageHref":null,"data":{"grampsID":"I0205"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0205index.html","id":"I0205","title":" Bones ","body":"      <gramps-individual        personid=&quoteI0205&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0205","label":"External-_Bones_","external":true},{"pageHref":null,"data":{"grampsID":"I0205"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Bones/I0205/index.html","id":"I0205","layout":"person","collection":["people","Harrypedia","Bones"],"title":" Bones ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Bones/I0205/","label":"External-_Bones_","external":true},{"pageHref":null,"data":{"grampsID":"I0206"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0206index.html","id":"I0206","title":" Bones ","body":"      <gramps-individual        personid=&quoteI0206&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0206","label":"External-_Bones_","external":true},{"pageHref":null,"data":{"grampsID":"I0206"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Bones/I0206/index.html","id":"I0206","layout":"person","collection":["people","Harrypedia","Bones"],"title":" Bones ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Bones/I0206/","label":"External-_Bones_","external":true},{"pageHref":null,"data":{"grampsID":"I0207"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0207index.html","id":"I0207","title":" Greengrass ","body":"      <gramps-individual        personid=&quoteI0207&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0207","label":"External-_Greengrass_","external":true},{"pageHref":null,"data":{"grampsID":"I0207"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Greengrass/I0207/index.html","id":"I0207","layout":"person","collection":["people","Harrypedia","Greengrass"],"title":" Greengrass ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Greengrass/I0207/","label":"External-_Greengrass_","external":true},{"pageHref":null,"data":{"grampsID":"I0208"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0208index.html","id":"I0208","title":" Greengrass ","body":"      <gramps-individual        personid=&quoteI0208&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0208","label":"External-_Greengrass_","external":true},{"pageHref":null,"data":{"grampsID":"I0208"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Greengrass/I0208/index.html","id":"I0208","layout":"person","collection":["people","Harrypedia","Greengrass"],"title":" Greengrass ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Greengrass/I0208/","label":"External-_Greengrass_","external":true},{"pageHref":null,"data":{"grampsID":"I0209"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0209index.html","id":"I0209","title":" Evans ","body":"      <gramps-individual        personid=&quoteI0209&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0209","label":"External-_Evans_","external":true},{"pageHref":null,"data":{"grampsID":"I0209"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Evans/I0209/index.html","id":"I0209","layout":"person","collection":["people","Harrypedia","Evans"],"title":" Evans ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Evans/I0209/","label":"External-_Evans_","external":true},{"pageHref":null,"data":{"grampsID":"I0210"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0210index.html","id":"I0210","title":"Gareth Greengrass ","body":"      <gramps-individual        personid=&quoteI0210&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0210","label":"External-Gareth_Greengrass_","external":true},{"pageHref":null,"data":{"grampsID":"I0210"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Greengrass/Gareth/index.html","id":"I0210","layout":"person","collection":["people","Harrypedia","Greengrass"],"title":"Gareth Greengrass ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Greengrass/Gareth/","label":"External-Gareth_Greengrass_","external":true},{"pageHref":null,"data":{"grampsID":"I0211"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0211index.html","id":"I0211","title":"Benjy Fenwick ","body":"      <gramps-individual        personid=&quoteI0211&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0211","label":"External-Benjy_Fenwick_","external":true},{"pageHref":null,"data":{"grampsID":"I0211"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Fenwick/Benjy/index.html","id":"I0211","layout":"person","collection":["people","Harrypedia","Fenwick"],"title":"Benjy Fenwick ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Fenwick/Benjy/","label":"External-Benjy_Fenwick_","external":true},{"pageHref":null,"data":{"grampsID":"I0212"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0212index.html","id":"I0212","title":" Scamander ","body":"      <gramps-individual        personid=&quoteI0212&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0212","label":"External-_Scamander_","external":true},{"pageHref":null,"data":{"grampsID":"I0212"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Scamander/I0212/index.html","id":"I0212","layout":"person","collection":["people","Harrypedia","Scamander"],"title":" Scamander ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Scamander/I0212/","label":"External-_Scamander_","external":true},{"pageHref":null,"data":{"grampsID":"I0213"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0213index.html","id":"I0213","title":"Theseus Scamander ","body":"      <gramps-individual        personid=&quoteI0213&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0213","label":"External-Theseus_Scamander_","external":true},{"pageHref":null,"data":{"grampsID":"I0213"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Scamander/Theseus/index.html","id":"I0213","layout":"person","collection":["people","Harrypedia","Scamander"],"title":"Theseus Scamander ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Scamander/Theseus/","label":"External-Theseus_Scamander_","external":true},{"pageHref":null,"data":{"grampsID":"I0214"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0214index.html","id":"I0214","title":"Newton Artemis Fido Scamander ","body":"      <gramps-individual        personid=&quoteI0214&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0214","label":"External-Newton_Artemis_Fido_Scamander_","external":true},{"pageHref":null,"data":{"grampsID":"I0214"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Scamander/Newton%20Artemis%20Fido/index.html","id":"I0214","layout":"person","collection":["people","Harrypedia","Scamander"],"title":"Newton Artemis Fido Scamander ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Scamander/Newton%20Artemis%20Fido/","label":"External-Newton_Artemis_Fido_Scamander_","external":true},{"pageHref":null,"data":{"grampsID":"I0215"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0215index.html","id":"I0215","title":" Lestrange ","body":"      <gramps-individual        personid=&quoteI0215&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0215","label":"External-_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0215"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lestrange/I0215/index.html","id":"I0215","layout":"person","collection":["people","Harrypedia","Lestrange"],"title":" Lestrange ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lestrange/I0215/","label":"External-_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0216"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0216index.html","id":"I0216","title":"Corvus Lestrange ","body":"      <gramps-individual        personid=&quoteI0216&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0216","label":"External-Corvus_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0216"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lestrange/Corvus/index.html","id":"I0216","layout":"person","collection":["people","Harrypedia","Lestrange"],"title":"Corvus Lestrange ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lestrange/Corvus/","label":"External-Corvus_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0217"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0217index.html","id":"I0217","title":"Heloise Beaufort ","body":"      <gramps-individual        personid=&quoteI0217&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0217","label":"External-Heloise_Beaufort_","external":true},{"pageHref":null,"data":{"grampsID":"I0217"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Beaufort/Heloise/index.html","id":"I0217","layout":"person","collection":["people","Harrypedia","Beaufort"],"title":"Heloise Beaufort ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Beaufort/Heloise/","label":"External-Heloise_Beaufort_","external":true},{"pageHref":null,"data":{"grampsID":"I0218"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0218index.html","id":"I0218","title":"Falco Lestrange ","body":"      <gramps-individual        personid=&quoteI0218&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0218","label":"External-Falco_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0218"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lestrange/Falco/index.html","id":"I0218","layout":"person","collection":["people","Harrypedia","Lestrange"],"title":"Falco Lestrange ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lestrange/Falco/","label":"External-Falco_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0219"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0219index.html","id":"I0219","title":"Corvus Lestrange II","body":"      <gramps-individual        personid=&quoteI0219&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0219","label":"External-Corvus_Lestrange_II","external":true},{"pageHref":null,"data":{"grampsID":"I0219"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lestrange/Corvus_II/index.html","id":"I0219","layout":"person","collection":["people","Harrypedia","Lestrange"],"title":"Corvus Lestrange II","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lestrange/Corvus_II/","label":"External-Corvus_Lestrange_II","external":true},{"pageHref":null,"data":{"grampsID":"I0220"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0220index.html","id":"I0220","title":"Minette Rosier ","body":"      <gramps-individual        personid=&quoteI0220&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0220","label":"External-Minette_Rosier_","external":true},{"pageHref":null,"data":{"grampsID":"I0220"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Rosier/Minette/index.html","id":"I0220","layout":"person","collection":["people","Harrypedia","Rosier"],"title":"Minette Rosier ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Rosier/Minette/","label":"External-Minette_Rosier_","external":true},{"pageHref":null,"data":{"grampsID":"I0221"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0221index.html","id":"I0221","title":"Eglantine Lestrange ","body":"      <gramps-individual        personid=&quoteI0221&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0221","label":"External-Eglantine_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0221"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lestrange/Eglantine/index.html","id":"I0221","layout":"person","collection":["people","Harrypedia","Lestrange"],"title":"Eglantine Lestrange ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lestrange/Eglantine/","label":"External-Eglantine_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0222"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0222index.html","id":"I0222","title":"Salomé Volant ","body":"      <gramps-individual        personid=&quoteI0222&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0222","label":"External-Salomé_Volant_","external":true},{"pageHref":null,"data":{"grampsID":"I0222"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Volant/Salom%C3%A9/index.html","id":"I0222","layout":"person","collection":["people","Harrypedia","Volant"],"title":"Salomé Volant ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Volant/Salom%C3%A9/","label":"External-Salomé_Volant_","external":true},{"pageHref":null,"data":{"grampsID":"I0223"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0223index.html","id":"I0223","title":"Leonie Lestrange ","body":"      <gramps-individual        personid=&quoteI0223&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0223","label":"External-Leonie_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0223"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lestrange/Leonie/index.html","id":"I0223","layout":"person","collection":["people","Harrypedia","Lestrange"],"title":"Leonie Lestrange ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lestrange/Leonie/","label":"External-Leonie_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0224"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0224index.html","id":"I0224","title":"Manon Lestrange ","body":"      <gramps-individual        personid=&quoteI0224&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0224","label":"External-Manon_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0224"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lestrange/Manon/index.html","id":"I0224","layout":"person","collection":["people","Harrypedia","Lestrange"],"title":"Manon Lestrange ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lestrange/Manon/","label":"External-Manon_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0225"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0225index.html","id":"I0225","title":"Josette Lestrange ","body":"      <gramps-individual        personid=&quoteI0225&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0225","label":"External-Josette_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0225"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lestrange/Josette/index.html","id":"I0225","layout":"person","collection":["people","Harrypedia","Lestrange"],"title":"Josette Lestrange ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lestrange/Josette/","label":"External-Josette_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0226"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0226index.html","id":"I0226","title":"Corvus Lestrange III","body":"      <gramps-individual        personid=&quoteI0226&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0226","label":"External-Corvus_Lestrange_III","external":true},{"pageHref":null,"data":{"grampsID":"I0226"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lestrange/Corvus_III/index.html","id":"I0226","layout":"person","collection":["people","Harrypedia","Lestrange"],"title":"Corvus Lestrange III","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lestrange/Corvus_III/","label":"External-Corvus_Lestrange_III","external":true},{"pageHref":null,"data":{"grampsID":"I0227"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0227index.html","id":"I0227","title":"Corvus Lestrange IV","body":"      <gramps-individual        personid=&quoteI0227&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0227","label":"External-Corvus_Lestrange_IV","external":true},{"pageHref":null,"data":{"grampsID":"I0227"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lestrange/Corvus_IV/index.html","id":"I0227","layout":"person","collection":["people","Harrypedia","Lestrange"],"title":"Corvus Lestrange IV","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lestrange/Corvus_IV/","label":"External-Corvus_Lestrange_IV","external":true},{"pageHref":null,"data":{"grampsID":"I0228"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0228index.html","id":"I0228","title":"Laurena Unknown ","body":"      <gramps-individual        personid=&quoteI0228&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0228","label":"External-Laurena_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0228"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Laurena/index.html","id":"I0228","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Laurena Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Laurena/","label":"External-Laurena_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0229"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0229index.html","id":"I0229","title":"Leta Lestrange ","body":"      <gramps-individual        personid=&quoteI0229&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0229","label":"External-Leta_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0229"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lestrange/Leta/index.html","id":"I0229","layout":"person","collection":["people","Harrypedia","Lestrange"],"title":"Leta Lestrange ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lestrange/Leta/","label":"External-Leta_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0230"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0230index.html","id":"I0230","title":"Bernard Tremblay ","body":"      <gramps-individual        personid=&quoteI0230&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0230","label":"External-Bernard_Tremblay_","external":true},{"pageHref":null,"data":{"grampsID":"I0230"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Tremblay/Bernard/index.html","id":"I0230","layout":"person","collection":["people","Harrypedia","Tremblay"],"title":"Bernard Tremblay ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Tremblay/Bernard/","label":"External-Bernard_Tremblay_","external":true},{"pageHref":null,"data":{"grampsID":"I0231"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0231index.html","id":"I0231","title":"Clarisse Tremblay ","body":"      <gramps-individual        personid=&quoteI0231&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0231","label":"External-Clarisse_Tremblay_","external":true},{"pageHref":null,"data":{"grampsID":"I0231"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Tremblay/Clarisse/index.html","id":"I0231","layout":"person","collection":["people","Harrypedia","Tremblay"],"title":"Clarisse Tremblay ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Tremblay/Clarisse/","label":"External-Clarisse_Tremblay_","external":true},{"pageHref":null,"data":{"grampsID":"I0232"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0232index.html","id":"I0232","title":"Corvus Lestrange V","body":"      <gramps-individual        personid=&quoteI0232&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0232","label":"External-Corvus_Lestrange_V","external":true},{"pageHref":null,"data":{"grampsID":"I0232"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lestrange/Corvus_V/index.html","id":"I0232","layout":"person","collection":["people","Harrypedia","Lestrange"],"title":"Corvus Lestrange V","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lestrange/Corvus_V/","label":"External-Corvus_Lestrange_V","external":true},{"pageHref":null,"data":{"grampsID":"I0233"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0233index.html","id":"I0233","title":" Lestrange ","body":"      <gramps-individual        personid=&quoteI0233&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0233","label":"External-_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0233"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lestrange/I0233/index.html","id":"I0233","layout":"person","collection":["people","Harrypedia","Lestrange"],"title":" Lestrange ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lestrange/I0233/","label":"External-_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0234"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0234index.html","id":"I0234","title":" Dursley ","body":"      <gramps-individual        personid=&quoteI0234&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0234","label":"External-_Dursley_","external":true},{"pageHref":null,"data":{"grampsID":"I0234"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dursley/I0234/index.html","id":"I0234","layout":"person","collection":["people","Harrypedia","Dursley"],"title":" Dursley ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Dursley/I0234/","label":"External-_Dursley_","external":true},{"pageHref":null,"data":{"grampsID":"I0235"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0235index.html","id":"I0235","title":" Finnigan ","body":"      <gramps-individual        personid=&quoteI0235&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0235","label":"External-_Finnigan_","external":true},{"pageHref":null,"data":{"grampsID":"I0235"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Finnigan/I0235/index.html","id":"I0235","layout":"person","collection":["people","Harrypedia","Finnigan"],"title":" Finnigan ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Finnigan/I0235/","label":"External-_Finnigan_","external":true},{"pageHref":null,"data":{"grampsID":"I0236"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0236index.html","id":"I0236","title":"Cyrille Lestrange ","body":"      <gramps-individual        personid=&quoteI0236&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0236","label":"External-Cyrille_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0236"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lestrange/Cyrille/index.html","id":"I0236","layout":"person","collection":["people","Harrypedia","Lestrange"],"title":"Cyrille Lestrange ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lestrange/Cyrille/","label":"External-Cyrille_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0237"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0237index.html","id":"I0237","title":"Darenne Moreau ","body":"      <gramps-individual        personid=&quoteI0237&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0237","label":"External-Darenne_Moreau_","external":true},{"pageHref":null,"data":{"grampsID":"I0237"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Moreau/Darenne/index.html","id":"I0237","layout":"person","collection":["people","Harrypedia","Moreau"],"title":"Darenne Moreau ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Moreau/Darenne/","label":"External-Darenne_Moreau_","external":true},{"pageHref":null,"data":{"grampsID":"I0238"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0238index.html","id":"I0238","title":"Cyrille Lestrange II","body":"      <gramps-individual        personid=&quoteI0238&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0238","label":"External-Cyrille_Lestrange_II","external":true},{"pageHref":null,"data":{"grampsID":"I0238"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lestrange/Cyrille_II/index.html","id":"I0238","layout":"person","collection":["people","Harrypedia","Lestrange"],"title":"Cyrille Lestrange II","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lestrange/Cyrille_II/","label":"External-Cyrille_Lestrange_II","external":true},{"pageHref":null,"data":{"grampsID":"I0239"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0239index.html","id":"I0239","title":"Fulcran Lestrange ","body":"      <gramps-individual        personid=&quoteI0239&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0239","label":"External-Fulcran_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0239"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lestrange/Fulcran/index.html","id":"I0239","layout":"person","collection":["people","Harrypedia","Lestrange"],"title":"Fulcran Lestrange ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lestrange/Fulcran/","label":"External-Fulcran_Lestrange_","external":true},{"pageHref":null,"data":{"grampsID":"I0240"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0240index.html","id":"I0240","title":"Cedric Diggory ","body":"      <gramps-individual        personid=&quoteI0240&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0240","label":"External-Cedric_Diggory_","external":true},{"pageHref":null,"data":{"grampsID":"I0240"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Diggory/Cedric/index.html","id":"I0240","layout":"person","collection":["people","Harrypedia","Diggory"],"title":"Cedric Diggory ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Diggory/Cedric/","label":"External-Cedric_Diggory_","external":true},{"pageHref":null,"data":{"grampsID":"I0241"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0241index.html","id":"I0241","title":"Amos Diggory ","body":"      <gramps-individual        personid=&quoteI0241&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0241","label":"External-Amos_Diggory_","external":true},{"pageHref":null,"data":{"grampsID":"I0241"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Diggory/Amos/index.html","id":"I0241","layout":"person","collection":["people","Harrypedia","Diggory"],"title":"Amos Diggory ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Diggory/Amos/","label":"External-Amos_Diggory_","external":true},{"pageHref":null,"data":{"grampsID":"I0242"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0242index.html","id":"I0242","title":"Robert McGonagall ","body":"      <gramps-individual        personid=&quoteI0242&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0242","label":"External-Robert_McGonagall_","external":true},{"pageHref":null,"data":{"grampsID":"I0242"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/McGonagall/Robert/index.html","id":"I0242","layout":"person","collection":["people","Harrypedia","McGonagall"],"title":"Robert McGonagall ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/McGonagall/Robert/","label":"External-Robert_McGonagall_","external":true},{"pageHref":null,"data":{"grampsID":"I0243"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0243index.html","id":"I0243","title":"Isobel Ross ","body":"      <gramps-individual        personid=&quoteI0243&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0243","label":"External-Isobel_Ross_","external":true},{"pageHref":null,"data":{"grampsID":"I0243"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Ross/Isobel/index.html","id":"I0243","layout":"person","collection":["people","Harrypedia","Ross"],"title":"Isobel Ross ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Ross/Isobel/","label":"External-Isobel_Ross_","external":true},{"pageHref":null,"data":{"grampsID":"I0244"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0244index.html","id":"I0244","title":"Malcolm McGonagall ","body":"      <gramps-individual        personid=&quoteI0244&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0244","label":"External-Malcolm_McGonagall_","external":true},{"pageHref":null,"data":{"grampsID":"I0244"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/McGonagall/Malcolm/index.html","id":"I0244","layout":"person","collection":["people","Harrypedia","McGonagall"],"title":"Malcolm McGonagall ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/McGonagall/Malcolm/","label":"External-Malcolm_McGonagall_","external":true},{"pageHref":null,"data":{"grampsID":"I0245"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0245index.html","id":"I0245","title":"Robert McGonagall Junior","body":"      <gramps-individual        personid=&quoteI0245&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0245","label":"External-Robert_McGonagall_Junior","external":true},{"pageHref":null,"data":{"grampsID":"I0245"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/McGonagall/Robert_Junior/index.html","id":"I0245","layout":"person","collection":["people","Harrypedia","McGonagall"],"title":"Robert McGonagall Junior","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/McGonagall/Robert_Junior/","label":"External-Robert_McGonagall_Junior","external":true},{"pageHref":null,"data":{"grampsID":"I0246"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0246index.html","id":"I0246","title":"Horace Eugene Flaccus Slughorn ","body":"      <gramps-individual        personid=&quoteI0246&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0246","label":"External-Horace_Eugene_Flaccus_Slughorn_","external":true},{"pageHref":null,"data":{"grampsID":"I0246"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Slughorn/Horace%20Eugene%20Flaccus/index.html","id":"I0246","layout":"person","collection":["people","Harrypedia","Slughorn"],"title":"Horace Eugene Flaccus Slughorn ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Slughorn/Horace%20Eugene%20Flaccus/","label":"External-Horace_Eugene_Flaccus_Slughorn_","external":true},{"pageHref":null,"data":{"grampsID":"I0247"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0247index.html","id":"I0247","title":"Tom Marvolo Riddle ","body":"      <gramps-individual        personid=&quoteI0247&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0247","label":"External-Tom_Marvolo_Riddle_","external":true},{"pageHref":null,"data":{"grampsID":"I0247"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Riddle/Tom%20Marvolo/index.html","id":"I0247","layout":"person","collection":["people","Harrypedia","Riddle"],"title":"Tom Marvolo Riddle ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Riddle/Tom%20Marvolo/","label":"External-Tom_Marvolo_Riddle_","external":true},{"pageHref":null,"data":{"grampsID":"I0248"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0248index.html","id":"I0248","title":"Nobby Leach ","body":"      <gramps-individual        personid=&quoteI0248&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0248","label":"External-Nobby_Leach_","external":true},{"pageHref":null,"data":{"grampsID":"I0248"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Leach/Nobby/index.html","id":"I0248","layout":"person","collection":["people","Harrypedia","Leach"],"title":"Nobby Leach ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Leach/Nobby/","label":"External-Nobby_Leach_","external":true},{"pageHref":null,"data":{"grampsID":"I0249"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0249index.html","id":"I0249","title":"Tobias Snape ","body":"      <gramps-individual        personid=&quoteI0249&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0249","label":"External-Tobias_Snape_","external":true},{"pageHref":null,"data":{"grampsID":"I0249"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Snape/Tobias/index.html","id":"I0249","layout":"person","collection":["people","Harrypedia","Snape"],"title":"Tobias Snape ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Snape/Tobias/","label":"External-Tobias_Snape_","external":true},{"pageHref":null,"data":{"grampsID":"I0250"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0250index.html","id":"I0250","title":"Eileen Prince ","body":"      <gramps-individual        personid=&quoteI0250&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0250","label":"External-Eileen_Prince_","external":true},{"pageHref":null,"data":{"grampsID":"I0250"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Prince/Eileen/index.html","id":"I0250","layout":"person","collection":["people","Harrypedia","Prince"],"title":"Eileen Prince ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Prince/Eileen/","label":"External-Eileen_Prince_","external":true},{"pageHref":null,"data":{"grampsID":"I0251"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0251index.html","id":"I0251","title":"Rosalind Antigone Unknown ","body":"      <gramps-individual        personid=&quoteI0251&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0251","label":"External-Rosalind_Antigone_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0251"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Rosalind%20Antigone/index.html","id":"I0251","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Rosalind Antigone Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Rosalind%20Antigone/","label":"External-Rosalind_Antigone_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0252"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0252index.html","id":"I0252","title":"Rupert Brookstanton ","body":"      <gramps-individual        personid=&quoteI0252&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0252","label":"External-Rupert_Brookstanton_","external":true},{"pageHref":null,"data":{"grampsID":"I0252"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Brookstanton/Rupert/index.html","id":"I0252","layout":"person","collection":["people","Harrypedia","Brookstanton"],"title":"Rupert Brookstanton ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Brookstanton/Rupert/","label":"External-Rupert_Brookstanton_","external":true},{"pageHref":null,"data":{"grampsID":"I0253"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0253index.html","id":"I0253","title":"Sybill Trelawney ","body":"      <gramps-individual        personid=&quoteI0253&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0253","label":"External-Sybill_Trelawney_","external":true},{"pageHref":null,"data":{"grampsID":"I0253"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Trelawney/Sybill/index.html","id":"I0253","layout":"person","collection":["people","Harrypedia","Trelawney"],"title":"Sybill Trelawney ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Trelawney/Sybill/","label":"External-Sybill_Trelawney_","external":true},{"pageHref":null,"data":{"grampsID":"I0254"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0254index.html","id":"I0254","title":"Eldon Elsrickle ","body":"      <gramps-individual        personid=&quoteI0254&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0254","label":"External-Eldon_Elsrickle_","external":true},{"pageHref":null,"data":{"grampsID":"I0254"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Elsrickle/Eldon/index.html","id":"I0254","layout":"person","collection":["people","Harrypedia","Elsrickle"],"title":"Eldon Elsrickle ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Elsrickle/Eldon/","label":"External-Eldon_Elsrickle_","external":true},{"pageHref":null,"data":{"grampsID":"I0255"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0255index.html","id":"I0255","title":"Jarleth Hobart ","body":"      <gramps-individual        personid=&quoteI0255&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0255","label":"External-Jarleth_Hobart_","external":true},{"pageHref":null,"data":{"grampsID":"I0255"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Hobart/Jarleth/index.html","id":"I0255","layout":"person","collection":["people","Harrypedia","Hobart"],"title":"Jarleth Hobart ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Hobart/Jarleth/","label":"External-Jarleth_Hobart_","external":true},{"pageHref":null,"data":{"grampsID":"I0256"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0256index.html","id":"I0256","title":"Garvin Lügner ","body":"      <gramps-individual        personid=&quoteI0256&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0256","label":"External-Garvin_Lügner_","external":true},{"pageHref":null,"data":{"grampsID":"I0256"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/L%C3%BCgner/Garvin/index.html","id":"I0256","layout":"person","collection":["people","Harrypedia","Lügner"],"title":"Garvin Lügner ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/L%C3%BCgner/Garvin/","label":"External-Garvin_Lügner_","external":true},{"pageHref":null,"data":{"grampsID":"I0257"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0257index.html","id":"I0257","title":"Blagdon Blay ","body":"      <gramps-individual        personid=&quoteI0257&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0257","label":"External-Blagdon_Blay_","external":true},{"pageHref":null,"data":{"grampsID":"I0257"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Blay/Blagdon/index.html","id":"I0257","layout":"person","collection":["people","Harrypedia","Blay"],"title":"Blagdon Blay ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Blay/Blagdon/","label":"External-Blagdon_Blay_","external":true},{"pageHref":null,"data":{"grampsID":"I0258"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0258index.html","id":"I0258","title":"Malodora Grymm ","body":"      <gramps-individual        personid=&quoteI0258&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0258","label":"External-Malodora_Grymm_","external":true},{"pageHref":null,"data":{"grampsID":"I0258"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Grymm/Malodora/index.html","id":"I0258","layout":"person","collection":["people","Harrypedia","Grymm"],"title":"Malodora Grymm ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Grymm/Malodora/","label":"External-Malodora_Grymm_","external":true},{"pageHref":null,"data":{"grampsID":"I0259"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0259index.html","id":"I0259","title":"Eduardus Limette Black ","body":"      <gramps-individual        personid=&quoteI0259&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0259","label":"External-Eduardus_Limette_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0259"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Eduardus%20Limette/index.html","id":"I0259","layout":"person","collection":["people","Harrypedia","Black"],"title":"Eduardus Limette Black ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Black/Eduardus%20Limette/","label":"External-Eduardus_Limette_Black_","external":true},{"pageHref":null,"data":{"grampsID":"I0260"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0260index.html","id":"I0260","title":"Gellert Grindelwald ","body":"      <gramps-individual        personid=&quoteI0260&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0260","label":"External-Gellert_Grindelwald_","external":true},{"pageHref":null,"data":{"grampsID":"I0260"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Grindelwald/Gellert/index.html","id":"I0260","layout":"person","collection":["people","Harrypedia","Grindelwald"],"title":"Gellert Grindelwald ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Grindelwald/Gellert/","label":"External-Gellert_Grindelwald_","external":true},{"pageHref":null,"data":{"grampsID":"I0261"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0261index.html","id":"I0261","title":"Kendra Unknown ","body":"      <gramps-individual        personid=&quoteI0261&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0261","label":"External-Kendra_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0261"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Kendra/index.html","id":"I0261","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Kendra Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Kendra/","label":"External-Kendra_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0262"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0262index.html","id":"I0262","title":"Percival Dumbledore ","body":"      <gramps-individual        personid=&quoteI0262&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0262","label":"External-Percival_Dumbledore_","external":true},{"pageHref":null,"data":{"grampsID":"I0262"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dumbledore/Percival/index.html","id":"I0262","layout":"person","collection":["people","Harrypedia","Dumbledore"],"title":"Percival Dumbledore ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Dumbledore/Percival/","label":"External-Percival_Dumbledore_","external":true},{"pageHref":null,"data":{"grampsID":"I0263"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0263index.html","id":"I0263","title":"Ariana Dumbledore ","body":"      <gramps-individual        personid=&quoteI0263&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0263","label":"External-Ariana_Dumbledore_","external":true},{"pageHref":null,"data":{"grampsID":"I0263"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dumbledore/Ariana/index.html","id":"I0263","layout":"person","collection":["people","Harrypedia","Dumbledore"],"title":"Ariana Dumbledore ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Dumbledore/Ariana/","label":"External-Ariana_Dumbledore_","external":true},{"pageHref":null,"data":{"grampsID":"I0264"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0264index.html","id":"I0264","title":"Pomona Sprout ","body":"      <gramps-individual        personid=&quoteI0264&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0264","label":"External-Pomona_Sprout_","external":true},{"pageHref":null,"data":{"grampsID":"I0264"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Sprout/Pomona/index.html","id":"I0264","layout":"person","collection":["people","Harrypedia","Sprout"],"title":"Pomona Sprout ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Sprout/Pomona/","label":"External-Pomona_Sprout_","external":true},{"pageHref":null,"data":{"grampsID":"I0265"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0265index.html","id":"I0265","title":"Elphinstone Urquart ","body":"      <gramps-individual        personid=&quoteI0265&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0265","label":"External-Elphinstone_Urquart_","external":true},{"pageHref":null,"data":{"grampsID":"I0265"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Urquart/Elphinstone/index.html","id":"I0265","layout":"person","collection":["people","Harrypedia","Urquart"],"title":"Elphinstone Urquart ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Urquart/Elphinstone/","label":"External-Elphinstone_Urquart_","external":true},{"pageHref":null,"data":{"grampsID":"I0266"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0266index.html","id":"I0266","title":"Gwenog Jones ","body":"      <gramps-individual        personid=&quoteI0266&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0266","label":"External-Gwenog_Jones_","external":true},{"pageHref":null,"data":{"grampsID":"I0266"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Jones/Gwenog/index.html","id":"I0266","layout":"person","collection":["people","Harrypedia","Jones"],"title":"Gwenog Jones ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Jones/Gwenog/","label":"External-Gwenog_Jones_","external":true},{"pageHref":null,"data":{"grampsID":"I0267"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0267index.html","id":"I0267","title":"Mordicus Egg ","body":"      <gramps-individual        personid=&quoteI0267&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0267","label":"External-Mordicus_Egg_","external":true},{"pageHref":null,"data":{"grampsID":"I0267"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Egg/Mordicus/index.html","id":"I0267","layout":"person","collection":["people","Harrypedia","Egg"],"title":"Mordicus Egg ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Egg/Mordicus/","label":"External-Mordicus_Egg_","external":true},{"pageHref":null,"data":{"grampsID":"I0268"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0268index.html","id":"I0268","title":"Cantankerus Nott ","body":"      <gramps-individual        personid=&quoteI0268&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0268","label":"External-Cantankerus_Nott_","external":true},{"pageHref":null,"data":{"grampsID":"I0268"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Nott/Cantankerus/index.html","id":"I0268","layout":"person","collection":["people","Harrypedia","Nott"],"title":"Cantankerus Nott ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Nott/Cantankerus/","label":"External-Cantankerus_Nott_","external":true},{"pageHref":null,"data":{"grampsID":"I0269"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0269index.html","id":"I0269","title":"Godric Gryffindor ","body":"      <gramps-individual        personid=&quoteI0269&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0269","label":"External-Godric_Gryffindor_","external":true},{"pageHref":null,"data":{"grampsID":"I0269"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Gryffindor/Godric/index.html","id":"I0269","layout":"person","collection":["people","Harrypedia","Gryffindor"],"title":"Godric Gryffindor ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Gryffindor/Godric/","label":"External-Godric_Gryffindor_","external":true},{"pageHref":null,"data":{"grampsID":"I0270"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0270index.html","id":"I0270","title":"Silvanus Kettleburn ","body":"      <gramps-individual        personid=&quoteI0270&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0270","label":"External-Silvanus_Kettleburn_","external":true},{"pageHref":null,"data":{"grampsID":"I0270"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Kettleburn/Silvanus/index.html","id":"I0270","layout":"person","collection":["people","Harrypedia","Kettleburn"],"title":"Silvanus Kettleburn ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Kettleburn/Silvanus/","label":"External-Silvanus_Kettleburn_","external":true},{"pageHref":null,"data":{"grampsID":"I0271"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0271index.html","id":"I0271","title":"Gormlaith Gaunt ","body":"      <gramps-individual        personid=&quoteI0271&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0271","label":"External-Gormlaith_Gaunt_","external":true},{"pageHref":null,"data":{"grampsID":"I0271"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Gaunt/Gormlaith/index.html","id":"I0271","layout":"person","collection":["people","Harrypedia","Gaunt"],"title":"Gormlaith Gaunt ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Gaunt/Gormlaith/","label":"External-Gormlaith_Gaunt_","external":true},{"pageHref":null,"data":{"grampsID":"I0272"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0272index.html","id":"I0272","title":"Libatius Borage ","body":"      <gramps-individual        personid=&quoteI0272&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0272","label":"External-Libatius_Borage_","external":true},{"pageHref":null,"data":{"grampsID":"I0272"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Borage/Libatius/index.html","id":"I0272","layout":"person","collection":["people","Harrypedia","Borage"],"title":"Libatius Borage ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Borage/Libatius/","label":"External-Libatius_Borage_","external":true},{"pageHref":null,"data":{"grampsID":"I0273"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0273index.html","id":"I0273","title":"Adrian Tutley ","body":"      <gramps-individual        personid=&quoteI0273&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0273","label":"External-Adrian_Tutley_","external":true},{"pageHref":null,"data":{"grampsID":"I0273"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Tutley/Adrian/index.html","id":"I0273","layout":"person","collection":["people","Harrypedia","Tutley"],"title":"Adrian Tutley ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Tutley/Adrian/","label":"External-Adrian_Tutley_","external":true},{"pageHref":null,"data":{"grampsID":"I0274"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0274index.html","id":"I0274","title":"Orford Umbridge ","body":"      <gramps-individual        personid=&quoteI0274&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0274","label":"External-Orford_Umbridge_","external":true},{"pageHref":null,"data":{"grampsID":"I0274"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Umbridge/Orford/index.html","id":"I0274","layout":"person","collection":["people","Harrypedia","Umbridge"],"title":"Orford Umbridge ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Umbridge/Orford/","label":"External-Orford_Umbridge_","external":true},{"pageHref":null,"data":{"grampsID":"I0275"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0275index.html","id":"I0275","title":"Ellen Cracknell ","body":"      <gramps-individual        personid=&quoteI0275&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0275","label":"External-Ellen_Cracknell_","external":true},{"pageHref":null,"data":{"grampsID":"I0275"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Cracknell/Ellen/index.html","id":"I0275","layout":"person","collection":["people","Harrypedia","Cracknell"],"title":"Ellen Cracknell ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Cracknell/Ellen/","label":"External-Ellen_Cracknell_","external":true},{"pageHref":null,"data":{"grampsID":"I0276"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0276index.html","id":"I0276","title":"Rolf Scamander ","body":"      <gramps-individual        personid=&quoteI0276&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0276","label":"External-Rolf_Scamander_","external":true},{"pageHref":null,"data":{"grampsID":"I0276"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Scamander/Rolf/index.html","id":"I0276","layout":"person","collection":["people","Harrypedia","Scamander"],"title":"Rolf Scamander ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Scamander/Rolf/","label":"External-Rolf_Scamander_","external":true},{"pageHref":null,"data":{"grampsID":"I0277"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0277index.html","id":"I0277","title":"Peter Pettigrew ","body":"      <gramps-individual        personid=&quoteI0277&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0277","label":"External-Peter_Pettigrew_","external":true},{"pageHref":null,"data":{"grampsID":"I0277"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Pettigrew/Peter/index.html","id":"I0277","layout":"person","collection":["people","Harrypedia","Pettigrew"],"title":"Peter Pettigrew ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Pettigrew/Peter/","label":"External-Peter_Pettigrew_","external":true},{"pageHref":null,"data":{"grampsID":"I0278"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0278index.html","id":"I0278","title":"Kingsley Shacklebolt ","body":"      <gramps-individual        personid=&quoteI0278&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0278","label":"External-Kingsley_Shacklebolt_","external":true},{"pageHref":null,"data":{"grampsID":"I0279"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0279index.html","id":"I0279","title":"Poppy Unknown ","body":"      <gramps-individual        personid=&quoteI0279&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0279","label":"External-Poppy_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0279"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Poppy/index.html","id":"I0279","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Poppy Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Poppy/","label":"External-Poppy_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0280"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0280index.html","id":"I0280","title":"Millicent Unknown ","body":"      <gramps-individual        personid=&quoteI0280&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0280","label":"External-Millicent_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0280"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Millicent/index.html","id":"I0280","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Millicent Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Millicent/","label":"External-Millicent_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0281"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0281index.html","id":"I0281","title":"Caradoc Dearborn ","body":"      <gramps-individual        personid=&quoteI0281&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0281","label":"External-Caradoc_Dearborn_","external":true},{"pageHref":null,"data":{"grampsID":"I0281"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dearborn/Caradoc/index.html","id":"I0281","layout":"person","collection":["people","Harrypedia","Dearborn"],"title":"Caradoc Dearborn ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Dearborn/Caradoc/","label":"External-Caradoc_Dearborn_","external":true},{"pageHref":null,"data":{"grampsID":"I0282"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0282index.html","id":"I0282","title":"Marlene MkKinnon ","body":"      <gramps-individual        personid=&quoteI0282&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0282","label":"External-Marlene_MkKinnon_","external":true},{"pageHref":null,"data":{"grampsID":"I0282"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/MkKinnon/Marlene/index.html","id":"I0282","layout":"person","collection":["people","Harrypedia","MkKinnon"],"title":"Marlene MkKinnon ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/MkKinnon/Marlene/","label":"External-Marlene_MkKinnon_","external":true},{"pageHref":null,"data":{"grampsID":"I0283"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0283index.html","id":"I0283","title":"Emmeline Unknown ","body":"      <gramps-individual        personid=&quoteI0283&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0283","label":"External-Emmeline_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0283"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Emmeline/index.html","id":"I0283","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Emmeline Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Emmeline/","label":"External-Emmeline_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0284"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0284index.html","id":"I0284","title":"Elphias Doge ","body":"      <gramps-individual        personid=&quoteI0284&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0284","label":"External-Elphias_Doge_","external":true},{"pageHref":null,"data":{"grampsID":"I0284"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Doge/Elphias/index.html","id":"I0284","layout":"person","collection":["people","Harrypedia","Doge"],"title":"Elphias Doge ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Doge/Elphias/","label":"External-Elphias_Doge_","external":true},{"pageHref":null,"data":{"grampsID":"I0285"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0285index.html","id":"I0285","title":"Dorcas Unknown ","body":"      <gramps-individual        personid=&quoteI0285&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0285","label":"External-Dorcas_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0285"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Dorcas/index.html","id":"I0285","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Dorcas Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Dorcas/","label":"External-Dorcas_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0286"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0286index.html","id":"I0286","title":"Cho Chang ","body":"      <gramps-individual        personid=&quoteI0286&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0286","label":"External-Cho_Chang_","external":true},{"pageHref":null,"data":{"grampsID":"I0286"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Chang/Cho/index.html","id":"I0286","layout":"person","collection":["people","Harrypedia","Chang"],"title":"Cho Chang ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Chang/Cho/","label":"External-Cho_Chang_","external":true},{"pageHref":null,"data":{"grampsID":"I0287"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0287index.html","id":"I0287","title":"Alicia Spinnet ","body":"      <gramps-individual        personid=&quoteI0287&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0287","label":"External-Alicia_Spinnet_","external":true},{"pageHref":null,"data":{"grampsID":"I0287"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Spinnet/Alicia/index.html","id":"I0287","layout":"person","collection":["people","Harrypedia","Spinnet"],"title":"Alicia Spinnet ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Spinnet/Alicia/","label":"External-Alicia_Spinnet_","external":true},{"pageHref":null,"data":{"grampsID":"I0288"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0288index.html","id":"I0288","title":"Marcus Flint ","body":"      <gramps-individual        personid=&quoteI0288&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0288","label":"External-Marcus_Flint_","external":true},{"pageHref":null,"data":{"grampsID":"I0288"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Flint/Marcus/index.html","id":"I0288","layout":"person","collection":["people","Harrypedia","Flint"],"title":"Marcus Flint ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Flint/Marcus/","label":"External-Marcus_Flint_","external":true},{"pageHref":null,"data":{"grampsID":"I0289"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0289index.html","id":"I0289","title":"Colin Creevey ","body":"      <gramps-individual        personid=&quoteI0289&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0289","label":"External-Colin_Creevey_","external":true},{"pageHref":null,"data":{"grampsID":"I0289"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Creevey/Colin/index.html","id":"I0289","layout":"person","collection":["people","Harrypedia","Creevey"],"title":"Colin Creevey ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Creevey/Colin/","label":"External-Colin_Creevey_","external":true},{"pageHref":null,"data":{"grampsID":"I0290"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0290index.html","id":"I0290","title":"Levina Unknown ","body":"      <gramps-individual        personid=&quoteI0290&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0290","label":"External-Levina_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0290"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Levina/index.html","id":"I0290","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Levina Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Levina/","label":"External-Levina_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0291"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0291index.html","id":"I0291","title":"Gabrielle Delacour ","body":"      <gramps-individual        personid=&quoteI0291&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0291","label":"External-Gabrielle_Delacour_","external":true},{"pageHref":null,"data":{"grampsID":"I0291"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Delacour/Gabrielle/index.html","id":"I0291","layout":"person","collection":["people","Harrypedia","Delacour"],"title":"Gabrielle Delacour ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Delacour/Gabrielle/","label":"External-Gabrielle_Delacour_","external":true},{"pageHref":null,"data":{"grampsID":"I0292"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0292index.html","id":"I0292","title":" Patil ","body":"      <gramps-individual        personid=&quoteI0292&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0292","label":"External-_Patil_","external":true},{"pageHref":null,"data":{"grampsID":"I0292"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Patil/I0292/index.html","id":"I0292","layout":"person","collection":["people","Harrypedia","Patil"],"title":" Patil ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Patil/I0292/","label":"External-_Patil_","external":true},{"pageHref":null,"data":{"grampsID":"I0293"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0293index.html","id":"I0293","title":"Filus Flitwick ","body":"      <gramps-individual        personid=&quoteI0293&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0293","label":"External-Filus_Flitwick_","external":true},{"pageHref":null,"data":{"grampsID":"I0294"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0294index.html","id":"I0294","title":"Queenie Goldstein ","body":"      <gramps-individual        personid=&quoteI0294&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0294","label":"External-Queenie_Goldstein_","external":true},{"pageHref":null,"data":{"grampsID":"I0294"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Goldstein/Queenie/index.html","id":"I0294","layout":"person","collection":["people","Harrypedia","Goldstein"],"title":"Queenie Goldstein ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Goldstein/Queenie/","label":"External-Queenie_Goldstein_","external":true},{"pageHref":null,"data":{"grampsID":"I0295"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0295index.html","id":"I0295","title":"Edward Remus Lupin ","body":"      <gramps-individual        personid=&quoteI0295&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0295","label":"External-Edward_Remus_Lupin_","external":true},{"pageHref":null,"data":{"grampsID":"I0295"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lupin/Edward%20Remus/index.html","id":"I0295","layout":"person","collection":["people","Harrypedia","Lupin"],"title":"Edward Remus Lupin ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lupin/Edward%20Remus/","label":"External-Edward_Remus_Lupin_","external":true},{"pageHref":null,"data":{"grampsID":"I0296"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0296index.html","id":"I0296","title":"Cormac McLaggen ","body":"      <gramps-individual        personid=&quoteI0296&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0296","label":"External-Cormac_McLaggen_","external":true},{"pageHref":null,"data":{"grampsID":"I0296"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/McLaggen/Cormac/index.html","id":"I0296","layout":"person","collection":["people","Harrypedia","McLaggen"],"title":"Cormac McLaggen ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/McLaggen/Cormac/","label":"External-Cormac_McLaggen_","external":true},{"pageHref":null,"data":{"grampsID":"I0298"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0298index.html","id":"I0298","title":"Orabella Unknown ","body":"      <gramps-individual        personid=&quoteI0298&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0298","label":"External-Orabella_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0298"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Orabella/index.html","id":"I0298","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Orabella Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Orabella/","label":"External-Orabella_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0299"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0299index.html","id":"I0299","title":"Salazar Slytherin ","body":"      <gramps-individual        personid=&quoteI0299&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0299","label":"External-Salazar_Slytherin_","external":true},{"pageHref":null,"data":{"grampsID":"I0299"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Slytherin/Salazar/index.html","id":"I0299","layout":"person","collection":["people","Harrypedia","Slytherin"],"title":"Salazar Slytherin ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Slytherin/Salazar/","label":"External-Salazar_Slytherin_","external":true},{"pageHref":null,"data":{"grampsID":"I0300"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0300index.html","id":"I0300","title":"Rita Unknown ","body":"      <gramps-individual        personid=&quoteI0300&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0300","label":"External-Rita_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0300"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Rita/index.html","id":"I0300","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Rita Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Rita/","label":"External-Rita_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0301"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0301index.html","id":"I0301","title":"Cuthbert Binns ","body":"      <gramps-individual        personid=&quoteI0301&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0301","label":"External-Cuthbert_Binns_","external":true},{"pageHref":null,"data":{"grampsID":"I0302"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0302index.html","id":"I0302","title":"Gilderoy Lockhart ","body":"      <gramps-individual        personid=&quoteI0302&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0302","label":"External-Gilderoy_Lockhart_","external":true},{"pageHref":null,"data":{"grampsID":"I0302"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lockhart/Gilderoy/index.html","id":"I0302","layout":"person","collection":["people","Harrypedia","Lockhart"],"title":"Gilderoy Lockhart ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Lockhart/Gilderoy/","label":"External-Gilderoy_Lockhart_","external":true},{"pageHref":null,"data":{"grampsID":"I0303"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0303index.html","id":"I0303","title":" Riddle ","body":"      <gramps-individual        personid=&quoteI0303&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0303","label":"External-_Riddle_","external":true},{"pageHref":null,"data":{"grampsID":"I0303"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Riddle/I0303/index.html","id":"I0303","layout":"person","collection":["people","Harrypedia","Riddle"],"title":" Riddle ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Riddle/I0303/","label":"External-_Riddle_","external":true},{"pageHref":null,"data":{"grampsID":"I0304"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0304index.html","id":"I0304","title":"Merope Gaunt ","body":"      <gramps-individual        personid=&quoteI0304&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0304","label":"External-Merope_Gaunt_","external":true},{"pageHref":null,"data":{"grampsID":"I0305"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0305index.html","id":"I0305","title":"Marvolo Gaunt ","body":"      <gramps-individual        personid=&quoteI0305&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0305","label":"External-Marvolo_Gaunt_","external":true},{"pageHref":null,"data":{"grampsID":"I0305"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Gaunt/Marvolo/index.html","id":"I0305","layout":"person","collection":["people","Harrypedia","Gaunt"],"title":"Marvolo Gaunt ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Gaunt/Marvolo/","label":"External-Marvolo_Gaunt_","external":true},{"pageHref":null,"data":{"grampsID":"I0306"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0306index.html","id":"I0306","title":"Morfin Gaunt ","body":"      <gramps-individual        personid=&quoteI0306&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0306","label":"External-Morfin_Gaunt_","external":true},{"pageHref":null,"data":{"grampsID":"I0306"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Gaunt/Morfin/index.html","id":"I0306","layout":"person","collection":["people","Harrypedia","Gaunt"],"title":"Morfin Gaunt ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Gaunt/Morfin/","label":"External-Morfin_Gaunt_","external":true},{"pageHref":null,"data":{"grampsID":"I0307"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0307index.html","id":"I0307","title":"Lucian Bole ","body":"      <gramps-individual        personid=&quoteI0307&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0307","label":"External-Lucian_Bole_","external":true},{"pageHref":null,"data":{"grampsID":"I0307"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Bole/Lucian/index.html","id":"I0307","layout":"person","collection":["people","Harrypedia","Bole"],"title":"Lucian Bole ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Bole/Lucian/","label":"External-Lucian_Bole_","external":true},{"pageHref":null,"data":{"grampsID":"I0308"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0308index.html","id":"I0308","title":"Peregrine Derrick ","body":"      <gramps-individual        personid=&quoteI0308&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0308","label":"External-Peregrine_Derrick_","external":true},{"pageHref":null,"data":{"grampsID":"I0308"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Derrick/Peregrine/index.html","id":"I0308","layout":"person","collection":["people","Harrypedia","Derrick"],"title":"Peregrine Derrick ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Derrick/Peregrine/","label":"External-Peregrine_Derrick_","external":true},{"pageHref":null,"data":{"grampsID":"I0309"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0309index.html","id":"I0309","title":"Elora Dunn ","body":"      <gramps-individual        personid=&quoteI0309&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0309","label":"External-Elora_Dunn_","external":true},{"pageHref":null,"data":{"grampsID":"I0309"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dunn/Elora/index.html","id":"I0309","layout":"person","collection":["people","Harrypedia","Dunn"],"title":"Elora Dunn ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Dunn/Elora/","label":"External-Elora_Dunn_","external":true},{"pageHref":null,"data":{"grampsID":"I0310"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0310index.html","id":"I0310","title":"Beatrice Haywood ","body":"      <gramps-individual        personid=&quoteI0310&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0310","label":"External-Beatrice_Haywood_","external":true},{"pageHref":null,"data":{"grampsID":"I0310"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Haywood/Beatrice/index.html","id":"I0310","layout":"person","collection":["people","Harrypedia","Haywood"],"title":"Beatrice Haywood ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Haywood/Beatrice/","label":"External-Beatrice_Haywood_","external":true},{"pageHref":null,"data":{"grampsID":"I0311"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0311index.html","id":"I0311","title":"Penelope Clearwater ","body":"      <gramps-individual        personid=&quoteI0311&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0311","label":"External-Penelope_Clearwater_","external":true},{"pageHref":null,"data":{"grampsID":"I0311"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Clearwater/Penelope/index.html","id":"I0311","layout":"person","collection":["people","Harrypedia","Clearwater"],"title":"Penelope Clearwater ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Clearwater/Penelope/","label":"External-Penelope_Clearwater_","external":true},{"pageHref":null,"data":{"grampsID":"I0312"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0312index.html","id":"I0312","title":"Oliver Wood ","body":"      <gramps-individual        personid=&quoteI0312&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0312","label":"External-Oliver_Wood_","external":true},{"pageHref":null,"data":{"grampsID":"I0312"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Wood/Oliver/index.html","id":"I0312","layout":"person","collection":["people","Harrypedia","Wood"],"title":"Oliver Wood ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Wood/Oliver/","label":"External-Oliver_Wood_","external":true},{"pageHref":null,"data":{"grampsID":"I0313"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0313index.html","id":"I0313","title":"Angelina Johnson ","body":"      <gramps-individual        personid=&quoteI0313&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0313","label":"External-Angelina_Johnson_","external":true},{"pageHref":null,"data":{"grampsID":"I0313"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Johnson/Angelina/index.html","id":"I0313","layout":"person","collection":["people","Harrypedia","Johnson"],"title":"Angelina Johnson ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Johnson/Angelina/","label":"External-Angelina_Johnson_","external":true},{"pageHref":null,"data":{"grampsID":"I0314"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0314index.html","id":"I0314","title":"Lee Jordan ","body":"      <gramps-individual        personid=&quoteI0314&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0314","label":"External-Lee_Jordan_","external":true},{"pageHref":null,"data":{"grampsID":"I0314"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Jordan/Lee/index.html","id":"I0314","layout":"person","collection":["people","Harrypedia","Jordan"],"title":"Lee Jordan ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Jordan/Lee/","label":"External-Lee_Jordan_","external":true},{"pageHref":null,"data":{"grampsID":"I0315"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0315index.html","id":"I0315","title":"Patricia Stimpson ","body":"      <gramps-individual        personid=&quoteI0315&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0315","label":"External-Patricia_Stimpson_","external":true},{"pageHref":null,"data":{"grampsID":"I0315"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Stimpson/Patricia/index.html","id":"I0315","layout":"person","collection":["people","Harrypedia","Stimpson"],"title":"Patricia Stimpson ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Stimpson/Patricia/","label":"External-Patricia_Stimpson_","external":true},{"pageHref":null,"data":{"grampsID":"I0316"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0316index.html","id":"I0316","title":"Kenneth Towler ","body":"      <gramps-individual        personid=&quoteI0316&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0316","label":"External-Kenneth_Towler_","external":true},{"pageHref":null,"data":{"grampsID":"I0316"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Towler/Kenneth/index.html","id":"I0316","layout":"person","collection":["people","Harrypedia","Towler"],"title":"Kenneth Towler ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Towler/Kenneth/","label":"External-Kenneth_Towler_","external":true},{"pageHref":null,"data":{"grampsID":"I0317"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0317index.html","id":"I0317","title":"Leanne Unknown ","body":"      <gramps-individual        personid=&quoteI0317&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0317","label":"External-Leanne_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0317"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Leanne/index.html","id":"I0317","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Leanne Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Leanne/","label":"External-Leanne_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0318"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0318index.html","id":"I0318","title":"Marcus Belby ","body":"      <gramps-individual        personid=&quoteI0318&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0318","label":"External-Marcus_Belby_","external":true},{"pageHref":null,"data":{"grampsID":"I0318"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Belby/Marcus/index.html","id":"I0318","layout":"person","collection":["people","Harrypedia","Belby"],"title":"Marcus Belby ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Belby/Marcus/","label":"External-Marcus_Belby_","external":true},{"pageHref":null,"data":{"grampsID":"I0319"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0319index.html","id":"I0319","title":" Bell ","body":"      <gramps-individual        personid=&quoteI0319&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0319","label":"External-_Bell_","external":true},{"pageHref":null,"data":{"grampsID":"I0319"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Bell/I0319/index.html","id":"I0319","layout":"person","collection":["people","Harrypedia","Bell"],"title":" Bell ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Bell/I0319/","label":"External-_Bell_","external":true},{"pageHref":null,"data":{"grampsID":"I0320"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0320index.html","id":"I0320","title":" Carmichael ","body":"      <gramps-individual        personid=&quoteI0320&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0320","label":"External-_Carmichael_","external":true},{"pageHref":null,"data":{"grampsID":"I0320"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Carmichael/I0320/index.html","id":"I0320","layout":"person","collection":["people","Harrypedia","Carmichael"],"title":" Carmichael ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Carmichael/I0320/","label":"External-_Carmichael_","external":true},{"pageHref":null,"data":{"grampsID":"I0321"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0321index.html","id":"I0321","title":" Fawcett ","body":"      <gramps-individual        personid=&quoteI0321&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0321","label":"External-_Fawcett_","external":true},{"pageHref":null,"data":{"grampsID":"I0321"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Fawcett/I0321/index.html","id":"I0321","layout":"person","collection":["people","Harrypedia","Fawcett"],"title":" Fawcett ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Fawcett/I0321/","label":"External-_Fawcett_","external":true},{"pageHref":null,"data":{"grampsID":"I0322"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0322index.html","id":"I0322","title":" Stebbins ","body":"      <gramps-individual        personid=&quoteI0322&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0322","label":"External-_Stebbins_","external":true},{"pageHref":null,"data":{"grampsID":"I0322"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Stebbins/I0322/index.html","id":"I0322","layout":"person","collection":["people","Harrypedia","Stebbins"],"title":" Stebbins ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Stebbins/I0322/","label":"External-_Stebbins_","external":true},{"pageHref":null,"data":{"grampsID":"I0323"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0323index.html","id":"I0323","title":" Summers ","body":"      <gramps-individual        personid=&quoteI0323&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0323","label":"External-_Summers_","external":true},{"pageHref":null,"data":{"grampsID":"I0323"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Summers/I0323/index.html","id":"I0323","layout":"person","collection":["people","Harrypedia","Summers"],"title":" Summers ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Summers/I0323/","label":"External-_Summers_","external":true},{"pageHref":null,"data":{"grampsID":"I0324"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0324index.html","id":"I0324","title":" Harper ","body":"      <gramps-individual        personid=&quoteI0324&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0324","label":"External-_Harper_","external":true},{"pageHref":null,"data":{"grampsID":"I0324"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Harper/I0324/index.html","id":"I0324","layout":"person","collection":["people","Harrypedia","Harper"],"title":" Harper ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Harper/I0324/","label":"External-_Harper_","external":true},{"pageHref":null,"data":{"grampsID":"I0325"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0325index.html","id":"I0325","title":"Romilda Vane ","body":"      <gramps-individual        personid=&quoteI0325&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0325","label":"External-Romilda_Vane_","external":true},{"pageHref":null,"data":{"grampsID":"I0325"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Vane/Romilda/index.html","id":"I0325","layout":"person","collection":["people","Harrypedia","Vane"],"title":"Romilda Vane ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Vane/Romilda/","label":"External-Romilda_Vane_","external":true},{"pageHref":null,"data":{"grampsID":"I0326"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0326index.html","id":"I0326","title":"Stewart Ackerley ","body":"      <gramps-individual        personid=&quoteI0326&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0326","label":"External-Stewart_Ackerley_","external":true},{"pageHref":null,"data":{"grampsID":"I0326"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Ackerley/Stewart/index.html","id":"I0326","layout":"person","collection":["people","Harrypedia","Ackerley"],"title":"Stewart Ackerley ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Ackerley/Stewart/","label":"External-Stewart_Ackerley_","external":true},{"pageHref":null,"data":{"grampsID":"I0327"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0327index.html","id":"I0327","title":"Malcolm Baddock ","body":"      <gramps-individual        personid=&quoteI0327&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0327","label":"External-Malcolm_Baddock_","external":true},{"pageHref":null,"data":{"grampsID":"I0327"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Baddock/Malcolm/index.html","id":"I0327","layout":"person","collection":["people","Harrypedia","Baddock"],"title":"Malcolm Baddock ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Baddock/Malcolm/","label":"External-Malcolm_Baddock_","external":true},{"pageHref":null,"data":{"grampsID":"I0328"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0328index.html","id":"I0328","title":"Malcolm Branstone ","body":"      <gramps-individual        personid=&quoteI0328&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0328","label":"External-Malcolm_Branstone_","external":true},{"pageHref":null,"data":{"grampsID":"I0328"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Branstone/Malcolm/index.html","id":"I0328","layout":"person","collection":["people","Harrypedia","Branstone"],"title":"Malcolm Branstone ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Branstone/Malcolm/","label":"External-Malcolm_Branstone_","external":true},{"pageHref":null,"data":{"grampsID":"I0329"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0329index.html","id":"I0329","title":"Owen Cauldwell ","body":"      <gramps-individual        personid=&quoteI0329&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0329","label":"External-Owen_Cauldwell_","external":true},{"pageHref":null,"data":{"grampsID":"I0329"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Cauldwell/Owen/index.html","id":"I0329","layout":"person","collection":["people","Harrypedia","Cauldwell"],"title":"Owen Cauldwell ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Cauldwell/Owen/","label":"External-Owen_Cauldwell_","external":true},{"pageHref":null,"data":{"grampsID":"I0330"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0330index.html","id":"I0330","title":"Dennis Creevey ","body":"      <gramps-individual        personid=&quoteI0330&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0330","label":"External-Dennis_Creevey_","external":true},{"pageHref":null,"data":{"grampsID":"I0330"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Creevey/Dennis/index.html","id":"I0330","layout":"person","collection":["people","Harrypedia","Creevey"],"title":"Dennis Creevey ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Creevey/Dennis/","label":"External-Dennis_Creevey_","external":true},{"pageHref":null,"data":{"grampsID":"I0331"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0331index.html","id":"I0331","title":"Emma Dobbs ","body":"      <gramps-individual        personid=&quoteI0331&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0331","label":"External-Emma_Dobbs_","external":true},{"pageHref":null,"data":{"grampsID":"I0331"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dobbs/Emma/index.html","id":"I0331","layout":"person","collection":["people","Harrypedia","Dobbs"],"title":"Emma Dobbs ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Dobbs/Emma/","label":"External-Emma_Dobbs_","external":true},{"pageHref":null,"data":{"grampsID":"I0332"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0332index.html","id":"I0332","title":"Natalie MacDonald ","body":"      <gramps-individual        personid=&quoteI0332&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0332","label":"External-Natalie_MacDonald_","external":true},{"pageHref":null,"data":{"grampsID":"I0332"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/MacDonald/Natalie/index.html","id":"I0332","layout":"person","collection":["people","Harrypedia","MacDonald"],"title":"Natalie MacDonald ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/MacDonald/Natalie/","label":"External-Natalie_MacDonald_","external":true},{"pageHref":null,"data":{"grampsID":"I0333"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0333index.html","id":"I0333","title":"Laura Madley ","body":"      <gramps-individual        personid=&quoteI0333&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0333","label":"External-Laura_Madley_","external":true},{"pageHref":null,"data":{"grampsID":"I0333"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Madley/Laura/index.html","id":"I0333","layout":"person","collection":["people","Harrypedia","Madley"],"title":"Laura Madley ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Madley/Laura/","label":"External-Laura_Madley_","external":true},{"pageHref":null,"data":{"grampsID":"I0334"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0334index.html","id":"I0334","title":"Graham Pritchard ","body":"      <gramps-individual        personid=&quoteI0334&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0334","label":"External-Graham_Pritchard_","external":true},{"pageHref":null,"data":{"grampsID":"I0334"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Pritchard/Graham/index.html","id":"I0334","layout":"person","collection":["people","Harrypedia","Pritchard"],"title":"Graham Pritchard ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Pritchard/Graham/","label":"External-Graham_Pritchard_","external":true},{"pageHref":null,"data":{"grampsID":"I0335"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0335index.html","id":"I0335","title":"James Peaks ","body":"      <gramps-individual        personid=&quoteI0335&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0335","label":"External-James_Peaks_","external":true},{"pageHref":null,"data":{"grampsID":"I0335"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Peaks/James/index.html","id":"I0335","layout":"person","collection":["people","Harrypedia","Peaks"],"title":"James Peaks ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Peaks/James/","label":"External-James_Peaks_","external":true},{"pageHref":null,"data":{"grampsID":"I0336"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0336index.html","id":"I0336","title":"Orla Quirke ","body":"      <gramps-individual        personid=&quoteI0336&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0336","label":"External-Orla_Quirke_","external":true},{"pageHref":null,"data":{"grampsID":"I0336"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Quirke/Orla/index.html","id":"I0336","layout":"person","collection":["people","Harrypedia","Quirke"],"title":"Orla Quirke ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Quirke/Orla/","label":"External-Orla_Quirke_","external":true},{"pageHref":null,"data":{"grampsID":"I0337"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0337index.html","id":"I0337","title":"Kevin Whitby ","body":"      <gramps-individual        personid=&quoteI0337&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0337","label":"External-Kevin_Whitby_","external":true},{"pageHref":null,"data":{"grampsID":"I0337"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Whitby/Kevin/index.html","id":"I0337","layout":"person","collection":["people","Harrypedia","Whitby"],"title":"Kevin Whitby ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Whitby/Kevin/","label":"External-Kevin_Whitby_","external":true},{"pageHref":null,"data":{"grampsID":"I0338"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0338index.html","id":"I0338","title":"Nigel Wolpert ","body":"      <gramps-individual        personid=&quoteI0338&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0338","label":"External-Nigel_Wolpert_","external":true},{"pageHref":null,"data":{"grampsID":"I0338"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Wolpert/Nigel/index.html","id":"I0338","layout":"person","collection":["people","Harrypedia","Wolpert"],"title":"Nigel Wolpert ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Wolpert/Nigel/","label":"External-Nigel_Wolpert_","external":true},{"pageHref":null,"data":{"grampsID":"I0339"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0339index.html","id":"I0339","title":"Alys Unknown ","body":"      <gramps-individual        personid=&quoteI0339&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0339","label":"External-Alys_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0339"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/Alys/index.html","id":"I0339","layout":"person","collection":["people","Harrypedia","Unknown"],"title":"Alys Unknown ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Unknown/Alys/","label":"External-Alys_Unknown_","external":true},{"pageHref":null,"data":{"grampsID":"I0340"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0340index.html","id":"I0340","title":"Eloise Midgen ","body":"      <gramps-individual        personid=&quoteI0340&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0340","label":"External-Eloise_Midgen_","external":true},{"pageHref":null,"data":{"grampsID":"I0340"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Midgen/Eloise/index.html","id":"I0340","layout":"person","collection":["people","Harrypedia","Midgen"],"title":"Eloise Midgen ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Midgen/Eloise/","label":"External-Eloise_Midgen_","external":true},{"pageHref":null,"data":{"grampsID":"I0341"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0341index.html","id":"I0341","title":"Graham Montague ","body":"      <gramps-individual        personid=&quoteI0341&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0341","label":"External-Graham_Montague_","external":true},{"pageHref":null,"data":{"grampsID":"I0341"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Montague/Graham/index.html","id":"I0341","layout":"person","collection":["people","Harrypedia","Montague"],"title":"Graham Montague ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Montague/Graham/","label":"External-Graham_Montague_","external":true},{"pageHref":null,"data":{"grampsID":"I0342"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/people/I0342index.html","id":"I0342","title":"Demelza Robins ","body":"      <gramps-individual        personid=&quoteI0342&quote      ></gramps-individual>    ","route":"/api/gramps/people/I0342","label":"External-Demelza_Robins_","external":true},{"pageHref":null,"data":{"grampsID":"I0342"},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Robins/Demelza/index.html","id":"I0342","layout":"person","collection":["people","Harrypedia","Robins"],"title":"Demelza Robins ","body":"<span>This is a placeholder page</span>","route":"/Harrypedia/people/Robins/Demelza/","label":"External-Demelza_Robins_","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Potterindex.html","id":"Potter","title":"Potter","label":"External-Potter-fragment","route":"/api/gramps/families/Potter","body":"      <family-listing        familyname=&quotePotter&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Potter","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Potter/index.html","id":"Potter","title":"Potter","label":"External-Potter-fragment","route":"/Harrypedia/people/Potter/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Potter</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Evansindex.html","id":"Evans","title":"Evans","label":"External-Evans-fragment","route":"/api/gramps/families/Evans","body":"      <family-listing        familyname=&quoteEvans&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Evans","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Evans/index.html","id":"Evans","title":"Evans","label":"External-Evans-fragment","route":"/Harrypedia/people/Evans/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Evans</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Unknownindex.html","id":"Unknown","title":"Unknown","label":"External-Unknown-fragment","route":"/api/gramps/families/Unknown","body":"      <family-listing        familyname=&quoteUnknown&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Unknown","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Unknown/index.html","id":"Unknown","title":"Unknown","label":"External-Unknown-fragment","route":"/Harrypedia/people/Unknown/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Unknown</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Blackindex.html","id":"Black","title":"Black","label":"External-Black-fragment","route":"/api/gramps/families/Black","body":"      <family-listing        familyname=&quoteBlack&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Black","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/index.html","id":"Black","title":"Black","label":"External-Black-fragment","route":"/Harrypedia/people/Black/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Black</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Gampindex.html","id":"Gamp","title":"Gamp","label":"External-Gamp-fragment","route":"/api/gramps/families/Gamp","body":"      <family-listing        familyname=&quoteGamp&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Gamp","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Gamp/index.html","id":"Gamp","title":"Gamp","label":"External-Gamp-fragment","route":"/Harrypedia/people/Gamp/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Gamp</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Macmillanindex.html","id":"Macmillan","title":"Macmillan","label":"External-Macmillan-fragment","route":"/api/gramps/families/Macmillan","body":"      <family-listing        familyname=&quoteMacmillan&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Macmillan","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Macmillan/index.html","id":"Macmillan","title":"Macmillan","label":"External-Macmillan-fragment","route":"/Harrypedia/people/Macmillan/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Macmillan</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Flintindex.html","id":"Flint","title":"Flint","label":"External-Flint-fragment","route":"/api/gramps/families/Flint","body":"      <family-listing        familyname=&quoteFlint&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Flint","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Flint/index.html","id":"Flint","title":"Flint","label":"External-Flint-fragment","route":"/Harrypedia/people/Flint/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Flint</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Bulstrodeindex.html","id":"Bulstrode","title":"Bulstrode","label":"External-Bulstrode-fragment","route":"/api/gramps/families/Bulstrode","body":"      <family-listing        familyname=&quoteBulstrode&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Bulstrode","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Bulstrode/index.html","id":"Bulstrode","title":"Bulstrode","label":"External-Bulstrode-fragment","route":"/Harrypedia/people/Bulstrode/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Bulstrode</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Crabbeindex.html","id":"Crabbe","title":"Crabbe","label":"External-Crabbe-fragment","route":"/api/gramps/families/Crabbe","body":"      <family-listing        familyname=&quoteCrabbe&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Crabbe","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Crabbe/index.html","id":"Crabbe","title":"Crabbe","label":"External-Crabbe-fragment","route":"/Harrypedia/people/Crabbe/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Crabbe</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Rosierindex.html","id":"Rosier","title":"Rosier","label":"External-Rosier-fragment","route":"/api/gramps/families/Rosier","body":"      <family-listing        familyname=&quoteRosier&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Rosier","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Rosier/index.html","id":"Rosier","title":"Rosier","label":"External-Rosier-fragment","route":"/Harrypedia/people/Rosier/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Rosier</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Lestrangeindex.html","id":"Lestrange","title":"Lestrange","label":"External-Lestrange-fragment","route":"/api/gramps/families/Lestrange","body":"      <family-listing        familyname=&quoteLestrange&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Lestrange","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lestrange/index.html","id":"Lestrange","title":"Lestrange","label":"External-Lestrange-fragment","route":"/Harrypedia/people/Lestrange/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Lestrange</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Malfoyindex.html","id":"Malfoy","title":"Malfoy","label":"External-Malfoy-fragment","route":"/api/gramps/families/Malfoy","body":"      <family-listing        familyname=&quoteMalfoy&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Malfoy","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Malfoy/index.html","id":"Malfoy","title":"Malfoy","label":"External-Malfoy-fragment","route":"/Harrypedia/people/Malfoy/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Malfoy</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Burkeindex.html","id":"Burke","title":"Burke","label":"External-Burke-fragment","route":"/api/gramps/families/Burke","body":"      <family-listing        familyname=&quoteBurke&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Burke","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Burke/index.html","id":"Burke","title":"Burke","label":"External-Burke-fragment","route":"/Harrypedia/people/Burke/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Burke</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Yaxleyindex.html","id":"Yaxley","title":"Yaxley","label":"External-Yaxley-fragment","route":"/api/gramps/families/Yaxley","body":"      <family-listing        familyname=&quoteYaxley&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Yaxley","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Yaxley/index.html","id":"Yaxley","title":"Yaxley","label":"External-Yaxley-fragment","route":"/Harrypedia/people/Yaxley/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Yaxley</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Longbottomindex.html","id":"Longbottom","title":"Longbottom","label":"External-Longbottom-fragment","route":"/api/gramps/families/Longbottom","body":"      <family-listing        familyname=&quoteLongbottom&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Longbottom","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Longbottom/index.html","id":"Longbottom","title":"Longbottom","label":"External-Longbottom-fragment","route":"/Harrypedia/people/Longbottom/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Longbottom</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Weasleyindex.html","id":"Weasley","title":"Weasley","label":"External-Weasley-fragment","route":"/api/gramps/families/Weasley","body":"      <family-listing        familyname=&quoteWeasley&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Weasley","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Weasley/index.html","id":"Weasley","title":"Weasley","label":"External-Weasley-fragment","route":"/Harrypedia/people/Weasley/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Weasley</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Crouchindex.html","id":"Crouch","title":"Crouch","label":"External-Crouch-fragment","route":"/api/gramps/families/Crouch","body":"      <family-listing        familyname=&quoteCrouch&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Crouch","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Crouch/index.html","id":"Crouch","title":"Crouch","label":"External-Crouch-fragment","route":"/Harrypedia/people/Crouch/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Crouch</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Prewettindex.html","id":"Prewett","title":"Prewett","label":"External-Prewett-fragment","route":"/api/gramps/families/Prewett","body":"      <family-listing        familyname=&quotePrewett&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Prewett","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Prewett/index.html","id":"Prewett","title":"Prewett","label":"External-Prewett-fragment","route":"/Harrypedia/people/Prewett/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Prewett</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Lupinindex.html","id":"Lupin","title":"Lupin","label":"External-Lupin-fragment","route":"/api/gramps/families/Lupin","body":"      <family-listing        familyname=&quoteLupin&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Lupin","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lupin/index.html","id":"Lupin","title":"Lupin","label":"External-Lupin-fragment","route":"/Harrypedia/people/Lupin/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Lupin</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Dumbledoreindex.html","id":"Dumbledore","title":"Dumbledore","label":"External-Dumbledore-fragment","route":"/api/gramps/families/Dumbledore","body":"      <family-listing        familyname=&quoteDumbledore&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Dumbledore","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dumbledore/index.html","id":"Dumbledore","title":"Dumbledore","label":"External-Dumbledore-fragment","route":"/Harrypedia/people/Dumbledore/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Dumbledore</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Grangerindex.html","id":"Granger","title":"Granger","label":"External-Granger-fragment","route":"/api/gramps/families/Granger","body":"      <family-listing        familyname=&quoteGranger&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Granger","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Granger/index.html","id":"Granger","title":"Granger","label":"External-Granger-fragment","route":"/Harrypedia/people/Granger/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Granger</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/McGonagallindex.html","id":"McGonagall","title":"McGonagall","label":"External-McGonagall-fragment","route":"/api/gramps/families/McGonagall","body":"      <family-listing        familyname=&quoteMcGonagall&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"McGonagall","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/McGonagall/index.html","id":"McGonagall","title":"McGonagall","label":"External-McGonagall-fragment","route":"/Harrypedia/people/McGonagall/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for McGonagall</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Tonksindex.html","id":"Tonks","title":"Tonks","label":"External-Tonks-fragment","route":"/api/gramps/families/Tonks","body":"      <family-listing        familyname=&quoteTonks&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Tonks","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Tonks/index.html","id":"Tonks","title":"Tonks","label":"External-Tonks-fragment","route":"/Harrypedia/people/Tonks/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Tonks</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Snapeindex.html","id":"Snape","title":"Snape","label":"External-Snape-fragment","route":"/api/gramps/families/Snape","body":"      <family-listing        familyname=&quoteSnape&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Snape","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Snape/index.html","id":"Snape","title":"Snape","label":"External-Snape-fragment","route":"/Harrypedia/people/Snape/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Snape</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Hagridindex.html","id":"Hagrid","title":"Hagrid","label":"External-Hagrid-fragment","route":"/api/gramps/families/Hagrid","body":"      <family-listing        familyname=&quoteHagrid&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Hagrid","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Hagrid/index.html","id":"Hagrid","title":"Hagrid","label":"External-Hagrid-fragment","route":"/Harrypedia/people/Hagrid/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Hagrid</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Delacourindex.html","id":"Delacour","title":"Delacour","label":"External-Delacour-fragment","route":"/api/gramps/families/Delacour","body":"      <family-listing        familyname=&quoteDelacour&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Delacour","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Delacour/index.html","id":"Delacour","title":"Delacour","label":"External-Delacour-fragment","route":"/Harrypedia/people/Delacour/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Delacour</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Fleamontindex.html","id":"Fleamont","title":"Fleamont","label":"External-Fleamont-fragment","route":"/api/gramps/families/Fleamont","body":"      <family-listing        familyname=&quoteFleamont&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Fleamont","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Fleamont/index.html","id":"Fleamont","title":"Fleamont","label":"External-Fleamont-fragment","route":"/Harrypedia/people/Fleamont/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Fleamont</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Hitchensindex.html","id":"Hitchens","title":"Hitchens","label":"External-Hitchens-fragment","route":"/api/gramps/families/Hitchens","body":"      <family-listing        familyname=&quoteHitchens&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Hitchens","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Hitchens/index.html","id":"Hitchens","title":"Hitchens","label":"External-Hitchens-fragment","route":"/Harrypedia/people/Hitchens/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Hitchens</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Dursleyindex.html","id":"Dursley","title":"Dursley","label":"External-Dursley-fragment","route":"/api/gramps/families/Dursley","body":"      <family-listing        familyname=&quoteDursley&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Dursley","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dursley/index.html","id":"Dursley","title":"Dursley","label":"External-Dursley-fragment","route":"/Harrypedia/people/Dursley/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Dursley</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Diggleindex.html","id":"Diggle","title":"Diggle","label":"External-Diggle-fragment","route":"/api/gramps/families/Diggle","body":"      <family-listing        familyname=&quoteDiggle&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Diggle","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Diggle/index.html","id":"Diggle","title":"Diggle","label":"External-Diggle-fragment","route":"/Harrypedia/people/Diggle/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Diggle</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Crockfordindex.html","id":"Crockford","title":"Crockford","label":"External-Crockford-fragment","route":"/api/gramps/families/Crockford","body":"      <family-listing        familyname=&quoteCrockford&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Crockford","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Crockford/index.html","id":"Crockford","title":"Crockford","label":"External-Crockford-fragment","route":"/Harrypedia/people/Crockford/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Crockford</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Quirrellindex.html","id":"Quirrell","title":"Quirrell","label":"External-Quirrell-fragment","route":"/api/gramps/families/Quirrell","body":"      <family-listing        familyname=&quoteQuirrell&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Quirrell","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Quirrell/index.html","id":"Quirrell","title":"Quirrell","label":"External-Quirrell-fragment","route":"/Harrypedia/people/Quirrell/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Quirrell</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Ollivanderindex.html","id":"Ollivander","title":"Ollivander","label":"External-Ollivander-fragment","route":"/api/gramps/families/Ollivander","body":"      <family-listing        familyname=&quoteOllivander&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Ollivander","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Ollivander/index.html","id":"Ollivander","title":"Ollivander","label":"External-Ollivander-fragment","route":"/Harrypedia/people/Ollivander/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Ollivander</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Goyleindex.html","id":"Goyle","title":"Goyle","label":"External-Goyle-fragment","route":"/api/gramps/families/Goyle","body":"      <family-listing        familyname=&quoteGoyle&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Goyle","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Goyle/index.html","id":"Goyle","title":"Goyle","label":"External-Goyle-fragment","route":"/Harrypedia/people/Goyle/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Goyle</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Abbottindex.html","id":"Abbott","title":"Abbott","label":"External-Abbott-fragment","route":"/api/gramps/families/Abbott","body":"      <family-listing        familyname=&quoteAbbott&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Abbott","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Abbott/index.html","id":"Abbott","title":"Abbott","label":"External-Abbott-fragment","route":"/Harrypedia/people/Abbott/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Abbott</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Bonesindex.html","id":"Bones","title":"Bones","label":"External-Bones-fragment","route":"/api/gramps/families/Bones","body":"      <family-listing        familyname=&quoteBones&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Bones","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Bones/index.html","id":"Bones","title":"Bones","label":"External-Bones-fragment","route":"/Harrypedia/people/Bones/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Bones</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Umbridgeindex.html","id":"Umbridge","title":"Umbridge","label":"External-Umbridge-fragment","route":"/api/gramps/families/Umbridge","body":"      <family-listing        familyname=&quoteUmbridge&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Umbridge","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Umbridge/index.html","id":"Umbridge","title":"Umbridge","label":"External-Umbridge-fragment","route":"/Harrypedia/people/Umbridge/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Umbridge</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Lovegoodindex.html","id":"Lovegood","title":"Lovegood","label":"External-Lovegood-fragment","route":"/api/gramps/families/Lovegood","body":"      <family-listing        familyname=&quoteLovegood&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Lovegood","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lovegood/index.html","id":"Lovegood","title":"Lovegood","label":"External-Lovegood-fragment","route":"/Harrypedia/people/Lovegood/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Lovegood</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Abercrombieindex.html","id":"Abercrombie","title":"Abercrombie","label":"External-Abercrombie-fragment","route":"/api/gramps/families/Abercrombie","body":"      <family-listing        familyname=&quoteAbercrombie&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Abercrombie","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Abercrombie/index.html","id":"Abercrombie","title":"Abercrombie","label":"External-Abercrombie-fragment","route":"/Harrypedia/people/Abercrombie/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Abercrombie</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Zellerindex.html","id":"Zeller","title":"Zeller","label":"External-Zeller-fragment","route":"/api/gramps/families/Zeller","body":"      <family-listing        familyname=&quoteZeller&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Zeller","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Zeller/index.html","id":"Zeller","title":"Zeller","label":"External-Zeller-fragment","route":"/Harrypedia/people/Zeller/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Zeller</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Ogdenindex.html","id":"Ogden","title":"Ogden","label":"External-Ogden-fragment","route":"/api/gramps/families/Ogden","body":"      <family-listing        familyname=&quoteOgden&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Ogden","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Ogden/index.html","id":"Ogden","title":"Ogden","label":"External-Ogden-fragment","route":"/Harrypedia/people/Ogden/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Ogden</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Ryanindex.html","id":"Ryan","title":"Ryan","label":"External-Ryan-fragment","route":"/api/gramps/families/Ryan","body":"      <family-listing        familyname=&quoteRyan&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Ryan","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Ryan/index.html","id":"Ryan","title":"Ryan","label":"External-Ryan-fragment","route":"/Harrypedia/people/Ryan/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Ryan</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Kirkeindex.html","id":"Kirke","title":"Kirke","label":"External-Kirke-fragment","route":"/api/gramps/families/Kirke","body":"      <family-listing        familyname=&quoteKirke&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Kirke","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Kirke/index.html","id":"Kirke","title":"Kirke","label":"External-Kirke-fragment","route":"/Harrypedia/people/Kirke/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Kirke</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Sloperindex.html","id":"Sloper","title":"Sloper","label":"External-Sloper-fragment","route":"/api/gramps/families/Sloper","body":"      <family-listing        familyname=&quoteSloper&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Sloper","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Sloper/index.html","id":"Sloper","title":"Sloper","label":"External-Sloper-fragment","route":"/Harrypedia/people/Sloper/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Sloper</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Smethwyckindex.html","id":"Smethwyck","title":"Smethwyck","label":"External-Smethwyck-fragment","route":"/api/gramps/families/Smethwyck","body":"      <family-listing        familyname=&quoteSmethwyck&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Smethwyck","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Smethwyck/index.html","id":"Smethwyck","title":"Smethwyck","label":"External-Smethwyck-fragment","route":"/Harrypedia/people/Smethwyck/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Smethwyck</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Pyeindex.html","id":"Pye","title":"Pye","label":"External-Pye-fragment","route":"/api/gramps/families/Pye","body":"      <family-listing        familyname=&quotePye&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Pye","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Pye/index.html","id":"Pye","title":"Pye","label":"External-Pye-fragment","route":"/Harrypedia/people/Pye/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Pye</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Rackharrowindex.html","id":"Rackharrow","title":"Rackharrow","label":"External-Rackharrow-fragment","route":"/api/gramps/families/Rackharrow","body":"      <family-listing        familyname=&quoteRackharrow&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Rackharrow","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Rackharrow/index.html","id":"Rackharrow","title":"Rackharrow","label":"External-Rackharrow-fragment","route":"/Harrypedia/people/Rackharrow/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Rackharrow</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Widdershinsindex.html","id":"Widdershins","title":"Widdershins","label":"External-Widdershins-fragment","route":"/api/gramps/families/Widdershins","body":"      <family-listing        familyname=&quoteWiddershins&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Widdershins","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Widdershins/index.html","id":"Widdershins","title":"Widdershins","label":"External-Widdershins-fragment","route":"/Harrypedia/people/Widdershins/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Widdershins</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Dolohovindex.html","id":"Dolohov","title":"Dolohov","label":"External-Dolohov-fragment","route":"/api/gramps/families/Dolohov","body":"      <family-listing        familyname=&quoteDolohov&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Dolohov","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dolohov/index.html","id":"Dolohov","title":"Dolohov","label":"External-Dolohov-fragment","route":"/Harrypedia/people/Dolohov/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Dolohov</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Rockwoodindex.html","id":"Rockwood","title":"Rockwood","label":"External-Rockwood-fragment","route":"/api/gramps/families/Rockwood","body":"      <family-listing        familyname=&quoteRockwood&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Rockwood","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Rockwood/index.html","id":"Rockwood","title":"Rockwood","label":"External-Rockwood-fragment","route":"/Harrypedia/people/Rockwood/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Rockwood</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Daviesindex.html","id":"Davies","title":"Davies","label":"External-Davies-fragment","route":"/api/gramps/families/Davies","body":"      <family-listing        familyname=&quoteDavies&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Davies","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Davies/index.html","id":"Davies","title":"Davies","label":"External-Davies-fragment","route":"/Harrypedia/people/Davies/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Davies</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Edgecombeindex.html","id":"Edgecombe","title":"Edgecombe","label":"External-Edgecombe-fragment","route":"/api/gramps/families/Edgecombe","body":"      <family-listing        familyname=&quoteEdgecombe&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Edgecombe","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Edgecombe/index.html","id":"Edgecombe","title":"Edgecombe","label":"External-Edgecombe-fragment","route":"/Harrypedia/people/Edgecombe/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Edgecombe</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Dawlishindex.html","id":"Dawlish","title":"Dawlish","label":"External-Dawlish-fragment","route":"/api/gramps/families/Dawlish","body":"      <family-listing        familyname=&quoteDawlish&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Dawlish","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dawlish/index.html","id":"Dawlish","title":"Dawlish","label":"External-Dawlish-fragment","route":"/Harrypedia/people/Dawlish/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Dawlish</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Bradleyindex.html","id":"Bradley","title":"Bradley","label":"External-Bradley-fragment","route":"/api/gramps/families/Bradley","body":"      <family-listing        familyname=&quoteBradley&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Bradley","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Bradley/index.html","id":"Bradley","title":"Bradley","label":"External-Bradley-fragment","route":"/Harrypedia/people/Bradley/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Bradley</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Chambersindex.html","id":"Chambers","title":"Chambers","label":"External-Chambers-fragment","route":"/api/gramps/families/Chambers","body":"      <family-listing        familyname=&quoteChambers&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Chambers","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Chambers/index.html","id":"Chambers","title":"Chambers","label":"External-Chambers-fragment","route":"/Harrypedia/people/Chambers/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Chambers</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Toftyindex.html","id":"Tofty","title":"Tofty","label":"External-Tofty-fragment","route":"/api/gramps/families/Tofty","body":"      <family-listing        familyname=&quoteTofty&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Tofty","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Tofty/index.html","id":"Tofty","title":"Tofty","label":"External-Tofty-fragment","route":"/Harrypedia/people/Tofty/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Tofty</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Jugsonindex.html","id":"Jugson","title":"Jugson","label":"External-Jugson-fragment","route":"/api/gramps/families/Jugson","body":"      <family-listing        familyname=&quoteJugson&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Jugson","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Jugson/index.html","id":"Jugson","title":"Jugson","label":"External-Jugson-fragment","route":"/Harrypedia/people/Jugson/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Jugson</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Mulciberindex.html","id":"Mulciber","title":"Mulciber","label":"External-Mulciber-fragment","route":"/api/gramps/families/Mulciber","body":"      <family-listing        familyname=&quoteMulciber&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Mulciber","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Mulciber/index.html","id":"Mulciber","title":"Mulciber","label":"External-Mulciber-fragment","route":"/Harrypedia/people/Mulciber/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Mulciber</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Williamsonindex.html","id":"Williamson","title":"Williamson","label":"External-Williamson-fragment","route":"/api/gramps/families/Williamson","body":"      <family-listing        familyname=&quoteWilliamson&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Williamson","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Williamson/index.html","id":"Williamson","title":"Williamson","label":"External-Williamson-fragment","route":"/Harrypedia/people/Williamson/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Williamson</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Hilliardindex.html","id":"Hilliard","title":"Hilliard","label":"External-Hilliard-fragment","route":"/api/gramps/families/Hilliard","body":"      <family-listing        familyname=&quoteHilliard&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Hilliard","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Hilliard/index.html","id":"Hilliard","title":"Hilliard","label":"External-Hilliard-fragment","route":"/Harrypedia/people/Hilliard/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Hilliard</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Farleyindex.html","id":"Farley","title":"Farley","label":"External-Farley-fragment","route":"/api/gramps/families/Farley","body":"      <family-listing        familyname=&quoteFarley&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Farley","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Farley/index.html","id":"Farley","title":"Farley","label":"External-Farley-fragment","route":"/Harrypedia/people/Farley/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Farley</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Trumanindex.html","id":"Truman","title":"Truman","label":"External-Truman-fragment","route":"/api/gramps/families/Truman","body":"      <family-listing        familyname=&quoteTruman&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Truman","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Truman/index.html","id":"Truman","title":"Truman","label":"External-Truman-fragment","route":"/Harrypedia/people/Truman/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Truman</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Maxindex.html","id":"Max","title":"Max","label":"External-Max-fragment","route":"/api/gramps/families/Max","body":"      <family-listing        familyname=&quoteMax&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Max","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Max/index.html","id":"Max","title":"Max","label":"External-Max-fragment","route":"/Harrypedia/people/Max/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Max</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Tripeindex.html","id":"Tripe","title":"Tripe","label":"External-Tripe-fragment","route":"/api/gramps/families/Tripe","body":"      <family-listing        familyname=&quoteTripe&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Tripe","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Tripe/index.html","id":"Tripe","title":"Tripe","label":"External-Tripe-fragment","route":"/Harrypedia/people/Tripe/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Tripe</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Blishwickindex.html","id":"Blishwick","title":"Blishwick","label":"External-Blishwick-fragment","route":"/api/gramps/families/Blishwick","body":"      <family-listing        familyname=&quoteBlishwick&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Blishwick","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Blishwick/index.html","id":"Blishwick","title":"Blishwick","label":"External-Blishwick-fragment","route":"/Harrypedia/people/Blishwick/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Blishwick</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Smithindex.html","id":"Smith","title":"Smith","label":"External-Smith-fragment","route":"/api/gramps/families/Smith","body":"      <family-listing        familyname=&quoteSmith&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Smith","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Smith/index.html","id":"Smith","title":"Smith","label":"External-Smith-fragment","route":"/Harrypedia/people/Smith/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Smith</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Hopkinsindex.html","id":"Hopkins","title":"Hopkins","label":"External-Hopkins-fragment","route":"/api/gramps/families/Hopkins","body":"      <family-listing        familyname=&quoteHopkins&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Hopkins","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Hopkins/index.html","id":"Hopkins","title":"Hopkins","label":"External-Hopkins-fragment","route":"/Harrypedia/people/Hopkins/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Hopkins</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Finniganindex.html","id":"Finnigan","title":"Finnigan","label":"External-Finnigan-fragment","route":"/api/gramps/families/Finnigan","body":"      <family-listing        familyname=&quoteFinnigan&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Finnigan","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Finnigan/index.html","id":"Finnigan","title":"Finnigan","label":"External-Finnigan-fragment","route":"/Harrypedia/people/Finnigan/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Finnigan</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Zabiniindex.html","id":"Zabini","title":"Zabini","label":"External-Zabini-fragment","route":"/api/gramps/families/Zabini","body":"      <family-listing        familyname=&quoteZabini&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Zabini","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Zabini/index.html","id":"Zabini","title":"Zabini","label":"External-Zabini-fragment","route":"/Harrypedia/people/Zabini/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Zabini</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Nottindex.html","id":"Nott","title":"Nott","label":"External-Nott-fragment","route":"/api/gramps/families/Nott","body":"      <family-listing        familyname=&quoteNott&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Nott","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Nott/index.html","id":"Nott","title":"Nott","label":"External-Nott-fragment","route":"/Harrypedia/people/Nott/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Nott</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Bootindex.html","id":"Boot","title":"Boot","label":"External-Boot-fragment","route":"/api/gramps/families/Boot","body":"      <family-listing        familyname=&quoteBoot&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Boot","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Boot/index.html","id":"Boot","title":"Boot","label":"External-Boot-fragment","route":"/Harrypedia/people/Boot/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Boot</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Cornerindex.html","id":"Corner","title":"Corner","label":"External-Corner-fragment","route":"/api/gramps/families/Corner","body":"      <family-listing        familyname=&quoteCorner&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Corner","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Corner/index.html","id":"Corner","title":"Corner","label":"External-Corner-fragment","route":"/Harrypedia/people/Corner/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Corner</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Cornfootindex.html","id":"Cornfoot","title":"Cornfoot","label":"External-Cornfoot-fragment","route":"/api/gramps/families/Cornfoot","body":"      <family-listing        familyname=&quoteCornfoot&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Cornfoot","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Cornfoot/index.html","id":"Cornfoot","title":"Cornfoot","label":"External-Cornfoot-fragment","route":"/Harrypedia/people/Cornfoot/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Cornfoot</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Entwhistleindex.html","id":"Entwhistle","title":"Entwhistle","label":"External-Entwhistle-fragment","route":"/api/gramps/families/Entwhistle","body":"      <family-listing        familyname=&quoteEntwhistle&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Entwhistle","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Entwhistle/index.html","id":"Entwhistle","title":"Entwhistle","label":"External-Entwhistle-fragment","route":"/Harrypedia/people/Entwhistle/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Entwhistle</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Goldsteinindex.html","id":"Goldstein","title":"Goldstein","label":"External-Goldstein-fragment","route":"/api/gramps/families/Goldstein","body":"      <family-listing        familyname=&quoteGoldstein&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Goldstein","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Goldstein/index.html","id":"Goldstein","title":"Goldstein","label":"External-Goldstein-fragment","route":"/Harrypedia/people/Goldstein/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Goldstein</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Finch-Fletchleyindex.html","id":"Finch-Fletchley","title":"Finch-Fletchley","label":"External-Finch-Fletchley-fragment","route":"/api/gramps/families/Finch-Fletchley","body":"      <family-listing        familyname=&quoteFinch-Fletchley&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Finch-Fletchley","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Finch-Fletchley/index.html","id":"Finch-Fletchley","title":"Finch-Fletchley","label":"External-Finch-Fletchley-fragment","route":"/Harrypedia/people/Finch-Fletchley/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Finch-Fletchley</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Maloneindex.html","id":"Malone","title":"Malone","label":"External-Malone-fragment","route":"/api/gramps/families/Malone","body":"      <family-listing        familyname=&quoteMalone&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Malone","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Malone/index.html","id":"Malone","title":"Malone","label":"External-Malone-fragment","route":"/Harrypedia/people/Malone/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Malone</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Riversindex.html","id":"Rivers","title":"Rivers","label":"External-Rivers-fragment","route":"/api/gramps/families/Rivers","body":"      <family-listing        familyname=&quoteRivers&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Rivers","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Rivers/index.html","id":"Rivers","title":"Rivers","label":"External-Rivers-fragment","route":"/Harrypedia/people/Rivers/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Rivers</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Brocklehurstindex.html","id":"Brocklehurst","title":"Brocklehurst","label":"External-Brocklehurst-fragment","route":"/api/gramps/families/Brocklehurst","body":"      <family-listing        familyname=&quoteBrocklehurst&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Brocklehurst","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Brocklehurst/index.html","id":"Brocklehurst","title":"Brocklehurst","label":"External-Brocklehurst-fragment","route":"/Harrypedia/people/Brocklehurst/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Brocklehurst</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Liindex.html","id":"Li","title":"Li","label":"External-Li-fragment","route":"/api/gramps/families/Li","body":"      <family-listing        familyname=&quoteLi&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Li","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Li/index.html","id":"Li","title":"Li","label":"External-Li-fragment","route":"/Harrypedia/people/Li/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Li</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/MacDougalindex.html","id":"MacDougal","title":"MacDougal","label":"External-MacDougal-fragment","route":"/api/gramps/families/MacDougal","body":"      <family-listing        familyname=&quoteMacDougal&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"MacDougal","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/MacDougal/index.html","id":"MacDougal","title":"MacDougal","label":"External-MacDougal-fragment","route":"/Harrypedia/people/MacDougal/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for MacDougal</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Patilindex.html","id":"Patil","title":"Patil","label":"External-Patil-fragment","route":"/api/gramps/families/Patil","body":"      <family-listing        familyname=&quotePatil&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Patil","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Patil/index.html","id":"Patil","title":"Patil","label":"External-Patil-fragment","route":"/Harrypedia/people/Patil/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Patil</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Turpinindex.html","id":"Turpin","title":"Turpin","label":"External-Turpin-fragment","route":"/api/gramps/families/Turpin","body":"      <family-listing        familyname=&quoteTurpin&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Turpin","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Turpin/index.html","id":"Turpin","title":"Turpin","label":"External-Turpin-fragment","route":"/Harrypedia/people/Turpin/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Turpin</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Davisindex.html","id":"Davis","title":"Davis","label":"External-Davis-fragment","route":"/api/gramps/families/Davis","body":"      <family-listing        familyname=&quoteDavis&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Davis","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Davis/index.html","id":"Davis","title":"Davis","label":"External-Davis-fragment","route":"/Harrypedia/people/Davis/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Davis</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Greengrassindex.html","id":"Greengrass","title":"Greengrass","label":"External-Greengrass-fragment","route":"/api/gramps/families/Greengrass","body":"      <family-listing        familyname=&quoteGreengrass&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Greengrass","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Greengrass/index.html","id":"Greengrass","title":"Greengrass","label":"External-Greengrass-fragment","route":"/Harrypedia/people/Greengrass/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Greengrass</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Parkinsonindex.html","id":"Parkinson","title":"Parkinson","label":"External-Parkinson-fragment","route":"/api/gramps/families/Parkinson","body":"      <family-listing        familyname=&quoteParkinson&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Parkinson","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Parkinson/index.html","id":"Parkinson","title":"Parkinson","label":"External-Parkinson-fragment","route":"/Harrypedia/people/Parkinson/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Parkinson</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Runcornindex.html","id":"Runcorn","title":"Runcorn","label":"External-Runcorn-fragment","route":"/api/gramps/families/Runcorn","body":"      <family-listing        familyname=&quoteRuncorn&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Runcorn","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Runcorn/index.html","id":"Runcorn","title":"Runcorn","label":"External-Runcorn-fragment","route":"/Harrypedia/people/Runcorn/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Runcorn</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Jonesindex.html","id":"Jones","title":"Jones","label":"External-Jones-fragment","route":"/api/gramps/families/Jones","body":"      <family-listing        familyname=&quoteJones&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Jones","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Jones/index.html","id":"Jones","title":"Jones","label":"External-Jones-fragment","route":"/Harrypedia/people/Jones/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Jones</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Perksindex.html","id":"Perks","title":"Perks","label":"External-Perks-fragment","route":"/api/gramps/families/Perks","body":"      <family-listing        familyname=&quotePerks&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Perks","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Perks/index.html","id":"Perks","title":"Perks","label":"External-Perks-fragment","route":"/Harrypedia/people/Perks/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Perks</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Brownindex.html","id":"Brown","title":"Brown","label":"External-Brown-fragment","route":"/api/gramps/families/Brown","body":"      <family-listing        familyname=&quoteBrown&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Brown","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Brown/index.html","id":"Brown","title":"Brown","label":"External-Brown-fragment","route":"/Harrypedia/people/Brown/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Brown</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Moonindex.html","id":"Moon","title":"Moon","label":"External-Moon-fragment","route":"/api/gramps/families/Moon","body":"      <family-listing        familyname=&quoteMoon&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Moon","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Moon/index.html","id":"Moon","title":"Moon","label":"External-Moon-fragment","route":"/Harrypedia/people/Moon/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Moon</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Roperindex.html","id":"Roper","title":"Roper","label":"External-Roper-fragment","route":"/api/gramps/families/Roper","body":"      <family-listing        familyname=&quoteRoper&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Roper","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Roper/index.html","id":"Roper","title":"Roper","label":"External-Roper-fragment","route":"/Harrypedia/people/Roper/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Roper</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/of%20Stinchcombeindex.html","id":"of Stinchcombe","title":"of Stinchcombe","label":"External-of Stinchcombe-fragment","route":"/api/gramps/families/of%20Stinchcombe","body":"      <family-listing        familyname=&quoteof Stinchcombe&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"of Stinchcombe","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/of%20Stinchcombe/index.html","id":"of Stinchcombe","title":"of Stinchcombe","label":"External-of Stinchcombe-fragment","route":"/Harrypedia/people/of%20Stinchcombe/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for of Stinchcombe</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Peverellindex.html","id":"Peverell","title":"Peverell","label":"External-Peverell-fragment","route":"/api/gramps/families/Peverell","body":"      <family-listing        familyname=&quotePeverell&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Peverell","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Peverell/index.html","id":"Peverell","title":"Peverell","label":"External-Peverell-fragment","route":"/Harrypedia/people/Peverell/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Peverell</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Fortescueindex.html","id":"Fortescue","title":"Fortescue","label":"External-Fortescue-fragment","route":"/api/gramps/families/Fortescue","body":"      <family-listing        familyname=&quoteFortescue&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Fortescue","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Fortescue/index.html","id":"Fortescue","title":"Fortescue","label":"External-Fortescue-fragment","route":"/Harrypedia/people/Fortescue/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Fortescue</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Fudgeindex.html","id":"Fudge","title":"Fudge","label":"External-Fudge-fragment","route":"/api/gramps/families/Fudge","body":"      <family-listing        familyname=&quoteFudge&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Fudge","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Fudge/index.html","id":"Fudge","title":"Fudge","label":"External-Fudge-fragment","route":"/Harrypedia/people/Fudge/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Fudge</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Scrimgeourindex.html","id":"Scrimgeour","title":"Scrimgeour","label":"External-Scrimgeour-fragment","route":"/api/gramps/families/Scrimgeour","body":"      <family-listing        familyname=&quoteScrimgeour&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Scrimgeour","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Scrimgeour/index.html","id":"Scrimgeour","title":"Scrimgeour","label":"External-Scrimgeour-fragment","route":"/Harrypedia/people/Scrimgeour/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Scrimgeour</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Howellindex.html","id":"Howell","title":"Howell","label":"External-Howell-fragment","route":"/api/gramps/families/Howell","body":"      <family-listing        familyname=&quoteHowell&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Howell","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Howell/index.html","id":"Howell","title":"Howell","label":"External-Howell-fragment","route":"/Harrypedia/people/Howell/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Howell</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Belbyindex.html","id":"Belby","title":"Belby","label":"External-Belby-fragment","route":"/api/gramps/families/Belby","body":"      <family-listing        familyname=&quoteBelby&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Belby","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Belby/index.html","id":"Belby","title":"Belby","label":"External-Belby-fragment","route":"/Harrypedia/people/Belby/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Belby</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Fenwickindex.html","id":"Fenwick","title":"Fenwick","label":"External-Fenwick-fragment","route":"/api/gramps/families/Fenwick","body":"      <family-listing        familyname=&quoteFenwick&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Fenwick","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Fenwick/index.html","id":"Fenwick","title":"Fenwick","label":"External-Fenwick-fragment","route":"/Harrypedia/people/Fenwick/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Fenwick</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Scamanderindex.html","id":"Scamander","title":"Scamander","label":"External-Scamander-fragment","route":"/api/gramps/families/Scamander","body":"      <family-listing        familyname=&quoteScamander&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Scamander","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Scamander/index.html","id":"Scamander","title":"Scamander","label":"External-Scamander-fragment","route":"/Harrypedia/people/Scamander/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Scamander</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Beaufortindex.html","id":"Beaufort","title":"Beaufort","label":"External-Beaufort-fragment","route":"/api/gramps/families/Beaufort","body":"      <family-listing        familyname=&quoteBeaufort&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Beaufort","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Beaufort/index.html","id":"Beaufort","title":"Beaufort","label":"External-Beaufort-fragment","route":"/Harrypedia/people/Beaufort/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Beaufort</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Volantindex.html","id":"Volant","title":"Volant","label":"External-Volant-fragment","route":"/api/gramps/families/Volant","body":"      <family-listing        familyname=&quoteVolant&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Volant","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Volant/index.html","id":"Volant","title":"Volant","label":"External-Volant-fragment","route":"/Harrypedia/people/Volant/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Volant</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Tremblayindex.html","id":"Tremblay","title":"Tremblay","label":"External-Tremblay-fragment","route":"/api/gramps/families/Tremblay","body":"      <family-listing        familyname=&quoteTremblay&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Tremblay","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Tremblay/index.html","id":"Tremblay","title":"Tremblay","label":"External-Tremblay-fragment","route":"/Harrypedia/people/Tremblay/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Tremblay</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Moreauindex.html","id":"Moreau","title":"Moreau","label":"External-Moreau-fragment","route":"/api/gramps/families/Moreau","body":"      <family-listing        familyname=&quoteMoreau&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Moreau","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Moreau/index.html","id":"Moreau","title":"Moreau","label":"External-Moreau-fragment","route":"/Harrypedia/people/Moreau/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Moreau</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Diggoryindex.html","id":"Diggory","title":"Diggory","label":"External-Diggory-fragment","route":"/api/gramps/families/Diggory","body":"      <family-listing        familyname=&quoteDiggory&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Diggory","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Diggory/index.html","id":"Diggory","title":"Diggory","label":"External-Diggory-fragment","route":"/Harrypedia/people/Diggory/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Diggory</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Rossindex.html","id":"Ross","title":"Ross","label":"External-Ross-fragment","route":"/api/gramps/families/Ross","body":"      <family-listing        familyname=&quoteRoss&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Ross","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Ross/index.html","id":"Ross","title":"Ross","label":"External-Ross-fragment","route":"/Harrypedia/people/Ross/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Ross</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Slughornindex.html","id":"Slughorn","title":"Slughorn","label":"External-Slughorn-fragment","route":"/api/gramps/families/Slughorn","body":"      <family-listing        familyname=&quoteSlughorn&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Slughorn","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Slughorn/index.html","id":"Slughorn","title":"Slughorn","label":"External-Slughorn-fragment","route":"/Harrypedia/people/Slughorn/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Slughorn</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Riddleindex.html","id":"Riddle","title":"Riddle","label":"External-Riddle-fragment","route":"/api/gramps/families/Riddle","body":"      <family-listing        familyname=&quoteRiddle&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Riddle","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Riddle/index.html","id":"Riddle","title":"Riddle","label":"External-Riddle-fragment","route":"/Harrypedia/people/Riddle/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Riddle</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Leachindex.html","id":"Leach","title":"Leach","label":"External-Leach-fragment","route":"/api/gramps/families/Leach","body":"      <family-listing        familyname=&quoteLeach&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Leach","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Leach/index.html","id":"Leach","title":"Leach","label":"External-Leach-fragment","route":"/Harrypedia/people/Leach/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Leach</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Princeindex.html","id":"Prince","title":"Prince","label":"External-Prince-fragment","route":"/api/gramps/families/Prince","body":"      <family-listing        familyname=&quotePrince&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Prince","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Prince/index.html","id":"Prince","title":"Prince","label":"External-Prince-fragment","route":"/Harrypedia/people/Prince/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Prince</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Brookstantonindex.html","id":"Brookstanton","title":"Brookstanton","label":"External-Brookstanton-fragment","route":"/api/gramps/families/Brookstanton","body":"      <family-listing        familyname=&quoteBrookstanton&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Brookstanton","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Brookstanton/index.html","id":"Brookstanton","title":"Brookstanton","label":"External-Brookstanton-fragment","route":"/Harrypedia/people/Brookstanton/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Brookstanton</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Trelawneyindex.html","id":"Trelawney","title":"Trelawney","label":"External-Trelawney-fragment","route":"/api/gramps/families/Trelawney","body":"      <family-listing        familyname=&quoteTrelawney&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Trelawney","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Trelawney/index.html","id":"Trelawney","title":"Trelawney","label":"External-Trelawney-fragment","route":"/Harrypedia/people/Trelawney/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Trelawney</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Elsrickleindex.html","id":"Elsrickle","title":"Elsrickle","label":"External-Elsrickle-fragment","route":"/api/gramps/families/Elsrickle","body":"      <family-listing        familyname=&quoteElsrickle&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Elsrickle","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Elsrickle/index.html","id":"Elsrickle","title":"Elsrickle","label":"External-Elsrickle-fragment","route":"/Harrypedia/people/Elsrickle/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Elsrickle</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Hobartindex.html","id":"Hobart","title":"Hobart","label":"External-Hobart-fragment","route":"/api/gramps/families/Hobart","body":"      <family-listing        familyname=&quoteHobart&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Hobart","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Hobart/index.html","id":"Hobart","title":"Hobart","label":"External-Hobart-fragment","route":"/Harrypedia/people/Hobart/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Hobart</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/L%C3%BCgnerindex.html","id":"Lügner","title":"Lügner","label":"External-Lügner-fragment","route":"/api/gramps/families/L%C3%BCgner","body":"      <family-listing        familyname=&quoteLügner&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Lügner","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/L%C3%BCgner/index.html","id":"Lügner","title":"Lügner","label":"External-Lügner-fragment","route":"/Harrypedia/people/L%C3%BCgner/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Lügner</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Blayindex.html","id":"Blay","title":"Blay","label":"External-Blay-fragment","route":"/api/gramps/families/Blay","body":"      <family-listing        familyname=&quoteBlay&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Blay","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Blay/index.html","id":"Blay","title":"Blay","label":"External-Blay-fragment","route":"/Harrypedia/people/Blay/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Blay</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Grymmindex.html","id":"Grymm","title":"Grymm","label":"External-Grymm-fragment","route":"/api/gramps/families/Grymm","body":"      <family-listing        familyname=&quoteGrymm&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Grymm","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Grymm/index.html","id":"Grymm","title":"Grymm","label":"External-Grymm-fragment","route":"/Harrypedia/people/Grymm/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Grymm</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Grindelwaldindex.html","id":"Grindelwald","title":"Grindelwald","label":"External-Grindelwald-fragment","route":"/api/gramps/families/Grindelwald","body":"      <family-listing        familyname=&quoteGrindelwald&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Grindelwald","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Grindelwald/index.html","id":"Grindelwald","title":"Grindelwald","label":"External-Grindelwald-fragment","route":"/Harrypedia/people/Grindelwald/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Grindelwald</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Sproutindex.html","id":"Sprout","title":"Sprout","label":"External-Sprout-fragment","route":"/api/gramps/families/Sprout","body":"      <family-listing        familyname=&quoteSprout&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Sprout","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Sprout/index.html","id":"Sprout","title":"Sprout","label":"External-Sprout-fragment","route":"/Harrypedia/people/Sprout/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Sprout</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Urquartindex.html","id":"Urquart","title":"Urquart","label":"External-Urquart-fragment","route":"/api/gramps/families/Urquart","body":"      <family-listing        familyname=&quoteUrquart&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Urquart","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Urquart/index.html","id":"Urquart","title":"Urquart","label":"External-Urquart-fragment","route":"/Harrypedia/people/Urquart/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Urquart</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Eggindex.html","id":"Egg","title":"Egg","label":"External-Egg-fragment","route":"/api/gramps/families/Egg","body":"      <family-listing        familyname=&quoteEgg&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Egg","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Egg/index.html","id":"Egg","title":"Egg","label":"External-Egg-fragment","route":"/Harrypedia/people/Egg/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Egg</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Gryffindorindex.html","id":"Gryffindor","title":"Gryffindor","label":"External-Gryffindor-fragment","route":"/api/gramps/families/Gryffindor","body":"      <family-listing        familyname=&quoteGryffindor&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Gryffindor","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Gryffindor/index.html","id":"Gryffindor","title":"Gryffindor","label":"External-Gryffindor-fragment","route":"/Harrypedia/people/Gryffindor/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Gryffindor</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Kettleburnindex.html","id":"Kettleburn","title":"Kettleburn","label":"External-Kettleburn-fragment","route":"/api/gramps/families/Kettleburn","body":"      <family-listing        familyname=&quoteKettleburn&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Kettleburn","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Kettleburn/index.html","id":"Kettleburn","title":"Kettleburn","label":"External-Kettleburn-fragment","route":"/Harrypedia/people/Kettleburn/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Kettleburn</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Gauntindex.html","id":"Gaunt","title":"Gaunt","label":"External-Gaunt-fragment","route":"/api/gramps/families/Gaunt","body":"      <family-listing        familyname=&quoteGaunt&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Gaunt","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Gaunt/index.html","id":"Gaunt","title":"Gaunt","label":"External-Gaunt-fragment","route":"/Harrypedia/people/Gaunt/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Gaunt</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Borageindex.html","id":"Borage","title":"Borage","label":"External-Borage-fragment","route":"/api/gramps/families/Borage","body":"      <family-listing        familyname=&quoteBorage&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Borage","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Borage/index.html","id":"Borage","title":"Borage","label":"External-Borage-fragment","route":"/Harrypedia/people/Borage/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Borage</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Tutleyindex.html","id":"Tutley","title":"Tutley","label":"External-Tutley-fragment","route":"/api/gramps/families/Tutley","body":"      <family-listing        familyname=&quoteTutley&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Tutley","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Tutley/index.html","id":"Tutley","title":"Tutley","label":"External-Tutley-fragment","route":"/Harrypedia/people/Tutley/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Tutley</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Cracknellindex.html","id":"Cracknell","title":"Cracknell","label":"External-Cracknell-fragment","route":"/api/gramps/families/Cracknell","body":"      <family-listing        familyname=&quoteCracknell&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Cracknell","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Cracknell/index.html","id":"Cracknell","title":"Cracknell","label":"External-Cracknell-fragment","route":"/Harrypedia/people/Cracknell/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Cracknell</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Pettigrewindex.html","id":"Pettigrew","title":"Pettigrew","label":"External-Pettigrew-fragment","route":"/api/gramps/families/Pettigrew","body":"      <family-listing        familyname=&quotePettigrew&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Pettigrew","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Pettigrew/index.html","id":"Pettigrew","title":"Pettigrew","label":"External-Pettigrew-fragment","route":"/Harrypedia/people/Pettigrew/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Pettigrew</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Shackleboltindex.html","id":"Shacklebolt","title":"Shacklebolt","label":"External-Shacklebolt-fragment","route":"/api/gramps/families/Shacklebolt","body":"      <family-listing        familyname=&quoteShacklebolt&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Shacklebolt","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Shacklebolt/index.html","id":"Shacklebolt","title":"Shacklebolt","label":"External-Shacklebolt-fragment","route":"/Harrypedia/people/Shacklebolt/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Shacklebolt</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Dearbornindex.html","id":"Dearborn","title":"Dearborn","label":"External-Dearborn-fragment","route":"/api/gramps/families/Dearborn","body":"      <family-listing        familyname=&quoteDearborn&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Dearborn","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dearborn/index.html","id":"Dearborn","title":"Dearborn","label":"External-Dearborn-fragment","route":"/Harrypedia/people/Dearborn/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Dearborn</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/MkKinnonindex.html","id":"MkKinnon","title":"MkKinnon","label":"External-MkKinnon-fragment","route":"/api/gramps/families/MkKinnon","body":"      <family-listing        familyname=&quoteMkKinnon&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"MkKinnon","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/MkKinnon/index.html","id":"MkKinnon","title":"MkKinnon","label":"External-MkKinnon-fragment","route":"/Harrypedia/people/MkKinnon/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for MkKinnon</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Dogeindex.html","id":"Doge","title":"Doge","label":"External-Doge-fragment","route":"/api/gramps/families/Doge","body":"      <family-listing        familyname=&quoteDoge&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Doge","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Doge/index.html","id":"Doge","title":"Doge","label":"External-Doge-fragment","route":"/Harrypedia/people/Doge/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Doge</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Changindex.html","id":"Chang","title":"Chang","label":"External-Chang-fragment","route":"/api/gramps/families/Chang","body":"      <family-listing        familyname=&quoteChang&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Chang","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Chang/index.html","id":"Chang","title":"Chang","label":"External-Chang-fragment","route":"/Harrypedia/people/Chang/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Chang</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Spinnetindex.html","id":"Spinnet","title":"Spinnet","label":"External-Spinnet-fragment","route":"/api/gramps/families/Spinnet","body":"      <family-listing        familyname=&quoteSpinnet&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Spinnet","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Spinnet/index.html","id":"Spinnet","title":"Spinnet","label":"External-Spinnet-fragment","route":"/Harrypedia/people/Spinnet/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Spinnet</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Creeveyindex.html","id":"Creevey","title":"Creevey","label":"External-Creevey-fragment","route":"/api/gramps/families/Creevey","body":"      <family-listing        familyname=&quoteCreevey&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Creevey","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Creevey/index.html","id":"Creevey","title":"Creevey","label":"External-Creevey-fragment","route":"/Harrypedia/people/Creevey/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Creevey</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Flitwickindex.html","id":"Flitwick","title":"Flitwick","label":"External-Flitwick-fragment","route":"/api/gramps/families/Flitwick","body":"      <family-listing        familyname=&quoteFlitwick&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Flitwick","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Flitwick/index.html","id":"Flitwick","title":"Flitwick","label":"External-Flitwick-fragment","route":"/Harrypedia/people/Flitwick/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Flitwick</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/McLaggenindex.html","id":"McLaggen","title":"McLaggen","label":"External-McLaggen-fragment","route":"/api/gramps/families/McLaggen","body":"      <family-listing        familyname=&quoteMcLaggen&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"McLaggen","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/McLaggen/index.html","id":"McLaggen","title":"McLaggen","label":"External-McLaggen-fragment","route":"/Harrypedia/people/McLaggen/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for McLaggen</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Slytherinindex.html","id":"Slytherin","title":"Slytherin","label":"External-Slytherin-fragment","route":"/api/gramps/families/Slytherin","body":"      <family-listing        familyname=&quoteSlytherin&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Slytherin","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Slytherin/index.html","id":"Slytherin","title":"Slytherin","label":"External-Slytherin-fragment","route":"/Harrypedia/people/Slytherin/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Slytherin</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Binnsindex.html","id":"Binns","title":"Binns","label":"External-Binns-fragment","route":"/api/gramps/families/Binns","body":"      <family-listing        familyname=&quoteBinns&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Binns","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Binns/index.html","id":"Binns","title":"Binns","label":"External-Binns-fragment","route":"/Harrypedia/people/Binns/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Binns</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Lockhartindex.html","id":"Lockhart","title":"Lockhart","label":"External-Lockhart-fragment","route":"/api/gramps/families/Lockhart","body":"      <family-listing        familyname=&quoteLockhart&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Lockhart","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lockhart/index.html","id":"Lockhart","title":"Lockhart","label":"External-Lockhart-fragment","route":"/Harrypedia/people/Lockhart/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Lockhart</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Boleindex.html","id":"Bole","title":"Bole","label":"External-Bole-fragment","route":"/api/gramps/families/Bole","body":"      <family-listing        familyname=&quoteBole&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Bole","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Bole/index.html","id":"Bole","title":"Bole","label":"External-Bole-fragment","route":"/Harrypedia/people/Bole/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Bole</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Derrickindex.html","id":"Derrick","title":"Derrick","label":"External-Derrick-fragment","route":"/api/gramps/families/Derrick","body":"      <family-listing        familyname=&quoteDerrick&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Derrick","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Derrick/index.html","id":"Derrick","title":"Derrick","label":"External-Derrick-fragment","route":"/Harrypedia/people/Derrick/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Derrick</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Dunnindex.html","id":"Dunn","title":"Dunn","label":"External-Dunn-fragment","route":"/api/gramps/families/Dunn","body":"      <family-listing        familyname=&quoteDunn&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Dunn","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dunn/index.html","id":"Dunn","title":"Dunn","label":"External-Dunn-fragment","route":"/Harrypedia/people/Dunn/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Dunn</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Haywoodindex.html","id":"Haywood","title":"Haywood","label":"External-Haywood-fragment","route":"/api/gramps/families/Haywood","body":"      <family-listing        familyname=&quoteHaywood&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Haywood","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Haywood/index.html","id":"Haywood","title":"Haywood","label":"External-Haywood-fragment","route":"/Harrypedia/people/Haywood/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Haywood</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Clearwaterindex.html","id":"Clearwater","title":"Clearwater","label":"External-Clearwater-fragment","route":"/api/gramps/families/Clearwater","body":"      <family-listing        familyname=&quoteClearwater&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Clearwater","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Clearwater/index.html","id":"Clearwater","title":"Clearwater","label":"External-Clearwater-fragment","route":"/Harrypedia/people/Clearwater/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Clearwater</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Woodindex.html","id":"Wood","title":"Wood","label":"External-Wood-fragment","route":"/api/gramps/families/Wood","body":"      <family-listing        familyname=&quoteWood&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Wood","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Wood/index.html","id":"Wood","title":"Wood","label":"External-Wood-fragment","route":"/Harrypedia/people/Wood/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Wood</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Johnsonindex.html","id":"Johnson","title":"Johnson","label":"External-Johnson-fragment","route":"/api/gramps/families/Johnson","body":"      <family-listing        familyname=&quoteJohnson&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Johnson","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Johnson/index.html","id":"Johnson","title":"Johnson","label":"External-Johnson-fragment","route":"/Harrypedia/people/Johnson/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Johnson</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Jordanindex.html","id":"Jordan","title":"Jordan","label":"External-Jordan-fragment","route":"/api/gramps/families/Jordan","body":"      <family-listing        familyname=&quoteJordan&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Jordan","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Jordan/index.html","id":"Jordan","title":"Jordan","label":"External-Jordan-fragment","route":"/Harrypedia/people/Jordan/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Jordan</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Stimpsonindex.html","id":"Stimpson","title":"Stimpson","label":"External-Stimpson-fragment","route":"/api/gramps/families/Stimpson","body":"      <family-listing        familyname=&quoteStimpson&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Stimpson","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Stimpson/index.html","id":"Stimpson","title":"Stimpson","label":"External-Stimpson-fragment","route":"/Harrypedia/people/Stimpson/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Stimpson</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Towlerindex.html","id":"Towler","title":"Towler","label":"External-Towler-fragment","route":"/api/gramps/families/Towler","body":"      <family-listing        familyname=&quoteTowler&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Towler","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Towler/index.html","id":"Towler","title":"Towler","label":"External-Towler-fragment","route":"/Harrypedia/people/Towler/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Towler</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Bellindex.html","id":"Bell","title":"Bell","label":"External-Bell-fragment","route":"/api/gramps/families/Bell","body":"      <family-listing        familyname=&quoteBell&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Bell","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Bell/index.html","id":"Bell","title":"Bell","label":"External-Bell-fragment","route":"/Harrypedia/people/Bell/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Bell</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Carmichaelindex.html","id":"Carmichael","title":"Carmichael","label":"External-Carmichael-fragment","route":"/api/gramps/families/Carmichael","body":"      <family-listing        familyname=&quoteCarmichael&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Carmichael","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Carmichael/index.html","id":"Carmichael","title":"Carmichael","label":"External-Carmichael-fragment","route":"/Harrypedia/people/Carmichael/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Carmichael</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Fawcettindex.html","id":"Fawcett","title":"Fawcett","label":"External-Fawcett-fragment","route":"/api/gramps/families/Fawcett","body":"      <family-listing        familyname=&quoteFawcett&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Fawcett","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Fawcett/index.html","id":"Fawcett","title":"Fawcett","label":"External-Fawcett-fragment","route":"/Harrypedia/people/Fawcett/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Fawcett</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Stebbinsindex.html","id":"Stebbins","title":"Stebbins","label":"External-Stebbins-fragment","route":"/api/gramps/families/Stebbins","body":"      <family-listing        familyname=&quoteStebbins&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Stebbins","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Stebbins/index.html","id":"Stebbins","title":"Stebbins","label":"External-Stebbins-fragment","route":"/Harrypedia/people/Stebbins/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Stebbins</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Summersindex.html","id":"Summers","title":"Summers","label":"External-Summers-fragment","route":"/api/gramps/families/Summers","body":"      <family-listing        familyname=&quoteSummers&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Summers","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Summers/index.html","id":"Summers","title":"Summers","label":"External-Summers-fragment","route":"/Harrypedia/people/Summers/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Summers</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Harperindex.html","id":"Harper","title":"Harper","label":"External-Harper-fragment","route":"/api/gramps/families/Harper","body":"      <family-listing        familyname=&quoteHarper&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Harper","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Harper/index.html","id":"Harper","title":"Harper","label":"External-Harper-fragment","route":"/Harrypedia/people/Harper/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Harper</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Vaneindex.html","id":"Vane","title":"Vane","label":"External-Vane-fragment","route":"/api/gramps/families/Vane","body":"      <family-listing        familyname=&quoteVane&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Vane","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Vane/index.html","id":"Vane","title":"Vane","label":"External-Vane-fragment","route":"/Harrypedia/people/Vane/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Vane</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Ackerleyindex.html","id":"Ackerley","title":"Ackerley","label":"External-Ackerley-fragment","route":"/api/gramps/families/Ackerley","body":"      <family-listing        familyname=&quoteAckerley&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Ackerley","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Ackerley/index.html","id":"Ackerley","title":"Ackerley","label":"External-Ackerley-fragment","route":"/Harrypedia/people/Ackerley/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Ackerley</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Baddockindex.html","id":"Baddock","title":"Baddock","label":"External-Baddock-fragment","route":"/api/gramps/families/Baddock","body":"      <family-listing        familyname=&quoteBaddock&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Baddock","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Baddock/index.html","id":"Baddock","title":"Baddock","label":"External-Baddock-fragment","route":"/Harrypedia/people/Baddock/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Baddock</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Branstoneindex.html","id":"Branstone","title":"Branstone","label":"External-Branstone-fragment","route":"/api/gramps/families/Branstone","body":"      <family-listing        familyname=&quoteBranstone&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Branstone","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Branstone/index.html","id":"Branstone","title":"Branstone","label":"External-Branstone-fragment","route":"/Harrypedia/people/Branstone/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Branstone</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Cauldwellindex.html","id":"Cauldwell","title":"Cauldwell","label":"External-Cauldwell-fragment","route":"/api/gramps/families/Cauldwell","body":"      <family-listing        familyname=&quoteCauldwell&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Cauldwell","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Cauldwell/index.html","id":"Cauldwell","title":"Cauldwell","label":"External-Cauldwell-fragment","route":"/Harrypedia/people/Cauldwell/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Cauldwell</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Dobbsindex.html","id":"Dobbs","title":"Dobbs","label":"External-Dobbs-fragment","route":"/api/gramps/families/Dobbs","body":"      <family-listing        familyname=&quoteDobbs&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Dobbs","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dobbs/index.html","id":"Dobbs","title":"Dobbs","label":"External-Dobbs-fragment","route":"/Harrypedia/people/Dobbs/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Dobbs</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/MacDonaldindex.html","id":"MacDonald","title":"MacDonald","label":"External-MacDonald-fragment","route":"/api/gramps/families/MacDonald","body":"      <family-listing        familyname=&quoteMacDonald&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"MacDonald","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/MacDonald/index.html","id":"MacDonald","title":"MacDonald","label":"External-MacDonald-fragment","route":"/Harrypedia/people/MacDonald/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for MacDonald</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Madleyindex.html","id":"Madley","title":"Madley","label":"External-Madley-fragment","route":"/api/gramps/families/Madley","body":"      <family-listing        familyname=&quoteMadley&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Madley","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Madley/index.html","id":"Madley","title":"Madley","label":"External-Madley-fragment","route":"/Harrypedia/people/Madley/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Madley</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Pritchardindex.html","id":"Pritchard","title":"Pritchard","label":"External-Pritchard-fragment","route":"/api/gramps/families/Pritchard","body":"      <family-listing        familyname=&quotePritchard&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Pritchard","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Pritchard/index.html","id":"Pritchard","title":"Pritchard","label":"External-Pritchard-fragment","route":"/Harrypedia/people/Pritchard/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Pritchard</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Peaksindex.html","id":"Peaks","title":"Peaks","label":"External-Peaks-fragment","route":"/api/gramps/families/Peaks","body":"      <family-listing        familyname=&quotePeaks&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Peaks","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Peaks/index.html","id":"Peaks","title":"Peaks","label":"External-Peaks-fragment","route":"/Harrypedia/people/Peaks/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Peaks</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Quirkeindex.html","id":"Quirke","title":"Quirke","label":"External-Quirke-fragment","route":"/api/gramps/families/Quirke","body":"      <family-listing        familyname=&quoteQuirke&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Quirke","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Quirke/index.html","id":"Quirke","title":"Quirke","label":"External-Quirke-fragment","route":"/Harrypedia/people/Quirke/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Quirke</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Whitbyindex.html","id":"Whitby","title":"Whitby","label":"External-Whitby-fragment","route":"/api/gramps/families/Whitby","body":"      <family-listing        familyname=&quoteWhitby&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Whitby","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Whitby/index.html","id":"Whitby","title":"Whitby","label":"External-Whitby-fragment","route":"/Harrypedia/people/Whitby/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Whitby</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Wolpertindex.html","id":"Wolpert","title":"Wolpert","label":"External-Wolpert-fragment","route":"/api/gramps/families/Wolpert","body":"      <family-listing        familyname=&quoteWolpert&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Wolpert","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Wolpert/index.html","id":"Wolpert","title":"Wolpert","label":"External-Wolpert-fragment","route":"/Harrypedia/people/Wolpert/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Wolpert</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Midgenindex.html","id":"Midgen","title":"Midgen","label":"External-Midgen-fragment","route":"/api/gramps/families/Midgen","body":"      <family-listing        familyname=&quoteMidgen&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Midgen","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Midgen/index.html","id":"Midgen","title":"Midgen","label":"External-Midgen-fragment","route":"/Harrypedia/people/Midgen/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Midgen</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Montagueindex.html","id":"Montague","title":"Montague","label":"External-Montague-fragment","route":"/api/gramps/families/Montague","body":"      <family-listing        familyname=&quoteMontague&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Montague","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Montague/index.html","id":"Montague","title":"Montague","label":"External-Montague-fragment","route":"/Harrypedia/people/Montague/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Montague</span>","external":true},{"pageHref":null,"data":{},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/api/gramps/families/Robinsindex.html","id":"Robins","title":"Robins","label":"External-Robins-fragment","route":"/api/gramps/families/Robins","body":"      <family-listing        familyname=&quoteRobins&quote        showHeading      ></family-listing>    ","external":true},{"pageHref":null,"data":{"families":"Robins","sidebar":{"order":1}},"outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Robins/index.html","id":"Robins","title":"Robins","label":"External-Robins-fragment","route":"/Harrypedia/people/Robins/","collection":"Harrypedia","body":"<span class=&quotedebug&quote>Placeholder page for Robins</span>","external":true}],"context":{"dataDir":"file:///Users/luke/src/HP_Stuff/node_modules/.pnpm/@greenwood+cli@0.32.0-alpha.7/node_modules/@greenwood/cli/src/data/","outputDir":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/","userWorkspace":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/","apisDir":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/api/","pagesDir":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/","userLayoutsDir":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/layouts/","scratchDir":"file:///Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/","projectDirectory":"file:///Users/luke/src/HP_Stuff/packages/greenwood/","layoutsDir":"file:///Users/luke/src/HP_Stuff/node_modules/.pnpm/@greenwood+cli@0.32.0-alpha.7/node_modules/@greenwood/cli/src/layouts/"},"config":{"activeContent":true,"basePath":"","devServer":{"hud":true,"port":1984,"extensions":[],"proxy":{}},"isolation":true,"layoutsDirectory":"layouts","markdown":{"plugins":["rehype-autolink-headings","remark-alerts","remark-gfm","remark-rehype"]},"optimization":"default","pagesDirectory":"pages","plugins":[{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":false,"type":"copy","name":"plugin-copy-assets"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":false,"type":"copy","name":"plugin-copy-favicon"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":false,"type":"copy","name":"plugin-copy-manifest-json"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":false,"type":"copy","name":"plugin-copy-robots"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":false,"type":"copy","name":"plugin-copy-sitemap"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":false,"type":"renderer","name":"plugin-renderer-default"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":false,"type":"resource","name":"plugin-active-content"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":false,"type":"resource","name":"plugin-api-routes"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":false,"type":"resource","name":"plugin-dev-proxy"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":false,"type":"resource","name":"plugin-node-modules:resource"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":false,"type":"rollup","name":"plugin-node-modules:rollup"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":true,"type":"resource","name":"plugin-source-maps"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":true,"type":"resource","name":"plugin-standard-audio"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":true,"type":"resource","name":"plugin-standard-css"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":true,"type":"resource","name":"plugin-standard-font"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":false,"type":"resource","name":"plugin-standard-html"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":true,"type":"resource","name":"plugin-standard-image"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":true,"type":"resource","name":"plugin-standard-javascript:resource"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":true,"type":"rollup","name":"plugin-standard-javascript:rollup"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":true,"type":"resource","name":"plugin-standard-json:resource"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":true,"type":"resource","name":"plugin-standard-video"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":false,"type":"resource","name":"plugin-static-router"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":false,"type":"resource","name":"plugin-typescript"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":false,"type":"resource","name":"plugin-user-workspace"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":false,"type":"server","name":"plugin-live-reload:server"},{"isGreenwoodDefaultPlugin":true,"isStandardStaticResource":false,"type":"resource","name":"plugin-live-reload:resource"},{"type":"source","name":"source-plugin-external-directory-index-page"},{"type":"source","name":"source-plugin-external-person-page"},{"type":"source","name":"source-plugin-external-family-page"},{"type":"resource","name":"process-env-replace"},{"type":"adapter","name":"plugin-adapter-aws"},{"type":"resource","name":"plugin-postcss"},{"type":"resource","name":"plugin-google-analytics"}],"polyfills":{"importAttributes":null,"importMaps":false},"port":8080,"prerender":false,"useTsc":true,"workspace":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/","staticRouter":false},"resources":{},"manifest":{"apis":{}},"collections":{"Bookmarks":[{"id":"Bookmarks-Anti-Hermione","label":"Anti Hermione","title":"Anti-Hermione","route":"/Bookmarks/Anti-Hermione/","layout":"standard","data":{"collection":"Bookmarks","description":"HP Stories Notable for the Anti-Hermione Bias","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Anti-Hermione.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Anti-Hermione/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Dealing_With_Snape-After_He_Dies","label":"After_He_Dies","title":"After Snape Dies","route":"/Bookmarks/Dealing_With_Snape/After_He_Dies/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories focusing on Snape's death, judgement, or afterlife","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Dealing_With_Snape/After_He_Dies.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Dealing_With_Snape/After_He_Dies/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Dealing_With_Snape-His_Relationship_With_Lily","label":"His_Relationship_With_Lily","title":"Snape's Relationship With Lily","route":"/Bookmarks/Dealing_With_Snape/His_Relationship_With_Lily/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories about Snape's relationship with Lily","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Dealing_With_Snape/His_Relationship_With_Lily.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Dealing_With_Snape/His_Relationship_With_Lily/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Featuring_Hermione","label":"Featuring_Hermione","title":"Featuring Hermione","route":"/Bookmarks/Featuring_Hermione/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories in which Hermione is key","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Featuring_Hermione.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Featuring_Hermione/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Featuring_Ron","label":"Featuring_Ron","title":"Featuring Ron","route":"/Bookmarks/Featuring_Ron/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories in which Ron is key","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Featuring_Ron.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Featuring_Ron/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Fred_and_George","label":"Fred_and_George","title":"Featuring Fred and George","route":"/Bookmarks/Fred_and_George/","layout":"standard","data":{"collection":"Bookmarks","description":"HP Stories featuring Fred and George as main characters","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Fred_and_George.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Fred_and_George/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Harry_Leaves","label":"Harry_Leaves","title":"Harry Leaves","route":"/Bookmarks/Harry_Leaves/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories in which Harry Leaves the Wizarding World and/or England","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Harry_Leaves.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Harry_Leaves/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Luna","label":"Luna","title":"All About Luna","route":"/Bookmarks/Luna/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories with Luna as a primary character","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Luna.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Luna/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Prequels","label":"Prequels","title":"Prequels","route":"/Bookmarks/Prequels/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories predating our primary canon","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Prequels.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Prequels/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Problems_After_the_War","label":"Problems_After_the_War","title":"All was *Not* Well","route":"/Bookmarks/Problems_After_the_War/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories featuring problems after the war","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Problems_After_the_War.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Problems_After_the_War/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Problems_Exposed","label":"Problems_Exposed","title":"Exposing Plot Holes","route":"/Bookmarks/Problems_Exposed/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories HP stories that expose plot holes in the original","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Problems_Exposed.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Problems_Exposed/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Responsible_Adults","label":"Responsible_Adults","title":"Adults Adulting","route":"/Bookmarks/Responsible_Adults/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories with responsible adults","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Responsible_Adults.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Responsible_Adults/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-The_Missed_Birthday","label":"The_Missed_Birthday","title":"The Missed Birthday","route":"/Bookmarks/The_Missed_Birthday/","layout":"standard","data":{"collection":"Bookmarks","description":"Several Authors have noted that Ginny's Birthday is a problem in canon","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/The_Missed_Birthday.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/The_Missed_Birthday/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-Time_Travel","label":"Time_Travel","title":"Time Travel","route":"/Bookmarks/Time_Travel/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories focusing on travels through time","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Time_Travel.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Time_Travel/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-pairing-Harry-With_Astoria","label":"With_Astoria","title":"Harry With Astoria Greengrass","route":"/Bookmarks/pairing/Harry/With_Astoria/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories with Harry and Astoria Greengrass paired","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/pairing/Harry/With_Astoria.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/pairing/Harry/With_Astoria/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-pairing-Harry-With_Daphne","label":"With_Daphne","title":"Harry With Daphne Greengrass","route":"/Bookmarks/pairing/Harry/With_Daphne/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories with Harry and Daphne Greengrass paired","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/pairing/Harry/With_Daphne.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/pairing/Harry/With_Daphne/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-pairing-Harry-With_Gabrielle","label":"With_Gabrielle","title":"Harry With Gabrielle","route":"/Bookmarks/pairing/Harry/With_Gabrielle/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories with Harry and Gabrielle paired","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/pairing/Harry/With_Gabrielle.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/pairing/Harry/With_Gabrielle/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-pairing-Harry-With_Ginny","label":"With_Ginny","title":"Harry With Ginny","route":"/Bookmarks/pairing/Harry/With_Ginny/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories with Harry and Ginny paired","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/pairing/Harry/With_Ginny.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/pairing/Harry/With_Ginny/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-pairing-Harry-With_Hannah","label":"With_Hannah","title":"Harry With Hannah Abbott","route":"/Bookmarks/pairing/Harry/With_Hannah/","layout":"stanard","data":{"collection":"Bookmarks","description":"HP stories with Harry and Hannah Abbott paired","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/pairing/Harry/With_Hannah.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/pairing/Harry/With_Hannah/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-pairing-Harry-With_Sally-Anne","label":"With_Sally Anne","title":"Harry With Sally-Anne Perks","route":"/Bookmarks/pairing/Harry/With_Sally-Anne/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories with Harry and Sally-Anne Perks paired","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/pairing/Harry/With_Sally-Anne.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/pairing/Harry/With_Sally-Anne/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-pairing-Harry-With_Su_Li","label":"With_Su_Li","title":"Harry and Su Li","route":"/Bookmarks/pairing/Harry/With_Su_Li/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories in which Harry is paired with Su Li","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/pairing/Harry/With_Su_Li.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/pairing/Harry/With_Su_Li/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-pairing-Harry-With_Susan","label":"With_Susan","title":"Harry and Susan","route":"/Bookmarks/pairing/Harry/With_Susan/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories in which Harry is paired with Susan Bones","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/pairing/Harry/With_Susan.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/pairing/Harry/With_Susan/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null},{"id":"Bookmarks-pairing-Harry-With_Wednesday","label":"With_Wednesday","title":"Harry With Wednesday Addams","route":"/Bookmarks/pairing/Harry/With_Wednesday/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories with Harry and Wednesday Addams paired","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/BookmarksList.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/pairing/Harry/With_Wednesday.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/pairing/Harry/With_Wednesday/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null}],"Nephilim":[{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-Appendix_G","label":"Appendix_G","title":null,"route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/Appendix_G/","layout":"standard Soteriology, Missiology and Ecclesiology","data":{"author":"Luke Schierer","collection":"Nephilim","sidebar":{"order":100},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/Appendix_G.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/Appendix_G/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-Appendix_H","label":"Appendix_H","title":null,"route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/Appendix_H/","layout":"standard What are the Nephilim","data":{"author":"Luke Schierer","collection":"Nephilim","sidebar":{"order":100},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/Appendix_H.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/Appendix_H/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-FSSP","label":"FSSP","title":"Backstory: The FSSP","route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/FSSP/","layout":"standard","data":{"sidebar":{"order":250},"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/FSSP.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/FSSP/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-Inheritance","label":"Inheritance","title":null,"route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/Inheritance/","layout":"standard Non-Mendelian Inheritance","data":{"author":"Luke Schierer","sidebar":{"order":100},"tableOfContents":[],"collection":"Nephilim","tocHeading":0},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/Inheritance.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/Inheritance/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-Life%20Expectancy","label":"Life%20Expectancy","title":null,"route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/Life%20Expectancy/","layout":"standard Life Expectancy","data":{"author":"Luke Schierer","collection":"Nephilim","sidebar":{"order":100},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/Life%20Expectancy.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/Life%20Expectancy/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-Magical%20Beings","label":"Magical%20Beings","title":null,"route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/Magical%20Beings/","layout":"standard Magical Beings","data":{"author":"Luke Schierer","sidebar":{"order":100},"collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/Magical%20Beings.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/Magical%20Beings/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-Magical%20Contracts","label":"Magical%20Contracts","title":null,"route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/Magical%20Contracts/","layout":"standard Magical Contracts","data":{"author":"Luke Schierer","collection":"Nephilim","sidebar":{"order":100},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/Magical%20Contracts.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/Magical%20Contracts/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-Points%20of%20Divergence","label":"Points%20of%20Divergence","title":null,"route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/Points%20of%20Divergence/","layout":"standard Points of Divergence","data":{"author":"Luke Schierer","tableOfContents":[],"collection":"Nephilim","sidebar":{"order":100},"tocHeading":0},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/Points%20of%20Divergence.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/Points%20of%20Divergence/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-Relative%20Power%20Levels","label":"Relative%20Power%20Levels","title":null,"route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/Relative%20Power%20Levels/","layout":"standard Relative Power Levels","data":{"sidebar":{"order":100},"tableOfContents":[],"author":"Luke Schierer","collection":"Nephilim","tocHeading":0},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/Relative%20Power%20Levels.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/Relative%20Power%20Levels/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-Rules%20of%20Magic","label":"Rules%20of%20Magic","title":null,"route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/Rules%20of%20Magic/","layout":"standard Rules of Magic","data":{"author":"Luke Schierer","sidebar":{"order":100},"tableOfContents":[],"collection":"Nephilim","imports":["/components/FanFiction/Harry_Potter_-_Nephilim/Appendices/PowerLevelTable.ts type=&quotemodule&quote"],"tocHeading":0},"imports":["/components/FanFiction/Harry_Potter_-_Nephilim/Appendices/PowerLevelTable.ts type=&quotemodule&quote"],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/FanFiction/Harry_Potter_-_Nephilim/Appendices/PowerLevelTable.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/Rules%20of%20Magic.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/Rules%20of%20Magic/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Appendices-Veela%20Pathology","label":"Veela%20Pathology","title":null,"route":"/FanFiction/Harry_Potter_-_Nephilim/Appendices/Veela%20Pathology/","layout":"standard The Veela Curse","data":{"author":"Luke Schierer","sidebar":{"order":100},"collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Appendices/Veela%20Pathology.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Appendices/Veela%20Pathology/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Chapters-Chapter01","label":"Chapter01","title":"Chapter 1","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter01/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter01.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter01/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Chapters-Chapter02","label":"Chapter02","title":"Chapter 2","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter02/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter02.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter02/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Chapters-Chapter03","label":"Chapter03","title":"Chapter 3","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter03/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter03.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter03/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Chapters-Chapter04","label":"Chapter04","title":"Chapter 4","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter04/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter04.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter04/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Chapters-Chapter05","label":"Chapter05","title":"Chapter 5","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter05/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter05.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter05/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Chapters-Chapter06","label":"Chapter06","title":"Chapter 6","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter06/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter06.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter06/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Chapters-Chapter07","label":"Chapter07","title":"Chapter 7","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter07/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter07.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter07/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Chapters-Chapter08","label":"Chapter08","title":"Chapter 8","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter08/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter08.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter08/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Chapters-Chapter09","label":"Chapter09","title":"Chapter 9","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter09/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter09.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter09/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Chapters-Chapter10","label":"Chapter10","title":"Chapter 10","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter10/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter10.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter10/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Chapters-Chapter11","label":"Chapter11","title":"Chapter 11","route":"/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter11/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter11.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Chapters/Chapter11/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Introduction","label":"Introduction","title":"Introduction","route":"/FanFiction/Harry_Potter_-_Nephilim/Introduction/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","sidebar":{"order":-1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Introduction.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Introduction/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-Prologue","label":"Prologue","title":"Prologue","route":"/FanFiction/Harry_Potter_-_Nephilim/Prologue/","layout":"standard","data":{"author":"Luke Schierer","collection":"Nephilim","sidebar":{"order":0},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/Prologue.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/Prologue/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-backstory-Angels","label":"Angels","title":"Backstory: Angels","route":"/FanFiction/Harry_Potter_-_Nephilim/backstory/Angels/","layout":"standard","data":{"sidebar":{"order":200},"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/backstory/Angels.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/backstory/Angels/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-backstory-Giants","label":"Giants","title":"Backstory: Giants","route":"/FanFiction/Harry_Potter_-_Nephilim/backstory/Giants/","layout":"standard","data":{"tableOfContents":[],"author":"Luke Schierer","collection":"Nephilim","sidebar":{"order":210},"tocHeading":0},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/backstory/Giants.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/backstory/Giants/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-backstory-Nephilim","label":"Nephilim","title":"Backstory: Angels","route":"/FanFiction/Harry_Potter_-_Nephilim/backstory/Nephilim/","layout":"standard","data":{"sidebar":{"order":200},"author":"Luke Schierer","collection":"Nephilim","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/backstory/Nephilim.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/backstory/Nephilim/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-backstory-The_Dwarfs","label":"The_Dwarfs","title":"Backstory: The Dwarfs","route":"/FanFiction/Harry_Potter_-_Nephilim/backstory/The_Dwarfs/","layout":"standard","data":{"tableOfContents":[],"author":"Luke Schierer","collection":"Nephilim","sidebar":{"order":201},"tocHeading":0},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/backstory/The_Dwarfs.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/backstory/The_Dwarfs/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"FanFiction-Harry_Potter_-_Nephilim-backstory-The_Veela","label":"The_Veela","title":"Backstory: Veela","route":"/FanFiction/Harry_Potter_-_Nephilim/backstory/The_Veela/","layout":"standard","data":{"tableOfContents":[],"author":"Luke Schierer","collection":"Nephilim","sidebar":{"order":210},"tocHeading":0},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/backstory/The_Veela.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/backstory/The_Veela/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null}],"nephilim":[{"id":"FanFiction-Harry_Potter_-_Nephilim-backstory-The_Flood","label":"The_Flood","title":"Backstory: The Flood","route":"/FanFiction/Harry_Potter_-_Nephilim/backstory/The_Flood/","layout":"standard","data":{"author":"Luke Schierer","collection":"nephilim","sidebar":{"order":200},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/backstory/The_Flood.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/backstory/The_Flood/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null}],"FanFiction":[{"id":"FanFiction-Harry_Potter_-_Nephilim-index","label":"Harry_Potter_ _Nephilim","title":"Harry Potter - Nephilim","route":"/FanFiction/Harry_Potter_-_Nephilim/","layout":"standard","data":{"author":"Luke Schierer","collection":"FanFiction","imports":["/components/DirectoryIndex.ts type=&quotemodule&quote"],"tocHeading":0,"tableOfContents":[]},"imports":["/components/DirectoryIndex.ts type=&quotemodule&quote"],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/DirectoryIndex.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/FanFiction/Harry_Potter_-_Nephilim/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/FanFiction/Harry_Potter_-_Nephilim/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null}],"Harrypedia":[{"id":"Harrypedia-Azkaban","label":"Azkaban","title":"Azkaban Prison","route":"/Harrypedia/Azkaban/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Azkaban.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Azkaban/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Egypt","label":"Egypt","title":"Egypt","route":"/Harrypedia/Egypt/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Egypt.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Egypt/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Grimmauld_Place","label":"Grimmauld_Place","title":"Number 12 Grimmauld Place","route":"/Harrypedia/Grimmauld_Place/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Grimmauld_Place.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Grimmauld_Place/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Gringotts","label":"Gringotts","title":"Gringotts Bank","route":"/Harrypedia/Gringotts/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Gringotts.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Gringotts/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-History","label":"History","title":"History","route":"/Harrypedia/History/","layout":"page","data":{"collection":"Harrypedia","data":{"author":"Luke Schierer","tableOfContents":"false"},"imports":[],"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/v-timeline.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/History.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/History/index.html","isSSR":true,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Bathrooms","label":"Bathrooms","title":"Bathrooms at Hogwarts","route":"/Harrypedia/Hogwarts/Bathrooms/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Bathrooms.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Bathrooms/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Class_Lists-index","label":"Class_Lists","title":"Class Lists by Year","route":"/Harrypedia/Hogwarts/Class_Lists/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Class_Lists/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Class_Lists/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Class_Schedule_Rant","label":"Class_Schedule_Rant","title":"Hogwarts Class Schedule Impossibility","route":"/Harrypedia/Hogwarts/Class_Schedule_Rant/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Class_Schedule_Rant.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Class_Schedule_Rant/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Class_and_House_Structure","label":"Class_and_House_Structure","title":"Class and House Structure","route":"/Harrypedia/Hogwarts/Class_and_House_Structure/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Class_and_House_Structure.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Class_and_House_Structure/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Curriculum","label":"Curriculum","title":"Hogwarts Curriculum","route":"/Harrypedia/Hogwarts/Curriculum/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Curriculum.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Curriculum/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Founding","label":"Founding","title":"Founding Hogwarts School of Witchcraft and Wizardry","route":"/Harrypedia/Hogwarts/Founding/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Founding.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Founding/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Gryffindor","label":"Gryffindor","title":"Gryffindor","route":"/Harrypedia/Hogwarts/Gryffindor/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Gryffindor.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Gryffindor/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Hufflepuff","label":"Hufflepuff","title":"Hufflepuff","route":"/Harrypedia/Hogwarts/Hufflepuff/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Hufflepuff.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Hufflepuff/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Punishments","label":"Punishments","title":"Policies on Punishing Students","route":"/Harrypedia/Hogwarts/Punishments/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Punishments.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Punishments/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Ravenclaw","label":"Ravenclaw","title":"Ravenclaw","route":"/Harrypedia/Hogwarts/Ravenclaw/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Ravenclaw.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Ravenclaw/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Slytherin","label":"Slytherin","title":"Slytherin","route":"/Harrypedia/Hogwarts/Slytherin/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Slytherin.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Slytherin/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Sorting_Hat","label":"Sorting_Hat","title":"Hogwarts Sorting Hat","route":"/Harrypedia/Hogwarts/Sorting_Hat/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Sorting_Hat.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Sorting_Hat/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Students","label":"Students","title":"Hogwarts' Student Body","route":"/Harrypedia/Hogwarts/Students/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Students.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Students/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-Teachers","label":"Teachers","title":"Teachers","route":"/Harrypedia/Hogwarts/Teachers/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/Teachers.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/Teachers/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-The_Trophy_Room","label":"The_Trophy_Room","title":"The Trophy Room","route":"/Harrypedia/Hogwarts/The_Trophy_Room/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/The_Trophy_Room.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/The_Trophy_Room/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-comparitive_class_ages","label":"Comparitive_class_ages","title":"Comparing how old students are in UK and US","route":"/Harrypedia/Hogwarts/comparitive_class_ages/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/comparitive_class_ages.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/comparitive_class_ages/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Hogwarts-index","label":"Hogwarts","title":"Hogwarts","route":"/Harrypedia/Hogwarts/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Hogwarts/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Hogwarts/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-MACUSA","label":"MACUSA","title":"Magical Congress of the United States of America (MACUSA)","route":"/Harrypedia/MACUSA/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/MACUSA.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/MACUSA/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Quidditch","label":"Quidditch","title":"Quidditch","route":"/Harrypedia/Quidditch/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Quidditch.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Quidditch/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Relationships","label":"Relationships","title":"Relationships as of the Epilogue","route":"/Harrypedia/Relationships/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Relationships.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Relationships/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-Shipping","label":"Shipping","title":"Relationships between Characters","route":"/Harrypedia/Shipping/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/Shipping.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/Shipping/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-TriWizard","label":"TriWizard","title":"The TriWizard Tournament","route":"/Harrypedia/TriWizard/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/TriWizard.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/TriWizard/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-animals-ashwinder","label":"Ashwinder","title":"Ashwinder","route":"/Harrypedia/animals/ashwinder/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/animals/ashwinder.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/animals/ashwinder/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-animals-augurey","label":"Augurey","title":"Augurey","route":"/Harrypedia/animals/augurey/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/animals/augurey.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/animals/augurey/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-animals-basilisk","label":"Basilisk","title":"Basilisk","route":"/Harrypedia/animals/basilisk/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/animals/basilisk.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/animals/basilisk/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-animals-centaur","label":"Centaur","title":"Centaurs","route":"/Harrypedia/animals/centaur/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/animals/centaur.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/animals/centaur/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-animals-frog-rabbit","label":"Frog Rabbit","title":"Frog-Rabbit","route":"/Harrypedia/animals/frog-rabbit/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/animals/frog-rabbit.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/animals/frog-rabbit/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-animals-hippogriff","label":"Hippogriff","title":"Hippogriff","route":"/Harrypedia/animals/hippogriff/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/animals/hippogriff.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/animals/hippogriff/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-animals-index","label":"Animals","title":"Magical Animals in Harry Potter","route":"/Harrypedia/animals/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/animals/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/animals/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-animals-unicorn","label":"Unicorn","title":"Unicorn","route":"/Harrypedia/animals/unicorn/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/animals/unicorn.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/animals/unicorn/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-balance","label":"Balance","title":"Balance of Power","route":"/Harrypedia/balance/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/balance.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/balance/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-Obscurus","label":"Obscurus","title":"Obscurus","route":"/Harrypedia/beings/Obscurus/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/Obscurus.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/Obscurus/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-centaur","label":"Centaur","title":"Centaur","route":"/Harrypedia/beings/centaur/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/centaur.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/centaur/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-elves-house_elf","label":"House_elf","title":"House Elves","route":"/Harrypedia/beings/elves/house_elf/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/elves/house_elf.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/elves/house_elf/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-elves-index","label":"Elves","title":"elves","route":"/Harrypedia/beings/elves/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/elves/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/elves/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-giant","label":"Giant","title":"Giants","route":"/Harrypedia/beings/giant/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/giant.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/giant/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-goblin-dark_goblin","label":"Dark_goblin","title":"Dark Goblins","route":"/Harrypedia/beings/goblin/dark_goblin/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/goblin/dark_goblin.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/goblin/dark_goblin/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-goblin-european","label":"European","title":"European Goblins","route":"/Harrypedia/beings/goblin/european/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/goblin/european.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/goblin/european/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-goblin-half-goblins","label":"Half Goblins","title":"Half-goblins","route":"/Harrypedia/beings/goblin/half-goblins/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/goblin/half-goblins.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/goblin/half-goblins/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-goblin-index","label":"Goblin","title":"Goblins","route":"/Harrypedia/beings/goblin/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/goblin/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/goblin/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-goblin-pukwidgies","label":"Pukwidgies","title":"Pukwidgies","route":"/Harrypedia/beings/goblin/pukwidgies/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/goblin/pukwidgies.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/goblin/pukwidgies/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-hags","label":"Hags","title":"hags","route":"/Harrypedia/beings/hags/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/hags.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/hags/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-index","label":"Beings","title":"Sentient Species in Harry Potter","route":"/Harrypedia/beings/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-manticore","label":"Manticore","title":"Manticore","route":"/Harrypedia/beings/manticore/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/manticore.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/manticore/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-merpeople-index","label":"Merpeople","title":"Merpeople","route":"/Harrypedia/beings/merpeople/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/merpeople/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/merpeople/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-merpeople-merrow","label":"Merrow","title":"Merpeople - Merrows","route":"/Harrypedia/beings/merpeople/merrow/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/merpeople/merrow.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/merpeople/merrow/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-merpeople-selkies","label":"Selkies","title":"Merpeople - Selkies","route":"/Harrypedia/beings/merpeople/selkies/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/merpeople/selkies.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/merpeople/selkies/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-merpeople-siren","label":"Siren","title":"Merpeople - Siren","route":"/Harrypedia/beings/merpeople/siren/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/merpeople/siren.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/merpeople/siren/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-vampire","label":"Vampire","title":"Vampires","route":"/Harrypedia/beings/vampire/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/vampire.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/vampire/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-veela","label":"Veela","title":"Veela","route":"/Harrypedia/beings/veela/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/veela.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/veela/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-beings-werewolves","label":"Werewolves","title":"Werewolves","route":"/Harrypedia/beings/werewolves/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/beings/werewolves.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/beings/werewolves/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-child_abuse_in_fiction","label":"Child_abuse_in_fiction","title":"Abuse of Fictional Children","route":"/Harrypedia/child_abuse_in_fiction/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/child_abuse_in_fiction.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/child_abuse_in_fiction/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-contradictions-McGonagalls_age","label":"McGonagalls_age","title":"Professor McGonagall's Age","route":"/Harrypedia/contradictions/McGonagalls_age/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/contradictions/McGonagalls_age.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/contradictions/McGonagalls_age/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-contradictions-Merlin","label":"Merlin","title":"Merlin and Harry Potter","route":"/Harrypedia/contradictions/Merlin/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/contradictions/Merlin.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/contradictions/Merlin/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-contradictions-Nagini","label":"Nagini","title":"Nagini and Maledictus","route":"/Harrypedia/contradictions/Nagini/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/contradictions/Nagini.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/contradictions/Nagini/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-contradictions-The%20Prefect%20Problem","label":"The%20Prefect%20Problem","title":"The Prefect Problem","route":"/Harrypedia/contradictions/The%20Prefect%20Problem/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/contradictions/The%20Prefect%20Problem.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/contradictions/The%20Prefect%20Problem/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-contradictions-book_six_bathroom_scene","label":"Book_six_bathroom_scene","title":"The Bathroom Scene in Book Six","route":"/Harrypedia/contradictions/book_six_bathroom_scene/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/contradictions/book_six_bathroom_scene.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/contradictions/book_six_bathroom_scene/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-contradictions-index","label":"Contradictions","title":"Contradictions in Cannon","route":"/Harrypedia/contradictions/","layout":"standard","data":{"collection":"Harrypedia","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/contradictions/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/contradictions/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-contradictions-teens%20and%20boarding%20schools","label":"Teens%20and%20boarding%20schools","title":"Teens, Boarding Schools, and Age Appropriate Literature","route":"/Harrypedia/contradictions/teens%20and%20boarding%20schools/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/contradictions/teens%20and%20boarding%20schools.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/contradictions/teens%20and%20boarding%20schools/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Allowing_Riddle","label":"Allowing_Riddle","title":"The Society that Allowed Riddle","route":"/Harrypedia/culture/Allowing_Riddle/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Allowing_Riddle.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Allowing_Riddle/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Blood_Purity-Prevelance","label":"Prevelance","title":"Prevalence of Blood Bias","route":"/Harrypedia/culture/Blood_Purity/Prevelance/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Blood_Purity/Prevelance.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Blood_Purity/Prevelance/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Blood_Purity-Why","label":"Why","title":"Blood Purity","route":"/Harrypedia/culture/Blood_Purity/Why/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Blood_Purity/Why.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Blood_Purity/Why/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Child_Abuse","label":"Child_Abuse","title":"Child Abuse in the Wizarding World","route":"/Harrypedia/culture/Child_Abuse/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Child_Abuse.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Child_Abuse/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Class_Consciousness","label":"Class_Consciousness","title":"Class Consciousness in the Magical World","route":"/Harrypedia/culture/Class_Consciousness/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Class_Consciousness.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Class_Consciousness/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Class_and_Blood","label":"Class_and_Blood","title":"Class and Blood Status in the Magical World","route":"/Harrypedia/culture/Class_and_Blood/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Class_and_Blood.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Class_and_Blood/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Clothing","label":"Clothing","title":"Clothing in the Magical World","route":"/Harrypedia/culture/Clothing/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Clothing.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Clothing/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Condissention","label":"Condissention","title":"Condescension","route":"/Harrypedia/culture/Condissention/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Condissention.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Condissention/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Education","label":"Education","title":"Education in the Magical World","route":"/Harrypedia/culture/Education/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Education.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Education/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Government","label":"Government","title":"Government in the Magical World","route":"/Harrypedia/culture/Government/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Government.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Government/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Hair","label":"Hair","title":"Hair in the Magical World","route":"/Harrypedia/culture/Hair/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Hair.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Hair/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Household_Magic","label":"Household_Magic","title":"Household Magic","route":"/Harrypedia/culture/Household_Magic/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Household_Magic.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Household_Magic/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Immigration","label":"Immigration","title":"First-Generation “Immigrants”","route":"/Harrypedia/culture/Immigration/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Immigration.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Immigration/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-International_Confederation_of_Wizards","label":"International_Confederation_of_Wizards","title":"International Confederation of Wizards","route":"/Harrypedia/culture/International_Confederation_of_Wizards/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/International_Confederation_of_Wizards.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/International_Confederation_of_Wizards/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-International_Statute_of_Secrecy","label":"International_Statute_of_Secrecy","title":"International Statute of Secrecy","route":"/Harrypedia/culture/International_Statute_of_Secrecy/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/International_Statute_of_Secrecy.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/International_Statute_of_Secrecy/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Parchment_and_Paper","label":"Parchment_and_Paper","title":"Parchment and Paper in the Magical World","route":"/Harrypedia/culture/Parchment_and_Paper/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Parchment_and_Paper.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Parchment_and_Paper/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Population","label":"Population","title":"Magical Population","route":"/Harrypedia/culture/Population/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Population.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Population/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Quills_and_Pens","label":"Quills_and_Pens","title":"Quills and Pens in the Magical World","route":"/Harrypedia/culture/Quills_and_Pens/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Quills_and_Pens.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Quills_and_Pens/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-Religion","label":"Religion","title":"Religion in the Magical World","route":"/Harrypedia/culture/Religion/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/Religion.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/Religion/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-culture-index","label":"Culture","title":"Wizarding World Culture","route":"/Harrypedia/culture/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/culture/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/culture/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-currency","label":"Currency","title":"Wizarding Currency","route":"/Harrypedia/currency/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/currency.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/currency/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-index","label":"Harrypedia","title":"Encyclopedic Reference of things Harry Potter","route":"/Harrypedia/","layout":"standard","data":{"collection":"Harrypedia","sidebar":{"order":0},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-Contracts","label":"Contracts","title":"Magical Contracts","route":"/Harrypedia/magic/Contracts/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/Contracts.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/Contracts/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-The_Mind_Arts-Death_Defence","label":"Death_Defence","title":"The Mind Arts: Instant Death Defence","route":"/Harrypedia/magic/The_Mind_Arts/Death_Defence/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/The_Mind_Arts/Death_Defence.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/The_Mind_Arts/Death_Defence/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-The_Mind_Arts-Legilimency","label":"Legilimency","title":"The Mind Arts: Legilimency","route":"/Harrypedia/magic/The_Mind_Arts/Legilimency/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Scheirer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/The_Mind_Arts/Legilimency.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/The_Mind_Arts/Legilimency/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-The_Mind_Arts-Meditation_and_Focus","label":"Meditation_and_Focus","title":"The Mind Arts: Meditation and Focus","route":"/Harrypedia/magic/The_Mind_Arts/Meditation_and_Focus/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/The_Mind_Arts/Meditation_and_Focus.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/The_Mind_Arts/Meditation_and_Focus/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-The_Mind_Arts-Mental_Shields","label":"Mental_Shields","title":"The Mind Arts: Mental Shields","route":"/Harrypedia/magic/The_Mind_Arts/Mental_Shields/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/The_Mind_Arts/Mental_Shields.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/The_Mind_Arts/Mental_Shields/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-The_Mind_Arts-Mind_Palace","label":"Mind_Palace","title":"The Mind Arts: Mind Palace","route":"/Harrypedia/magic/The_Mind_Arts/Mind_Palace/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/The_Mind_Arts/Mind_Palace.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/The_Mind_Arts/Mind_Palace/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-The_Mind_Arts-Obfuscomency","label":"Obfuscomency","title":"The Mind Arts: Obfuscomency","route":"/Harrypedia/magic/The_Mind_Arts/Obfuscomency/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/The_Mind_Arts/Obfuscomency.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/The_Mind_Arts/Obfuscomency/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-The_Mind_Arts-Occlumency","label":"Occlumency","title":"The Mind Arts: Occlumency","route":"/Harrypedia/magic/The_Mind_Arts/Occlumency/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/The_Mind_Arts/Occlumency.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/The_Mind_Arts/Occlumency/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-The_Mind_Arts-index","label":"The_Mind_Arts","title":"The Mind Arts","route":"/Harrypedia/magic/The_Mind_Arts/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/The_Mind_Arts/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/The_Mind_Arts/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-arithmancy-RealWorld","label":"RealWorld","title":"Numbers in the Real World","route":"/Harrypedia/magic/arithmancy/RealWorld/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/arithmancy/RealWorld.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/arithmancy/RealWorld/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-dark-Horcruxes","label":"Horcruxes","title":"Horcruxes","route":"/Harrypedia/magic/dark/Horcruxes/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/dark/Horcruxes.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/dark/Horcruxes/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-dark-index","label":"Dark","title":"Dark Magic","route":"/Harrypedia/magic/dark/","layout":"standard","data":{"collection":"Harrypedia","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/dark/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/dark/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-index","label":"Magic","title":"Magic in the Harry Potter Universe","route":"/Harrypedia/magic/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-parseltongue","label":"Parseltongue","title":"Parseltongue","route":"/Harrypedia/magic/parseltongue/","layout":"standard","data":{"author":"Luke Schierer","collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/parseltongue.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/parseltongue/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-potions-Beautification_Potion","label":"Beautification_Potion","title":"Beautification Potion","route":"/Harrypedia/magic/potions/Beautification_Potion/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","type":"potion","spells":"Beautification Potion","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/potions/Beautification_Potion.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/potions/Beautification_Potion/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-potions-Cure_for_Boils","label":"Cure_for_Boils","title":"Cure for Boils","route":"/Harrypedia/magic/potions/Cure_for_Boils/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","type":"potion","spells":"Cure for Boils","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/potions/Cure_for_Boils.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/potions/Cure_for_Boils/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-potions-Doxycide","label":"Doxycide","title":"Doxycide","route":"/Harrypedia/magic/potions/Doxycide/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","type":"potion","spells":"Doxycide","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/potions/Doxycide.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/potions/Doxycide/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-potions-Felix_Felicis","label":"Felix_Felicis","title":"Felix Felicis","route":"/Harrypedia/magic/potions/Felix_Felicis/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","type":"potion","spells":"Felix Felicis","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/potions/Felix_Felicis.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/potions/Felix_Felicis/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-Aparecium","label":"Aparecium","title":"Aparecium","route":"/Harrypedia/magic/spells/Aparecium/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Aparecium","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/Aparecium.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/Aparecium/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-accio","label":"Accio","title":"Accio","route":"/Harrypedia/magic/spells/accio/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Accio","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/accio.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/accio/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-aguamenti","label":"Aguamenti","title":"Aguamenti","route":"/Harrypedia/magic/spells/aguamenti/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Aguamenti","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/aguamenti.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/aguamenti/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-alohomora","label":"Alohomora","title":"Alohomora","route":"/Harrypedia/magic/spells/alohomora/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Alohomora","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/alohomora.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/alohomora/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-anti-alohomora","label":"Anti Alohomora","title":"Anti-Alohomora","route":"/Harrypedia/magic/spells/anti-alohomora/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Anti-Alohomora","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/anti-alohomora.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/anti-alohomora/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-avada%20kedavra","label":"Avada%20kedavra","title":"Avada Kedavra","route":"/Harrypedia/magic/spells/avada%20kedavra/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Avada Kedavra","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/avada%20kedavra.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/avada%20kedavra/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-avis","label":"Avis","title":"Avis","route":"/Harrypedia/magic/spells/avis/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Avis","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/avis.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/avis/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-banishing","label":"Banishing","title":"Banishing","route":"/Harrypedia/magic/spells/banishing/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Banishing","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/banishing.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/banishing/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-bat-bogey_hex","label":"Bat Bogey_hex","title":"Bat-Bogey","route":"/Harrypedia/magic/spells/bat-bogey_hex/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Bat-Bogey","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/bat-bogey_hex.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/bat-bogey_hex/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-capacious_extremis","label":"Capacious_extremis","title":"Capacious Extremis","route":"/Harrypedia/magic/spells/capacious_extremis/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Capacious Extremis","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/capacious_extremis.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/capacious_extremis/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-confundus","label":"Confundus","title":"Confundus","route":"/Harrypedia/magic/spells/confundus/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Confundus","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/confundus.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/confundus/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-cruciatus","label":"Cruciatus","title":"Cruciatus","route":"/Harrypedia/magic/spells/cruciatus/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Cruciatus","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/cruciatus.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/cruciatus/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-defodio","label":"Defodio","title":"Defodio","route":"/Harrypedia/magic/spells/defodio/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Defodio","author":null,"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/defodio.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/defodio/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-diffindo","label":"Diffindo","title":"Diffindo","route":"/Harrypedia/magic/spells/diffindo/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Diffindo","author":null,"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/diffindo.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/diffindo/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-duro","label":"Duro","title":"Duro","route":"/Harrypedia/magic/spells/duro/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Duro","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/duro.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/duro/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-engorgio","label":"Engorgio","title":"Engorgio","route":"/Harrypedia/magic/spells/engorgio/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Engorgio","author":null,"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/engorgio.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/engorgio/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-expecto_patronum","label":"Expecto_patronum","title":"Expecto Patronum","route":"/Harrypedia/magic/spells/expecto_patronum/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Expecto Patronum","author":null,"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/expecto_patronum.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/expecto_patronum/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-expelliarmus","label":"Expelliarmus","title":"Expelliarmus","route":"/Harrypedia/magic/spells/expelliarmus/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Expelliarmus","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/expelliarmus.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/expelliarmus/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-fiend%20fire","label":"Fiend%20fire","title":"FiendFire","route":"/Harrypedia/magic/spells/fiend%20fire/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"FiendFire","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/fiend%20fire.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/fiend%20fire/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-flame%20freezing%20charm","label":"Flame%20freezing%20charm","title":"Flame Freezing","route":"/Harrypedia/magic/spells/flame%20freezing%20charm/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Flame Freezing","author":null,"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/flame%20freezing%20charm.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/flame%20freezing%20charm/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-floating%20charm","label":"Floating%20charm","title":"Floating","route":"/Harrypedia/magic/spells/floating%20charm/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Floating","author":null,"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/floating%20charm.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/floating%20charm/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-furnunculus","label":"Furnunculus","title":"Furnunculus","route":"/Harrypedia/magic/spells/furnunculus/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Furnunculus","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/furnunculus.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/furnunculus/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-gemino","label":"Gemino","title":"Gemino","route":"/Harrypedia/magic/spells/gemino/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Gemino","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/gemino.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/gemino/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-hair%20regrowing%20spells","label":"Hair%20regrowing%20spells","title":"Hair Regrowing Spells","route":"/Harrypedia/magic/spells/hair%20regrowing%20spells/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Hair Regrowing","author":null,"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/hair%20regrowing%20spells.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/hair%20regrowing%20spells/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-hover%20charm","label":"Hover%20charm","title":"Hover Charm","route":"/Harrypedia/magic/spells/hover%20charm/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Hover Charm","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/hover%20charm.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/hover%20charm/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-impedimenta","label":"Impedimenta","title":"Impedimenta","route":"/Harrypedia/magic/spells/impedimenta/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Impedimenta","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/impedimenta.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/impedimenta/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-imperio","label":"Imperio","title":"Imperio","route":"/Harrypedia/magic/spells/imperio/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Imperio","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/imperio.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/imperio/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-incendio","label":"Incendio","title":"Incendio","route":"/Harrypedia/magic/spells/incendio/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Incendio","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/incendio.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/incendio/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-jelly%20legs%20jinx","label":"Jelly%20legs%20jinx","title":"Jelly Legs Jinx","route":"/Harrypedia/magic/spells/jelly%20legs%20jinx/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Jelly Legs","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/jelly%20legs%20jinx.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/jelly%20legs%20jinx/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-legilimens","label":"Legilimens","title":"Legilimens","route":"/Harrypedia/magic/spells/legilimens/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Legilimens","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/legilimens.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/legilimens/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-levitation%20charm","label":"Levitation%20charm","title":"Levitation Charm","route":"/Harrypedia/magic/spells/levitation%20charm/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Levitation Charm","author":null,"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/levitation%20charm.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/levitation%20charm/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-lumos","label":"Lumos","title":"Lumos","route":"/Harrypedia/magic/spells/lumos/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Lumos","author":null,"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/lumos.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/lumos/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-mending%20charm","label":"Mending%20charm","title":"Mending Charm","route":"/Harrypedia/magic/spells/mending%20charm/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Mending Charm","author":null,"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/mending%20charm.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/mending%20charm/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-open%20sesame","label":"Open%20sesame","title":"Open Sesame","route":"/Harrypedia/magic/spells/open%20sesame/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Open Sesame","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/open%20sesame.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/open%20sesame/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-pimple","label":"Pimple","title":"Pimple","route":"/Harrypedia/magic/spells/pimple/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Pimple","author":null,"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/pimple.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/pimple/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-portaberto","label":"Portaberto","title":"Portaberto","route":"/Harrypedia/magic/spells/portaberto/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Portaberto","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/portaberto.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/portaberto/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-protego","label":"Protego","title":"Protego","route":"/Harrypedia/magic/spells/protego/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Protego","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/protego.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/protego/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-reducio","label":"Reducio","title":"Reducio","route":"/Harrypedia/magic/spells/reducio/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Reducio","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/reducio.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/reducio/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-reducto","label":"Reducto","title":"Reducto","route":"/Harrypedia/magic/spells/reducto/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Reducto","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/reducto.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/reducto/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-reparo","label":"Reparo","title":"Reparo","route":"/Harrypedia/magic/spells/reparo/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Reparo","author":null,"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/reparo.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/reparo/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-rocket%20charm","label":"Rocket%20charm","title":"Rocket Charm","route":"/Harrypedia/magic/spells/rocket%20charm/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Rocket Charm","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/rocket%20charm.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/rocket%20charm/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-scourgify","label":"Scourgify","title":"Scourgify","route":"/Harrypedia/magic/spells/scourgify/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Scourgify","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/scourgify.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/scourgify/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-sectumsempra","label":"Sectumsempra","title":"Sectumsempra","route":"/Harrypedia/magic/spells/sectumsempra/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Sectumsempra","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/sectumsempra.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/sectumsempra/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-serpensortia","label":"Serpensortia","title":"Serpensortia","route":"/Harrypedia/magic/spells/serpensortia/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Serpensortia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/serpensortia.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/serpensortia/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-stupefy","label":"Stupefy","title":"Stupefy","route":"/Harrypedia/magic/spells/stupefy/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Stupefy","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/stupefy.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/stupefy/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-taboo","label":"Taboo","title":"Taboo","route":"/Harrypedia/magic/spells/taboo/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Taboo","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/taboo.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/taboo/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-tabula%20charm","label":"Tabula%20charm","title":"Tabula","route":"/Harrypedia/magic/spells/tabula%20charm/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Tabula","author":null,"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/tabula%20charm.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/tabula%20charm/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-twitchy%20ears","label":"Twitchy%20ears","title":"Twitchy Ears","route":"/Harrypedia/magic/spells/twitchy%20ears/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Twitchy Ears","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/twitchy%20ears.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/twitchy%20ears/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-unbreakable%20vow","label":"Unbreakable%20vow","title":"Unbreakable Vow","route":"/Harrypedia/magic/spells/unbreakable%20vow/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Unbreakable Vow","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/unbreakable%20vow.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/unbreakable%20vow/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-spells-wingardium%20leviosa","label":"Wingardium%20leviosa","title":"Wingardium Leviosa","route":"/Harrypedia/magic/spells/wingardium%20leviosa/","layout":"standard","data":{"collection":"Harrypedia","type":"spell","spells":"Wingardium Leviosa","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/spells/wingardium%20leviosa.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/spells/wingardium%20leviosa/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-time-The_Trace","label":"The_Trace","title":"The Trace","route":"/Harrypedia/magic/time/The_Trace/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/time/The_Trace.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/time/The_Trace/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-time-divination","label":"Divination","title":"Divination","route":"/Harrypedia/magic/time/divination/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/time/divination.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/time/divination/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-time-index","label":"Time","title":"Time","route":"/Harrypedia/magic/time/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/time/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/time/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-time-pensieve","label":"Pensieve","title":"Pensieve","route":"/Harrypedia/magic/time/pensieve/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/time/pensieve.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/time/pensieve/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-time-time%20turners","label":"Time%20turners","title":"Time Turners","route":"/Harrypedia/magic/time/time%20turners/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/time/time%20turners.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/time/time%20turners/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-transfiguration","label":"Transfiguration","title":"Transfiguration","route":"/Harrypedia/magic/transfiguration/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/transfiguration.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/transfiguration/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-magic-wands","label":"Wands","title":"Wands","route":"/Harrypedia/magic/wands/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/magic/wands.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/magic/wands/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-misc-growth","label":"Growth","title":"Growth","route":"/Harrypedia/misc/growth/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/misc/growth.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/misc/growth/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-misc-love","label":"Love","title":"Love in Harry Potter","route":"/Harrypedia/misc/love/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/misc/love.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/misc/love/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-non-beings-banshee","label":"Banshee","title":"Banshees","route":"/Harrypedia/non-beings/banshee/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/non-beings/banshee.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/non-beings/banshee/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-non-beings-boggart","label":"Boggart","title":"Boggarts","route":"/Harrypedia/non-beings/boggart/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/non-beings/boggart.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/non-beings/boggart/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-non-beings-dementor","label":"Dementor","title":"Dementors","route":"/Harrypedia/non-beings/dementor/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/non-beings/dementor.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/non-beings/dementor/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-non-beings-index","label":"Non Beings","title":"Non-Human Spirituous Apparitions","route":"/Harrypedia/non-beings/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/non-beings/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/non-beings/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-non-beings-poltergeist","label":"Poltergeist","title":"Poltergeists","route":"/Harrypedia/non-beings/poltergeist/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/non-beings/poltergeist.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/non-beings/poltergeist/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Abbott-Hannah","label":"Hannah","title":"Hannah","route":"/Harrypedia/people/Abbott/Hannah/","layout":"person","data":{"collection":"Harrypedia","grampsID":"I0108","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Abbott/Hannah.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Abbott/Hannah/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Abbott-index","label":"Abbott","title":"Abbott","route":"/Harrypedia/people/Abbott/","layout":"family","data":{"collection":"Harrypedia","pageType":"family","families":"Abbott","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/FamilyPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Abbott/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Abbott/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Belby-Damocles","label":"Damocles","title":"Damocles","route":"/Harrypedia/people/Belby/Damocles/","layout":"person","data":{"collection":"Harrypedia","grampsID":"I0204","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Belby/Damocles.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Belby/Damocles/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Binns-Cuthbert","label":"Cuthbert","title":"Professor Cuthbert Binns","route":"/Harrypedia/people/Binns/Cuthbert/","layout":"person","data":{"collection":"Harrypedia","author":"Luke Schierer","grampsID":"I0301","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Binns/Cuthbert.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Binns/Cuthbert/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Black-Kreacher","label":"Kreacher","title":"Kreacher","route":"/Harrypedia/people/Black/Kreacher/","layout":"person","data":{"collection":"Harrypedia","family":"Black","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Black/Kreacher.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Kreacher/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Black-Sirius_III","label":"Sirius_III","title":"Sirius III","route":"/Harrypedia/people/Black/Sirius_III/","layout":"person","data":{"collection":"Harrypedia","family":"Black","grampsID":"I0007","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Black/Sirius_III.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/Sirius_III/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Black-index","label":"Black","title":"Black","route":"/Harrypedia/people/Black/","layout":"family","data":{"collection":"Harrypedia","pageType":"family","families":"Black","author":"Luke Schierer","tags":"family","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/FamilyPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Black/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Black/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Bones-Amelia_Susan","label":"Amelia_Susan","title":"Amelia Susan","route":"/Harrypedia/people/Bones/Amelia_Susan/","layout":"person","data":{"collection":"Harrypedia","family":"Bones","grampsID":"I0111","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Bones/Amelia_Susan.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Bones/Amelia_Susan/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Bones-index","label":"Bones","title":"Bones","route":"/Harrypedia/people/Bones/","layout":"family","data":{"collection":"Harrypedia","families":"Bones","pageType":"family","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/FamilyPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Bones/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Bones/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Brown-Lavender","label":"Lavender","title":"Lavender","route":"/Harrypedia/people/Brown/Lavender/","layout":"person","data":{"collection":"Harrypedia","author":"Luke Schierer","grampsID":"I0185","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Brown/Lavender.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Brown/Lavender/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Diggle-Dedalus","label":"Dedalus","title":"Dedalus","route":"/Harrypedia/people/Diggle/Dedalus/","layout":"person","data":{"collection":"Harrypedia","family":"Diggle","grampsID":"I0099","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Diggle/Dedalus.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Diggle/Dedalus/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Dumbledore-Albus_Percival_Wulfric_Brian-Dealing_with_Riddle","label":"Dealing_with_Riddle","title":"Dumbledore and Tom Riddle","route":"/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Dealing_with_Riddle/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Dealing_with_Riddle.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Dealing_with_Riddle/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Dumbledore-Albus_Percival_Wulfric_Brian-Doubting_Harry","label":"Doubting_Harry","title":"Doubting Harry's Character","route":"/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Doubting_Harry/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Doubting_Harry.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Doubting_Harry/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Dumbledore-Albus_Percival_Wulfric_Brian-Inaction","label":"Inaction","title":"Does Dumbledore Ever Accomplish Anything?","route":"/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Inaction/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Inaction.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Inaction/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Dumbledore-Albus_Percival_Wulfric_Brian-Manipulator","label":"Manipulator","title":"Albus as the Great Manipulator","route":"/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Manipulator/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Manipulator.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/Manipulator/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Dumbledore-Albus_Percival_Wulfric_Brian-index","label":"Albus_Percival_Wulfric_Brian","title":"Albus Percival Wulfric Brian","route":"/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/","layout":"person","data":{"collection":"Harrypedia","family":"Dumbledore","grampsID":"I0061","author":"Luke Schierer","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Dumbledore-Albus_Percival_Wulfric_Brian-treatment_of_Harry","label":"Treatment_of_Harry","title":"Dumbledore's Treatment of Harry","route":"/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/treatment_of_Harry/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/treatment_of_Harry.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dumbledore/Albus_Percival_Wulfric_Brian/treatment_of_Harry/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Dursley-Vernon","label":"Vernon","title":"Vernon","route":"/Harrypedia/people/Dursley/Vernon/","layout":"person","data":{"collection":"Harrypedia","family":"Dursley","grampsID":"I0096","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Dursley/Vernon.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dursley/Vernon/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Dursley-index","label":"Dursley","title":"Dursley","route":"/Harrypedia/people/Dursley/","layout":"family","data":{"collection":"Harrypedia","families":"Dursley","pageType":"family","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/FamilyPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Dursley/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Dursley/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Evans-Lily_J","label":"Lily_J","title":"Lily J.","route":"/Harrypedia/people/Evans/Lily_J/","layout":"person","data":{"collection":"Harrypedia","family":"Evans","grampsID":"I0002","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Evans/Lily_J.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Evans/Lily_J/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Evans-Petunia","label":"Petunia","title":"Petunia","route":"/Harrypedia/people/Evans/Petunia/","layout":"person","data":{"collection":"Harrypedia","family":"Evans","grampsID":"I0097","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Evans/Petunia.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Evans/Petunia/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Figg-Arabella_Doreen","label":"Arabella_Doreen","title":"Arabella Figg","route":"/Harrypedia/people/Figg/Arabella_Doreen/","layout":"person","data":{"collection":"Harrypedia","grampsID":"I0100","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Figg/Arabella_Doreen.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Figg/Arabella_Doreen/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Flitwick-Filus","label":"Filus","title":"Filus","route":"/Harrypedia/people/Flitwick/Filus/","layout":"person","data":{"collection":"Harrypedia","family":"Flitwick","grampsID":"I0293","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Flitwick/Filus.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Flitwick/Filus/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Fudge-Cornelius_Oswald","label":"Cornelius_Oswald","title":"Cornelius Oswald","route":"/Harrypedia/people/Fudge/Cornelius_Oswald/","layout":"person","data":{"collection":"Harrypedia","family":"Fudge","grampsID":"I0198","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Fudge/Cornelius_Oswald.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Fudge/Cornelius_Oswald/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Gaunt-Merope","label":"Merope","title":"Merope","route":"/Harrypedia/people/Gaunt/Merope/","layout":"person","data":{"collection":"Harrypedia","author":"Luke Schierer","grampsID":"I0304","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Gaunt/Merope.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Gaunt/Merope/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Granger-Hermione_Jean","label":"Hermione_Jean","title":"Hermione Jean","route":"/Harrypedia/people/Granger/Hermione_Jean/","layout":"person","data":{"collection":"Harrypedia","family":"Granger","grampsID":"I0063","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Granger/Hermione_Jean.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Granger/Hermione_Jean/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Granger-index","label":"Granger","title":"Granger","route":"/Harrypedia/people/Granger/","layout":"family","data":{"collection":"Harrypedia","families":"Granger","pageType":"family","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/FamilyPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Granger/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Granger/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Greengrass-index","label":"Greengrass","title":"Greengrass","route":"/Harrypedia/people/Greengrass/","layout":"family","data":{"collection":"Harrypedia","families":"Greengrass","pageType":"family","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/FamilyPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Greengrass/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Greengrass/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Hooch-Rolanda","label":"Rolanda","title":"Rolanda","route":"/Harrypedia/people/Hooch/Rolanda/","layout":"person","data":{"collection":"Harrypedia","family":"Hooch","grampsID":"I0197","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Hooch/Rolanda.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Hooch/Rolanda/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Longbottom-index","label":"Longbottom","title":"Longbottom","route":"/Harrypedia/people/Longbottom/","layout":"family","data":{"collection":"Harrypedia","families":"Longbottom","pageType":"family","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/FamilyPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Longbottom/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Longbottom/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Lupin-Remus_John","label":"Remus_John","title":"Remus John","route":"/Harrypedia/people/Lupin/Remus_John/","layout":"person","data":{"collection":"Harrypedia","family":"Lupin","grampsID":"I0060","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Lupin/Remus_John.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Lupin/Remus_John/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Malfoy-Draco_Lucius","label":"Draco_Lucius","title":"Draco Lucius","route":"/Harrypedia/people/Malfoy/Draco_Lucius/","layout":"person","data":{"collection":"Harrypedia","grampsID":"I0039","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Malfoy/Draco_Lucius.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Malfoy/Draco_Lucius/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Malfoy-Lucius_Abraxas","label":"Lucius_Abraxas","title":"Lucius Abraxas","route":"/Harrypedia/people/Malfoy/Lucius_Abraxas/","layout":"person","data":{"collection":"Harrypedia","family":"Malfoy","grampsID":"I0038","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Malfoy/Lucius_Abraxas.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Malfoy/Lucius_Abraxas/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Malfoy-Scorpius","label":"Scorpius","title":"Scorpius","route":"/Harrypedia/people/Malfoy/Scorpius/","layout":"person","data":{"collection":"Harrypedia","pageType":"person","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Malfoy/Scorpius.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Malfoy/Scorpius/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Malfoy-index","label":"Malfoy","title":"Malfoy","route":"/Harrypedia/people/Malfoy/","layout":"family","data":{"collection":"Harrypedia","families":"Malfoy","pageType":"family","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/FamilyPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Malfoy/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Malfoy/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-McGonagall-Minerva","label":"Minerva","title":"Minerva","route":"/Harrypedia/people/McGonagall/Minerva/","layout":"person","data":{"collection":"Harrypedia","family":"McGonagall","grampsID":"I0065","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/McGonagall/Minerva.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/McGonagall/Minerva/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-McLaggen-index","label":"McLaggen","title":"McLaggen","route":"/Harrypedia/people/McLaggen/","layout":"family","data":{"collection":"Harrypedia","families":"McLaggen","pageType":"family","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/FamilyPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/McLaggen/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/McLaggen/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Moody-Alastor","label":"Alastor","title":"Alastor Moody","route":"/Harrypedia/people/Moody/Alastor/","layout":"person","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Moody/Alastor.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Moody/Alastor/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Peverell-index","label":"Peverell","title":"Peverell","route":"/Harrypedia/people/Peverell/","layout":"family","data":{"collection":"Harrypedia","pageType":"family","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/FamilyPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Peverell/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Peverell/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Potter-Harry_James","label":"Harry_James","title":"Harry James","route":"/Harrypedia/people/Potter/Harry_James/","layout":"person","data":{"collection":"Harrypedia","families":"Potter","grampsID":"I0000","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Potter/Harry_James.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Potter/Harry_James/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Potter-James","label":"James","title":"James","route":"/Harrypedia/people/Potter/James/","layout":"person","data":{"collection":"Harrypedia","grampsID":"I0001","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Potter/James.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Potter/James/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Potter-index","label":"Potter","title":"Potter","route":"/Harrypedia/people/Potter/","layout":"family","data":{"collection":"Harrypedia","families":"Potter","pageType":"family","tags":["family"],"author":"Luke Schierer","sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/FamilyPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Potter/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Potter/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Potter-wealth","label":"Wealth","title":"Potter Family Wealth","route":"/Harrypedia/people/Potter/wealth/","layout":"person","data":{"collection":"Harrypedia","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Potter/wealth.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Potter/wealth/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Prewett-Molly","label":"Molly","title":"Molly","route":"/Harrypedia/people/Prewett/Molly/","layout":"person","data":{"collection":"Harrypedia","family":"Prewett","grampsID":"I0062","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Prewett/Molly.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Prewett/Molly/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Riddle-Tom_Marvolo","label":"Tom_Marvolo","title":"Tom Marvolo","route":"/Harrypedia/people/Riddle/Tom_Marvolo/","layout":"person","data":{"collection":"Harrypedia","family":"Riddle","grampsID":"I0247","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Riddle/Tom_Marvolo.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Riddle/Tom_Marvolo/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Riddle-index","label":"Riddle","title":"Riddle","route":"/Harrypedia/people/Riddle/","layout":"family","data":{"collection":"Harrypedia","families":"Riddle","pageType":"family","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/FamilyPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Riddle/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Riddle/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Scamander-Newton_Artemis_Fido","label":"Newton_Artemis_Fido","title":"Newton Artemis Fido","route":"/Harrypedia/people/Scamander/Newton_Artemis_Fido/","layout":"person","data":{"collection":"Harrypedia","author":"Luke Schierer","grampsID":"I0214","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Scamander/Newton_Artemis_Fido.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Scamander/Newton_Artemis_Fido/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Scrimgeour-Rufus","label":"Rufus","title":"Rufus","route":"/Harrypedia/people/Scrimgeour/Rufus/","layout":"person","data":{"collection":"Harrypedia","grampsID":"I0199","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Scrimgeour/Rufus.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Scrimgeour/Rufus/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Shacklebolt-Kingsley","label":"Kingsley","title":"Kingsley","route":"/Harrypedia/people/Shacklebolt/Kingsley/","layout":"person","data":{"collection":"Harrypedia","family":"Shacklebolt","grampsID":"I0278","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Shacklebolt/Kingsley.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Shacklebolt/Kingsley/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Shacklebolt-index","label":"Shacklebolt","title":"Shacklebolt","route":"/Harrypedia/people/Shacklebolt/","layout":"family","data":{"collection":"Harrypedia","families":"Shacklebolt","pageType":"family","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/FamilyPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Shacklebolt/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Shacklebolt/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Snape-Severus-index","label":"Severus","title":"Severus","route":"/Harrypedia/people/Snape/Severus/","layout":"person","data":{"collection":"Harrypedia","family":"Snape","grampsID":"I0077","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Snape/Severus/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Snape/Severus/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Snape-Severus-swm","label":"Swm","title":"Snape's Worst Memory and Related Events","route":"/Harrypedia/people/Snape/Severus/swm/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Snape/Severus/swm.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Snape/Severus/swm/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Umbridge-Dolores_Jane","label":"Dolores_Jane","title":"Dolores Jane","route":"/Harrypedia/people/Umbridge/Dolores_Jane/","layout":"person","data":{"collection":"Harrypedia","family":"Umbridge","grampsID":"I0112","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Umbridge/Dolores_Jane.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Umbridge/Dolores_Jane/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Weasley-Charlie","label":"Charlie","title":"Charlie","route":"/Harrypedia/people/Weasley/Charlie/","layout":"person","data":{"collection":"Harrypedia","family":"Weasley","grampsID":"I0095","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Weasley/Charlie.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Weasley/Charlie/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Weasley-George","label":"George","title":"George","route":"/Harrypedia/people/Weasley/George/","layout":"person","data":{"collection":"Harrypedia","family":"Weasley","grampsID":"I0072","author":null,"pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Weasley/George.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Weasley/George/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Weasley-Ginevra_Molly","label":"Ginevra_Molly","title":"Ginevra Molly","route":"/Harrypedia/people/Weasley/Ginevra_Molly/","layout":"person","data":{"collection":"Harrypedia","family":"Weasley","grampsID":"I0070","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Weasley/Ginevra_Molly.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Weasley/Ginevra_Molly/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Weasley-Percy_Ignatius","label":"Percy_Ignatius","title":"Percy Ignatius","route":"/Harrypedia/people/Weasley/Percy_Ignatius/","layout":"person","data":{"collection":"Harrypedia","family":"Weasley","grampsID":"I0074","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Weasley/Percy_Ignatius.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Weasley/Percy_Ignatius/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Weasley-Ronald_Bilius","label":"Ronald_Bilius","title":"Ronald Bilius","route":"/Harrypedia/people/Weasley/Ronald_Bilius/","layout":"person","data":{"collection":"Harrypedia","family":"Weasley","grampsID":"I0064","author":"Luke Schierer","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Weasley/Ronald_Bilius.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Weasley/Ronald_Bilius/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Weasley-index","label":"Weasley","title":"Weasley","route":"/Harrypedia/people/Weasley/","layout":"family","data":{"collection":"Harrypedia","families":"Weasley","pageType":"family","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/FamilyPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Weasley/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Weasley/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Zabini-Blaize","label":"Blaize","title":"Blaize","route":"/Harrypedia/people/Zabini/Blaize/","layout":"person","data":{"collection":"Harrypedia","grampsID":"I0160","pageType":"person","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Zabini/Blaize.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Zabini/Blaize/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-Zabini-index","label":"Zabini","title":"Zabini","route":"/Harrypedia/people/Zabini/","layout":"family","data":{"collection":"Harrypedia","pageType":"family","families":"Zabini","author":"Luke Schierer","tags":["family"],"sidebar":{"order":1},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/FamilyPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/Zabini/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/Zabini/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-adults","label":"Adults","title":"Adults in the HP Series","route":"/Harrypedia/people/adults/","layout":"person","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/PersonPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/gramps.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/adults.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/adults/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-people-index","label":"People","title":"People in Harry Potter","route":"/Harrypedia/people/","layout":"family","data":{"collection":"Harrypedia","sidebar":{"order":1},"imports":["/components/grampsParser/GeneologicalStats.ts type=&quotemodule&quote"],"tocHeading":0,"tableOfContents":[]},"imports":["/components/grampsParser/GeneologicalStats.ts type=&quotemodule&quote"],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/lib/Spectrum/SplitView.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/side-nav.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/FamilyPageSection.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/grampsParser/GeneologicalStats.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/people/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/people/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-book%201-Chapter%2001","label":"Chapter%2001","title":"Reactions to Philosopher's Stone Chapter 1","route":"/Harrypedia/reactions/book%201/Chapter%2001/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/book%201/Chapter%2001.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/book%201/Chapter%2001/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-book%201-Chapter%2002","label":"Chapter%2002","title":"Reactions to Philosopher's Stone Chapter 2","route":"/Harrypedia/reactions/book%201/Chapter%2002/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/book%201/Chapter%2002.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/book%201/Chapter%2002/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-book%201-Chapter%2003","label":"Chapter%2003","title":"Reactions to Philosopher's Stone Chapter 3","route":"/Harrypedia/reactions/book%201/Chapter%2003/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/book%201/Chapter%2003.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/book%201/Chapter%2003/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-book%201-Chapter%2004","label":"Chapter%2004","title":"Reactions to Philosopher's Stone Chapter 4","route":"/Harrypedia/reactions/book%201/Chapter%2004/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/book%201/Chapter%2004.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/book%201/Chapter%2004/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-book%201-index","label":"Book%201","title":"Reactions to Harry Potter and the Philosopher's Stone","route":"/Harrypedia/reactions/book%201/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","imports":["/components/DirectoryIndex.ts type=&quotemodule&quote"],"tocHeading":0,"tableOfContents":[]},"imports":["/components/DirectoryIndex.ts type=&quotemodule&quote"],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/DirectoryIndex.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/book%201/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/book%201/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-fanfiction-Addams%20Family%20Crossovers","label":"Addams%20Family%20Crossovers","title":"Addams Family Crossovers","route":"/Harrypedia/reactions/fanfiction/Addams%20Family%20Crossovers/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/fanfiction/Addams%20Family%20Crossovers.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/fanfiction/Addams%20Family%20Crossovers/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-fanfiction-Harry's%20Genetics","label":"Harry's%20Genetics","title":null,"route":"/Harrypedia/reactions/fanfiction/Harry's%20Genetics/","layout":"standard Harry's Genetic Make-up","data":{"author":"Luke Schierer","collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/fanfiction/Harry's%20Genetics.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/fanfiction/Harry's%20Genetics/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-fanfiction-Lupin_the_brainiac","label":"Lupin_the_brainiac","title":"Remus Lupin, Brains of the Marauders","route":"/Harrypedia/reactions/fanfiction/Lupin_the_brainiac/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/fanfiction/Lupin_the_brainiac.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/fanfiction/Lupin_the_brainiac/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-fanfiction-Umbridge's%20Quill","label":"Umbridge's%20Quill","title":null,"route":"/Harrypedia/reactions/fanfiction/Umbridge's%20Quill/","layout":"standard Umbridge's Quill","data":{"author":"Luke Schierer","collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/fanfiction/Umbridge's%20Quill.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/fanfiction/Umbridge's%20Quill/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-fanfiction-after%20the%20battle","label":"After%20the%20battle","title":"Fan Fiction Augmenting the Epilogue","route":"/Harrypedia/reactions/fanfiction/after%20the%20battle/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/fanfiction/after%20the%20battle.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/fanfiction/after%20the%20battle/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-fanfiction-anthropomorphism","label":"Anthropomorphism","title":"Anthropomorphism in Fan Fiction","route":"/Harrypedia/reactions/fanfiction/anthropomorphism/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/fanfiction/anthropomorphism.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/fanfiction/anthropomorphism/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-fanfiction-index","label":"Fanfiction","title":"Reactions to Fannon and Fan Fiction","route":"/Harrypedia/reactions/fanfiction/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/fanfiction/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/fanfiction/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-fanfiction-over-bias","label":"Over Bias","title":"Exaggerated Bias","route":"/Harrypedia/reactions/fanfiction/over-bias/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/fanfiction/over-bias.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/fanfiction/over-bias/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-fanfiction-the_egoist_society","label":"The_egoist_society","title":"The Egoist Society","route":"/Harrypedia/reactions/fanfiction/the_egoist_society/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/fanfiction/the_egoist_society.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/fanfiction/the_egoist_society/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-fanfiction-x_in_slytherin","label":"X_in_slytherin","title":"Main Characters in Slytherin","route":"/Harrypedia/reactions/fanfiction/x_in_slytherin/","layout":"standard","data":{"collection":"Harrypedia","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/fanfiction/x_in_slytherin.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/fanfiction/x_in_slytherin/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-reactions-index","label":"Reactions","title":"Reactions to the Written Word","route":"/Harrypedia/reactions/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","imports":["/components/DirectoryIndex.ts type=&quotemodule&quote"],"tocHeading":0,"tableOfContents":[]},"imports":["/components/DirectoryIndex.ts type=&quotemodule&quote"],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/DirectoryIndex.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/reactions/index.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/reactions/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Harrypedia-unspeakables","label":"Unspeakables","title":"Unspeakables","route":"/Harrypedia/unspeakables/","layout":"standard","data":{"collection":"Harrypedia","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Harrypedia/unspeakables.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Harrypedia/unspeakables/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null}],"Searches":[{"id":"Searches-Astoria","label":"Astoria","title":"Harry paired with Astoria","route":"/Searches/Astoria/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","sidebar":{"order":5},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/Astoria.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/Astoria/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-DumbleDore","label":"DumbleDore","title":"Notable for a problematic Dumbledore","route":"/Searches/DumbleDore/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/DumbleDore.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/DumbleDore/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-Generic","label":"Generic","title":"Generic Searches","route":"/Searches/Generic/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","sidebar":{"order":2},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/Generic.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/Generic/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-Ginny","label":"Ginny","title":"Harry paired with Ginny","route":"/Searches/Ginny/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","sidebar":{"order":3},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/Ginny.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/Ginny/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-Hannah","label":"Hannah","title":"Harry paired with Hannah","route":"/Searches/Hannah/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","sidebar":{"order":5},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/Hannah.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/Hannah/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-Harry_and_the_Addams","label":"Harry_and_the_Addams","title":"Harry and Addams family crossovers","route":"/Searches/Harry_and_the_Addams/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","sidebar":{"order":5},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/Harry_and_the_Addams.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/Harry_and_the_Addams/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-Sally_Anne","label":"Sally_Anne","title":"Harry paired with Sally Anne","route":"/Searches/Sally_Anne/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","sidebar":{"order":5},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/Sally_Anne.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/Sally_Anne/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-Sue_Li","label":"Sue_Li","title":"Harry paired with Sue Li","route":"/Searches/Sue_Li/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","sidebar":{"order":5},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/Sue_Li.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/Sue_Li/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-Susan","label":"Susan","title":"Harry paired with Susan Bones","route":"/Searches/Susan/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","sidebar":{"order":5},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/Susan.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/Susan/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-abuse","label":"Abuse","title":"Notable for calling out Neglect and Abuse","route":"/Searches/abuse/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","sidebar":{"order":6},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/abuse.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/abuse/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-bashing","label":"Bashing","title":"Notable for Bashing Someone other than Dumbledore","route":"/Searches/bashing/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","sidebar":{"order":7},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/bashing.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/bashing/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-hufflepuff","label":"Hufflepuff","title":"Notable for Harry Being in Hufflepuff","route":"/Searches/hufflepuff/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","sidebar":{"order":6},"tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/hufflepuff.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/hufflepuff/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null},{"id":"Searches-reading","label":"Reading","title":"Characters Reading The Books","route":"/Searches/reading/","layout":"standard","data":{"collection":"Searches","author":"Luke Schierer","tocHeading":0,"tableOfContents":[]},"imports":[],"resources":["/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1153946904.js","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/758806547.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/theme.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/TopHeader.ts","/Users/luke/src/HP_Stuff/packages/greenwood/src/components/GlobalFooter.ts","/Users/luke/src/HP_Stuff/packages/greenwood/.greenwood/1798659806.js","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/global.css","/Users/luke/src/HP_Stuff/packages/greenwood/src/styles/topheader.css"],"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Searches/reading.md","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Searches/reading/index.html","isSSR":false,"prerender":true,"isolation":false,"hydration":false,"servePage":null}]}}`);
    const page = JSON.parse(`{"id":"Bookmarks-Responsible_Adults","label":"Responsible_Adults","title":"Adults Adulting","route":"/Bookmarks/Responsible_Adults/","layout":"standard","data":{"collection":"Bookmarks","description":"HP stories with responsible adults","author":"Luke Schierer","data":{},"imports":[],"tocHeading":0,"tableOfContents":[]},"pageHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/src/pages/Bookmarks/Responsible_Adults.ts","outputHref":"file:///Users/luke/src/HP_Stuff/packages/greenwood/public/Bookmarks/Responsible_Adults/index.html","isSSR":true,"prerender":false,"isolation":false,"hydration":false,"servePage":null}`);
    const data = await executeRouteModule({ moduleUrl, compilation, page, request });
    let staticHtml = `<!DOCTYPE html>
      <html lang="en" class="spectrum spectrum-Typography">
        
    
      
      
              
              
              
              
              
              <head>
              <link rel="preload" href="/styles/BookmarksList.1324951524.css" as="style" crossorigin="anonymous"></link>
            
              <link rel="preload" href="/styles/topheader.1942642443.css" as="style" crossorigin="anonymous"></link>
            
              <link rel="preload" href="/styles/global.1561044270.css" as="style" crossorigin="anonymous"></link>
            
              <link rel="modulepreload" href="/GlobalFooter.CCsNL034.js" as="script">
            
              <link rel="modulepreload" href="/TopHeader.-sScqXoE.js" as="script">
            
              <link rel="modulepreload" href="/theme.DOLdHEAE.js" as="script">
            
        <script id="content-as-data-state">
          globalThis.__CONTENT_AS_DATA_STATE__ = true;
        </script>
    
        <script id="data-client-options">globalThis.__CONTENT_OPTIONS__=globalThis.__CONTENT_OPTIONS__?globalThis.__CONTENT_OPTIONS__:{PORT:1984,PRERENDER:"false"};
//# sourceMappingURL=1153946904.B04LbjXI.js.map
</script>
    
      <script data-gwd="base-path">globalThis.__GWD_BASE_PATH__="";
//# sourceMappingURL=758806547.RS2bRr6M.js.map
</script>
  
          <title>Luke's HP Site - Adults Adulting</title>
          <meta charset="utf-8" >
<meta name="viewport" content="width=device-width, initial-scale=1" >
<meta name="description" content="Luke's Harry Potter Fan Site" >
<meta name="google-adsense-account" content="ca-pub-8360834774752607" >
          <link rel="stylesheet" href="/styles/global.1561044270.css" >
<link rel="stylesheet" href="/styles/topheader.1942642443.css" >
<link rel="preconnect" href="https://fonts.googleapis.com" >
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin >
<link href="https://fonts.googleapis.com/css2?family=Inconsolata:wght@200..900&family=Micro+5&display=swap"
      rel="stylesheet"
    >
          
          <script type="module"
      src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-8360834774752607"
    ></script>
<script type="module" src="/theme.DOLdHEAE.js"></script>
<script type="module" src="/TopHeader.-sScqXoE.js"></script>
<script type="module" src="/GlobalFooter.CCsNL034.js"></script>
        </head>
        <body>
          
    <sp-theme class="spectrum-Typography">
      <top-header class="topHeader"
        route="/Bookmarks/Responsible_Adults/"
      ></top-header>
      <theme-component></theme-component>
      <main>
        
    <header>
      <h1 class="spectrum-Heading spectrum-Heading--sizeXXL">
        
      </h1>
      <link rel="stylesheet" href="/styles/BookmarksList.1324951524.css" >
    </header>

    <div class="main">
      <div class="content">
        <content-outlet></content-outlet>

      </div>
    </div>
  
      </main>
    </sp-theme>
    <footer>
      <global-footer></global-footer>
    </footer>
  
        </body>
      </html>
    `;
    if (data.body) {
        staticHtml = staticHtml.replace(/<content-outlet>(.*)<\/content-outlet>/s, data.body);
    }
    return new Response(staticHtml, {
        headers: {
            'Content-Type': 'text/html'
        }
    });
}

export { handler };
