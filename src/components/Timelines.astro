---
import { getCollection, getEntry } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import type { Props } from '@astrojs/starlight/props';

import rehypeStringify from 'rehype-stringify'
import remarkGfm from 'remark-gfm'
import remarkParse from 'remark-parse'
import remarkRehype from 'remark-rehype'
import {unified} from 'unified'
import {DateTime} from 'luxon';

let allEvents: CollectionEntry<'history'>[] = await getCollection('history');
const events = [... new Set(allEvents.map((event: CollectionEntry<'history'>) => {
    return {
        date: DateTime.fromISO(event.id),
        entries: event.data.events.map((event) => {
            const description = unified()
                .use(remarkParse)
                .use(remarkGfm)
                .use(remarkRehype)
                .use(rehypeStringify)
                .process(event.description)

            const source = unified()
                .use(remarkParse)
                .use(remarkGfm)
                .use(remarkRehype)
                .use(rehypeStringify)
                .process(event.source)

            return {
                date: event.date,
                type: event.type,
                blurb: event.blurb,
                description: description,
                source: source,
            }
        })
    }
}).flat())].sort((a, b) => {
    if(a.date < b.date ) {
        return -1;
    } else if (a.date > b.date) {
        return 1;
    } else {
        return 0;
    }
});

---
<ul class="timeline">
    {events.map(event => (
            <li id={event.date.toUnixInteger()}>
                <h5>{event.date.toISODate()}</h5>
                {event.entries.map((entry, index) => (
                        <div class={entry.type}>
                            <h6>{entry.blurb}</h6>
                            {entry.description}
                            <a href=`#${event.date.toUnixInteger()}-${index}`>Sources</a>
                        </div>
                ))}

            </li>
    ))}

</ul>

<section data-footnotes class="footnotes">
    <ol>
        {events.map(event => event.entries.map((entry, index) => (
                <li id={`${event.date.toUnixInteger()}-${index}`}>{entry.source}</li>
        )))}
    </ol>
</section>

<style>
    .magical {
        background-color: var(--sl-color-purple-low)
    }

    .mundane {
        background-color: var(--sl-color-gray-6);
    }

    .religious {
        background-color: var(--sl-color-orange-low)
    }


    ul.timeline {
        list-style-type: none;
        position: relative;
    }

    ul.timeline:before {
        content: ' ';
        background: #bebebe;
        display: inline-block;
        position: absolute;
        left: 0.5em;
        width: 0.2em;
        height: 100%;
    }

    ul.timeline > li {
        margin: 0.75em 0;
        padding-left: 0.2em;
    }

    ul.timeline > li:first-child {
        padding-top: 0.03em;
    }

    ul.timeline > li:before {
        content: ' ';
        background: white;
        display: inline-block;
        position: absolute;
        border-radius: 50%;
        border: solid .2em #bebebe;
        left: 0.1em;
        width: 1em;
        height: 1em;
        margin-top: 0.25em;
    }
</style>
