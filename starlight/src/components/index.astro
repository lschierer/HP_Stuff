---
import { type CardDetails } from "@lib/CardDetails";

interface Props {
  folderFilter: string;
}

const { folderFilter } = Astro.props;

console.log(`folderFilter is ${folderFilter}`);

import { getCollection } from "astro:content";
const DEBUG = false;

const pageItems = await getCollection("docs", (entry) => {
  if (DEBUG) {
    console.log(`entry id is ${entry.id}`);
  }
  if (folderFilter) {
    return (
      entry.id.toLowerCase().startsWith(folderFilter.toLowerCase()) &&
      entry.id.includes("/")
    );
  } else {
    return (
      entry.id.toLowerCase().startsWith("bookmarks") && entry.id.includes("/")
    );
  }
});

const pageCardDetails = new Array<CardDetails>();

pageItems
  .sort((a, b) => {
    if (a) {
      if (b) {
        if (a.data.sidebar.order) {
          if (b.data.sidebar.order) {
            if (a < b) {
              return -1;
            } else if (a == b) {
              return 0;
            } else {
              return 1;
            }
          } else {
            return -1;
          }
        }
        if (b.data.sidebar.order) {
          return 1;
        } else {
          return a.id.localeCompare(b.id);
        }
      } else {
        return -1;
      }
    } else if (b) {
      return 1;
    }
    return 0;
  })
  .map((bm) => {
    const turl = `/${bm.id}/`;
    pageCardDetails.push({
      title: bm.data.title,
      name: "dashicons:text-page",
      target: turl,
    });
    if (DEBUG) {
      console.log(
        `target for id ${bm.id} is ${pageCardDetails[pageCardDetails.length - 1].target}`
      );
    }
  });

import "iconify-icon";
import { CardGrid } from "@astrojs/starlight/components";
import HorizontalCard from "./HorizontalCard.astro";
---

<CardGrid stagger>
  {
    pageCardDetails.map((bcd) => (
      <span>
        <HorizontalCard
          iconName={bcd.name}
          cardTitle={bcd.title}
          linkTarget={bcd.target}
          description={bcd.description}
        />
      </span>
    ))
  }
</CardGrid>
